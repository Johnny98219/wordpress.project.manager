/******/ (function(modules) { // webpackBootstrap
    /******/ 	// The module cache
    /******/ 	var installedModules = {};
    /******/
    /******/ 	// The require function
    /******/ 	function __webpack_require__(moduleId) {
        /******/
        /******/ 		// Check if module is in cache
        /******/ 		if(installedModules[moduleId]) {
            /******/ 			return installedModules[moduleId].exports;
            /******/ 		}
        /******/ 		// Create a new module (and put it into the cache)
        /******/ 		var module = installedModules[moduleId] = {
            /******/ 			i: moduleId,
            /******/ 			l: false,
            /******/ 			exports: {}
            /******/ 		};
        /******/
        /******/ 		// Execute the module function
        /******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/
        /******/ 		// Flag the module as loaded
        /******/ 		module.l = true;
        /******/
        /******/ 		// Return the exports of the module
        /******/ 		return module.exports;
        /******/ 	}
    /******/
    /******/
    /******/ 	// expose the modules object (__webpack_modules__)
    /******/ 	__webpack_require__.m = modules;
    /******/
    /******/ 	// expose the module cache
    /******/ 	__webpack_require__.c = installedModules;
    /******/
    /******/ 	// define getter function for harmony exports
    /******/ 	__webpack_require__.d = function(exports, name, getter) {
        /******/ 		if(!__webpack_require__.o(exports, name)) {
            /******/ 			Object.defineProperty(exports, name, {
                /******/ 				configurable: false,
                /******/ 				enumerable: true,
                /******/ 				get: getter
                /******/ 			});
            /******/ 		}
        /******/ 	};
    /******/
    /******/ 	// getDefaultExport function for compatibility with non-harmony modules
    /******/ 	__webpack_require__.n = function(module) {
        /******/ 		var getter = module && module.__esModule ?
            /******/ 			function getDefault() { return module['default']; } :
            /******/ 			function getModuleExports() { return module; };
        /******/ 		__webpack_require__.d(getter, 'a', getter);
        /******/ 		return getter;
        /******/ 	};
    /******/
    /******/ 	// Object.prototype.hasOwnProperty.call
    /******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
    /******/
    /******/ 	// __webpack_public_path__
    /******/ 	__webpack_require__.p = "";
    /******/
    /******/ 	// Load entry module and return exports
    /******/ 	return __webpack_require__(__webpack_require__.s = 148);
    /******/ })
    /************************************************************************/
    /******/ ([
        /* 0 */
        /***/ (function(module, exports) {

            /* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file.
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

            module.exports = function normalizeComponent (
                rawScriptExports,
                compiledTemplate,
                functionalTemplate,
                injectStyles,
                scopeId,
                moduleIdentifier /* server only */
            ) {
                var esModule
                var scriptExports = rawScriptExports = rawScriptExports || {}

// ES6 modules interop
                var type = typeof rawScriptExports.default
                if (type === 'object' || type === 'function') {
                    esModule = rawScriptExports
                    scriptExports = rawScriptExports.default
                }

// Vue.extend constructor export interop
                var options = typeof scriptExports === 'function'
                    ? scriptExports.options
                    : scriptExports

// render functions
                if (compiledTemplate) {
                    options.render = compiledTemplate.render
                    options.staticRenderFns = compiledTemplate.staticRenderFns
                    options._compiled = true
                }

// functional template
                if (functionalTemplate) {
                    options.functional = true
                }

// scopedId
                if (scopeId) {
                    options._scopeId = scopeId
                }

                var hook
                if (moduleIdentifier) { // server build
                    hook = function (context) {
// 2.3 injection
                        context =
                            context || // cached call
                            (this.$vnode && this.$vnode.ssrContext) || // stateful
                            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
// 2.2 with runInNewContext: true
                        if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                            context = __VUE_SSR_CONTEXT__
                        }
// inject component styles
                        if (injectStyles) {
                            injectStyles.call(this, context)
                        }
// register component module identifier for async chunk inferrence
                        if (context && context._registeredComponents) {
                            context._registeredComponents.add(moduleIdentifier)
                        }
                    }
// used by ssr in case component is cached and beforeCreate
// never gets called
                    options._ssrRegister = hook
                } else if (injectStyles) {
                    hook = injectStyles
                }

                if (hook) {
                    var functional = options.functional
                    var existing = functional
                        ? options.render
                        : options.beforeCreate

                    if (!functional) {
// inject component registration as beforeCreate hook
                        options.beforeCreate = existing
                            ? [].concat(existing, hook)
                            : [hook]
                    } else {
// for template-only hot-reload because in that case the render fn doesn't
// go through the normalizer
                        options._injectStyles = hook
// register for functioal component in vue file
                        options.render = function renderWithStyleInjection (h, context) {
                            hook.call(context)
                            return existing(h, context)
                        }
                    }
                }

                return {
                    esModule: esModule,
                    exports: scriptExports,
                    options: options
                }
            }


            /***/ }),
        /* 1 */
        /***/ (function(module, exports) {

            /*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
            module.exports = function(useSourceMap) {
                var list = [];

// return the list of modules as css string
                list.toString = function toString() {
                    return this.map(function (item) {
                        var content = cssWithMappingToString(item, useSourceMap);
                        if(item[2]) {
                            return "@media " + item[2] + "{" + content + "}";
                        } else {
                            return content;
                        }
                    }).join("");
                };

// import a list of modules into the list
                list.i = function(modules, mediaQuery) {
                    if(typeof modules === "string")
                        modules = [[null, modules, ""]];
                    var alreadyImportedModules = {};
                    for(var i = 0; i < this.length; i++) {
                        var id = this[i][0];
                        if(typeof id === "number")
                            alreadyImportedModules[id] = true;
                    }
                    for(i = 0; i < modules.length; i++) {
                        var item = modules[i];
// skip already imported module
// this implementation is not 100% perfect for weird media query combinations
//  when a module is imported multiple times with different media queries.
//  I hope this will never occur (Hey this way we have smaller bundles)
                        if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
                            if(mediaQuery && !item[2]) {
                                item[2] = mediaQuery;
                            } else if(mediaQuery) {
                                item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
                            }
                            list.push(item);
                        }
                    }
                };
                return list;
            };

            function cssWithMappingToString(item, useSourceMap) {
                var content = item[1] || '';
                var cssMapping = item[3];
                if (!cssMapping) {
                    return content;
                }

                if (useSourceMap && typeof btoa === 'function') {
                    var sourceMapping = toComment(cssMapping);
                    var sourceURLs = cssMapping.sources.map(function (source) {
                        return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
                    });

                    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
                }

                return [content].join('\n');
            }

// Adapted from convert-source-map (MIT)
            function toComment(sourceMap) {
// eslint-disable-next-line no-undef
                var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
                var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

                return '/*# ' + data + ' */';
            }


            /***/ }),
        /* 2 */
        /***/ (function(module, exports, __webpack_require__) {

            /*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/

            var hasDocument = typeof document !== 'undefined'

            if (typeof DEBUG !== 'undefined' && DEBUG) {
                if (!hasDocument) {
                    throw new Error(
                        'vue-style-loader cannot be used in a non-browser environment. ' +
                        "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
                    ) }
            }

            var listToStyles = __webpack_require__(37)

            /*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

            var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

            var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
            var singletonElement = null
            var singletonCounter = 0
            var isProduction = false
            var noop = function () {}
            var options = null
            var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
            var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

            module.exports = function (parentId, list, _isProduction, _options) {
                isProduction = _isProduction

                options = _options || {}

                var styles = listToStyles(parentId, list)
                addStylesToDom(styles)

                return function update (newList) {
                    var mayRemove = []
                    for (var i = 0; i < styles.length; i++) {
                        var item = styles[i]
                        var domStyle = stylesInDom[item.id]
                        domStyle.refs--
                        mayRemove.push(domStyle)
                    }
                    if (newList) {
                        styles = listToStyles(parentId, newList)
                        addStylesToDom(styles)
                    } else {
                        styles = []
                    }
                    for (var i = 0; i < mayRemove.length; i++) {
                        var domStyle = mayRemove[i]
                        if (domStyle.refs === 0) {
                            for (var j = 0; j < domStyle.parts.length; j++) {
                                domStyle.parts[j]()
                            }
                            delete stylesInDom[domStyle.id]
                        }
                    }
                }
            }

            function addStylesToDom (styles /* Array<StyleObject> */) {
                for (var i = 0; i < styles.length; i++) {
                    var item = styles[i]
                    var domStyle = stylesInDom[item.id]
                    if (domStyle) {
                        domStyle.refs++
                        for (var j = 0; j < domStyle.parts.length; j++) {
                            domStyle.parts[j](item.parts[j])
                        }
                        for (; j < item.parts.length; j++) {
                            domStyle.parts.push(addStyle(item.parts[j]))
                        }
                        if (domStyle.parts.length > item.parts.length) {
                            domStyle.parts.length = item.parts.length
                        }
                    } else {
                        var parts = []
                        for (var j = 0; j < item.parts.length; j++) {
                            parts.push(addStyle(item.parts[j]))
                        }
                        stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
                    }
                }
            }

            function createStyleElement () {
                var styleElement = document.createElement('style')
                styleElement.type = 'text/css'
                head.appendChild(styleElement)
                return styleElement
            }

            function addStyle (obj /* StyleObjectPart */) {
                var update, remove
                var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

                if (styleElement) {
                    if (isProduction) {
// has SSR styles and in production mode.
// simply do nothing.
                        return noop
                    } else {
                        // has SSR styles but in dev mode.
                        // for some reason Chrome can't handle source map in server-rendered
                        // style tags - source maps in <style> only works if the style tag is
                        // created and inserted dynamically. So we remove the server rendered
                        // styles and inject new ones.
                        styleElement.parentNode.removeChild(styleElement)
                    }
                }

                if (isOldIE) {
// use singleton mode for IE9.
                    var styleIndex = singletonCounter++
                    styleElement = singletonElement || (singletonElement = createStyleElement())
                    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
                    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
                } else {
// use multi-style-tag mode in all other cases
                    styleElement = createStyleElement()
                    update = applyToTag.bind(null, styleElement)
                    remove = function () {
                        styleElement.parentNode.removeChild(styleElement)
                    }
                }

                update(obj)

                return function updateStyle (newObj /* StyleObjectPart */) {
                    if (newObj) {
                        if (newObj.css === obj.css &&
                            newObj.media === obj.media &&
                            newObj.sourceMap === obj.sourceMap) {
                            return
                        }
                        update(obj = newObj)
                    } else {
                        remove()
                    }
                }
            }

            var replaceText = (function () {
                var textStore = []

                return function (index, replacement) {
                    textStore[index] = replacement
                    return textStore.filter(Boolean).join('\n')
                }
            })()

            function applyToSingletonTag (styleElement, index, remove, obj) {
                var css = remove ? '' : obj.css

                if (styleElement.styleSheet) {
                    styleElement.styleSheet.cssText = replaceText(index, css)
                } else {
                    var cssNode = document.createTextNode(css)
                    var childNodes = styleElement.childNodes
                    if (childNodes[index]) styleElement.removeChild(childNodes[index])
                    if (childNodes.length) {
                        styleElement.insertBefore(cssNode, childNodes[index])
                    } else {
                        styleElement.appendChild(cssNode)
                    }
                }
            }

            function applyToTag (styleElement, obj) {
                var css = obj.css
                var media = obj.media
                var sourceMap = obj.sourceMap

                if (media) {
                    styleElement.setAttribute('media', media)
                }
                if (options.ssrId) {
                    styleElement.setAttribute(ssrIdKey, obj.id)
                }

                if (sourceMap) {
// https://developer.chrome.com/devtools/docs/javascript-debugging
// this makes source maps inside style tags work properly in Chrome
                    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
// http://stackoverflow.com/a/26603875
                    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
                }

                if (styleElement.styleSheet) {
                    styleElement.styleSheet.cssText = css
                } else {
                    while (styleElement.firstChild) {
                        styleElement.removeChild(styleElement.firstChild)
                    }
                    styleElement.appendChild(document.createTextNode(css))
                }
            }


            /***/ }),
        /* 3 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                data: function data() {
                    return {};
                },

                computed: {
                    getProjectId: function getProjectId() {
                        if (typeof this.$route.query.project_id !== 'undefined') {
                            return this.$route.query.project_id;
                        }

                        return false;
                    },
                    getUserId: function getUserId() {
                        if (typeof this.$route.query.user_id !== 'undefined') {
                            return this.$route.query.user_id;
                        }
                        return PM_Vars.current_user.ID;
                    },
                    project_title: function project_title() {
                        var _this = this;

                        if (this.projects) {
                            return this.projects.title;
                        } else if (this.getProjectId) {
                            var index = this.allprojects.findIndex(function (x) {
                                return x.id == _this.getProjectId;
                            });
                            if (index !== -1) {
                                return this.allprojects[index].title;
                            }
                        }

                        return this.__('All Project', 'pm-pro');
                    },
                    unsername: function unsername() {
                        var _this2 = this;

                        if (this.assign_user) {
                            return this.assign_user.display_name;
                        } else if (this.getUserId) {
                            var index = this.assigned_users.findIndex(function (x) {
                                return x.id == _this2.getUserId;
                            });
                            if (index !== -1) {
                                return this.assigned_users[index].display_name;
                            }
                        }
                        return this.__('All Coworker', 'pm-pro');
                    },
                    allprojects: function allprojects() {
                        return this.$root.$store.state.projects.sort(function (a, b) {
                            var atitle = a.title.toLowerCase();
                            var btitle = b.title.toLowerCase();

                            return atitle < btitle ? -1 : atitle > btitle ? 1 : 0;
                        });
                    },
                    assigned_users: function assigned_users() {
                        return this.$store.state.reports.assigned_users.sort(function (a, b) {
                            var adisplay_name = a.display_name.toLowerCase();
                            var bdisplay_name = b.display_name.toLowerCase();

                            return adisplay_name < bdisplay_name ? -1 : adisplay_name > bdisplay_name ? 1 : 0;
                        });;
                    }
                },
                methods: {
                    reduceMonth: function reduceMonth() {
                        return pm.Moment().format('YYYY-MM-01');
                    },
                    getResults: function getResults(args) {
                        var self = this,
                            pre_define = {
                                conditions: {},
                                callback: false
                            };

                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = this.generateConditions(args.conditions);

                        var request = {
                            type: 'GET',
                            url: args.url + conditions,
                            success: function success(res) {
                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                                pm.NProgress.done();
                            }
                        };

                        this.httpRequest(request);
                    },

// OverdueTasks (args) {
//     var self = this,
//     pre_define = {
//         conditions: {
                    //         },
//         callback: false,
//     };

//     var args = jQuery.extend(true, pre_define, args );
//     var  conditions = this.generateConditions(args.conditions);

//     var request = {
//         type: 'GET',
//         url: self.base_url + 'pm-pro/v2/overdue-tasks?'+conditions,
//         success (res) {
//             if ( typeof args.callback === 'function' ) {
//                 args.callback.call ( self, res );
//             }
//             pm.NProgress.done();
//         }
//     };

//     this.httpRequest(request);
// },
// completedTasks (args) {

//     var self = this,
//     pre_define = {
//         conditions: {

                    //         },
//         callback: false,
//     };
//     var args = jQuery.extend(true, pre_define, args );
//     var  conditions = this.generateConditions(args.conditions);

//     var request = {
//         type: 'GET',
//         url: self.base_url + 'pm-pro/v2/completed-tasks?'+conditions,
//         success (res) {
//             if ( typeof args.callback === 'function' ) {
//                 args.callback.call ( self, res );
//             }
//             pm.NProgress.done();
//         }
//     };
//     this.httpRequest(request);
// },

// userActivities (args) {
//     var self = this,
//     pre_define = {
//         conditions: {
                    //         },
//         callback: false,
//     };
//     var args = jQuery.extend(true, pre_define, args );
//     var  conditions = this.generateConditions(args.conditions);

//     var request = {
//         type: 'GET',
//         url: self.base_url + 'pm-pro/v2/user-activities?'+conditions,
//         success (res) {
//             if ( typeof args.callback === 'function' ) {
//                 args.callback.call ( self, res );
//             }
//             pm.NProgress.done();
//         }
//     };
//     this.httpRequest(request);
// },

// projectTasks (args) {
//     var self = this,
//     pre_define = {
//         conditions: {
                    //         },
//         callback: false,
//     };
//     var args = jQuery.extend(true, pre_define, args );
//     var  conditions = this.generateConditions(args.conditions);

//     var request = {
//         type: 'GET',
//         url: self.base_url + 'pm-pro/v2/project-tasks?'+conditions,
//         success (res) {
//             if ( typeof args.callback === 'function' ) {
//                 args.callback.call ( self, res );
//             }
//             pm.NProgress.done();
//         }
//     };
//     this.httpRequest(request);
// },

// milestoneTasks (args) {
//     var self = this,
//     pre_define = {
//         conditions: {
                    //         },
//         callback: false,
//     };
//     var args = jQuery.extend(true, pre_define, args );
//     var  conditions = this.generateConditions(args.conditions);

//     var request = {
//         type: 'GET',
//         url: self.base_url + 'pm-pro/v2/milestone-tasks?'+conditions,
//         success (res) {
//             if ( typeof args.callback === 'function' ) {
//                 args.callback.call ( self, res );
//             }
//             pm.NProgress.done();
//         }
//     };

//     this.httpRequest(request);
// },
// unassignedTasks (args) {

//     var self = this,
//     pre_define = {
//         conditions: {

                    //         },
//         callback: false,
//     };
//     var args = jQuery.extend(true, pre_define, args );
//     var  conditions = this.generateConditions(args.conditions);

//     var request = {
//         type: 'GET',
//         url: self.base_url + 'pm-pro/v2/unassigned-tasks?'+conditions,
//         success (res) {
//             if ( typeof args.callback === 'function' ) {
//                 args.callback.call ( self, res );
//             }
//             pm.NProgress.done();
//         }
//     };

//     this.httpRequest(request);
// },

                    getAllusers: function getAllusers(args) {
                        var self = this,
                            pre_define = {
                                callback: false
                            };

                        var args = jQuery.extend(true, pre_define, args);

                        var request = {
                            type: 'GET',
                            url: self.base_url + 'pm/v2/assigned_users/',
                            success: function success(res) {
                                self.$store.commit('reports/setAssigneduser', res.data);
                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                                pm.NProgress.done();
                            }
                        };
                        self.httpRequest(request);
                    },
                    getAdvanceReport: function getAdvanceReport(args) {
                        var self = this,
                            pre_define = {
                                data: {
                                    page: 1,
                                    per_page: this.getSettings('project_per_page', 10)
                                },
                                callbakc: false
                            };
                        var args = jQuery.extend(true, pre_define, args);
                        var request = {
                            type: 'GET',
                            data: args.data,
                            url: self.base_url + 'pm-pro/v2/advance-report',
                            success: function success(res, status, xhr) {

                                if (typeof args.callback === 'function') {
                                    args.callback(res, status, xhr);
                                }
                                pm.NProgress.done();
                            }
                        };
                        self.httpRequest(request);
                    },
                    downloadCSV: function downloadCSV(args) {
                        var self = this,
                            pre_define = {
                                data: {
                                    page: -1
                                },
                                callbakc: false
                            };
                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = this.generateConditions(args.conditions);

                        window.location.href = this.setPermalink(args.url + conditions);
                    },
                    downloadPDF: function downloadPDF(args) {
                        var self = this,
                            pre_define = {
                                data: {
                                    page: -1
                                },
                                callbakc: false
                            };
                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = this.generateConditions(args.conditions);

                        window.location.href = this.setPermalink(args.url + conditions);
                    }
                }
            };

            /***/ }),
        /* 4 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _extends2 = __webpack_require__(8);

            var _extends3 = _interopRequireDefault(_extends2);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            exports.default = {
                methods: (0, _extends3.default)({}, pm.Vuex.mapMutations('proProjectFiles', ['setFolders', 'setFiles', 'setFile', 'afterUpdateFolder', 'afterDeleteFolder', 'setFileViewStatus', 'setDocViewStatus', 'setLinkViewStatus', 'setFolderViewStatus', 'setAFiles', 'createAfterDoc', 'createAfterLink', 'afterNewComment', 'afterUpdateComment', 'afterDeleteComment']), {
                    can_edit_file: function can_edit_file(file) {
                        var user = PM_Vars.current_user;
                        if (this.is_manager()) {
                            return true;
                        }

                        if (file.creator.data.id == user.ID) {
                            return true;
                        }

                        return false;
                    },
                    showHideFolder: function showHideFolder(status) {
                        var status = status || 'toggle';

                        this.setFolderViewStatus(status);
                    },
                    showHideFile: function showHideFile(status) {
                        var status = status || 'toggle';

                        this.setFileViewStatus(status);
                    },
                    showHideDoc: function showHideDoc(status) {
                        var status = status || 'toggle';
                        this.setDocViewStatus(status);
                    },
                    showHideLink: function showHideLink(status) {
                        var status = status || 'toggle';

                        this.setLinkViewStatus(status);
                    },
                    showHideDocCommentForm: function showHideDocCommentForm(status, comment) {

                        if (status === 'toggle') {
                            comment.editMode = comment.editMode ? false : true;
                        } else {
                            comment.editMode = status;
                        }
                    },
                    getProFiles: function getProFiles(args) {
                        var self = this,
                            pre_define = {
                                conditions: {},
                                callback: false
                            };

                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = self.generateConditions(args.conditions);

                        var request = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files/?' + conditions,
                            success: function success(res) {

                                res.data.forEach(function (file, index) {
                                    self.addFileMeta(file);
                                });

                                self.setFiles(res);

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            }
                        };

                        self.httpRequest(request);
                    },
                    getProFile: function getProFile(args) {
                        var self = this,
                            pre_define = {
                                conditions: {},
                                callback: false
                            };

                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = self.generateConditions(args.conditions);

                        var request = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files/?' + conditions,
                            success: function success(res) {

//res.data.forEach(function(file, index) {
                                self.addFileMeta(res.data);
//});

                                self.setFile(res.data);
//self.setFiles(res.meta.files.data);

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            }
                        };

                        self.httpRequest(request);
                    },
                    addFileMeta: function addFileMeta(file) {
                        var self = this;
                        file.editMode = false;

                        if (typeof file.comments !== 'undefined') {
                            file.comments.data.map(function (comment, index) {
                                self.addCommentMeta(comment);
                            });
                        }
                    },
                    getFolder: function getFolder(args) {
                        var self = this,
                            pre_define = {
                                conditions: {
                                    type: 'folder'
                                },
                                callback: false
                            };

                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = self.generateConditions(args.conditions);

                        var request = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files/folders?' + conditions,
                            success: function success(res) {
                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            }
                        };

                        self.httpRequest(request);
                    },
                    createFolder: function createFolder(args) {

// Exit from this function, If submit button disabled
                        if (this.submit_disabled) {
                            return;
                        }
// Disable submit button for preventing multiple click
                        this.submit_disabled = true;

                        var self = this;
                        var pre_define = {};
                        var args = jQuery.extend(true, pre_define, args);

// Showing loading option
                        this.show_spinner = true;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files/',
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
                                self.showHideFolder(false);
                                self.addFileMeta(res.data);
// Display a success toast, with a title
                                if (res.message) {
                                    pm.Toastr.success(res.message);
                                }
                                self.submit_disabled = false;
                                self.show_spinner = false;

                                self.$store.commit('proProjectFiles/afterCreateFolder', res.data);

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.show_spinner = false;

// Showing error
                                res.data.error.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                                self.submit_disabled = false;
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    updateFolder: function updateFolder(args) {
// Exit from this function, If submit button disabled
                        if (this.submit_disabled) {
                            return;
                        }
// Disable submit button for preventing multiple click
                        this.submit_disabled = true;

                        var self = this;
                        var pre_define = {};
                        var args = jQuery.extend(true, pre_define, args);

// Showing loading option
                        this.show_spinner = true;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files/' + args.data.id,
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
                                self.addFileMeta(res.data);
// Display a success toast, with a title
                                if (res.data.success) {
                                    pm.Toastr.success(res.data.success);
                                }

                                self.submit_disabled = false;
                                self.show_spinner = false;

                                self.$store.commit('proProjectFiles/afterUpdateFolder', res.data);

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.show_spinner = false;

// Showing error
                                res.responseJSON.message.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                                self.submit_disabled = false;
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    deleteFolder: function deleteFolder(args) {
                        if (!confirm('Are you sure')) {
                            return;
                        }
                        var self = this;
                        var pre_define = {
                            id: false,
                            callback: false
                        };

                        var args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + 'pm/v2/projects/' + self.project_id + '/files/' + args.id + '/delete',
                            type: 'POST',

                            success: function success() {

                                self.afterDeleteFolder(args.id);

                                if (typeof args.callback === 'function') {
                                    args.callback();
                                }
                            },
                            error: function error(res) {
// Showing error
                                res.responseJSON.message.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    newComment: function newComment(args) {
// Exit from this function, If submit button disabled
                        if (this.submit_disabled) {
                            return;
                        }

// Disable submit button for preventing multiple click
                        this.submit_disabled = true;

                        var self = this;
                        var pre_define = {};
                        var args = jQuery.extend(true, pre_define, args);
                        var data = new FormData();

                        data.append('content', args.content);
                        data.append('type', args.type);
                        data.append('commentable_id', args.commentable_id);
                        data.append('commentable_type', args.commentable_type); //'discussion-board'
                        data.append('notify_users', args.notify_users);

                        args.files.map(function (file) {
                            if (typeof file.attachment_id === 'undefined') {
                                var decode = self.dataURLtoFile(file.thumb, file.name);
                                data.append('files[]', decode);
                            }
                        });

// Showing loading option
                        this.show_spinner = true;

                        var request_data = {
                            url: self.base_url + 'pm/v2/projects/' + self.project_id + '/comments',
                            type: 'POST',
                            data: data,
                            cache: false,
                            contentType: false,
                            processData: false,
                            success: function success(res) {
                                self.addCommentMeta(res.data);
                                self.files = [];
//self.getDiscuss(self);
                                self.show_spinner = false;
// Display a success toast, with a title
                                if (res.message) {
                                    pm.Toastr.success(res.message);
                                }

                                self.submit_disabled = false;

                                self.$root.$emit('after_comment');
                                self.afterNewComment(res.data);

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.show_spinner = false;

// Showing error
                                pm.Toastr.error(res.message);
                                self.submit_disabled = false;
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    updateComment: function updateComment(args) {
// Exit from this function, If submit button disabled
                        if (this.submit_disabled) {
                            return;
                        }

// Disable submit button for preventing multiple click
                        this.submit_disabled = true;

                        var self = this;
                        var pre_define = {};
                        var args = jQuery.extend(true, pre_define, args);
                        var data = new FormData();

                        data.append('content', args.content);
                        data.append('commentable_id', args.commentable_id);
                        data.append('commentable_type', args.commentable_type); //'discussion-board'
                        data.append('notify_users', args.notify_users);

                        args.deleted_files.map(function (del_file) {
                            data.append('files_to_delete[]', del_file);
                        });

                        args.files.map(function (file) {
                            if (typeof file.attachment_id === 'undefined') {
                                var decode = self.dataURLtoFile(file.thumb, file.name);
                                data.append('files[]', decode);
                            }
                        });

                        data.append('is_admin', PM_Vars.is_admin);

// Showing loading option
                        this.show_spinner = true;

                        var request_data = {
                            url: self.base_url + 'pm/v2/projects/' + self.project_id + '/comments/' + args.comment_id,
                            type: 'POST',
                            data: data,
                            cache: false,
                            contentType: false,
                            processData: false,
                            success: function success(res) {
                                self.addCommentMeta(res.data);
                                self.files = [];
//self.getDiscuss(self);
                                self.show_spinner = false;
// Display a success toast, with a title
                                if (res.message) {
                                    pm.Toastr.success(res.message);
                                }

                                self.submit_disabled = false;

//self.showHideCommentForm(false, self.comment);
                                self.$root.$emit('after_comment');
                                self.afterUpdateComment(res.data);

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.show_spinner = false;

// Showing error
// Showing error
                                res.responseJSON.message.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                                self.submit_disabled = false;
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    addCommentMeta: function addCommentMeta(comment) {
                        comment.editMode = false;
                    },
                    deleteComment: function deleteComment(args) {
                        if (!confirm(this.__("Are you sure!", 'pm-pro'))) {
                            return;
                        }

                        var self = this;
                        var pre_define = {
                            comment_id: false,
                            callback: false,
                            commentable_id: false
                        };

                        var args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + 'pm/v2/projects/' + self.project_id + '/comments/' + args.comment_id + '/delete',
                            type: 'POST',
                            success: function success(res) {
                                self.afterDeleteComment({
                                    comment_id: args.comment_id,
                                    commentable_id: args.commentable_id
                                });
                            },
                            error: function error(res) {
// Showing error
                                res.responseJSON.message.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },


                    checkDocIcon: function checkDocIcon(dlink) {

                        var link = dlink;
                        var icon = PM_Pro_Vars.dir_url + "/views/assets/images/others.svg";
                        var g = link.search(/google.com/i);
                        if (g != -1) {
                            icon = PM_Pro_Vars.dir_url + "/views/assets/images/google_drive.svg";
// check google docs
                            g = link.search(/document/i);
                            if (g != -1) {
                                icon = PM_Pro_Vars.dir_url + "/views/assets/images/google_docs.svg";
                            }

                            g = link.search(/spreadsheets/i);
                            if (g != -1) {
                                icon = PM_Pro_Vars.dir_url + "/views/assets/images/google_spreadsheets.svg";
                            }

                            g = link.search(/presentation/i);
                            if (g != -1) {
                                icon = PM_Pro_Vars.dir_url + "/views/assets/images/google_presentation.svg";
                            }
                        }

                        g = link.search(/dropbox.com/i);
                        if (g != -1) {
                            icon = PM_Pro_Vars.dir_url + "/views/assets/images/dropbox.svg";
                        }

                        g = link.search(/live.com/i);
                        if (g != -1) {
                            icon = PM_Pro_Vars.dir_url + "/views/assets/images/sky_drive.svg";
                        }

                        return icon;
                    },

                    getMimeTypeImage: function getMimeTypeImage(file) {
                        var image = ['image/gif', 'image/png', 'image/jpeg', 'image/bmp', 'image/webp'];

                        if (file.hasOwnProperty('mime_type') && image.indexOf(file.mime_type) !== -1) {
                            return file.thumb;
                        }

                        if (image.indexOf(file.type) === -1) {
                            return PM_Pro_Vars.dir_url + "/views/assets/images/text.png";
                        } else {
                            return file.thumb;
                        }
                    },
                    getMimeTypeImageFromLink: function getMimeTypeImageFromLink(link) {
                        var url = this.checkDocIcon(link);
                        return url;
                    },
                    contentURL: function contentURL(file) {
                        var self = this;
                        switch (file.fileable_type) {

                            case 'discussion_board':
                                return '#/projects/' + self.project_id + '/discussions/' + file.fileable_id;
                                break;

                            case 'task_list':
                                return '#/projects/' + self.project_id + '/task-lists/' + file.fileable_id;
                                break;

                            case 'task':
                                return '#/projects/' + self.project_id + '/task/' + file.fileable_id;
                                break;
                            case 'comment':
                                return self.getCommentUrl(file);
                                break;

                            default:
                                break;
                        }
                    },
                    getCommentUrl: function getCommentUrl(file) {
                        var self = this;

                        switch (file.fileable.commentable_type) {
                            case 'task_list':

                                return '#/projects/' + self.project_id + '/task-lists/' + file.fileable.commentable_id;
                                break;

                            case 'discussion_board':
                                return '#/projects/' + self.project_id + '/discussions/' + file.fileable.commentable_id;
                                break;
                            case 'task':
                                return '#/projects/' + self.project_id + '/task-lists/tasks/' + file.fileable.commentable_id;
                                break;
                        }
                    },
                    attachTo: function attachTo(file) {

                        if (file.fileable_type === 'discussion_board') {
                            return 'Discuss';
                        }

                        if (file.fileable_type === 'comment') {
                            return 'Comment';
                        }
                    },
                    getIndex: function getIndex(array, id, slug) {
                        var target = false;

                        array.map(function (content, index) {
                            if (content[slug] == id) {
                                target = index;
                            }
                        });
                        return target;
                    },
                    fileReceive: function fileReceive(receive, callback) {
                        var self = this;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files/sorting',
                            type: 'POST',
                            data: receive,
                            success: function success(res) {
                                self.afterDeleteFolder(receive.source);
                                if (typeof callback != 'undefined') {
                                    callback(res, receive);
                                }
                            },
                            error: function error(res) {}
                        };
                        self.httpRequest(request_data);
                    }
                })
            };

            /***/ }),
        /* 5 */
        /***/ (function(module, exports) {

            var core = module.exports = { version: '2.6.11' };
            if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


            /***/ }),
        /* 6 */
        /***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
            var global = module.exports = typeof window != 'undefined' && window.Math == Math
                ? window : typeof self != 'undefined' && self.Math == Math ? self
                    // eslint-disable-next-line no-new-func
                    : Function('return this')();
            if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


            /***/ }),
        /* 7 */
        /***/ (function(module, exports, __webpack_require__) {

            var store = __webpack_require__(51)('wks');
            var uid = __webpack_require__(52);
            var Symbol = __webpack_require__(6).Symbol;
            var USE_SYMBOL = typeof Symbol == 'function';

            var $exports = module.exports = function (name) {
                return store[name] || (store[name] =
                    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
            };

            $exports.store = store;


            /***/ }),
        /* 8 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            exports.__esModule = true;

            var _assign = __webpack_require__(29);

            var _assign2 = _interopRequireDefault(_assign);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            exports.default = _assign2.default || function (target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];

                    for (var key in source) {
                        if (Object.prototype.hasOwnProperty.call(source, key)) {
                            target[key] = source[key];
                        }
                    }
                }

                return target;
            };

            /***/ }),
        /* 9 */
        /***/ (function(module, exports, __webpack_require__) {

            var global = __webpack_require__(6);
            var core = __webpack_require__(5);
            var ctx = __webpack_require__(15);
            var hide = __webpack_require__(13);
            var has = __webpack_require__(23);
            var PROTOTYPE = 'prototype';

            var $export = function (type, name, source) {
                var IS_FORCED = type & $export.F;
                var IS_GLOBAL = type & $export.G;
                var IS_STATIC = type & $export.S;
                var IS_PROTO = type & $export.P;
                var IS_BIND = type & $export.B;
                var IS_WRAP = type & $export.W;
                var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
                var expProto = exports[PROTOTYPE];
                var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
                var key, own, out;
                if (IS_GLOBAL) source = name;
                for (key in source) {
// contains in native
                    own = !IS_FORCED && target && target[key] !== undefined;
                    if (own && has(exports, key)) continue;
// export native or passed
                    out = own ? target[key] : source[key];
// prevent global pollution for namespaces
                    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
                        // bind timers to global for call from export context
                        : IS_BIND && own ? ctx(out, global)
                            // wrap global constructors for prevent change them in library
                            : IS_WRAP && target[key] == out ? (function (C) {
                                var F = function (a, b, c) {
                                    if (this instanceof C) {
                                        switch (arguments.length) {
                                            case 0: return new C();
                                            case 1: return new C(a);
                                            case 2: return new C(a, b);
                                        } return new C(a, b, c);
                                    } return C.apply(this, arguments);
                                };
                                F[PROTOTYPE] = C[PROTOTYPE];
                                return F;
// make static versions for prototype methods
                            })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
// export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
                    if (IS_PROTO) {
                        (exports.virtual || (exports.virtual = {}))[key] = out;
// export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
                        if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
                    }
                }
            };
// type bitmap
            $export.F = 1;   // forced
            $export.G = 2;   // global
            $export.S = 4;   // static
            $export.P = 8;   // proto
            $export.B = 16;  // bind
            $export.W = 32;  // wrap
            $export.U = 64;  // safe
            $export.R = 128; // real proto method for `library`
            module.exports = $export;


            /***/ }),
        /* 10 */
        /***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
            module.exports = !__webpack_require__(22)(function () {
                return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
            });


            /***/ }),
        /* 11 */
        /***/ (function(module, exports, __webpack_require__) {

            var isObject = __webpack_require__(16);
            module.exports = function (it) {
                if (!isObject(it)) throw TypeError(it + ' is not an object!');
                return it;
            };


            /***/ }),
        /* 12 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Modal_vue__ = __webpack_require__(99);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_9a5473c8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Modal_vue__ = __webpack_require__(285);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(283)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Modal_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_9a5473c8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Modal_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/Modal.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-9a5473c8", Component.options)
                } else {
                    hotAPI.reload("data-v-9a5473c8", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 13 */
        /***/ (function(module, exports, __webpack_require__) {

            var dP = __webpack_require__(14);
            var createDesc = __webpack_require__(31);
            module.exports = __webpack_require__(10) ? function (object, key, value) {
                return dP.f(object, key, createDesc(1, value));
            } : function (object, key, value) {
                object[key] = value;
                return object;
            };


            /***/ }),
        /* 14 */
        /***/ (function(module, exports, __webpack_require__) {

            var anObject = __webpack_require__(11);
            var IE8_DOM_DEFINE = __webpack_require__(158);
            var toPrimitive = __webpack_require__(159);
            var dP = Object.defineProperty;

            exports.f = __webpack_require__(10) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
                anObject(O);
                P = toPrimitive(P, true);
                anObject(Attributes);
                if (IE8_DOM_DEFINE) try {
                    return dP(O, P, Attributes);
                } catch (e) { /* empty */ }
                if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
                if ('value' in Attributes) O[P] = Attributes.value;
                return O;
            };


            /***/ }),
        /* 15 */
        /***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
            var aFunction = __webpack_require__(21);
            module.exports = function (fn, that, length) {
                aFunction(fn);
                if (that === undefined) return fn;
                switch (length) {
                    case 1: return function (a) {
                        return fn.call(that, a);
                    };
                    case 2: return function (a, b) {
                        return fn.call(that, a, b);
                    };
                    case 3: return function (a, b, c) {
                        return fn.call(that, a, b, c);
                    };
                }
                return function (/* ...args */) {
                    return fn.apply(that, arguments);
                };
            };


            /***/ }),
        /* 16 */
        /***/ (function(module, exports) {

            module.exports = function (it) {
                return typeof it === 'object' ? it !== null : typeof it === 'function';
            };


            /***/ }),
        /* 17 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            exports.__esModule = true;

            var _defineProperty = __webpack_require__(168);

            var _defineProperty2 = _interopRequireDefault(_defineProperty);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            exports.default = function (obj, key, value) {
                if (key in obj) {
                    (0, _defineProperty2.default)(obj, key, {
                        value: value,
                        enumerable: true,
                        configurable: true,
                        writable: true
                    });
                } else {
                    obj[key] = value;
                }

                return obj;
            };

            /***/ }),
        /* 18 */
        /***/ (function(module, exports) {

            module.exports = {};


            /***/ }),
        /* 19 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                methods: {}
            };

            /***/ }),
        /* 20 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(19);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],

                data: function data() {
                    return {
                        loading: false,
                        license: '',
                        email: '',
                        status: {},
                        message: '',
                        error: ''
                    };
                },

                created: function created() {
                    this.fetchLicense();
                },

                computed: {

                    isActivated: function isActivated() {
                        return this.status.activated !== undefined ? this.status.activated : false;
                    }
                },

                methods: {

                    fetchLicense: function fetchLicense() {
                        var self = this;

//self.loading = true;

                        var request = {
                            data: {},
                            url: self.base_url + 'pm-pro/v2/license/check',
                            success: function success(response) {
                                response = response.data;
                                self.license = response.license.key;
                                self.email = response.license.email;
                                self.status = response.status || {};
                                self.message = response.message;
                                pm.NProgress.done();
                            },

                            complete: function complete() {
                                self.loading = true;
                            }
                        };

                        self.httpRequest(request);
                    },

                    deleteLicense: function deleteLicense(target, nonce) {
                        var self = this;

                        if (!confirm(__('License will delete permanently', 'pm-pro'))) {
                            return;
                        }

                        self.loading = true;
                        jQuery(target).addClass('updating-message');

                        var request = {
                            data: {},
                            type: 'POST',
                            url: self.base_url + 'pm-pro/v2/license/delete',
                            success: function success() {
                                self.license = '';
                                self.email = '';
//self.status  = {};
//self.message = '';
                            },

                            error: function error(_error) {
                                alert(_error);
                            },

                            complete: function complete() {
//self.loading = false;
//jQuery(target).removeClass('updating-message');
                                location.reload();
                            }
                        };

                        self.httpRequest(request);
                    },

                    activate: function activate(target) {
                        if ('' === this.license || '' === this.email) {
                            alert(__('Please provide your email and license key', 'pm-pro'));
                            return;
                        }

                        var self = this;
                        self.error = '';

                        jQuery(target).addClass('updating-message');

                        var request = {
                            data: {
                                email: self.email,
                                key: self.license
                            },
                            type: 'post',
                            url: self.base_url + 'pm-pro/v2/license/activation',
                            success: function success(response) {
                                response = response.data;
                                if (response.data.activated) {
//self.status  = response.data;
//self.message = response.message;
                                    location.reload();
                                } else {
                                    self.status = response.data;
                                    self.error = response.data.error;
                                }
                            },

                            error: function error(_error2) {
                                alert(_error2);
                            },

                            complete: function complete() {
                                jQuery(target).removeClass('updating-message');
                            }
                        };

                        self.httpRequest(request);
                    }
                }
            });

            /***/ }),
        /* 21 */
        /***/ (function(module, exports) {

            module.exports = function (it) {
                if (typeof it != 'function') throw TypeError(it + ' is not a function!');
                return it;
            };


            /***/ }),
        /* 22 */
        /***/ (function(module, exports) {

            module.exports = function (exec) {
                try {
                    return !!exec();
                } catch (e) {
                    return true;
                }
            };


            /***/ }),
        /* 23 */
        /***/ (function(module, exports) {

            var hasOwnProperty = {}.hasOwnProperty;
            module.exports = function (it, key) {
                return hasOwnProperty.call(it, key);
            };


            /***/ }),
        /* 24 */
        /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
            var $keys = __webpack_require__(161);
            var enumBugKeys = __webpack_require__(53);

            module.exports = Object.keys || function keys(O) {
                return $keys(O, enumBugKeys);
            };


            /***/ }),
        /* 25 */
        /***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
            var IObject = __webpack_require__(50);
            var defined = __webpack_require__(32);
            module.exports = function (it) {
                return IObject(defined(it));
            };


            /***/ }),
        /* 26 */
        /***/ (function(module, exports) {

            var toString = {}.toString;

            module.exports = function (it) {
                return toString.call(it).slice(8, -1);
            };


            /***/ }),
        /* 27 */
        /***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
            var defined = __webpack_require__(32);
            module.exports = function (it) {
                return Object(defined(it));
            };


            /***/ }),
        /* 28 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                methods: {
                    selfGetLists: function selfGetLists(project_id, _callback) {
                        var self = this,
                            projects = this.$store.state.calendar.projects;

                        if (!projects) {
                            if (typeof _callback !== 'undefined') {
                                _callback();
                            }

                            return;
                        };

                        var index = self.getIndex(projects, project_id, 'id');

                        if (index === false) {
                            if (typeof _callback !== 'undefined') {
                                _callback();
                            }

                            return;
                        }

                        if (typeof projects[index].task_lists !== 'undefined') {
                            if (typeof _callback !== 'undefined') {
                                _callback();
                            }

                            return;
                        }

                        var args = {
                            data: {
                                project_id: project_id
                            },
                            callback: function callback(component, res) {
                                self.$store.commit('setListInProject', {
                                    project_id: project_id,
                                    lists: res.data
                                });

                                if (typeof _callback !== 'undefined') {
                                    _callback(res);
                                }
                            }
                        };

                        this.getCalendarLists(args);
                    },
                    getCalendarLists: function getCalendarLists(args) {
                        var self = this;

                        var request = {
                            url: self.base_url + 'pm/v2/projects/' + args.data.project_id + '/task-lists?per_page=-1',
                            success: function success(res) {

                                if (typeof args.callback !== 'undefined') {
                                    args.callback(self, res);
                                }
                            },
                            error: function error(res) {}
                        };

                        self.httpRequest(request);
                    },
                    getEvents: function getEvents(args) {
                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            };
                        var args = jQuery.extend(true, pre_define, args);
                        var request = {
                            url: self.base_url + 'pm-pro/v2/calendar-events',
                            type: 'GET',
                            data: args.data,
                            success: function success(res) {
                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res.data);
                                }
                            }
                        };
                        self.httpRequest(request);
                    },
                    updateTask: function updateTask(args) {
                        var self = this,
                            pre_define = {
                                data: {
                                    project_id: self.project_id
                                },
                                callback: false
                            };
                        var args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + 'pm/v2/projects/' + args.data.project_id + '/tasks/' + args.data.task_id + '/update',
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
// Display a success toast, with a title
                                pm.Toastr.success(res.message);

                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                            },
                            error: function error(res) {
// Showing error
                                res.responseJSON.message.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });

                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                            }
                        };

                        self.httpRequest(request_data);
                    },


                    /**
                     * Update milesotne
                     * @param  {[Objecat]}   args [description]
                     * @return {[type]}             [description]
                     */
                    updateMilestone: function updateMilestone(args) {
                        var self = this,
                            pre_define = {
                                data: {
                                    order: 0,
                                    status: 'incomplete',
                                    project_id: self.project_id
                                },
                                callback: false
                            };
                        var args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + 'pm/v2/projects/' + args.data.project_id + '/milestones/' + args.data.id + '/update',
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
                                pm.Toastr.success(res.data.success);

                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                            },
                            error: function error(res) {
// Showing error
                                res.responseJSON.message.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });

                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                            }
                        };
                        self.httpRequest(request_data);
                    },
                    convertDateByTimezone: function convertDateByTimezone(date, timezone) {
                        if (typeof date !== 'undefined' && date !== '') {

                            if (typeof timezone !== 'undefined' && timezone !== '') {
                                return date.toLocaleString('en-US', { timeZone: timezone });
                            }

                            return date;
                        }
                    },
                    eventFromateData: function eventFromateData(event) {

                        if (typeof event.start === 'undefined') {
                            event['start'] = {
                                date: event.start_at.date
                            };
                            event['timezone'] = {
                                date: event.start_at.timezone
                            };
                        }

                        if (typeof event.end === 'undefined') {
                            event['end'] = {
                                date: event.due_date.date
                            };
                        }

                        var eventObj = {
                            'id': event.id,
                            'title': event.title,
                            'start': moment(this.start(event)),
                            'end': moment(this.end(event)),
                            'type': event.type,
                            'url': this.url(event),
                            'project_id': event.project_id,
                            'timezone': event.start.timezone,
                            'assignees': this.assignees(event)
                        };

                        var className, color;
                        if (event.type == 'milestone') {
                            eventObj.className = this.milestoneClass(event).join(" ");
                            eventObj.color = '#32b1c8';
                            eventObj.durationEditable = false;
                            eventObj.resourceEditable = true;
                        } else {
                            eventObj.className = this.taskClass(event).join(" ");
                            eventObj.color = '#c86432';
                            eventObj.durationEditable = true;
                        }
                        return eventObj;
                    },
                    milestoneClass: function milestoneClass(event) {
                        var className = ['milestone'];

                        className.push(event.status);

                        return className;
                    },
                    taskClass: function taskClass(event) {
                        var className = ['pm-calender-todo'];
                        var today = pm.Moment().format('YYYY-MM-DD');
                        var due_date = new Date(event.end.date);

                        if (event.status == 'complete') {
                            className.push('pm-complete-task');
                            return className;
                        }

                        if (!pm.Moment(due_date).isValid()) {
                            className.push('pm-task-running');
                            return className;
                        }

                        if (pm.Moment(due_date).isSameOrAfter(today)) {
                            className.push('pm-task-running');
                        } else {
                            className.push('pm-expire-task');
                        }

                        return className;
                    },
                    end: function end(event) {
                        var end = this.convertDateByTimezone(event.end.date, event.end.timezone);
                        var created_at = this.convertDateByTimezone(event.created_at.date, event.created_at.timezone);

                        if (pm.Moment(end).isValid()) {
                            return pm.Moment(end).add(1, 'day').format('YYYY-MM-DD');
                        }

                        return pm.Moment(created_at).add(1, 'day').format('YYYY-MM-DD');
                    },
                    start: function start(event) {

                        var end = this.convertDateByTimezone(event.end.date, event.end.timezone);
                        var created_at = this.convertDateByTimezone(event.created_at.date, event.created_at.timezone);

                        if (event.start.date !== null) {
                            var start = this.convertDateByTimezone(event.start.date, event.start.timezone);

                            if (pm.Moment(start).isValid()) {
                                return pm.Moment(start).format('YYYY-MM-DD');
                            }
                        }

                        if (pm.Moment(end).isValid() && pm.Moment(end).isBefore(created_at)) {
                            return pm.Moment(end).format('YYYY-MM-DD');
                        }

                        return pm.Moment(created_at).format('YYYY-MM-DD');
                    },
                    url: function url(event) {

//return '#/calendar';
                        var url;
                        if (event.type == 'task') {

// if ( 'mytask-tasks' == this.$route.name || 'mytask_calendar_single_task' == this.$route.name ) {
//     url = this.$router.resolve({ name: 'mytask_calendar_single_task', params: {task_id: event.id, project_id: event.project_id}}).href;

// } else {
//     url = this.$router.resolve({ name: 'calendar_single_task', params: {task_id: event.id, project_id: event.project_id}}).href;

// }

                            url = '#/calendar';

                            return window.location.href;
                        } else if (event.type == 'milestone') {

                            url = this.$router.resolve({ name: 'milestones', params: { project_id: event.project_id } }).href;
                        }

                        var location = window.location.href;
                        location = location.slice(0, location.indexOf("#"));
                        url = location + url;

                        return url;
                    },
                    assignees: function assignees(event) {
                        var assignees = [];
                        if (typeof event.assignees !== 'undefined') {

                            event.assignees.data.map(function (assignee) {
                                assignees.push({ 'avatar_url': assignee.avatar_url, 'display_name': assignee.display_name, 'id': assignee.id });
                            });
                            return assignees;
                        }
                    },
                    eventRender: function eventRender(event, element, calEvent) {
                        if (typeof event.assignees != 'undefined' && element.hasClass('pm-calender-todo')) {
                            element.find('.fc-time').remove();
                            event.assignees.map(function (assignee) {
                                element.find('.fc-title').before($("<span class=\"fc-event-icons\"><img src=" + assignee.avatar_url + " width='18' height='18' title=" + assignee.display_name + "></span>"));
                            });
                        }
                    },
                    resourceRender: function resourceRender(resourceObj, labelTds, bodyTds) {
                        labelTds.find('.fc-icon').html("<span class=\"pm-pro-resource-user-icons\"><img src=" + resourceObj.avatar_url + " width='18' height='18' title=" + resourceObj.title + "></span>");
                    },
                    eventDrop: function eventDrop(event, delta, revertFunc, jsEvent, ui, view) {

                        if (event.type == 'task') {
                            var userIds = [];
                            var resourceId = event.resourceId;
                            var resourceIds = event.resourceIds;

                            var assignees = event.assignees.map(function (user) {
                                return user.id;
                            });

                            if (typeof resourceId !== 'undefined') {
                                userIds = [resourceId];
                            }

                            if (typeof resourceIds !== 'undefined' && resourceIds) {
                                userIds = resourceIds;
                            }

                            var fromIds = _.difference(assignees, userIds);
                            var toIds = _.difference(userIds, assignees);

                            if (toIds.length) {
                                toIds.forEach(function (id, index) {
                                    if (assignees.indexOf(id) === -1) {
                                        assignees.push(id);

                                        var resource = jQuery('#pm-calendar').fullCalendar('getResourceById', id);

                                        if (resource) {
                                            event.assignees.push({
                                                avatar_url: resource.avatar_url,
                                                display_name: resource.title,
                                                id: resource.id
                                            });
                                        }
                                    }
                                });
                            }

                            if (fromIds.length) {
                                fromIds.forEach(function (id, index) {
                                    if (assignees.indexOf(id) !== -1) {
                                        assignees.splice(assignees.indexOf(id), 1);
                                    }

                                    var index = _.findIndex(event.assignees, function (user) {
                                        return user.id == id;
                                    });

                                    event.assignees.splice(index, 1);
                                });
                            }

                            jQuery('#pm-calendar').fullCalendar('updateEvent', event);

                            var args = {
                                data: {
                                    assignees: assignees,
                                    project_id: event.project_id,
                                    title: event.title,
                                    task_id: event.id,
                                    start_at: event.start.format('YYYY-MM-DD'),
                                    due_date: event.end.subtract(1, 'day').format('YYYY-MM-DD')
                                },
                                callback: function callback(res) {
                                    if (res.status && res.status !== 200) {
                                        revertFunc();
                                    }
                                }
                            };

                            this.updateTask(args);
                        }

                        if (event.type === 'milestone') {
                            var args = {
                                data: {
                                    project_id: event.project_id,
                                    title: event.title,
                                    id: event.id,
                                    achieve_date: event.start.format('YYYY-MM-DD')
                                },
                                callback: function callback(res) {
                                    if (res.status && res.status !== 200) {
                                        revertFunc();
                                    }
                                }
                            };

                            this.updateMilestone(args);
                        }
                    },
                    eventResize: function eventResize(event, delta, revertFunc) {
                        if (event.type == 'task') {
                            var assignees = event.assignees.map(function (user) {
                                return user.id;
                            });
                            var args = {
                                data: {
                                    assignees: assignees,
                                    project_id: event.project_id,
                                    title: event.title,
                                    task_id: event.id,
                                    start_at: event.start.format('YYYY-MM-DD'),
                                    due_date: event.end.subtract(1, 'day').format('YYYY-MM-DD')
                                },
                                callback: function callback(res) {
                                    if (res.status && res.status !== 200) {
                                        revertFunc();
                                    }
                                }
                            };

                            this.updateTask(args);
                        }
                    },
                    calendarProjectId: function calendarProjectId() {
                        return this.$route.query.project_id ? parseInt(this.$route.query.project_id) : 0;
                    },
                    getCalendarProjects: function getCalendarProjects(args) {
                        var self = this;
                        var pre_define = {
                            conditions: {}
                        };

                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = self.generateConditions(args.conditions);

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/calendar-projects?' + conditions,
                            data: args.conditions,
                            success: function success(res) {

// self.loading = false;
                                if (typeof args.callback != 'undefined') {
                                    args.callback(res.data);
                                }
                            }
                        };

                        self.httpRequest(request_data);
                    }
                }
            };

            /***/ }),
        /* 29 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = { "default": __webpack_require__(156), __esModule: true };

            /***/ }),
        /* 30 */
        /***/ (function(module, exports, __webpack_require__) {

            var isObject = __webpack_require__(16);
            var document = __webpack_require__(6).document;
// typeof document.createElement is 'object' in old IE
            var is = isObject(document) && isObject(document.createElement);
            module.exports = function (it) {
                return is ? document.createElement(it) : {};
            };


            /***/ }),
        /* 31 */
        /***/ (function(module, exports) {

            module.exports = function (bitmap, value) {
                return {
                    enumerable: !(bitmap & 1),
                    configurable: !(bitmap & 2),
                    writable: !(bitmap & 4),
                    value: value
                };
            };


            /***/ }),
        /* 32 */
        /***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
            module.exports = function (it) {
                if (it == undefined) throw TypeError("Can't call method on  " + it);
                return it;
            };


            /***/ }),
        /* 33 */
        /***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
            var toInteger = __webpack_require__(34);
            var min = Math.min;
            module.exports = function (it) {
                return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
            };


            /***/ }),
        /* 34 */
        /***/ (function(module, exports) {

// 7.1.4 ToInteger
            var ceil = Math.ceil;
            var floor = Math.floor;
            module.exports = function (it) {
                return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
            };


            /***/ }),
        /* 35 */
        /***/ (function(module, exports, __webpack_require__) {

            var shared = __webpack_require__(51)('keys');
            var uid = __webpack_require__(52);
            module.exports = function (key) {
                return shared[key] || (shared[key] = uid(key));
            };


            /***/ }),
        /* 36 */
        /***/ (function(module, exports) {

            module.exports = true;


            /***/ }),
        /* 37 */
        /***/ (function(module, exports) {

            /**
             * Translates the list format produced by css-loader into something
             * easier to manipulate.
             */
            module.exports = function listToStyles (parentId, list) {
                var styles = []
                var newStyles = {}
                for (var i = 0; i < list.length; i++) {
                    var item = list[i]
                    var id = item[0]
                    var css = item[1]
                    var media = item[2]
                    var sourceMap = item[3]
                    var part = {
                        id: parentId + ':' + i,
                        css: css,
                        media: media,
                        sourceMap: sourceMap
                    }
                    if (!newStyles[id]) {
                        styles.push(newStyles[id] = { id: id, parts: [part] })
                    } else {
                        newStyles[id].parts.push(part)
                    }
                }
                return styles
            }


            /***/ }),
        /* 38 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_comment_form_vue__ = __webpack_require__(56);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_82cb3b22_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_comment_form_vue__ = __webpack_require__(175);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(171)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_comment_form_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_82cb3b22_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_comment_form_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/comment-form.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-82cb3b22", Component.options)
                } else {
                    hotAPI.reload("data-v-82cb3b22", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 39 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_text_editor_vue__ = __webpack_require__(57);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3fcc7e9a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_text_editor_vue__ = __webpack_require__(173);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_text_editor_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3fcc7e9a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_text_editor_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/common/text-editor.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-3fcc7e9a", Component.options)
                } else {
                    hotAPI.reload("data-v-3fcc7e9a", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 40 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_file_uploader_vue__ = __webpack_require__(58);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_615029ec_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_file_uploader_vue__ = __webpack_require__(174);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_file_uploader_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_615029ec_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_file_uploader_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/common/file-uploader.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-615029ec", Component.options)
                } else {
                    hotAPI.reload("data-v-615029ec", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 41 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_doc_create_form_vue__ = __webpack_require__(59);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_e07ef61a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_doc_create_form_vue__ = __webpack_require__(176);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_doc_create_form_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_e07ef61a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_doc_create_form_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/doc-create-form.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-e07ef61a", Component.options)
                } else {
                    hotAPI.reload("data-v-e07ef61a", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 42 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            exports.__esModule = true;

            var _from = __webpack_require__(200);

            var _from2 = _interopRequireDefault(_from);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            exports.default = function (arr) {
                if (Array.isArray(arr)) {
                    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                        arr2[i] = arr[i];
                    }

                    return arr2;
                } else {
                    return (0, _from2.default)(arr);
                }
            };

            /***/ }),
        /* 43 */
        /***/ (function(module, exports, __webpack_require__) {

            var def = __webpack_require__(14).f;
            var has = __webpack_require__(23);
            var TAG = __webpack_require__(7)('toStringTag');

            module.exports = function (it, tag, stat) {
                if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
            };


            /***/ }),
        /* 44 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                methods: {
                    duplicateProject: function duplicateProject(args) {
                        var self = this;
                        var pre_define = {
                            data: {},
                            callback: false
                        };

                        var args = jQuery.extend(true, pre_define, args);

                        var data = pm_apply_filters('before_project_duplicate', args.data);

                        var request = {
                            type: 'POST',
                            data: data,
                            url: self.base_url + 'pm-pro/v2/duplicate/project/' + args.data.project_id,
                            success: function success(res) {

                                if (typeof args.callback != 'undefined') {
                                    args.callback(self, res);
                                }
                            }
                        };

                        self.httpRequest(request);
                    },
                    duplicateList: function duplicateList(args) {
                        var self = this;
                        var pre_define = {
                            data: {},
                            callback: false
                        };

                        var args = jQuery.extend(true, pre_define, args);

                        var request = {
                            type: 'GET',
                            url: self.base_url + 'pm-pro/v2/duplicate/list/' + args.data.list,
                            success: function success(res) {
                                self.addMetaList(res.data);
                                self.$store.commit('projectTaskLists/afterNewList', res.data);
                                self.$store.commit('projectTaskLists/afterNewListupdateListsMeta');
                                self.$store.commit('updateProjectMeta', 'total_task_lists');
                                self.$store.commit('updateProjectMeta', 'total_activities');

                                if (typeof args.callback != 'undefined') {
                                    args.callback(self, res);
                                }
                            }
                        };

                        self.httpRequest(request);
                    }
                }
            };

            /***/ }),
        /* 45 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _mixin = __webpack_require__(19);

            var _mixin2 = _interopRequireDefault(_mixin);

            var _update = __webpack_require__(46);

            var _update2 = _interopRequireDefault(_update);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevsPmProRegisterModule('update', 'update');

            PmProMixin.update = _mixin2.default;

            weDevsPMRegisterChildrenRoute('project_root', [{
                path: '/license',
                component: _update2.default,
                name: 'license'
            }]);

            /***/ }),
        /* 46 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_update_vue__ = __webpack_require__(20);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_82b498a4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_update_vue__ = __webpack_require__(47);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_update_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_82b498a4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_update_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/update/update.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-82b498a4", Component.options)
                } else {
                    hotAPI.reload("data-v-82b498a4", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 47 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _vm.loading
                    ? _c("div", [
                        _vm.error
                            ? _c("div", { staticClass: "updated error" }, [
                                _c("p", [_vm._v(_vm._s(_vm.error))])
                            ])
                            : _vm._e(),
                        _vm._v(" "),
                        _c("h2", [_vm._v(_vm._s(_vm.__("License Activation", "pm-pro")))]),
                        _vm._v(" "),
                        !_vm.isActivated
                            ? _c("table", { staticClass: "form-table" }, [
                                _c("tr", [
                                    _c("th", [_vm._v(_vm._s(_vm.__("E-mail Address", "pm-pro")))]),
                                    _vm._v(" "),
                                    _c("td", [
                                        _c("input", {
                                            directives: [
                                                {
                                                    name: "model",
                                                    rawName: "v-model",
                                                    value: _vm.email,
                                                    expression: "email"
                                                }
                                            ],
                                            staticClass: "regular-text",
                                            attrs: { type: "email", name: "email", required: "" },
                                            domProps: { value: _vm.email },
                                            on: {
                                                input: function($event) {
                                                    if ($event.target.composing) {
                                                        return
                                                    }
                                                    _vm.email = $event.target.value
                                                }
                                            }
                                        }),
                                        _vm._v(" "),
                                        _c("p", { staticClass: "description" }, [
                                            _vm._v(
                                                _vm._s(
                                                    _vm.__("Enter your purchase Email address", "pm-pro")
                                                )
                                            )
                                        ])
                                    ])
                                ]),
                                _vm._v(" "),
                                _c("tr", [
                                    _c("th", [_vm._v(_vm._s(_vm.__("License Key", "pm-pro")))]),
                                    _vm._v(" "),
                                    _c("td", [
                                        _c("input", {
                                            directives: [
                                                {
                                                    name: "model",
                                                    rawName: "v-model",
                                                    value: _vm.license,
                                                    expression: "license"
                                                }
                                            ],
                                            staticClass: "regular-text",
                                            attrs: { type: "text", name: "license_key" },
                                            domProps: { value: _vm.license },
                                            on: {
                                                input: function($event) {
                                                    if ($event.target.composing) {
                                                        return
                                                    }
                                                    _vm.license = $event.target.value
                                                }
                                            }
                                        }),
                                        _vm._v(" "),
                                        _c("p", { staticClass: "description" }, [
                                            _vm._v(_vm._s(_vm.__("Enter your license key", "pm-pro")))
                                        ])
                                    ])
                                ]),
                                _vm._v(" "),
                                _c("tr", [
                                    _c("th", [_vm._v(" ")]),
                                    _vm._v(" "),
                                    _c("td", [
                                        _c(
                                            "button",
                                            {
                                                staticClass: "button button-primary",
                                                on: {
                                                    click: function($event) {
                                                        return _vm.activate($event.target)
                                                    }
                                                }
                                            },
                                            [_vm._v(_vm._s(_vm.__("Save & Activate", "pm-pro")))]
                                        )
                                    ])
                                ])
                            ])
                            : _c("div", { staticClass: "weforms-license activated" }, [
                                _c("div", { staticClass: "updated" }, [
                                    _c("p", [_vm._v(_vm._s(_vm.message))])
                                ]),
                                _vm._v(" "),
                                _c(
                                    "button",
                                    {
                                        staticClass: "button",
                                        on: {
                                            click: function($event) {
                                                return _vm.deleteLicense($event.target)
                                            }
                                        }
                                    },
                                    [_vm._v(_vm._s(_vm.__("Deactive License", "pm-pro")))]
                                )
                            ])
                    ])
                    : _vm._e()
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-82b498a4", esExports)
                }
            }

            /***/ }),
        /* 48 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";

// 25.4.1.5 NewPromiseCapability(C)
            var aFunction = __webpack_require__(21);

            function PromiseCapability(C) {
                var resolve, reject;
                this.promise = new C(function ($$resolve, $$reject) {
                    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
                    resolve = $$resolve;
                    reject = $$reject;
                });
                this.resolve = aFunction(resolve);
                this.reject = aFunction(reject);
            }

            module.exports.f = function (C) {
                return new PromiseCapability(C);
            };


            /***/ }),
        /* 49 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                data: function data() {
                    return {
                        frontEndPage: this.getSettings('front_end_page', PM_Pro_Vars.page.project),
                        show_spinner: false,
                        save_change: __('Save Changes', 'pm-pro'),
                        pages: PM_Pro_Vars.pages
                    };
                },


                mounted: function mounted() {
                    pm.NProgress.done();
                },

                methods: {
                    saveEmailSettings: function saveEmailSettings() {
                        this.show_spinner = true;
                        var self = this;
                        var data = {
                            front_end_page: this.frontEndPage
                        };

                        this.saveSettings(data, '', function (res) {
                            self.show_spinner = false;
                        });
                    }
                }
            });

            /***/ }),
        /* 50 */
        /***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
            var cof = __webpack_require__(26);
// eslint-disable-next-line no-prototype-builtins
            module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
                return cof(it) == 'String' ? it.split('') : Object(it);
            };


            /***/ }),
        /* 51 */
        /***/ (function(module, exports, __webpack_require__) {

            var core = __webpack_require__(5);
            var global = __webpack_require__(6);
            var SHARED = '__core-js_shared__';
            var store = global[SHARED] || (global[SHARED] = {});

            (module.exports = function (key, value) {
                return store[key] || (store[key] = value !== undefined ? value : {});
            })('versions', []).push({
                version: core.version,
                mode: __webpack_require__(36) ? 'pure' : 'global',
                copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
            });


            /***/ }),
        /* 52 */
        /***/ (function(module, exports) {

            var id = 0;
            var px = Math.random();
            module.exports = function (key) {
                return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
            };


            /***/ }),
        /* 53 */
        /***/ (function(module, exports) {

// IE 8- don't enum bug keys
            module.exports = (
                'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
            ).split(',');


            /***/ }),
        /* 54 */
        /***/ (function(module, exports) {

            exports.f = {}.propertyIsEnumerable;


            /***/ }),
        /* 55 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__ = __webpack_require__(17);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__ = __webpack_require__(8);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__comment_form_vue__ = __webpack_require__(38);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__doc_create_form_vue__ = __webpack_require__(41);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__doc_content_vue__ = __webpack_require__(60);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__mixin__);



            var _data$mixins$componen;

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






            /* harmony default export */ __webpack_exports__["a"] = (_data$mixins$componen = {
                data: function data() {
                    return {
                        currentDoc: {},
                        editMode: {
                            status: false
                        },
                        loading: true,
                        singelDoc: {
                            status: true
                        }
                    };
                },


                mixins: [__WEBPACK_IMPORTED_MODULE_5__mixin___default.a],

                components: {
                    'comment-form': __WEBPACK_IMPORTED_MODULE_2__comment_form_vue__["a" /* default */],
                    'doc-update-form': __WEBPACK_IMPORTED_MODULE_3__doc_create_form_vue__["a" /* default */],
                    'doc-content': __WEBPACK_IMPORTED_MODULE_4__doc_content_vue__["a" /* default */]
                },

                computed: __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapState('proProjectFiles', ['files', 'file']), {
                    comments: function comments() {
                        var file = this.$store.state.proProjectFiles.file;

                        if (file.hasOwnProperty('comments')) {
                            return file.comments.data;
                        }

                        return [];
                    }
                }),

                created: function created() {
                    this.selfGetFolders();
                }
            }, __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_data$mixins$componen, 'mixins', [__WEBPACK_IMPORTED_MODULE_5__mixin___default.a]), __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_data$mixins$componen, 'methods', __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapMutations('proProjectFiles', ['setFile']), {
                getRevision: function getRevision(revision) {
                    this.$store.commit('proProjectFiles/setRevision', revision);
                },
                selfGetFolders: function selfGetFolders() {
                    var self = this;
                    var data = {
                        conditions: {
                            folder_id: this.$route.params.folder_id,
                            childId: this.$route.params.docId,
                            with: 'comments,revisions'

                        },

                        callback: function callback(res) {
                            if (!jQuery.isEmptyObject(res)) {
                                self.loading = false;
                                self.currentDoc = jQuery.extend(true, {}, res);
                            }
                        }
                    };

                    this.getProFile(data);
                },
                closeModal: function closeModal() {
                    this.$router.push({
                        name: 'pro_file_lists',
                        params: {
                            folder_id: this.$route.params.folder_id
                        }
                    });

                    this.$store.commit('proProjectFiles/showHideRevisionStatus', false);
                },
                deleteSelfComment: function deleteSelfComment(comment_id, commentable_id) {
                    var self = this;
                    var args = {
                        comment_id: comment_id,
                        commentable_id: commentable_id,
                        callback: function callback() {}
                    };

                    self.deleteComment(args);
                }
            })), _data$mixins$componen);

            /***/ }),
        /* 56 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(8);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_text_editor_vue__ = __webpack_require__(39);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_file_uploader_vue__ = __webpack_require__(40);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__mixin__);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    comment: {
                        type: [Object, Array],
                        default: function _default() {
                            return {};
                        }
                    },

                    type: {
                        type: [String],
                        default: function _default() {
                            return 'file';
                        }
                    }

                },

                data: function data() {
                    return {
                        content: {
                            html: typeof this.comment.content == 'undefined' ? '' : this.comment.content
                        },
                        loading: false,
                        notify_users: [],
                        add_comment: __('Add Comment', 'pm-pro'),
                        update_comment: __('Update Comment', 'pm-pro'),
                        files: typeof this.comment.files === 'undefined' ? [] : this.comment.files.data,
                        deleted_files: []
                    };
                },


                mixins: [__WEBPACK_IMPORTED_MODULE_3__mixin___default.a],

                components: {
                    'text-editor': __WEBPACK_IMPORTED_MODULE_1__common_text_editor_vue__["a" /* default */],
                    'file-uploader': __WEBPACK_IMPORTED_MODULE_2__common_file_uploader_vue__["a" /* default */]
                },

                computed: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapState('proProjectFiles', ['file']), {
                    /**
                     * Editor ID
                     *
                     * @return string
                     */
                    editor_id: function editor_id() {

                        var comment_id = typeof this.comment.id === 'undefined' ? '' : '-' + this.comment.id;
                        return 'pm-comment-editor' + comment_id;
                    },

                    comment_id: function comment_id() {
                        return typeof this.comment.id == 'undefined' ? false : true;
                    }
                }),

                watch: {
                    /**
                     * Observe onchange comment message
                     *
                     * @param string new_content
                     *
                     * @type void
                     */
                    content: {
                        handler: function handler(new_content) {
                            this.comment.content = new_content.html;
                        },

                        deep: true
                    }
                },

                methods: {
                    newSelfComment: function newSelfComment() {
                        var self = this;
                        var comment_id = typeof self.comment.id == 'undefined' ? false : true;
                        if (typeof this.comment.content === 'undefined' || this.comment.content == '') {
                            return;
                        }
                        var args = {
                            content: this.comment.content,
                            commentable_id: this.file.id,
                            commentable_type: 'file',
                            deleted_files: this.deleted_files,
                            files: this.files,
                            type: this.type,
                            notify_users: this.notify_users,
                            callback: function callback(res) {
                                self.content.html = '';
                                self.notify_users = [];
                            }
                        };

                        if (comment_id) {
                            args.comment_id = self.comment.id;
                            self.updateComment(args);
                        } else {
                            self.newComment(args);
                        }
                    }
                }
            });

            /***/ }),
        /* 57 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({

                watch: {
                    content: {
                        handler: function handler(html) {
                            if (html.html === '') {
                                tinymce.get(this.editor_id).setContent(html.html);
                                tinymce.get(this.editor_id).save();
                            }
                        },

                        deep: true
                    }
                },

// Get passing data for this component.
                props: ['editor_id', 'content'],

// Initial action for this component
                mounted: function mounted() {
                    var self = this;

// Remove the editor
                    tinymce.execCommand('mceRemoveEditor', false, self.editor_id);

// Instantiate the editor
                    var settings = {
                        selector: 'textarea#' + self.editor_id,
                        menubar: false,
                        placeholder: self.__('Write a comment...', 'pm'),
                        branding: false,

                        setup: function setup(editor) {
                            editor.on('change', function () {
                                self.content.html = editor.getContent();
                            });
                            editor.on('keyup', function (event) {
                                self.content.html = editor.getContent();
                            });
                            editor.on('NodeChange', function () {
                                self.content.html = editor.getContent();
                            });
                        },

                        external_plugins: {
                            'placeholder': PM_Vars.assets_url + 'vendor/tinymce/plugins/placeholder/plugin.min.js'
                        },

                        fontsize_formats: '10px 11px 13px 14px 16px 18px 22px 25px 30px 36px 40px 45px 50px 60px 65px 70px 75px 80px',
                        font_formats: 'Arial=arial,helvetica,sans-serif;' + 'Comic Sans MS=comic sans ms,sans-serif;' + 'Courier New=courier new,courier;' + 'Georgia=georgia,palatino;' + 'Lucida=Lucida Sans Unicode, Lucida Grande, sans-serif;' + 'Tahoma=tahoma,arial,helvetica,sans-serif;' + 'Times New Roman=times new roman,times;' + 'Trebuchet MS=trebuchet ms,geneva;' + 'Verdana=verdana,geneva;',
                        plugins: 'placeholder textcolor colorpicker wplink wordpress',
                        toolbar1: 'shortcodes bold italic strikethrough bullist numlist alignleft aligncenter alignjustify alignright link wp_adv',
                        toolbar2: 'formatselect forecolor backcolor underline blockquote hr code',
                        toolbar3: 'fontselect fontsizeselect removeformat undo redo'
                    };

                    if (self.tinyMCE_settings) {
                        settings = jQuery.extend(settings, self.tinyMCE_settings);
                    }

                    tinymce.init(settings);
                }
            });

            /***/ }),
        /* 58 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                props: ['files', 'delete'],

// Initial action for this component
                created: function created() {
//this.files = typeof files.data ===

                    var self = this;

// Instantiate file upload, After dom ready
                    pm.Vue.nextTick(function () {
                        new PM_Uploader('pm-upload-pickfiles', 'pm-upload-container', self);
                    });
                },

                methods: {
                    /**
                     * Set the uploaded file
                     *
                     * @param  object file_res
                     *
                     * @return void
                     */
                    fileUploaded: function fileUploaded(file_res) {

                        if (typeof this.files == 'undefined') {
                            this.files = [];
                        }

                        this.files.push(file_res.res.file);
                    },

                    /**
                     * Delete file
                     *
                     * @param  object file_id
                     *
                     * @return void
                     */
                    deletefile: function deletefile(file_id) {
                        if (!confirm(this.text.are_you_sure)) {
                            return;
                        }
                        var self = this;
                        var index = self.getIndex(self.files, file_id, 'id');

                        if (index !== false) {
                            self.files.splice(index, 1);
                            this.delete.push(file_id);
                        }
                    }
                }
            });

            /***/ }),
        /* 59 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_text_editor_vue__ = __webpack_require__(39);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_file_uploader_vue__ = __webpack_require__(40);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    doc: {
                        type: [Object],
                        defalut: function defalut() {
                            return {};
                        }
                    },
                    singleDoc: {
                        type: [Object],
                        default: function _default() {
                            return {
                                status: false
                            };
                        }
                    },
                    editMode: {
                        type: [Object],
                        default: function _default() {
                            return {
                                status: false
                            };
                        }
                    }
                },
                mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],

                data: function data() {
                    return {
                        content: {
                            html: typeof this.doc.description == 'undefined' ? '' : this.doc.description
                        },
                        files: typeof this.doc.files === 'undefined' ? [] : this.doc.files.data,
                        deletedFiles: [],
                        doc_title: __('Title', 'pm-pro'),
                        update_doc: __('Update Doc', 'pm-pro'),
                        create_a_doc: __('Create a doc', 'pm-pro'),
                        private: parseInt(this.doc.private)

                    };
                },


                computed: {
                    editor_id: function editor_id() {
                        var doc_id = typeof this.doc.id === 'undefined' ? '' : '-' + this.doc.id;
                        return 'pm-doc-editor' + doc_id;
                    },
                    isUpdate: function isUpdate() {
                        return typeof this.doc.id === 'undefined' ? false : true;
                    }
                },
                components: {
                    'text-editor': __WEBPACK_IMPORTED_MODULE_0__common_text_editor_vue__["a" /* default */],
                    'file-uploader': __WEBPACK_IMPORTED_MODULE_1__common_file_uploader_vue__["a" /* default */]
                },

                watch: {
                    content: {
                        handler: function handler(new_content) {
                            this.doc.description = new_content.html;
                        },
                        deep: true
                    }
                },

                methods: {
                    activeDocEditMode: function activeDocEditMode() {
                        this.doc.editMode = this.doc.editMode ? false : true;
                    },
                    selfCreateDoc: function selfCreateDoc() {
                        var self = this;

                        var isUpdate = this.doc.id ? true : false;

                        var formData = {
                            files: this.files,
                            private: this.private ? 1 : 0,
                            title: this.doc.title,
                            description: typeof this.doc.description === 'undefined' ? '' : this.doc.description,
                            type: 'doc',
                            parent: typeof this.$route.params.folder_id === 'undefined' ? 0 : this.$route.params.folder_id,
                            deleted_files: this.deletedFiles,

                            callback: function callback(res) {
                                if (self.singleDoc.status) {
                                    self.editMode.status = false;
                                }
                            }
                        };

                        if (isUpdate) {
                            var _doc = self.$store.state.proProjectFiles.currentFile;

                            var revision = {
                                'title': _doc.title,
                                'description': _doc.description,
                                'parent': self.doc.id,
                                'files': [],
                                'type': 'revision',
                                'deleted_files': [],
                                'private': this.private
                            };

                            self.createRevision(revision);

                            formData.id = this.doc.id;
                            this.updateDoc(formData);
                        } else {
                            this.createDoc(formData);
                        }
                    },
                    createRevision: function createRevision(args) {
                        var self = this,
                            pre_define = {};

                        var args = jQuery.extend(true, pre_define, args);

// Showing loading option
                        this.show_spinner = true;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files',
                            type: 'POST',
                            data: args,
                            success: function success(res) {

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.show_spinner = false;

// Showing error
                                res.data.error.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                                self.submit_disabled = false;
                            }
                        };
                        self.httpRequest(request_data);
                    },
                    createDoc: function createDoc(args) {
                        var self = this,
                            pre_define = {};

                        var args = jQuery.extend(true, pre_define, args);
                        var data = new FormData();

                        args.files.forEach(function (file) {
                            if (typeof file.attachment_id === 'undefined') {
                                var decode = self.dataURLtoFile(file.thumb, file.name);
                                data.append('files[]', decode);
                            }
                        });

                        data.append('private', args.private);
                        data.append('type', args.type);
                        data.append('parent', args.parent);
                        data.append('title', args.title);
                        data.append('description', args.description);

// Showing loading option
                        this.show_spinner = true;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files',
                            type: 'POST',
                            data: data,
                            cache: false,
                            contentType: false,
                            processData: false,
                            success: function success(res) {
// Display a success toast, with a title
                                if (res.message) {
                                    pm.Toastr.success(res.message);
                                }
                                self.show_spinner = false;

                                if (args.id) {
                                    self.createAfterDoc(res.data);
                                } else {
                                    self.createAfterDoc(res.data);
                                    self.showHideDoc(false);
                                }

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.show_spinner = false;

// Showing error
                                res.data.error.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                                self.submit_disabled = false;
                            }
                        };
                        self.httpRequest(request_data);
                    },
                    updateDoc: function updateDoc(args) {
// Exit from this function, If submit button disabled
                        if (this.submit_disabled) {
                            return;
                        }

                        var self = this;
                        var pre_define = {};
                        var args = jQuery.extend(true, pre_define, args);
                        var data = new FormData();

// Disable submit button for preventing multiple click
                        this.submit_disabled = true;

                        data.append('private', args.private);
                        data.append('type', args.type);
                        data.append('parent', args.parent);
                        data.append('title', args.title);
                        data.append('description', args.description);

                        args.deleted_files.map(function (del_file) {
                            data.append('files_to_delete[]', del_file);
                        });

                        args.files.map(function (file) {
                            if (typeof file.attachment_id === 'undefined') {
                                var decode = self.dataURLtoFile(file.thumb, file.name);
                                data.append('files[]', decode);
                            }
                        });

// Showing loading option
                        this.show_spinner = true;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files/' + args.id + '/?with=comments,revisions',
                            type: 'POST',
                            data: data,
                            cache: false,
                            contentType: false,
                            processData: false,
                            success: function success(res) {
                                self.show_spinner = false;

// Display a success toast, with a title
                                if (res.message) {
                                    pm.Toastr.success(res.message);
                                }
                                self.addFileMeta(res.data);
                                self.submit_disabled = false;

                                self.setFile(res.data);

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.show_spinner = false;

// Showing error
                                res.data.error.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                                self.submit_disabled = false;
                            }
                        };
                        self.httpRequest(request_data);
                    },
                    showHideSingleDoc: function showHideSingleDoc() {
                        this.editMode.status = false;
                    }
                }
            });

            /***/ }),
        /* 60 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_doc_content_vue__ = __webpack_require__(61);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_24fe6f77_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_doc_content_vue__ = __webpack_require__(177);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_doc_content_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_24fe6f77_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_doc_content_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/doc-content.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-24fe6f77", Component.options)
                } else {
                    hotAPI.reload("data-v-24fe6f77", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 61 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                props: ['doc', 'currentDoc', 'editMode'],

                computed: {
                    revision: function revision() {
                        return this.$store.state.proProjectFiles.revisionStatus;
                    }
                },
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                methods: {
                    activeDocEditMode: function activeDocEditMode() {
                        this.editMode.status = this.editMode.status ? false : true;
                        this.doc.editMode = this.doc.editMode ? false : true;
                    },
                    viewCurrentDoc: function viewCurrentDoc() {

                        this.$store.commit('proProjectFiles/resetRevision');
                    }
                }
            });

            /***/ }),
        /* 62 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__ = __webpack_require__(17);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__ = __webpack_require__(8);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__comment_form_vue__ = __webpack_require__(38);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__link_create_form_vue__ = __webpack_require__(63);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__link_content_vue__ = __webpack_require__(183);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__mixin__);



            var _data$mixins$componen;

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






            /* harmony default export */ __webpack_exports__["a"] = (_data$mixins$componen = {
                data: function data() {
                    return {
                        currentLink: {},

                        loading: true,
                        singleLink: {
                            status: true
                        },
                        editMode: {
                            status: false
                        }

                    };
                },


                mixins: [__WEBPACK_IMPORTED_MODULE_5__mixin___default.a],

                components: {
                    'comment-form': __WEBPACK_IMPORTED_MODULE_2__comment_form_vue__["a" /* default */],
                    'link-update-form': __WEBPACK_IMPORTED_MODULE_3__link_create_form_vue__["a" /* default */],
                    'link-content': __WEBPACK_IMPORTED_MODULE_4__link_content_vue__["a" /* default */]
                },

                computed: __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapState('proProjectFiles', ['files', 'file']), {
                    comments: function comments() {
                        var file = this.$store.state.proProjectFiles.file;

                        if (file.hasOwnProperty('comments')) {
                            return file.comments.data;
                        }

                        return [];
                    }
                }),

                created: function created() {
                    this.selfGetFolders();
                }
            }, __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_data$mixins$componen, 'mixins', [__WEBPACK_IMPORTED_MODULE_5__mixin___default.a]), __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_data$mixins$componen, 'methods', __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapMutations('proProjectFiles', ['setFile']), {
                getRevision: function getRevision(revision) {
                    this.$store.commit('proProjectFiles/setRevision', revision);
                },
                selfGetFolders: function selfGetFolders() {
                    var self = this;
                    var data = {
                        conditions: {
                            folder_id: this.$route.params.folder_id,
                            childId: this.$route.params.linkId,
                            with: 'comments,revisions'

                        },

                        callback: function callback(res) {
                            if (!jQuery.isEmptyObject(res)) {
                                self.loading = false;
                                self.currentLink = jQuery.extend(true, {}, res);
                            }
                        }
                    };

                    this.getProFile(data);
                },
                closeModal: function closeModal() {
                    this.$router.push({
                        name: 'pro_file_lists',
                        params: {
                            folder_id: this.$route.params.folder_id
                        }
                    });

                    this.$store.commit('proProjectFiles/showHideRevisionStatus', false);
                },
                deleteSelfComment: function deleteSelfComment(comment_id, commentable_id) {
                    var self = this;
                    var args = {
                        comment_id: comment_id,
                        commentable_id: commentable_id,
                        callback: function callback() {}
                    };

                    self.deleteComment(args);
                }
            })), _data$mixins$componen);

            /***/ }),
        /* 63 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_link_create_form_vue__ = __webpack_require__(64);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_fa74dbc2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_link_create_form_vue__ = __webpack_require__(182);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_link_create_form_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_fa74dbc2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_link_create_form_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/link-create-form.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-fa74dbc2", Component.options)
                } else {
                    hotAPI.reload("data-v-fa74dbc2", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 64 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_text_editor_vue__ = __webpack_require__(39);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_file_uploader_vue__ = __webpack_require__(40);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    link: {
                        type: [Object],
                        defalut: function defalut() {
                            return {};
                        }
                    },
                    singleLink: {
                        type: [Object],
                        default: function _default() {
                            return {
                                status: false
                            };
                        }
                    },
                    editMode: {
                        type: [Object],
                        default: function _default() {
                            return {
                                status: false
                            };
                        }
                    }
                },
                mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],

                data: function data() {
                    return {
                        content: {
                            html: typeof this.link.description == 'undefined' ? '' : this.link.description
                        },
                        files: typeof this.link.files === 'undefined' ? [] : this.link.files.data,
                        deletedFiles: [],
                        link_title: __('Title', 'pm-pro'),
                        link_for_doc: __('Link for docs', 'pm-pro'),
                        link_to_doc: __('Link to Docs', 'pm-pro'),
                        update_link: __('Update Link', 'pm-pro'),
                        private: parseInt(this.link.private)
                    };
                },


                computed: {
                    editor_id: function editor_id() {
                        var link_id = typeof this.link.id === 'undefined' ? '' : '-' + this.link.id;
                        return 'pm-link-editor' + link_id;
                    },
                    isUpdate: function isUpdate() {
                        return typeof this.link.id === 'undefined' ? false : true;
                    }
                },
                components: {
                    'text-editor': __WEBPACK_IMPORTED_MODULE_0__common_text_editor_vue__["a" /* default */],
                    'file-uploader': __WEBPACK_IMPORTED_MODULE_1__common_file_uploader_vue__["a" /* default */]
                },

                watch: {
                    content: {
                        handler: function handler(new_content) {
                            this.link.description = new_content.html;
                        },
                        deep: true
                    }
                },

                methods: {
                    activeLinkEditMode: function activeLinkEditMode() {
                        this.link.editMode = this.link.editMode ? false : true;
                    },
                    selfCreateLink: function selfCreateLink() {
                        var self = this;

                        var isUpdate = this.link.id ? true : false;

                        var formData = {
                            url: this.link.url,
                            files: [],
                            private: this.private ? 1 : 0,
                            title: this.link.title,
                            description: typeof this.link.description === 'undefined' ? '' : this.link.description,
                            type: 'link',
                            parent: typeof this.$route.params.folder_id === 'undefined' ? 0 : this.$route.params.folder_id,
                            deleted_files: this.deletedFiles,

                            callback: function callback(res) {}
                        };

                        if (isUpdate) {
                            var _link = self.$store.state.proProjectFiles.currentFile;
                            self.activeLinkEditMode();
                            var revision = {
                                'title': _link.title,
                                'url': _link.url,
                                'description': _link.description,
                                'parent': self.link.id,
                                'files': [],
                                'type': 'revision',
                                'deleted_files': [],
                                'private': this.private
                            };

                            self.createRevision(revision);

                            formData.id = this.link.id;
                            this.updateLink(formData);
                        } else {
                            this.createLink(formData);
                        }
                    },
                    createRevision: function createRevision(args) {
                        var self = this,
                            pre_define = {};

                        var args = jQuery.extend(true, pre_define, args);

// Showing loading option
                        this.show_spinner = true;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files',
                            type: 'POST',
                            data: args,
                            success: function success(res) {

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.show_spinner = false;

// Showing error
                                res.data.error.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                                self.submit_disabled = false;
                            }
                        };
                        self.httpRequest(request_data);
                    },
                    createLink: function createLink(args) {
                        var self = this,
                            pre_define = {};

                        var args = jQuery.extend(true, pre_define, args);
                        var data = new FormData();

                        args.files.forEach(function (file) {
                            if (typeof file.attachment_id === 'undefined') {
                                var decode = self.dataURLtoFile(file.thumb, file.name);
                                data.append('files[]', decode);
                            }
                        });

                        data.append('url', args.url);
                        data.append('private', args.private);
                        data.append('type', args.type);
                        data.append('parent', args.parent);
                        data.append('title', args.title);
                        data.append('description', args.description);

// Showing loading option
                        this.show_spinner = true;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files',
                            type: 'POST',
                            data: data,
                            cache: false,
                            contentType: false,
                            processData: false,
                            success: function success(res) {
// Display a success toast, with a title
                                if (res.message) {
                                    pm.Toastr.success(res.message);
                                }
                                self.show_spinner = false;

                                if (args.id) {
                                    self.createAfterLink(res.data);
                                } else {
                                    self.createAfterLink(res.data);
                                    self.showHideLink(false);
                                }

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.show_spinner = false;

// Showing error
                                res.data.error.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                                self.submit_disabled = false;
                            }
                        };
                        self.httpRequest(request_data);
                    },
                    updateLink: function updateLink(args) {
// Exit from this function, If submit button disabled
                        if (this.submit_disabled) {
                            return;
                        }

                        var self = this;
                        var pre_define = {};
                        var args = jQuery.extend(true, pre_define, args);
                        var data = new FormData();

// Disable submit button for preventing multiple click
                        this.submit_disabled = true;

                        data.append('url', args.url);
                        data.append('private', args.private);
                        data.append('type', args.type);
                        data.append('parent', args.parent);
                        data.append('title', args.title);
                        data.append('description', args.description);

                        args.deleted_files.map(function (del_file) {
                            data.append('files_to_delete[]', del_file);
                        });

                        args.files.map(function (file) {
                            if (typeof file.attachment_id === 'undefined') {
                                var decode = self.dataURLtoFile(file.thumb, file.name);
                                data.append('files[]', decode);
                            }
                        });

// Showing loading option
                        this.show_spinner = true;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files/' + args.id + '/?with=comments,revisions',
                            type: 'POST',
                            data: data,
                            cache: false,
                            contentType: false,
                            processData: false,
                            success: function success(res) {
                                self.show_spinner = false;

// Display a success toast, with a title
                                if (res.message) {
                                    pm.Toastr.success(res.message);
                                }
                                self.addFileMeta(res.data);
                                self.submit_disabled = false;

                                self.setFile(res.data);

                                if (self.singleLink.status) {
                                    self.editMode.status = false;
                                }

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.show_spinner = false;

// Showing error
                                res.data.error.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                                self.submit_disabled = false;
                            }
                        };
                        self.httpRequest(request_data);
                    },
                    showHideSingleLink: function showHideSingleLink() {
                        this.editMode.status = false;
                    }
                }
            });

            /***/ }),
        /* 65 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                props: ['link', 'editMode'],

                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                created: function created() {
//console.log(this.link);
                },


                computed: {
                    revision: function revision() {
                        return this.$store.state.proProjectFiles.revisionStatus;
                    }
                },

                methods: {
                    activeLinkEditMode: function activeLinkEditMode() {
                        this.editMode.status = this.editMode.status ? false : true;
                        this.link.editMode = this.link.editMode ? false : true;
                    },
                    viewCurrentLink: function viewCurrentLink() {

                        this.$store.commit('proProjectFiles/resetRevision');
                    }
                }
            });

            /***/ }),
        /* 66 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__ = __webpack_require__(17);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__ = __webpack_require__(8);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__comment_form_vue__ = __webpack_require__(38);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__doc_create_form_vue__ = __webpack_require__(41);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__doc_content_vue__ = __webpack_require__(60);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__mixin__);



            var _data$mixins$componen;

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






            /* harmony default export */ __webpack_exports__["a"] = (_data$mixins$componen = {
                data: function data() {
                    return {
                        currentDoc: {},
                        editMode: {
                            status: false
                        },
                        loading: true,
                        singelDoc: {
                            status: true
                        }

                    };
                },


                mixins: [__WEBPACK_IMPORTED_MODULE_5__mixin___default.a],

                components: {
                    'comment-form': __WEBPACK_IMPORTED_MODULE_2__comment_form_vue__["a" /* default */],
                    'doc-update-form': __WEBPACK_IMPORTED_MODULE_3__doc_create_form_vue__["a" /* default */],
                    'doc-content': __WEBPACK_IMPORTED_MODULE_4__doc_content_vue__["a" /* default */]
                },

                computed: __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapState('proProjectFiles', ['files', 'file']), {
                    isVideo: function isVideo() {
                        return this.file.mime_type.split("/").indexOf('video') !== -1;
                    },
                    comments: function comments() {
                        var file = this.$store.state.proProjectFiles.file;

                        if (file.hasOwnProperty('comments')) {
                            return file.comments.data;
                        }

                        return [];
                    }
                }),

                created: function created() {
                    this.selfGetFolders();
                }
            }, __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_data$mixins$componen, 'mixins', [__WEBPACK_IMPORTED_MODULE_5__mixin___default.a]), __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_data$mixins$componen, 'methods', __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapMutations('proProjectFiles', ['setFile']), {
                getRevision: function getRevision(revision) {
                    this.$store.commit('proProjectFiles/setRevision', revision);
                },
                selfGetFolders: function selfGetFolders() {
                    var self = this;
                    var data = {
                        conditions: {
                            folder_id: this.$route.params.folder_id,
                            childId: this.$route.params.fileId,
                            with: 'comments,revisions'

                        },

                        callback: function callback(res) {
                            if (!jQuery.isEmptyObject(res)) {
                                self.loading = false;
                                self.currentDoc = jQuery.extend(true, {}, res);
                            }
                        }
                    };

                    this.getProFile(data);
                },
                closeModal: function closeModal() {
                    this.$router.push({
                        name: 'pro_file_lists',
                        params: {
                            folder_id: this.$route.params.folder_id
                        }
                    });

                    this.$store.commit('proProjectFiles/showHideRevisionStatus', false);
                },
                deleteSelfComment: function deleteSelfComment(comment_id, commentable_id) {
                    var self = this;
                    var args = {
                        comment_id: comment_id,
                        commentable_id: commentable_id,
                        callback: function callback() {}
                    };

                    self.deleteComment(args);
                }
            })), _data$mixins$componen);

            /***/ }),
        /* 67 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                methods: {
                    getModuleLists: function getModuleLists(args) {
                        var self = this;
                        var pre_define = {};

                        var args = jQuery.extend(true, pre_define, args);

                        var request = {
                            data: {},
                            url: self.base_url + 'pm-pro/v2/module-lists',
                            success: function success(res) {
                                self.$store.commit('modulesLists/setModuleLists', res);

                                if (typeof args.callback != 'undefined') {
                                    args.callback(self, res.data);
                                }
                            }
                        };

                        self.httpRequest(request);
                    },
                    toggleModule: function toggleModule(args) {
                        var self = this;
                        var pre_define = {};

                        var args = jQuery.extend(true, pre_define, args);

                        var request = {
                            data: args.data,
                            type: 'POST',
                            url: self.base_url + 'pm-pro/v2/module-update',
                            success: function success(res) {

                                if (args.data.type === 'deactivate') {
                                    self.$store.commit('modulesLists/afterDeactiveModules', res);
                                } else {
                                    self.$store.commit('modulesLists/afterActiveModules', res);
                                }

                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                            }
                        };

                        self.httpRequest(request);
                    }
                }
            };

            /***/ }),
        /* 68 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(67);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




            /* harmony default export */ __webpack_exports__["a"] = ({
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],

                beforeRouteEnter: function beforeRouteEnter(to, from, next) {
                    if (pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                        next(function (vm) {
                            vm.getModuleQuery();
                        });
                    } else {
                        next('/');
                    }
                },


                computed: {
                    modules: function modules() {
                        return this.$store.state.modulesLists.module_lists;
                    }
                },

                methods: {
                    getModuleQuery: function getModuleQuery() {
                        var self = this;

                        var args = {
                            callback: function callback() {
                                pm.NProgress.done();
                            }
                        };

                        self.getModuleLists(args);
                    },
                    selfToggleModule: function selfToggleModule(path, module_name, module_lists) {
                        var self = this,
                            id = self.generateId(module_name),
                            active_modules = this.$store.state.modulesLists.activeModules;

                        var index = this.getIndex(active_modules, path, 'path');

                        var args = {
                            data: {
                                module: path,
                                type: index === false ? 'activate' : 'deactivate'
                            },
                            callback: function callback(res) {
                                location.reload();

// if ( index === false ) {
// 	jQuery.getScript( PM_Pro_Vars.dir_url+'/modules/'+res.slug+'/views/assets/js/'+res.slug+'.js' )
// 		.done(function( script, textStatus ) {

// 	  	})
// 	  	.fail(function( jqxhr, settings, exception ) {

// 	});
// }

                                self.loadingStop(id);
                            }
                        };

                        self.loadingStart(id);
                        self.toggleModule(args);
                    },
                    checkedClass: function checkedClass(path, module) {
                        if (this.isModuleActive(path, module)) {
                            return 'checked';
                        }

                        return '';
                    },
                    isModuleActive: function isModuleActive(path, module) {
                        var active_modules = this.$store.state.modulesLists.activeModules;
                        var index = this.getIndex(active_modules, path, 'path');

                        if (index === false) {
                            return false;
                        }

                        return true;
                    },
                    generateId: function generateId(name) {
                        var id = name.replace(/\s/g, ''),
                            id = id.toLowerCase();

                        return id;
                    }
                }
            });

            /***/ }),
        /* 69 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(8);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty__ = __webpack_require__(17);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(28);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_calendar_user_resource_vue__ = __webpack_require__(199);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_calendar_select_projects_vue__ = __webpack_require__(211);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_calendar_task_create_form_vue__ = __webpack_require__(215);


//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


//import pmCalendar from '@components/common/pm-calendar.vue';




            /* harmony default export */ __webpack_exports__["a"] = ({
                mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],
                data: function data() {
                    var _ref;

                    return _ref = {
                        hasResource: true,
                        individualTaskId: false,
                        individualProjectId: false,
                        test: [],
                        calendarView: {
                            status: true
                        },
                        isTaskFormActive: {
                            status: false
                        },
                        isProjctsLoaded: {
                            status: false
                        },
                        locale: PM_Pro_Vars.locale,
                        events: [],
                        loading: false,
                        projectId: false,
                        calendar: '',
                        calendarProject: parseInt(this.$route.params.project_id),
                        day: []
                    }, __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty___default()(_ref, 'events', []), __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty___default()(_ref, 'eventStartDate', ''), __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty___default()(_ref, 'eventEndDate', ''), __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty___default()(_ref, 'resoruceStartDate', ''), __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty___default()(_ref, 'resoruceEndDate', ''), __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty___default()(_ref, 'eventMilestons', []), __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty___default()(_ref, 'calendarEvents', []), __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty___default()(_ref, 'eventResource', []), __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty___default()(_ref, 'resourceConfig', {
                        resource: true,
                        now: pm.Moment(new Date()).format('YYYY-MM-DD'),
                        editable: true, // enable draggable events
                        aspectRatio: 1.8,
                        scrollTime: '00:00', // undo default 6am scrollTime
                        header: {
                            left: 'today prev,next',
                            center: 'title',
                            right: 'userView,month,basicWeek,timelineDay' //'timelineDay,timelineThreeDays,agendaWeek,month',
                        },

                        buttonText: {
                            userView: __('User view', 'wedevs-project-manager')
                        },

                        defaultView: 'month',
                        views: {
                            userView: {
                                type: 'timeline',
                                duration: { days: 7 },
                                slotDuration: '24:00:00'
                            }
                        },
                        resourceLabelText: __('Users', 'wedevs-project-manager'),
                        refetchResourcesOnNavigate: true,
                        schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source'
                    }), __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_defineProperty___default()(_ref, 'selectedProject', ""), _ref;
                },
                created: function created() {
                    pmBus.$on('pm_after_close_single_task_modal', this.afterCloseSingleTaskModal);
                    pmBus.$on('pm_generate_task_url', this.generateTaskUrl);
//for label, you should remove this next time
                    this.setCalendarViewFlag();
                },

                watch: {
                    '$route': function $route(route) {
                        if (route.name !== 'calendar_single_task') {
                            this.$emit('refetch-resources');
                            this.$emit('refetch-events');
                        }
                    },
                    calendarProject: function calendarProject(val) {
// this.$router.push({
//     name:'project_calendar',
//     params: {
                        //         project_id : val
                        //     }
// });


                    }
                },

                components: {
                    'single-task': pm.SingleTask,
                    'task-create-form': __WEBPACK_IMPORTED_MODULE_5__components_calendar_task_create_form_vue__["a" /* default */],
                    'user-resource': __WEBPACK_IMPORTED_MODULE_3__components_calendar_user_resource_vue__["a" /* default */],
                    selectProjects: __WEBPACK_IMPORTED_MODULE_4__components_calendar_select_projects_vue__["a" /* default */]
                },

                computed: {
                    getProjectId: function getProjectId() {
                        return this.calendarProject;

                        if (typeof this.$route.params.project_id == 'undefined') {
                            return this.$root.$store.state.projects[0].id;
                        }

                        return this.$route.params.project_id;
                    },
                    projects: function projects() {
                        var projects = this.$store.state.projects.slice();

                        if (!projects) {
                            return [];
                        }

                        return projects.sort(function (a, b) {
                            var atitle = a.title.toLowerCase();
                            var btitle = b.title.toLowerCase();

                            return atitle < btitle ? -1 : atitle > btitle ? 1 : 0;
                        });
                    }
                },
                methods: {
                    onChangeProject: function onChangeProject(project) {
                        this.selectedProject = project;
                    },
                    afterGetRespose: function afterGetRespose(res) {
                        if (typeof this.$route !== 'undefined' && typeof this.$route.query.project_id !== 'undefined' && this.$route.query.project_id !== '0') {
                            var project_id = this.$route.query.project_id;
                            var index = this.getIndex(res.projects, parseInt(project_id), 'id');

                            if (index !== false) {
                                this.selectedProject = res.projects[index];
                            }
                        } else {
                            this.selectedProject = res.projects.length ? res.projects[0] : '';
                        }
                    },
                    setCalendarViewFlag: function setCalendarViewFlag() {
                        this.$store.commit('calendar/setCalendarViewFlag');
                    },
                    clickEvent: function clickEvent() {
                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                            args[_key] = arguments[_key];
                        }

//individualProjectId individualTaskId
                        var args = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, args);

                        if (args[0].type == 'task') {
                            args[1].preventDefault();
                            this.individualProjectId = parseInt(args[0].project_id);
                            this.individualTaskId = parseInt(args[0].id);
                        }
                    },
                    resources: function resources(_callback, start, end) {
                        var users = [],
                            self = this,
                            project_id = this.calendarProjectId(),
                            start = pm.Moment(start._d).format('YYYY-MM-DD'),
                            end = pm.Moment(end._d).format('YYYY-MM-DD');

                        var args = {
                            data: {
                                start: start,
                                end: end,
                                project_id: self.$route.query.project_id ? parseInt(self.$route.query.project_id) : 0,
                                users: self.$route.query.users ? self.$route.query.users : ''
                            },
                            callback: function callback(res) {
                                var users = res.data.map(function (user) {
                                    return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, user, {
                                        id: parseInt(user.id)
                                    });
                                });

                                pm.NProgress.done();
                                self.eventResource = users; //console.log(res.data);
                                _callback(res.data);
                            }
                        };

                        self.getResource(args);
                    },
                    getResource: function getResource(args) {
                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            };
                        var args = jQuery.extend(true, pre_define, args);

                        var request = {
                            url: self.base_url + 'pm-pro/v2/calendar-resource',
                            type: 'GET',
                            data: args.data,
                            success: function success(res) {
                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            }
                        };

                        self.httpRequest(request);
                    },
                    userResourceEvents: function userResourceEvents(start, end, timezone, callback) {
                        var self = this;

                        var resourceEvents = [];
                        var start = new Date(start._d);
                        start = pm.Moment(start).format('YYYY-MM-DD');
                        var end = new Date(end._d);
                        end = pm.Moment(end).format('YYYY-MM-DD');

                        this.selfGetEvents(start, end, timezone, callback, function (events) {
                            self.eventMilestons = [];
                            self.calendarEvents = [];

                            events.forEach(function (event, index) {
//event.start = new Date(moment(start).format('YYYY-MM-DD'));
//event.end = new Date(moment(end).format('YYYY-MM-DD'));

                                if (typeof event.assignees !== 'undefined') {
                                    var ids = [];
                                    event.assignees.forEach(function (user, userIndex) {
                                        ids.push(parseInt(user.id));
                                    });

                                    var custEvt = jQuery.extend({}, event);
                                    custEvt['resourceIds'] = ids.length ? ids : false;
                                    resourceEvents.push(custEvt);

                                    self.calendarEvents.push(custEvt);
                                }

                                if (event.type === 'milestone') {
                                    var _custEvt = jQuery.extend({}, event);
                                    resourceEvents.push(_custEvt);

                                    self.eventMilestons.push(_custEvt);
                                }
                            });
                            pm.NProgress.done();
                            callback(resourceEvents);
                        });
                    },
                    selfGetEvents: function selfGetEvents(start, end, timezone, callback, selfCallback) {
                        var self = this;
                        var project_id = false;

                        if (self.$route.query.project_id) {
                            project_id = parseInt(self.$route.query.project_id);
                        } else if (parseInt(self.$store.state.calendar.calendarProject.id)) {
                            project_id = parseInt(self.$store.state.calendar.calendarProject.id);
                        }

                        var args = {
                            data: {
                                start: start,
                                end: end,
                                project_id: project_id ? project_id : 0,
                                users: self.$route.query.users ? self.$route.query.users : [PM_Vars.current_user.ID]
                            },
                            callback: function callback(res) {
                                var events = [];

                                res.map(function (event) {
                                    events.push(self.eventFromateData(event));
                                });

                                self.events = events;

                                if (typeof selfCallback !== 'undefined') {
                                    selfCallback(events);
                                }
                            }
                        };

                        self.getEvents(args);
                    },
                    changeView: function changeView() {
                        var self = this;
                        self.calendarView.status = self.calendarView.status ? false : true;
                    },
                    afterClickDay: function afterClickDay() {
                        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                            args[_key2] = arguments[_key2];
                        }

                        this.day = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, args);

                        this.isTaskFormActive.status = true;
                    },
                    filterCalendar: function filterCalendar(project_id) {
                        this.$router.push({
                            name: 'project_calendar',
                            params: {
                                project_id: project_id
                            }
                        });
                    },
                    generateTaskUrl: function generateTaskUrl(task) {
                        var url = this.$router.resolve({
                            name: 'calendar_single_task',
                            params: {
                                task_id: task.id,
                                project_id: task.project_id,
                                list_id: task.task_list.data.id
                            }
                        }).href;
                        var url = PM_Vars.project_page + url;

//var url = PM_Vars.project_page + '#/projects/' + task.project_id + '/task-lists/' +task.task_list.data.id+ '/tasks/' + task.id;
                        this.copy(url);
                    },
                    afterCloseSingleTaskModal: function afterCloseSingleTaskModal() {

                        this.individualTaskId = false;
                        this.individualProjectId = false;

                        if (this.$route.name === 'calendar_single_task') {
                            this.$router.push({
                                name: 'calendar',
                                query: this.$route.query
                            });
                        }
                    },
                    isProjectLoad: function isProjectLoad(loaded) {
                        this.isProjctsLoaded = loaded;
                    }
                },

                destroyed: function destroyed() {
                    this.$store.commit('calendar/removeCalendarViewFlag');
                }
            });

            /***/ }),
        /* 70 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(42);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__);

//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                name: 'pm-resource-calendar',
                props: {
// events: {
//     default() {
//         return []
//     },
// },
                    eventSources: {
                        default: function _default() {
                            return [];
                        }
                    },
                    editable: {
                        default: function _default() {
                            return true;
                        }
                    },
                    locale: {
                        default: function _default() {
                            return 'en';
                        }
                    },
                    selectable: {
                        default: function _default() {
                            return true;
                        }
                    },
                    selectHelper: {
                        default: function _default() {
                            return true;
                        }
                    },
                    header: {
                        default: function _default() {
                            return {
                                left: 'prev,next today',
                                center: 'title',
                                right: 'month,agendaWeek,agendaDay'
                            };
                        }
                    },
                    defaultView: {
                        default: function _default() {
                            return 'month';
                        }
                    },
                    sync: {
                        default: function _default() {
                            return false;
                        }
                    },
                    config: {
                        type: Object,
                        default: function _default() {
                            return {

                                schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source'
                            };
                        }
                    }
                },
                computed: {
                    defaultConfig: function defaultConfig() {
                        var self = this;

                        return {
                            header: this.header,
                            defaultView: this.defaultView,
                            editable: this.editable,
                            locale: this.locale,
                            selectable: this.selectable,
                            selectHelper: this.selectHelper,
                            aspectRatio: 2,
                            timeFormat: 'HH:mm',
                            eventSources: this.eventSources,
                            resources: function resources(callback) {
                                self.$emit('resources', callback);
                            },

                            resourceRender: function resourceRender() {
                                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                                    args[_key] = arguments[_key];
                                }

                                self.$emit.apply(self, ['resource-event-render'].concat(args));
                            },
                            events: function events() {
                                for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                                    args[_key2] = arguments[_key2];
                                }

                                self.$emit.apply(self, ['events'].concat(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(args)));
                            },
                            eventRender: function eventRender() {
                                if (this.sync) {
                                    self.events = cal.fullCalendar('clientEvents');
                                }

                                for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
                                    args[_key3] = arguments[_key3];
                                }

                                self.$emit.apply(self, ['event-render'].concat(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(args)));
                            },
                            eventDestroy: function eventDestroy(event) {
                                if (this.sync) {
                                    self.events = cal.fullCalendar('clientEvents');
                                }
                            },
                            eventClick: function eventClick() {
                                for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
                                    args[_key4] = arguments[_key4];
                                }

                                self.$emit.apply(self, ['event-selected'].concat(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(args)));
                            },
                            eventDrop: function eventDrop() {
                                for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
                                    args[_key5] = arguments[_key5];
                                }

                                self.$emit.apply(self, ['event-drop'].concat(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(args)));
                            },
                            eventReceive: function eventReceive() {
                                for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
                                    args[_key6] = arguments[_key6];
                                }

                                self.$emit.apply(self, ['event-receive'].concat(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(args)));
                            },
                            eventResize: function eventResize() {
                                for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
                                    args[_key7] = arguments[_key7];
                                }

                                self.$emit.apply(self, ['event-resize'].concat(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(args)));
                            },
                            dayClick: function dayClick() {
                                for (var _len8 = arguments.length, args = Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
                                    args[_key8] = arguments[_key8];
                                }

                                self.$emit.apply(self, ['day-click'].concat(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(args)));
                            },
                            select: function select(start, end, jsEvent, view, resource) {
                                self.$emit('event-created', {
                                    start: start,
                                    end: end,
                                    allDay: !start.hasTime() && !end.hasTime(),
                                    view: view,
                                    resource: resource
                                });
                            }
                        };
                    }
                },

                created: function created() {},
                mounted: function mounted() {
                    var _this = this;

                    var cal = jQuery(this.$el),
                        self = this;
                    this.$parent.$on('remove-event', function (event) {
                        if (event && event.hasOwnProperty('id')) {
                            jQuery(_this.$el).fullCalendar('removeEvents', event.id);
                        } else {
                            jQuery(_this.$el).fullCalendar('removeEvents', event);
                        }
                    });
                    this.$parent.$on('rerender-events', function () {
                        jQuery(_this.$el).fullCalendar('rerenderEvents');
                    });
                    this.$parent.$on('refetch-events', function () {
                        jQuery(_this.$el).fullCalendar('refetchEvents');
                    });
                    this.$parent.$on('render-event', function (event) {
                        jQuery(_this.$el).fullCalendar('renderEvent', event);
                    });
                    this.$parent.$on('reload-events', function () {
                        jQuery(_this.$el).fullCalendar('removeEvents');
                        jQuery(_this.$el).fullCalendar('addEventSource', _this.events);
                    });
                    this.$parent.$on('rebuild-sources', function () {
                        jQuery(_this.$el).fullCalendar('removeEventSources');
                        _this.eventSources.map(function (event) {
                            jQuery(_this.$el).fullCalendar('addEventSource', event);
                        });
                    });
                    this.$parent.$on('resources', function (event) {
                        jQuery(_this.$el).fullCalendar('addResource', _this.resources);
                    });

                    cal.fullCalendar(jQuery.extend(true, this.defaultConfig, this.config));
                },

                methods: {
                    fireMethod: function fireMethod() {
                        var _jQuery;

                        return (_jQuery = jQuery(this.$el)).fullCalendar.apply(_jQuery, arguments);
                    }
                },

                beforeDestroy: function beforeDestroy() {
                    this.$off('remove-event');
                    this.$off('rerender-events');
                    this.$off('refetch-events');
                    this.$off('render-event');
                    this.$off('reload-events');
                    this.$off('rebuild-sources');
                }
            });

            /***/ }),
        /* 71 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";

            var $at = __webpack_require__(202)(true);

// 21.1.3.27 String.prototype[@@iterator]()
            __webpack_require__(72)(String, 'String', function (iterated) {
                this._t = String(iterated); // target
                this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
            }, function () {
                var O = this._t;
                var index = this._i;
                var point;
                if (index >= O.length) return { value: undefined, done: true };
                point = $at(O, index);
                this._i += point.length;
                return { value: point, done: false };
            });


            /***/ }),
        /* 72 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";

            var LIBRARY = __webpack_require__(36);
            var $export = __webpack_require__(9);
            var redefine = __webpack_require__(203);
            var hide = __webpack_require__(13);
            var Iterators = __webpack_require__(18);
            var $iterCreate = __webpack_require__(204);
            var setToStringTag = __webpack_require__(43);
            var getPrototypeOf = __webpack_require__(207);
            var ITERATOR = __webpack_require__(7)('iterator');
            var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
            var FF_ITERATOR = '@@iterator';
            var KEYS = 'keys';
            var VALUES = 'values';

            var returnThis = function () { return this; };

            module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
                $iterCreate(Constructor, NAME, next);
                var getMethod = function (kind) {
                    if (!BUGGY && kind in proto) return proto[kind];
                    switch (kind) {
                        case KEYS: return function keys() { return new Constructor(this, kind); };
                        case VALUES: return function values() { return new Constructor(this, kind); };
                    } return function entries() { return new Constructor(this, kind); };
                };
                var TAG = NAME + ' Iterator';
                var DEF_VALUES = DEFAULT == VALUES;
                var VALUES_BUG = false;
                var proto = Base.prototype;
                var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
                var $default = $native || getMethod(DEFAULT);
                var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
                var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
                var methods, key, IteratorPrototype;
// Fix native
                if ($anyNative) {
                    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
                    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
// Set @@toStringTag to native iterators
                        setToStringTag(IteratorPrototype, TAG, true);
// fix for some old engines
                        if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
                    }
                }
// fix Array#{values, @@iterator}.name in V8 / FF
                if (DEF_VALUES && $native && $native.name !== VALUES) {
                    VALUES_BUG = true;
                    $default = function values() { return $native.call(this); };
                }
// Define iterator
                if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
                    hide(proto, ITERATOR, $default);
                }
// Plug for library
                Iterators[NAME] = $default;
                Iterators[TAG] = returnThis;
                if (DEFAULT) {
                    methods = {
                        values: DEF_VALUES ? $default : getMethod(VALUES),
                        keys: IS_SET ? $default : getMethod(KEYS),
                        entries: $entries
                    };
                    if (FORCED) for (key in methods) {
                        if (!(key in proto)) redefine(proto, key, methods[key]);
                    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
                }
                return methods;
            };


            /***/ }),
        /* 73 */
        /***/ (function(module, exports, __webpack_require__) {

            var document = __webpack_require__(6).document;
            module.exports = document && document.documentElement;


            /***/ }),
        /* 74 */
        /***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
            var anObject = __webpack_require__(11);
            module.exports = function (iterator, fn, value, entries) {
                try {
                    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
// 7.4.6 IteratorClose(iterator, completion)
                } catch (e) {
                    var ret = iterator['return'];
                    if (ret !== undefined) anObject(ret.call(iterator));
                    throw e;
                }
            };


            /***/ }),
        /* 75 */
        /***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
            var Iterators = __webpack_require__(18);
            var ITERATOR = __webpack_require__(7)('iterator');
            var ArrayProto = Array.prototype;

            module.exports = function (it) {
                return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
            };


            /***/ }),
        /* 76 */
        /***/ (function(module, exports, __webpack_require__) {

            var classof = __webpack_require__(77);
            var ITERATOR = __webpack_require__(7)('iterator');
            var Iterators = __webpack_require__(18);
            module.exports = __webpack_require__(5).getIteratorMethod = function (it) {
                if (it != undefined) return it[ITERATOR]
                    || it['@@iterator']
                    || Iterators[classof(it)];
            };


            /***/ }),
        /* 77 */
        /***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
            var cof = __webpack_require__(26);
            var TAG = __webpack_require__(7)('toStringTag');
// ES3 wrong here
            var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
            var tryGet = function (it, key) {
                try {
                    return it[key];
                } catch (e) { /* empty */ }
            };

            module.exports = function (it) {
                var O, T, B;
                return it === undefined ? 'Undefined' : it === null ? 'Null'
                    // @@toStringTag case
                    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
                        // builtinTag case
                        : ARG ? cof(O)
                            // ES3 arguments fallback
                            : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
            };


            /***/ }),
        /* 78 */
        /***/ (function(module, exports, __webpack_require__) {

            var ITERATOR = __webpack_require__(7)('iterator');
            var SAFE_CLOSING = false;

            try {
                var riter = [7][ITERATOR]();
                riter['return'] = function () { SAFE_CLOSING = true; };
// eslint-disable-next-line no-throw-literal
                Array.from(riter, function () { throw 2; });
            } catch (e) { /* empty */ }

            module.exports = function (exec, skipClosing) {
                if (!skipClosing && !SAFE_CLOSING) return false;
                var safe = false;
                try {
                    var arr = [7];
                    var iter = arr[ITERATOR]();
                    iter.next = function () { return { done: safe = true }; };
                    arr[ITERATOR] = function () { return iter; };
                    exec(arr);
                } catch (e) { /* empty */ }
                return safe;
            };


            /***/ }),
        /* 79 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(28);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                props: {
                    value: {
                        type: Number,
                        default: -1
                    },
                    isProjctsLoaded: {
                        type: [Object],
                        default: function _default() {
                            return {};
                        }
                    }
                },
                data: function data() {
                    return {
                        filter: __('Filter', 'pm-pro'),
                        selected_users: [],
                        allProjectUsers: [],
                        selected_project: {},
// selected_project: {
                        //     id: 0,
                        //     title: __('All Projects', 'wedevs-project-manager')
                        // },
                        users: []
                    };
                },

                watch: {
                    selected_project: {
                        handler: function handler(project) {
                            this.setCalendarProject(project);
                            this.selfGetLists(project.id);
                        },

                        deep: true
                    }
                },
                components: {
                    'multiselect': pm.Multiselect.Multiselect
                },
                created: function created() {
                    var self = this;
                    this.getCalendarProjects({
                        conditions: {
                            per_page: 'all',
                            with: 'task_lists,users'
                        },

                        callback: function callback(res) {
                            self.$emit('afterGetRespose', res);

                            self.$store.commit('calendar/setCalendarProjects', res.projects);

                            jQuery.each(res.users, function (index, user) {
                                self.users.push(user);
                            });

                            self.$store.commit('calendar/setCalendarUsers', self.users);

                            if (typeof self.$route.query.project_id !== 'undefined') {
                                var project_id = parseInt(self.$route.query.project_id);

                                res.projects.forEach(function (project) {
                                    if (parseInt(project.id) === project_id) {
                                        self.selected_project = {
                                            title: project.title,
                                            id: project.id
                                        };
                                    }
                                });
                            } else {
                                if (res.projects.length) {
                                    var project = res.projects[0];

                                    self.selected_project = {
                                        id: project.id,
                                        title: project.title
                                    };

                                    self.setCalendarProject(project);
                                }
                            }

                            if (typeof self.$route.query.users !== 'undefined') {
                                var users = self.$route.query.users;

                                self.users.forEach(function (user) {

                                    if (users.indexOf(String(user.id)) !== -1) {
                                        self.selected_users.push({
                                            id: user.id,
                                            avatar_url: user.avatar_url,
                                            display_name: user.display_name
                                        });
                                    }
                                });
                            } else {
                                self.users.forEach(function (user) {

                                    var currentUserId = res.current_user_id;

                                    if (parseInt(user.id) == parseInt(currentUserId)) {
                                        self.selected_users.push({
                                            id: user.id,
                                            avatar_url: user.avatar_url,
                                            display_name: user.display_name
                                        });
                                    }
                                });
                            }

                            self.isProjctsLoaded.status = true;
                        }
                    });
                },

                computed: {
                    projects: function projects() {
                        return this.$store.state.calendar.calendarProjects;
// var returnValues = [];

// projects.forEach(function(project) {
//     returnValues.push({
//         'title': project.title,
//         'id': project.id
//     });
// });

// return returnValues;

//  return projects.sort((a, b) => {
                        //      var atitle = a.title.toLowerCase();
                        //      var btitle = b.title.toLowerCase();
                        //      return ((atitle < btitle) ? -1 : ((atitle > btitle) ? 1 : 0));
                        // });
                    }
                },
                methods: {
                    onChangeProject: function onChangeProject(project) {
                        this.$emit('onChangeProject', project);
                    },
                    setCalendarProject: function setCalendarProject(project) {
                        this.$store.commit('calendar/setCalendarProject', project);
                    },
                    filterCalendar: function filterCalendar() {
                        this.$router.push({
                            query: {
                                filter: true,
                                project_id: this.selected_project.id,
                                users: this.selected_users.map(function (user) {
                                    return user.id;
                                })
                            }
                        });
                    }
                }
            });

            /***/ }),
        /* 80 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(28);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                props: {

                    formVisibility: {
                        type: [Object],

                        default: function _default() {
                            return {
                                status: true
                            };
                        }
                    },

                    day: {
                        type: [Object],

                        default: function _default() {
                            return [];
                        }
                    },

                    selectedProject: {
                        type: [Object, String]
                    }
                },

                data: function data() {
                    return {
                        canDom: false,
                        isActiveTaskCreateForm: true,
                        projects: [],
                        incompleted_projects: {},
                        project: {},
                        lists: [],
                        list: {},
                        project_id: false,
                        disabledProjectDropDown: false,
                        task: {
                            start_at: {
                                date: ''
                            },

                            due_date: {
                                date: ''
                            },

                            description: {
                                content: ''
                            },

                            assignees: {
                                data: []
                            }
                        }
                    };
                },


                watch: {
                    project: {
                        handler: function handler(project) {
// var self = this;
// this.project_id = project.id;
// this.isActiveTaskCreateForm = false;
// this.selfGetLists(project.id, function() {
//     self.setDefaultData( project.id );
//     self.isActiveTaskCreateForm = true;
// });
                        },


                        deep: true
                    },

                    list: {
                        handler: function handler(list) {
//this.setDefaultData( this.project_id, list );
                        },


                        deep: true
                    }
                },

                created: function created() {
                    var self = this;

//this.projects = this.$store.state.calendar.calendarProjects;

//this.setProjectId();

                    this.setDate();
//pmBus.$on('pm_after_create_task', this.afterCreateNewTask);
                },


                components: {
                    'multiselect': pm.Multiselect.Multiselect
                },

                methods: {
                    afterCreateTask: function afterCreateTask(task, taskActivity) {
                        this.afterCreateNewTask(task);
                    },


// setDefaultUser () {
//     var userEvt = this.day[0].resource;

//     if(typeof userEvt !== 'undefined') {
//         var user = {
//             id: userEvt.id,
//             display_name: userEvt.title,
//             avatar_url: userEvt.avatar_url
//         }

//         this.task.assignees.data.push(user);
//     }
// },
// setProjectId () {
//     if(
//         typeof this.$route !== 'undefined'
//             &&
//         typeof this.$route.query.project_id !== 'undefined'
//             &&
//         this.$route.query.project_id !== '0'
//     ) {
//         this.project_id = this.$route.query.project_id;
//     } else if (this.projects.length) {
//         this.project_id = this.projects[0].id;
//     }
// },
                    afterCreateNewTask: function afterCreateNewTask(task) {
                        var users = task.assignees,
                            ids = [];

                        if (typeof users !== 'undefined') {

                            users.data.forEach(function (user, userIndex) {
                                ids.push(user.id);
                            });
                        }
                        task['type'] = 'task';

                        var formatEvent = this.eventFromateData(task);
                        formatEvent['resourceIds'] = ids;

                        jQuery('#pm-calendar').fullCalendar('renderEvent', formatEvent);
                        this.closePopup();
                    },
                    setDate: function setDate() {

                        var event = this.day[0],
                            getView = jQuery('#pm-calendar').fullCalendar('getView'),
                            start = pm.Moment(new Date(event.start._d)).format('YYYY-MM-DD 00:00:00'),
                            end = pm.Moment(new Date(event.end._d)).subtract(1, "days").format('YYYY-MM-DD 00:00:00');

                        this.task.start_at.date = start;
                        this.task.due_date.date = event.view.name === 'timelineDay' ? start : end;
                    },


// setDefaultData (project_id, list) {
//     list = list || false;
//     var index = this.getIndex(this.projects, project_id, 'id');

//     if(index !== false && parseInt(this.projects[index].id) !== 0) {
//         var users = [];
//         this.project = this.projects[index];
//         this.lists   = this.projects[index].task_lists;
//         this.list    = list ? list : this.lists[0];
//         this.list['project_id'] = this.project_id;

//         jQuery.each(this.project.assignees, function(index, user) {
//             users.push(user);
//         });

//         this.$store.commit('setProjectUsers', users);
//     }
//     this.canDom = true;
// },
                    closePopup: function closePopup() {
                        this.formVisibility.status = false;
                    }
                },

                beforeDestroy: function beforeDestroy() {
                    pmBus.$off('pm_after_create_task');
                }
            });

            /***/ }),
        /* 81 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(44);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    actionData: {
                        type: Object,
                        default: {}
                    }
                },
                data: function data() {
                    return {};
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                methods: {
                    duplicateSelfProject: function duplicateSelfProject() {
                        var self = this;
                        var project_id = this.actionData.id;
                        var args = {
                            data: {
                                project_id: project_id
                            },
                            callback: function callback(status, res) {
                                pm.Toastr.success(res.message);
                                self.$router.push({
                                    name: 'pm_overview',
                                    params: {
                                        project_id: res.data.id
                                    }
                                });
                            }
                        };
                        this.duplicateProject(args);
                    }
                }
            });

            /***/ }),
        /* 82 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(44);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    actionData: {
                        type: Object,
                        default: {}
                    }
                },
                data: function data() {
                    return {
                        duplicate: __('Duplicate', 'pm-pro')
                    };
                },

                computed: {
                    canview: function canview() {
                        return this.actionData.status === 'current';
                    }
                },
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a, PmMixin.projectTaskLists],
                methods: {
                    duplicateSelfList: function duplicateSelfList() {
                        var self = this;
                        var list_id = this.actionData.id;

                        var args = {
                            data: {
                                list: list_id
                            },
                            callback: function callback(status, res) {
                                pm.Toastr.success(res.message);
                            }
                        };
                        this.duplicateList(args);
                    }
                }
            });

            /***/ }),
        /* 83 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                data: function data() {
                    return {};
                },

                methods: {
                    getProgects: function getProgects(id, callback) {
                        var self = this;
                        var request = {
                            url: self.base_url + 'pm/v2/projects/' + id,
                            type: 'GET',
                            success: function success(res) {
                                if (typeof callback !== 'undefined') {
                                    callback(res);
                                }
                            }
                        };
                        self.httpRequest(request);
                    },
                    save_map_users: function save_map_users(usernames, callback) {
                        var self = this;
                        var request = {
                            url: self.base_url + 'pm/v2/save_users_map_name',
                            data: {
                                usernames: usernames
                            },
                            type: 'POST',
                            dataType: 'json',
                            success: function success(res) {
                                pm.Toastr.success('User mapping completed');
                                if (typeof callback !== 'undefined') {
                                    callback();
                                }
                            }
                        };
                        self.httpRequest(request);
                    }
                }
            };

            /***/ }),
        /* 84 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__integrations_vue__ = __webpack_require__(233);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__capabilities_vue__ = __webpack_require__(245);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__label_vue__ = __webpack_require__(249);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





            /* harmony default export */ __webpack_exports__["a"] = ({
                data: function data() {
                    return {

                        tabs: [
// {
//     id: 'general',
//     label: __('General', 'pm-pro'),
//     active: true
// },
                            {
                                id: 'capabilities',
                                label: __('Capabilities', 'pm-pro'),
                                icon: 'icon-pm-capability',
                                active: true
                            }, {
                                id: 'integrations',
                                label: __('Integrations', 'pm-pro'),
                                icon: 'icon-pm-integration',
                                active: false
                            }, {
                                id: 'task_label',
                                label: __('Label', 'pm-pro'),
                                icon: 'icon-pm-tag',
                                active: false
                            }],

                        actions: {}
                    };
                },


                components: {
                    'pm-pro-integrations': __WEBPACK_IMPORTED_MODULE_0__integrations_vue__["a" /* default */],
                    'pm-pro-capabilities': __WEBPACK_IMPORTED_MODULE_1__capabilities_vue__["a" /* default */],
                    'pm-pro-label': __WEBPACK_IMPORTED_MODULE_2__label_vue__["a" /* default */]
                },

                created: function created() {
                    this.setDefaultTab();

                    this.actions = {
                        tabs: this.tabs
                    };
                },


                computed: {
                    project: function project() {
                        return this.$store.state.project;
                    }
                },

                mounted: function mounted() {
                    pm.NProgress.done();
                },


                methods: {
                    setDefaultTab: function setDefaultTab() {
                        var activeTabId = window.localStorage.getItem('activeSettingsTabId');
                        var index = this.getIndex(this.tabs, activeTabId, 'id');

                        if (!index) {
                            return;
                        }

                        this.tabChange(this.tabs[index]);
                    },
                    tabContent: function tabContent(tabId) {
                        var contentStatus = false;

                        this.tabs.forEach(function (tab) {
                            if (tab.id == tabId && tab.active) {
                                contentStatus = true;
                            }
                        });

                        return contentStatus;
                    },
                    isTabActive: function isTabActive(tab) {
                        return tab.active ? 'nav-tab-active' : '';
                    },
                    tabChange: function tabChange(tab) {
                        this.tabs.forEach(function (tab) {
                            tab.active = false;
                        });

                        tab.active = true;
                        window.localStorage.setItem('activeSettingsTabId', tab.id);
                    },
                    hasPermission: function hasPermission() {
                        if (pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                            return true;
                        }

                        if (!this.isEmpty(this.project)) {
                            if (this.is_manager(this.project)) {
                                return true;
                            } else {
                                this.$router.push({
                                    name: 'task_lists',
                                    params: {
                                        project_id: this.project.id
                                    }
                                });
                            }
                        }

                        return false;
                    }
                }
            });

            /***/ }),
        /* 85 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__slack_vue__ = __webpack_require__(236);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__github_bitbucket_vue__ = __webpack_require__(240);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




            /* harmony default export */ __webpack_exports__["a"] = ({

                components: {
                    'slack': __WEBPACK_IMPORTED_MODULE_0__slack_vue__["a" /* default */],
                    'github': __WEBPACK_IMPORTED_MODULE_1__github_bitbucket_vue__["a" /* default */]
                },

                created: function created() {
                    var self = this;
                    self.github.project_id = this.project_id;
                },
                data: function data() {
                    return {
                        spinner: false,
                        slack: {
                            status: 'disable',
                            webhook: '',
                            options: {
                                tasks: {
                                    create: true,
                                    update: true,
                                    complete: true,
                                    incomplete: true,
                                    createComment: true,
                                    updateComment: false
                                }
                            }
                        },
                        github: {
                            project_id: '',
                            status: 'disable'
                        },

                        loadingStatus: {
                            slack: false,
                            github: false
                        }
                    };
                },


                computed: {
                    loading: function loading() {
                        return !(this.loadingStatus.slack && this.loadingStatus.github);
                    }
                }
            });

            /***/ }),
        /* 86 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__ = __webpack_require__(29);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({

                props: {
                    slack: {
                        type: [Object, String],
                        default: function _default() {
                            return {};
                        }
                    },
                    projectid: {
                        type: Number
                    },
                    loadingStatus: {
                        type: [Object],
                        default: function _default() {
                            return {};
                        }
                    }
                },

                data: function data() {
                    return {
                        spinner: false,
                        isActiveMoreOption: false,
                        showContent: true
                    };
                },


                computed: {
                    hasSlack: function hasSlack() {
                        var _this = this;

                        var slack = this.$store.state.project.slack;

                        if (slack && !jQuery.isEmptyObject(slack)) {
                            this.slack = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default()(this.slack, slack);
                            this.sanitizeOptions(this.slack.options);
                        }

                        setTimeout(function () {
                            _this.$emit('hasSlack');
                        }, 3000);

                        return true;
                    },
                    isActive: function isActive() {
                        return this.slack.status == 'enable' ? 'panel-checked' : '';
                    }
                },

                created: function created() {},


                methods: {
                    isCollapsed: function isCollapsed() {
                        return this.showContent ? '' : 'collapsed';
                    },
                    showHideContent: function showHideContent() {
                        this.showContent = this.showContent ? false : true;
                    },
                    changeStatus: function changeStatus() {
                        if (this.$store.state.project.slack) {
                            this.slack.status = this.$store.state.project.slack.status = this.$store.state.project.slack.status == 'enable' ? 'disable' : 'enable';
                        } else {
                            this.slack.status = this.slack.status == 'enable' ? 'disable' : 'enable';
                        }
                        this.save();
                    },
                    isChecked: function isChecked() {
                        return this.slack.status == 'enable' ? 'checked' : '';
                    },
                    sanitizeOptions: function sanitizeOptions(options) {

                        jQuery.each(options, function (index, option) {
                            jQuery.each(option, function (index2, option2) {
                                options[index][index2] = option2 == 'true' || option2 === true ? true : false;
                            });
                        });

// return Object.keys(options).map(function ( option,index ) {
//     return Object.keys(option).map(function ( option2,index2 ) {
//         return options[index][index2] = (option2 == 'true' || option2 === true) ? true : false;
//     });
// });
                    },
                    slackIcon: function slackIcon() {
                        return PM_Pro_Vars.dir_url + '/views/assets/images/icon-slack.svg';
                    },
                    showHideMoreOption: function showHideMoreOption() {
                        this.isActiveMoreOption = this.isActiveMoreOption ? false : true;
                    },


                    showHide: function showHide(target) {
                        $(target).closest('.wpuf-integration').toggleClass('collapsed');
                    },

                    openModal: function openModal(target) {
                        $(target).parents('.wpuf-integration').find('.wf-modal').addClass('wf-modal-open');
                    },

                    hideModal: function hideModal(target) {
                        $(target).parents('.wf-modal').removeClass('wf-modal-open');
                    },

                    save: function save() {

                        var self = this;

                        var args = {
                            'slack': this.slack
                        };

                        this.spinner = true;

                        this.saveSettings(args, this.projectid, function () {
                            self.spinner = false;
                        });
                    }
                }
            });

            /***/ }),
        /* 87 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__ = __webpack_require__(29);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(83);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__mixin__);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({

                props: {
                    github: {
                        type: [Object, String],
                        default: function _default() {
                            return {};
                        }
                    },

                    projectid: {
                        type: Number
                    },

                    loadingStatus: {
                        type: [Object],
                        default: function _default() {
                            return {};
                        }
                    }

                },

                mixins: [__WEBPACK_IMPORTED_MODULE_1__mixin___default.a],

                data: function data() {
                    return {
                        spinner: false,
                        isActiveMoreOption: false,
                        showContent: true,
                        url: PM_Pro_Vars.api_base_url,
                        git_bit_hash: '',
                        save_changes: __('Save Changes', 'wedevs-project-manager'),
                        show_spinner: false,
                        users: [],
                        projects: [],
                        github_name: 'github_',
                        bitbucket_name: 'bitbucket_'
                    };
                },


                computed: {
                    hasGithub: function hasGithub() {
                        var _this = this;

                        var github = this.$store.state.project.git_bit;

                        if (github && !jQuery.isEmptyObject(github)) {
                            this.github = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default()(this.github, github);
                        }

                        setTimeout(function () {
                            _this.$emit('hasGithub');
                        }, 3000);

                        return true;
                    },
                    isActive: function isActive() {
                        return this.github.status == 'enable' ? 'panel-checked' : '';
                    }
                },

                mounted: function mounted() {

                    var self = this;
// // setTimeout(function(){
// //     self.github.status = (self.$store.state.project.git_bit) ? self.$store.state.project.git_bit.status : '';
// //     self.git_bit_hash = self.$store.state.project.git_bit_hash ;
// //     // this.changeStatus();
// // },2000);


                    this.getProgects(self.projectid, function (projects) {
                        self.projects.push(projects.data);
                        self.$store.state.project = projects.data;
                        self.users = projects.data.assignees.data;
                        self.github.status = self.$store.state.project.git_bit ? self.$store.state.project.git_bit.status : '';
                        self.git_bit_hash = self.$store.state.project.git_bit_hash;
                    });
                },
                created: function created() {},


                methods: {
                    showHideContent: function showHideContent() {
                        this.showContent = this.showContent ? false : true;
                    },
                    WebhookUrl: function WebhookUrl() {
                        return this.url + '/wp-jsonpm-pro/v2/integrations/' + this.github.project_id + '?token=' + this.git_bit_hash;
                    },
                    githubIcon: function githubIcon() {
                        return PM_Pro_Vars.dir_url + '/views/assets/images/GitHub.png';
                    },
                    bitbucketIcon: function bitbucketIcon() {
                        return PM_Pro_Vars.dir_url + '/views/assets/images/bitbucket.svg';
                    },
                    changeStatus: function changeStatus() {

                        if (this.$store.state.project.git_bit) {
                            this.github.status = this.$store.state.project.git_bit.status = this.$store.state.project.git_bit.status == 'enable' ? 'disable' : 'enable';
                        } else {
                            this.github.status = this.github.status == 'enable' ? 'disable' : 'enable';
                        }
                        this.save();
                    },
                    isChecked: function isChecked() {
                        return this.github.status == 'enable' ? 'checked' : 'not-checked';
                    },
                    selectText: function selectText() {
                        event.target.select();
                        document.execCommand('copy');
                        pm.Toastr.success('Webhook Copied');
                    },


                    showHide: function showHide(target) {
                        $(target).closest('.wpuf-integration').toggleClass('collapsed');
                    },

                    openModal: function openModal(target) {
                        $(target).parents('.wpuf-integration').find('.wf-modal').addClass('wf-modal-open');
                    },

                    hideModal: function hideModal(target) {
                        $(target).parents('.wf-modal').removeClass('wf-modal-open');
                    },

                    save: function save() {
// this.$emit('updateCapabilities');
                        var self = this;

                        var args = {
                            'git_bit': this.github
                        };

                        this.spinner = true;

                        this.saveSettings(args, this.projectid, function () {
                            self.spinner = false;
                        });
                    },

                    saveUsers: function saveUsers() {

                        var formDataObj = {};

                        this.users.forEach(function (user) {
                            formDataObj['github_' + user.id] = user.github;
                            formDataObj['bitbucket_' + user.id] = user.bitbucket;
                        });

                        this.save_map_users(formDataObj, function (data) {
                            self.show_spinner = false;
                        });

                        this.save();
                    },
                    getProjectUser: function getProjectUser() {

                        var userVal = event.target.value;
                        if (userVal.length > 0) {
                            this.users = JSON.parse(userVal);
                        }
                    }
                }
            });

            /***/ }),
        /* 88 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                data: function data() {
                    return {
                        spinner: false
                    };
                },

                components: {},
                created: function created() {},

                computed: {
                    capabilities: function capabilities() {
                        if (typeof this.$store.state.project.capabilities == 'undefined') {
                            return false;
                        }
                        return this.$store.state.project.capabilities;
                    }
                },
                mounted: function mounted() {
                    pm.NProgress.done();
                },

                methods: {
                    checkPermission: function checkPermission() {
                        if (!this.is_manager()) {
                            this.$router.push({
                                name: 'pm_overview',
                                params: {
                                    project_id: this.project_id
                                }
                            });
                        }
                    },
                    saveCapabilities: function saveCapabilities() {
                        var self = this;
                        var args = {
                            'capabilities': this.capabilities
                        };

                        this.spinner = true;
                        this.saveSettings(args, this.project_id, function () {
                            self.spinner = false;
                        });
                    }
                }
            });

            /***/ }),
        /* 89 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(42);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__create_task_label_form_vue__ = __webpack_require__(252);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                data: function data() {
                    return {
                        spinner: false,
                        isFetchLabel: false,
                        formAction: {
                            isClickNewForm: false
                        },

                        label: {
                            color: '#00c2e0',
                            title: '',
                            description: ''
                        },
//taskLabels: []
                        labels: []
                    };
                },

                components: {
                    'new-task-label-form': __WEBPACK_IMPORTED_MODULE_1__create_task_label_form_vue__["a" /* default */]
                },
                created: function created() {
                    pmBus.$on('pm_after_fetch_project', this.setLabelAfterFetchProject);
                    this.setLabelFromSotre();
                },


                computed: {
                    taskLabels: function taskLabels() {
                        var self = this;
                        var project = this.$store.state.project;

                        if (typeof project.labels === 'undefined') {
                            return [];
                        }

                        project.labels.data.forEach(function (label) {
                            pm.Vue.set(label, 'editMode', false);
                        });

                        this.isFetchLabel = true;

                        this.labels = [].concat(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(project.labels.data));

                        return project.labels.data;
                    }
                },

                methods: {
                    showForm: function showForm() {
                        this.formAction.isClickNewForm = this.formAction.isClickNewForm ? false : true;
                    },
                    isFormShow: function isFormShow() {
                        if (this.labels.length && !this.formAction.isClickNewForm) {
                            return true;
                        }

                        return false;
                    },
                    initialFormShowStatus: function initialFormShowStatus() {
                        if (this.labels.length) {
                            return false;
                        }
                        return true;
                    },
                    edit: function edit(label, index) {
                        label.editMode = true;
                    },
                    selfRemove: function selfRemove(label, labelIndex) {
                        if (!confirm(__('Are you sure!', 'pm-pro'))) {
                            return false;
                        }
                        var self = this;
                        var args = {
                            data: {},
                            labelId: label.id,
                            callback: function callback(res) {
                                var index = self.getIndex(self.labels, label.id, 'id');

                                if (index !== false) {
//self.labels.splice(index, 1);
                                    self.$store.commit('proProSettings/removeLabel', {
                                        'project_id': self.project_id,
                                        'label_id': label.id
                                    });

                                    self.labels.splice(labelIndex, 1);
                                }
                            }
                        };

                        this.remove(args);
                    },
                    remove: function remove(args) {

                        var self = this;
                        var request = {
                            data: args.data,
                            type: 'POST',
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/settings/labels/' + args.labelId + '/delete',
                            success: function success(res) {
                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            }
                        };

                        self.httpRequest(request);
                    },
                    setLabelAfterFetchProject: function setLabelAfterFetchProject(project) {
                        this.setLabels(project);
                    },
                    setLabelFromSotre: function setLabelFromSotre() {
                        if (typeof this.$store.state.project.labels === 'undefined') {
                            return;
                        }
                        this.setLabels(this.$store.state.project);
                    },
                    setLabels: function setLabels(project) {
//var self = this;

// project.labels.data.forEach(function(label) {
//     var newLabel = jQuery.extend( {}, label );
//     pm.Vue.set(newLabel, 'editMode', false);
//     self.labels.push(newLabel);
// });
                        this.isFetchLabel = true;
                    }
                }
            });

            /***/ }),
        /* 90 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    formAction: {
                        type: [Object],
                        default: function _default() {
                            return {};
                        }
                    },
                    taskLabels: {
                        type: [Array],
                        default: function _default() {
                            return [];
                        }
                    },
                    taskSingleLabel: {
                        type: [Object],
                        default: function _default() {
                            return {};
                        }
                    }
                },

                data: function data() {
                    return {
                        labelId: false,
                        label: {
                            color: '',
                            title: '',
                            description: ''
                        },
                        preventDoubleClick: false,
                        updating: false,
                        adding: false
                    };
                },
                created: function created() {
                    if (!jQuery.isEmptyObject(this.taskSingleLabel)) {
                        this.labelId = this.taskSingleLabel.id;
                        this.label = jQuery.extend({}, this.taskSingleLabel);
                    }
                },

                methods: {
                    getNewLabelButtonClass: function getNewLabelButtonClass() {
                        if (this.adding) {
                            return 'pm-button pm-primary add-text-color';
                        }

                        return 'pm-button pm-primary';
                    },
                    getUpdateButtonClass: function getUpdateButtonClass() {
                        if (this.updating) {
                            return 'pm-button pm-primary update-text-color';
                        }

                        return 'pm-button pm-primary';
                    },
                    closeNewLabelForm: function closeNewLabelForm() {
                        this.formAction.isClickNewForm = false;
                    },
                    closeEditForm: function closeEditForm(data) {
                        this.taskSingleLabel['editMode'] = false;
//this.$store.commit('proProSettings/closeEditForm', data);
                    },
                    checkValidation: function checkValidation(label) {
                        if (label.title === '') {
                            pm.Toastr.error(__('Label name required!', 'pm-pro'));
                            return false;
                        }

                        if (label.color === '') {
                            pm.Toastr.error(__('Label color required!', 'pm-pro'));
                            return false;
                        }

                        return true;
                    },
                    selfNewLabel: function selfNewLabel() {
                        var self = this;
                        if (this.preventDoubleClick) {
                            return;
                        }

                        if (!this.checkValidation(self.label)) {
                            return false;
                        }

                        this.preventDoubleClick = true;

                        var args = {
                            data: {
                                title: self.label.title,
                                description: self.label.description,
                                color: self.label.color
                            },
                            callback: function callback(res) {
                                self.preventDoubleClick = false;
                                self.updating = false;
                                self.adding = false;

                                if (self.labelId) {
                                    self.setUpdateLabel(res);
                                } else {
                                    self.setNewLabel(res);
                                }
                            }
                        };

                        if (self.labelId) {
                            self.updating = true;
                            this.updateLabel(args);
                        } else {
                            self.adding = true;
                            this.newLabel(args);
                        }
                    },
                    setUpdateLabel: function setUpdateLabel(res) {
                        res.data['editMode'] = false;
                        var index = this.getIndex(this.taskLabels, res.data.id, 'id');
                        this.taskLabels[index] = res.data;
                        this.taskSingleLabel = jQuery.extend(this.taskSingleLabel, res.data);
                        this.$store.commit('proProSettings/updateLabel', {
                            'project_id': res.data.project_id,
                            'label_id': res.data.id,
                            'label': res.data
                        });

                        this.closeEditForm();
                    },
                    setNewLabel: function setNewLabel(res) {
                        res.data.editMode = false;
//this.taskLabels.push(res.data);

                        this.$store.commit('proProSettings/setLabel', {
                            'project_id': res.data.project_id,
                            'label': res.data
                        });

                        this.label = {
                            color: '',
                            title: '',
                            description: ''
                        };

                        jQuery('.color-picker-container').find('.button-group').find('.button-small').trigger('click');
                    },
                    updateLabel: function updateLabel(args) {
                        var self = this;
                        var pre_define = {};

                        var args = jQuery.extend(true, pre_define, args);

                        var request = {
                            data: args.data,
                            type: 'POST',
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/settings/labels/' + self.labelId,
                            success: function success(res) {
                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            }
                        };

                        self.httpRequest(request);
                    },
                    newLabel: function newLabel(args) {
                        var self = this;
                        var pre_define = {};

                        var args = jQuery.extend(true, pre_define, args);

                        var request = {
                            data: args.data,
                            type: 'POST',
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/settings/labels',
                            success: function success(res) {
                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            }
                        };

                        self.httpRequest(request);
                    }
                }
            });

            /***/ }),
        /* 91 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    actionData: {
                        type: Object,
                        required: true
                    }
                },
                data: function data() {
                    return {
                        text: this.actionData.status == 'current' ? __('Archive', 'pm-pro') : __('Restore', 'pm-pro')
                    };
                },


                mixins: [PmMixin.projectTaskLists],
                computed: {
                    setClass: function setClass() {
                        return this.actionData.status == 'current' ? 'li-a-icon icon-pm-archive' : 'li-a-icon icon-pm-undo-arrow';
                    }
                },

                methods: {
                    markAsArchive: function markAsArchive() {
                        var self = this;
                        var args = {
                            data: {
                                id: this.actionData.id,
                                title: this.actionData.title,
                                status: this.actionData.status == 'current' ? 0 : 1
                            },
                            callback: function callback(res) {

                                self.$store.commit('projectTaskLists/afterDeleteList', res.data.id);
                                if (!self.$store.state.projectTaskLists.lists.length) {
                                    this.getSelfLists();
                                }
                            }
                        };

                        this.updateList(args);
                    },
                    getSelfLists: function getSelfLists() {
                        var args = {
                            condition: {
                                status: this.$route.name == 'task_lists_archive' ? "0" : "1"
                            },
                            callback: function callback(res) {
                                pm.NProgress.done();
                            }
                        };
                        this.getLists(args);
                    }
                }
            });

            /***/ }),
        /* 92 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                data: function data() {
                    return {
                        text: ''
                    };
                },

                computed: {},
                methods: {
                    setHoverClass: function setHoverClass() {
                        if (this.$route.name == 'task_lists_archive') {
                            return 'icon-pm-archive-hover';
                        }

                        return '';
                    },
                    setActiveClass: function setActiveClass(name) {
                        var routeName = this.$route.name;

                        if (routeName == name) {
                            return 'active-list-header-btn';
                        }

                        return '';
                    }
                }
            });

            /***/ }),
        /* 93 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                data: function data() {
                    return {
                        current_page_number: this.$route.params.current_page_number || 1
                    };
                },

                mixins: [PmMixin.projectTaskLists],
                created: function created() {
                    var self = this;
                    pm_add_filter('before_get_task_list', function (condittion) {
                        if (self.$route.name == 'task_lists_archive') {
                            condittion.status = '0';
                        }
                        return condittion;
                    });
                },
                destroyed: function destroyed() {
                    pm_remove_filter('before_get_task_list', '');
                }
            });

            /***/ }),
        /* 94 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                computed: {
                    isArchivedPage: function isArchivedPage() {
                        return this.$route.name == 'task_lists_archive' || this.$route.name == 'task_lists_archive_pagination';
                    }
                }
            });

            /***/ }),
        /* 95 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__ = __webpack_require__(276);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__result_view_vue__ = __webpack_require__(96);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




            /* harmony default export */ __webpack_exports__["a"] = ({
                beforeRouteEnter: function beforeRouteEnter(to, from, next) {
                    if (!pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                        next(false);
                    } else {
                        next(function (vm) {
                            vm.getProjects({ conditions: { per_page: -1 } });
                            vm.getAllusers();
                        });
                    }
                },
                data: function data() {
                    return {
                        filters: [{ skey: '', svalue: {} }],
                        meta: {},
                        assign_user: [],
                        projects: [],
                        select_user_text: __('Select User', 'pm-pro'),
                        select_project_text: __('Select Projects', 'pm-pro'),
                        select_start_date: __('Select start date', 'pm-pro'),
                        select_due_date: __('Select due date', 'pm-pro'),
                        filtersData: [{ key: 'project', text: this.__('Project', 'pm-pro') }, { key: 'assigned', text: this.__('User', 'pm-pro') }, { key: 'status', text: this.__('Status', 'pm-pro') }, { key: 'time', text: this.__('Time Range', 'pm-pro') }, { key: 'payable', text: this.__('Payable', 'pm-pro') }],
                        current_page_number: 1,
                        show_spinner: false,
                        show_report: false
                    };
                },

                watch: {
                    '$route': function $route(route) {
                        this.current_page_number = route.params.current_page_number;
                        this.getSelfReport(this.current_page_number);
                    },
                    assign_user: function assign_user(newValue) {
                        var i = this.filters.findIndex(function (item) {
                            return item.skey === 'assigned';
                        });
                        this.filters[i].svalue = newValue.map(function (item) {
                            return item.id;
                        });
                    },
                    projects: function projects(newValue) {
                        var i = this.filters.findIndex(function (item) {
                            return item.skey === 'project';
                        });
                        this.filters[i].svalue = newValue.map(function (item) {
                            return item.id;
                        });
                    }
                },
                mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],
                components: {
                    multiselect: pm.Multiselect.Multiselect,
                    resultView: __WEBPACK_IMPORTED_MODULE_1__result_view_vue__["a" /* default */]
                },
                computed: {
                    advance_tasks: function advance_tasks() {
                        return this.$store.state.reports.advanceTasks;
                    },
                    assigned_users: function assigned_users() {
                        return this.$store.state.reports.assigned_users;
                    },
                    total_pages: function total_pages() {
                        if (typeof this.meta.pagination !== 'undefined') {
                            return this.meta.pagination.total_pages;
                        }
                    },
                    showHideMoreBtn: function showHideMoreBtn() {
                        return this.filters.length < this.filtersData.length;
                    },
                    isFiltersEmpty: function isFiltersEmpty() {
                        return !this.filters.some(function (filter) {
                            return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default()(filter.svalue).length && filter.skey !== '';
                        });
                    }
                },
                methods: {
                    addField: function addField() {
                        this.filters.push({ skey: '', svalue: {} });
                    },
                    removeField: function removeField(index) {
                        this.filters.splice(index, 1);
                    },
                    makeDisable: function makeDisable(key) {
                        return this.filters.findIndex(function (i) {
                            return i.skey == key;
                        }) !== -1;
                    },
                    generateReport: function generateReport() {
                        if (this.isFiltersEmpty) {
                            return;
                        }
                        this.show_spinner = true;
                        this.$router.push({
                            name: 'advance-tasks'
                        });

                        this.getSelfReport();
                    },
                    getSelfReport: function getSelfReport() {
                        var self = this;
                        var args = {
                            data: {
                                filters: this.filters,
                                page: this.current_page_number
                            },
                            callback: function callback(res) {
                                self.$store.commit('reports/setAdvanceTasks', res.data);
                                self.show_report = true;
                                self.meta = res.meta;
                                self.show_spinner = false;
                            }
                        };

                        this.getAdvanceReport(args);
                    },
                    advCSV: function advCSV() {

                        var self = this;
                        var args = {
                            data: {
                                filters: this.filters,
                                page: -1,
                                csv: true
                            },
                            callback: function callback(response, status, xhr) {
                                self.exportCsvFile(xhr, response);
                            }
                        };

                        this.getAdvanceReport(args);
                    }
                }
            });

            /***/ }),
        /* 96 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_result_view_vue__ = __webpack_require__(97);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_ea89feb8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_result_view_vue__ = __webpack_require__(280);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_result_view_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_ea89feb8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_result_view_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/result-view.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-ea89feb8", Component.options)
                } else {
                    hotAPI.reload("data-v-ea89feb8", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 97 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                props: ['projects'],
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                data: function data() {
                    return {
                        isRowExpanded: []
                    };
                },

                computed: {
                    hasTimeTracker: function hasTimeTracker() {
                        if (this.projects[0].task_lists.data[0].tasks.data.length && typeof this.projects[0].task_lists.data[0].tasks.data[0].time !== 'undefined') {
                            return true;
                        }
                        return false;
                    }
                },
                methods: {
                    collapsRow: function collapsRow(obj) {
                        if (this.isRowExpanded.findIndex(function (x) {
                            return x == obj.id;
                        }) == -1) {
                            return '';
                        } else {
                            return 'is-row-expanded';
                        }
                    },
                    toggleRow: function toggleRow(obj) {
                        var i = this.isRowExpanded.findIndex(function (x) {
                            return x == obj.id;
                        });
                        if (i == -1) {
                            this.isRowExpanded.push(obj.id);
                        } else {
                            this.isRowExpanded.splice(i, 1);
                        }
                    }
                }
            });

            /***/ }),
        /* 98 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Modal_vue__ = __webpack_require__(12);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__unassigned_task_results_vue__ = __webpack_require__(286);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





            /* harmony default export */ __webpack_exports__["a"] = ({
                beforeRouteEnter: function beforeRouteEnter(to, from, next) {
                    if (!pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                        next(false);
                    } else {
                        next(function (vm) {
                            vm.getReports();
                            vm.getProjects({
                                conditions: {
                                    per_page: -1,
                                    project_transform: false
                                }
                            });
                            vm.getAllusers();
                        });
                    }
                },
                data: function data() {
                    return {
                        meta: {},
                        show: false,
                        assign_user: false,
                        projects: null,
                        select_project_text: __('Select Projects', 'pm-pro'),
                        select_user: -1,
                        current_page_number: 1,
                        run_report: __('Run Report', 'pm-pro'),
                        startDate: this.reduceMonth(),
                        endDate: pm.Moment().format('YYYY-MM-DD'),
                        showDropDownMenu: false,
                        fetchReport: false,
                        select_user_text: __('Select User', 'pm-pro')
                    };
                },


                mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],
                watch: {
                    '$route': function $route(route) {
                        this.current_page_number = route.params.current_page_number;
                        this.getReports();
                    }
                },

                computed: {
                    unsaaigned_tasks: function unsaaigned_tasks() {
                        var projects = {};

                        this.$store.state.reports.unassignedTasks.forEach(function (task) {
                            projects[task.project_id] = {
                                'id': task.project_id,
                                'title': task.project_title,
                                'task_lists': {
                                    'data': {}
                                }
                            };
                        });

                        this.$store.state.reports.unassignedTasks.forEach(function (task) {
                            projects[task.project_id]['task_lists']['data'][task.task_list_id] = {
                                'id': task.task_list_id,
                                'title': task.task_list_title,
                                'tasks': {
                                    'data': {}
                                }
                            };
                        });

                        this.$store.state.reports.unassignedTasks.forEach(function (task) {
                            projects[task.project_id]['task_lists']['data'][task.task_list_id]['tasks']['data'][task.id] = task;
                        });

                        return projects;

//return this.$store.state.reports.unassignedTasks;
                    },
                    totalResule: function totalResule() {
                        if (this.meta.total_tasks !== 'undefined') {
                            return this.meta.total_tasks;
                        }
                    },
                    total_pages: function total_pages() {
                        if (typeof this.meta.total_page !== 'undefined') {
                            return this.meta.total_page;
                        }
                    },
                    allprojects: function allprojects() {
                        var projects = this.$store.state.projects.sort(function (a, b) {
                            var atitle = a.title.toLowerCase();
                            var btitle = b.title.toLowerCase();

                            return atitle < btitle ? -1 : atitle > btitle ? 1 : 0;
                        });

                        if (!this.isEmpty(this.$route.query.project_id) && projects.length) {
                            var index = this.getIndex(projects, parseInt(this.$route.query.project_id), 'id');
                            this.projects = projects[index];
                        }

                        return projects.length ? projects : [];
                    }
                },

                components: {
                    modal: __WEBPACK_IMPORTED_MODULE_0__Modal_vue__["a" /* default */],
                    resultView: __WEBPACK_IMPORTED_MODULE_1__unassigned_task_results_vue__["a" /* default */],
                    multiselect: pm.Multiselect.Multiselect
                },

                created: function created() {
                    this.setFormData();
                },


                methods: {
                    setFormData: function setFormData() {

                        if (this.$route.query.start_date) {
                            this.startDate = this.$route.query.start_date;
                        }

                        if (this.$route.query.due_date) {
                            this.endDate = this.$route.query.due_date;
                        }
                    },
                    filterProject: function filterProject() {
                        var query = {};
                        if (!this.startDate || !this.startDate) {
                            pm.Toastr.error(__('Start and Due date field is required', 'pm-pro'));
                            return;
                        }

                        if (this.startDate) {
                            query.start_date = this.startDate;
                        }

                        if (this.endDate) {
                            query.due_date = this.endDate;
                        }
                        if (this.projects) {
                            query.project_id = this.projects.id;
                        }
                        this.$router.push({
                            name: 'unassigned-tasks',
                            query: query
                        });
                        this.show = false;
                    },
                    conditions: function conditions() {
                        var start = pm.Moment().format('YYYY-MM-01'),
                            end = pm.Moment(new Date()).format('YYYY-MM-DD');

                        start = this.$route.query.start_date ? this.$route.query.start_date : start;
                        end = this.$route.query.due_date ? this.$route.query.due_date : end;

                        return {
                            project_id: this.getProjectId ? this.getProjectId : '',
                            start_at: start,
                            start_at_operator: ['greater_than_equal'],
                            due_date: end,
                            due_date_operator: ['less_than|or', 'null'],
                            users: 'null',
                            with: 'project, task_list',
                            pages: this.current_page_number,
                            per_page: 20,
                            status: 0
                        };
                    },
                    getReports: function getReports() {
                        var self = this;
                        self.fetchReport = false;
                        var args = {
                            url: self.base_url + 'pm/v2/tasks?',
                            conditions: this.conditions(),
                            callback: function callback(res) {
                                self.$store.commit('reports/setUnassignedTasks', res.data);
                                self.meta = res.meta;
                                self.show = false;
                                self.fetchReport = true;
                            }
                        };
                        self.getResults(args);
                    },
                    exportCSV: function exportCSV() {

                        var args = {
                            url: this.base_url + 'pm-pro/v2/users/' + PM_Vars.current_user.ID + '/advance-report/unassigned/csv/?',
                            conditions: this.conditions(),
                            callback: function callback(res) {}
                        };
                        this.downloadCSV(args);
                    },
                    unassignedPDF: function unassignedPDF() {
                        var args = {
                            url: this.base_url + 'pm-pro/v2/users/' + PM_Vars.current_user.ID + '/advance-report/unassigned/pdf/?',
                            conditions: this.conditions(),
                            callback: function callback(res) {}
                        };
                        this.downloadPDF(args);
                    },


// dropdown trigger
                    dropdownTrigger: function dropdownTrigger() {
                        this.showDropDownMenu = this.showDropDownMenu ? false : true;
                    },


// dropdown class toggler
                    dropdownToggleClass: function dropdownToggleClass() {
                        if (this.showDropDownMenu) {
                            return "pm-dropdown-menu pm-dropdown-open mt-10";
                        } else {
                            return "pm-settings pm-dropdown-menu";
                        }
                    }
                }
            });

            /***/ }),
        /* 99 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                name: 'modal',
                props: {
                    isActive: Boolean,
                    fullWidth: {
                        type: Boolean,
                        default: false
                    },
                    maxWidth: {
                        type: [String, Number],
                        default: 'none'
                    },
                    width: {
                        type: [String, Number],
                        default: 'auto'
                    }
                },

                computed: {
                    classes: function classes() {
                        return {

                            'modal-active': this.isActive,
                            'modal-fullwidth': this.fullWidth

                        };
                    },
                    styles: function styles() {
                        var style;
                        if (!this.fullWidth) {

                            style = {
                                maxWidth: this.maxWidth === 'none' ? undefined : isNaN(this.maxWidth) ? this.maxWidth : this.maxWidth + 'px',
                                width: this.width === 'auto' ? undefined : isNaN(this.width) ? this.width : this.width + 'px'
                            };
                        } else {
                            var pm = document.getElementById("wedevs-project-manager");
                            style = {
                                maxWidth: pm.clientWidth - 100 + 'px',
                                maxHeight: pm.clientHeight - 100 + 'px'
                            };
                        }
                        return style;
                    }
                }
            });

            /***/ }),
        /* 100 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                props: ['projects'],
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                data: function data() {
                    return {
                        isRowExpanded: [],
                        individualTaskId: false,
                        individualProjectId: false,
                        hasSingleTask: false
                    };
                },
                created: function created() {},

                computed: {
                    hasTimeTracker: function hasTimeTracker() {
                        if (this.projects[0].task_lists.data[0].tasks.data.length && typeof this.projects[0].task_lists.data[0].tasks.data[0].time !== 'undefined') {
                            return true;
                        }
                        return false;
                    }
                },
                methods: {
                    openSingleTask: function openSingleTask(task) {
                        this.individualTaskId = parseInt(task.id);
                        this.individualProjectId = parseInt(task.project_id);
                        this.hasSingleTask = true;
                    },
                    closeTaskModal: function closeTaskModal() {
                        this.individualTaskId = false;
                        this.individualProjectId = false;
                        this.hasSingleTask = false;
                    },
                    collapsRow: function collapsRow(obj) {
                        if (this.isRowExpanded.findIndex(function (x) {
                            return x == obj.id;
                        }) == -1) {
                            return '';
                        } else {
                            return 'is-row-expanded';
                        }
                    },
                    toggleRow: function toggleRow(obj) {
                        var i = this.isRowExpanded.findIndex(function (x) {
                            return x == obj.id;
                        });
                        if (i == -1) {
                            this.isRowExpanded.push(obj.id);
                        } else {
                            this.isRowExpanded.splice(i, 1);
                        }
                    }
                }
            });

            /***/ }),
        /* 101 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Modal_vue__ = __webpack_require__(12);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__milestone_task_results_vue__ = __webpack_require__(292);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





            /* harmony default export */ __webpack_exports__["a"] = ({
                beforeRouteEnter: function beforeRouteEnter(to, from, next) {
                    if (!pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                        next(false);
                    } else {
                        next(function (vm) {
                            vm.getReports();
                            vm.getProjects({
                                conditions: {
                                    per_page: -1,
                                    project_transform: false
                                }
                            });
                        });
                    }
                },
                data: function data() {
                    return {
                        meta: {},
                        show: true,
                        projects: null,
                        current_page_number: 1,
                        loadingReports: false,
                        milestones: [],
                        is_disable: true,
                        select_milestone: null,
                        select_project_text: __('Select Projects', 'pm-pro'),
                        select_milestone_text: __('Select A Milestone', 'pm-pro'),
                        run_report: __('Run Report', 'pm-pro'),
                        startDate: this.reduceMonth(),
                        endDate: pm.Moment().format('YYYY-MM-DD'),
                        showDropDownMenu: false
                    };
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],
                watch: {
                    '$route': function $route(route) {
                        this.current_page_number = route.params.current_page_number;
                        this.getReports();
                    },
                    projects: function projects(value) {
                        this.is_disable = true;
                        if (value) {
                            this.getMilestone(value.id);
                        }
                    }
                },
                computed: {
                    getMilestoneId: function getMilestoneId() {
                        if (typeof this.$route.query.milestone_id !== 'undefined') {
                            return this.$route.query.milestone_id;
                        }
                    },
                    milestone: function milestone() {
                        if (!this.isEmpty(this.$store.state.reports.milestoneTasks)) {
                            return this.$store.state.reports.milestoneTasks[0].milestone.data;
                        }

                        return {};
                    },
                    milestone_tasks: function milestone_tasks() {
                        var projects = {};

                        this.$store.state.reports.milestoneTasks.forEach(function (task) {
                            projects[task.project_id] = {
                                'id': task.project_id,
                                'title': task.project_title,
                                'task_lists': {
                                    'data': {}
                                }
                            };
                        });

                        this.$store.state.reports.milestoneTasks.forEach(function (task) {
                            projects[task.project_id]['task_lists']['data'][task.task_list_id] = {
                                'id': task.task_list_id,
                                'title': task.task_list_title,
                                'tasks': {
                                    'data': {}
                                }
                            };
                        });

                        this.$store.state.reports.milestoneTasks.forEach(function (task) {
                            projects[task.project_id]['task_lists']['data'][task.task_list_id]['tasks']['data'][task.id] = task;
                        });

                        return projects;

                        var milestones = {};

                        this.$store.state.reports.milestoneTasks.forEach(function (task) {
                            if (task.milestone && task.milestone.data) {
                                milestones[task.milestone.data.id] = {
                                    'id': task.milestone.data.id,
                                    'title': task.milestone.data.title,
                                    'project_id': task.project_id,
                                    'project_title': task.project_title,
                                    'list_id': task.task_list_id,
                                    'list_title': task.task_list_title,
                                    'tasks': {
                                        'data': []
                                    }
                                };
                            }
                        });

                        this.$store.state.reports.milestoneTasks.forEach(function (task) {
                            if (task.milestone && task.milestone.data) {
                                milestones[task.milestone.data.id]['tasks']['data'].push(task);
                            }
                        });

                        return milestones;
                    },
                    milsetone_title: function milsetone_title() {
                        if (this.select_milestone) {
                            return this.select_milestone.title;
                        }
                        return this.__('No Milestone Select', 'pm-pro');
                    },
                    totalResule: function totalResule() {
                        if (this.meta.total_tasks !== 'undefined') {
                            return this.meta.total_tasks;
                        }
                    },
                    total_pages: function total_pages() {
                        if (typeof this.meta.total_page !== 'undefined') {
                            return this.meta.total_page;
                        }
                    },
                    allprojects: function allprojects() {
                        var projects = this.$store.state.projects.sort(function (a, b) {
                            var atitle = a.title.toLowerCase();
                            var btitle = b.title.toLowerCase();

                            return atitle < btitle ? -1 : atitle > btitle ? 1 : 0;
                        });

                        if (!this.isEmpty(this.$route.query.project_id) && projects.length) {
                            var index = this.getIndex(projects, parseInt(this.$route.query.project_id), 'id');
                            this.projects = projects[index];
                        }

                        return projects.length ? projects : [];
                    }
                },
                components: {
                    modal: __WEBPACK_IMPORTED_MODULE_0__Modal_vue__["a" /* default */],
                    resultView: __WEBPACK_IMPORTED_MODULE_1__milestone_task_results_vue__["a" /* default */],
                    multiselect: pm.Multiselect.Multiselect
                },
                created: function created() {
                    this.setFormData();
                },

                methods: {
                    setFormData: function setFormData() {

                        if (this.$route.query.start_date) {
                            this.startDate = this.$route.query.start_date;
                        }

                        if (this.$route.query.due_date) {
                            this.endDate = this.$route.query.due_date;
                        }
                    },
                    filterProject: function filterProject() {
                        var query = {};
                        if (this.projects) {
                            query.project_id = this.projects.id;
                        }
                        if (this.select_milestone) {
                            query.milestone_id = this.select_milestone.id;
                        }
                        if (this.startDate) {
                            query.start_date = this.startDate;
                        }

                        if (this.endDate) {
                            query.due_date = this.endDate;
                        }
                        this.$router.push({
                            name: 'milestone-tasks',
                            query: query
                        });

                        this.getReports();
                    },
                    conditions: function conditions() {

                        var start = pm.Moment().format('YYYY-MM-01');
                        var end = pm.Moment(new Date()).format('YYYY-MM-DD');

                        start = this.$route.query.start_date ? this.$route.query.start_date : start;
                        end = this.$route.query.due_date ? this.$route.query.due_date : end;

                        return {
                            project_id: this.getProjectId ? this.getProjectId : '',
                            start_at: start,
                            start_at_operator: ['greater_than_equal'],
                            due_date_operator: ['less_than_equal'],
                            due_date: end,
                            //users: this.getUserId,
                            with: 'project, task_list, milestone',
                            milestone: this.getMilestoneId,
                            pages: this.current_page_number,
                            per_page: 20,
                            status: 0
                        };
                    },
                    validate: function validate() {
                        if (this.isEmpty(this.getProjectId)) {
                            pm.Toastr.error(__('Please choose project', 'pm-pro'));
                            return false;
                        }

                        if (this.isEmpty(this.getMilestoneId)) {
                            pm.Toastr.error(__('Please choose milestone', 'pm-pro'));
                            return false;
                        }

                        return true;
                    },
                    getReports: function getReports() {
                        var self = this;

                        if (self.loadingReports) {
                            return;
                        }

                        if (!this.validate()) {
                            return;
                        }

                        var args = {
                            url: self.base_url + 'pm/v2/tasks?',
                            conditions: self.conditions(),
                            callback: function callback(res) {

                                if (res.message) {
                                    self.show = true;
                                    pm.Toastr.error(res.message);
                                    return;
                                }
                                self.loadingReports = false;
                                self.show = false;
                                self.meta = res.meta;
                                self.$store.commit('reports/setMilestoneTasks', res.data);
                            }
                        };

                        self.loadingReports = true;
                        self.getResults(args);
                    },
                    getMilestone: function getMilestone(project_id) {
                        var self = this;
                        self.is_disable = true;
                        var request = {
                            url: self.base_url + 'pm/v2/projects/' + project_id + '/milestones',
                            success: function success(res) {
                                self.milestones = res.data;
                                self.is_disable = false;
                            }
                        };
                        self.httpRequest(request);
                    },
                    exportCSV: function exportCSV() {
                        if (!this.getMilestoneId) {
                            return;
                        }
                        var args = {
                            url: this.base_url + 'pm-pro/v2/users/' + PM_Vars.current_user.ID + '/advance-report/milestone/csv/?',

                            conditions: this.conditions(),
                            callback: function callback(res) {}
                        };

                        this.downloadCSV(args);
                    },
                    milestonePDF: function milestonePDF() {
                        if (this.isEmpty(this.getProjectId)) {
                            pm.Toastr.error(__('Please choose project', 'pm-pro'));
                            return false;
                        }

                        if (this.isEmpty(this.getMilestoneId)) {
                            pm.Toastr.error(__('Please choose milestone', 'pm-pro'));
                            return false;
                        }

                        var args = {
                            url: this.base_url + 'pm-pro/v2/users/' + PM_Vars.current_user.ID + '/advance-report/milestone/pdf/?',
                            conditions: this.conditions(),
                            callback: function callback(res) {
// this.downloadCSV(
//     {
//         data: res.data,
//         title: this.__('Report for Overdue Tasks', 'pm-pro' ),
//         project: this.project_title, user: this.unsername
//     }
// );
                            }
                        };
                        this.downloadPDF(args);
                    },


// dropdown trigger
                    dropdownTrigger: function dropdownTrigger() {
                        this.showDropDownMenu = this.showDropDownMenu ? false : true;
                    },


// dropdown class toggler
                    dropdownToggleClass: function dropdownToggleClass() {
                        if (this.showDropDownMenu) {
                            return "pm-dropdown-menu pm-dropdown-open mt-10";
                        } else {
                            return "pm-settings pm-dropdown-menu";
                        }
                    }
                }
            });

            /***/ }),
        /* 102 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                props: ['projects'],
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                data: function data() {
                    return {
                        isRowExpanded: [],
                        individualTaskId: false,
                        individualProjectId: false,
                        hasSingleTask: false
                    };
                },
                created: function created() {},

                computed: {
                    hasTimeTracker: function hasTimeTracker() {
                        if (this.projects[0].task_lists.data[0].tasks.data.length && typeof this.projects[0].task_lists.data[0].tasks.data[0].time !== 'undefined') {
                            return true;
                        }
                        return false;
                    }
                },
                methods: {
                    openSingleTask: function openSingleTask(task) {
                        this.individualTaskId = parseInt(task.id);
                        this.individualProjectId = parseInt(task.project_id);
                        this.hasSingleTask = true;
                    },
                    closeTaskModal: function closeTaskModal() {
                        this.individualTaskId = false;
                        this.individualProjectId = false;
                        this.hasSingleTask = false;
                    },
                    collapsRow: function collapsRow(obj) {
                        if (this.isRowExpanded.findIndex(function (x) {
                            return x == obj.id;
                        }) == -1) {
                            return '';
                        } else {
                            return 'is-row-expanded';
                        }
                    },
                    toggleRow: function toggleRow(obj) {
                        var i = this.isRowExpanded.findIndex(function (x) {
                            return x == obj.id;
                        });
                        if (i == -1) {
                            this.isRowExpanded.push(obj.id);
                        } else {
                            this.isRowExpanded.splice(i, 1);
                        }
                    }
                }
            });

            /***/ }),
        /* 103 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Modal_vue__ = __webpack_require__(12);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__result_view_vue__ = __webpack_require__(96);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





            /* harmony default export */ __webpack_exports__["a"] = ({
                beforeRouteEnter: function beforeRouteEnter(to, from, next) {
                    if (!pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                        next(false);
                    } else {
                        next(function (vm) {
                            vm.getProjectTasks();
                            vm.getProjects({ conditions: { per_page: -1 } });
                        });
                    }
                },
                data: function data() {
                    return {
                        meta: {},
                        show: false,
                        projects: null,
                        select_project_text: __('Select Projects', 'pm-pro'),
                        current_page_number: 1,
                        task_status: -1,
                        run_report: __('Run Report', 'pm-pro')
                    };
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],
                watch: {
                    '$route': function $route(route) {
                        this.current_page_number = route.params.current_page_number;
                        this.getProjectTasks();
                    }
                },
                computed: {
                    task_status_des: function task_status_des() {
                        var status = this.$route.query.task_status;
                        if (1 === status) {
                            return this.__('Task Status : Complete Task', 'pm-pro');
                        } else if (0 === status) {
                            return this.__('Task Status : Incomplete Task', 'pm-pro');
                        } else {
                            return this.__('Task Status : All Task', 'pm-pro');
                        }
                    },
                    project_tasks: function project_tasks() {
                        return this.$store.state.reports.projectTasks;
                    },
                    totalResule: function totalResule() {
                        if (this.meta.total_result !== 'undefined') {
                            return this.meta.total_result;
                        }
                    },
                    total_pages: function total_pages() {
                        if (typeof this.meta.pagination !== 'undefined') {
                            return this.meta.pagination.total_pages;
                        }
                    }
                },
                components: {
                    modal: __WEBPACK_IMPORTED_MODULE_0__Modal_vue__["a" /* default */],
                    resultView: __WEBPACK_IMPORTED_MODULE_1__result_view_vue__["a" /* default */],
                    multiselect: pm.Multiselect.Multiselect
                },
                methods: {
                    filterProject: function filterProject() {
                        var query = {};
                        if (this.projects) {
                            query.project_id = this.projects.id;
                        }
                        if (this.task_status != -1) {
                            query.task_status = this.task_status;
                        }
                        this.$router.push({
                            name: 'project-tasks',
                            query: query
                        });
                        this.show = false;
                    },
                    getProjectTasks: function getProjectTasks() {
                        var args = {
                            conditions: {
                                project_id: this.getProjectId,
                                task_status: this.getTaskStatus(),
                                page: this.current_page_number,
                                per_page: this.getSettings('project_per_page', 10)
                            },
                            callback: function callback(res) {
                                this.$store.commit('reports/setProjectTasks', res.data);

                                this.meta = res.meta;
                                this.show = false;
                            }
                        };
                        this.projectTasks(args);
                    },
                    getTaskStatus: function getTaskStatus() {
                        if (typeof this.$route.query.task_status !== 'undefined') {
                            return this.$route.query.task_status;
                        }
                    },
                    exportCSV: function exportCSV() {
                        var args = {
                            conditions: {
                                project_id: this.getProjectId,
                                task_status: this.getTaskStatus,
                                per_page: 'all'
                            },
                            callback: function callback(res) {
                                this.downloadCSV({ data: res.data, title: this.__('Project Report', 'pm-pro'), project: this.project_title });
                            }
                        };
                        this.projectTasks(args);
                    }
                }
            });

            /***/ }),
        /* 104 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Modal_vue__ = __webpack_require__(12);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__user_activity_results_vue__ = __webpack_require__(301);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





            /* harmony default export */ __webpack_exports__["a"] = ({
                beforeRouteEnter: function beforeRouteEnter(to, from, next) {
                    if (!pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                        next(false);
                    } else {
                        next(function (vm) {
                            vm.getUserReports();
                            vm.getProjects({
                                conditions: {
                                    per_page: -1,
                                    project_transform: false
                                }
                            });
                            vm.getAllusers();
                        });
                    }
                },
                data: function data() {
                    return {
                        meta: {},
                        show: false,
                        fetchReport: false,
                        assign_user: false,
                        projects: null,
                        select_user_text: __('Select User', 'pm-pro'),
                        select_project_text: __('All Projects', 'pm-pro'),
                        current_page_number: 1,
                        start_date: this.$route.query.start_date || '',
                        end_date: this.$route.query.end_date || '',
                        select_start_date: __('Select start date', 'pm-pro'),
                        select_end_date: __('Select end date', 'pm-pro'),
                        run_report: __('Run Report', 'pm-pro'),
                        startDate: this.reduceMonth(),
                        endDate: pm.Moment().format('YYYY-MM-DD'),
                        showDropDownMenu: false
                    };
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],
                watch: {
                    '$route': function $route(route) {
                        this.current_page_number = route.params.current_page_number;
                        this.getUserReports();
                    }
                },
                computed: {
                    user_tasks: function user_tasks() {
                        var records = this.$store.state.reports.userTasks,
                            self = this;

// let index =  this.getIndex(records, this.project_id, 'project_id');

// if ( index === false ) {
//     return [];
// }

// records = records[index].activities;

                        var activities = _.chain(records).groupBy(self.occurrenceDay).map(self.groupToDay).sortBy('day').value();

                        return activities;

//return this.$store.state.reports.userTasks;
                    },
                    totalResult: function totalResult() {
                        if (typeof this.meta.pagination !== 'undefined') {
                            return this.meta.pagination.total;
                        }
                    },
                    total_pages: function total_pages() {
                        if (typeof this.meta.pagination !== 'undefined') {
                            return this.meta.pagination.total_pages;
                        }
                    },
                    allprojects: function allprojects() {
                        var projects = this.$store.state.projects.sort(function (a, b) {
                            var atitle = a.title.toLowerCase();
                            var btitle = b.title.toLowerCase();

                            return atitle < btitle ? -1 : atitle > btitle ? 1 : 0;
                        });

                        if (!this.isEmpty(this.$route.query.project_id) && projects.length) {
                            var index = this.getIndex(projects, parseInt(this.$route.query.project_id), 'id');
                            this.projects = projects[index];
                        }

                        return projects.length ? projects : [];
                    },
                    assigned_users: function assigned_users() {
                        var users = this.$store.state.reports.assigned_users.sort(function (a, b) {
                            var adisplay_name = a.display_name.toLowerCase();
                            var bdisplay_name = b.display_name.toLowerCase();

                            return adisplay_name < bdisplay_name ? -1 : adisplay_name > bdisplay_name ? 1 : 0;
                        });

                        if (!this.isEmpty(this.$route.query.user_id) && users.length) {
                            var index = this.getIndex(users, parseInt(this.$route.query.user_id), 'id');
                            this.assign_user = users[index];
                        }

                        return users.length ? users : [];
                    }
                },

                created: function created() {
                    this.setFormData();
                },


                components: {
                    modal: __WEBPACK_IMPORTED_MODULE_0__Modal_vue__["a" /* default */],
                    'user-activity-results': __WEBPACK_IMPORTED_MODULE_1__user_activity_results_vue__["a" /* default */],
                    multiselect: pm.Multiselect.Multiselect
                },

                methods: {
                    setFormData: function setFormData() {

                        if (this.$route.query.start_date) {
                            this.startDate = this.$route.query.start_date;
                        }

                        if (this.$route.query.due_date) {
                            this.endDate = this.$route.query.due_date;
                        }
                    },
                    occurrenceDay: function occurrenceDay(occurrence) {
                        var date = new Date(occurrence.committed_at.date);
                        var date = pm.Moment(date).format('YYYY-MM-DD');

                        return pm.Moment(date).startOf('day').format('YYYY-MM-DD');
                    },
                    groupToDay: function groupToDay(group, day) {
                        return {
                            date: day,
                            activities: group
                        };
                    },
                    filterProject: function filterProject() {

                        if (!this.startDate || !this.startDate) {
                            pm.Toastr.error(__('Start and Due date field is required', 'pm-pro'));
                            return;
                        }

                        if (!this.assign_user || this.assign_user == '') {
                            pm.Toastr.error(__('Please Select user', 'pm-pro'));
                            return;
                        }

                        var query = {};
                        if (this.projects) {
                            query.project_id = this.projects.id;
                        }

                        if (this.assign_user) {
                            query.user_id = this.assign_user.id;
                        }

                        if (this.startDate) {
                            query.start_date = this.startDate;
                        }

                        if (this.endDate) {
                            query.due_date = this.endDate;
                        }

                        this.$router.push({
                            name: 'report-user-activities',
                            query: query
                        });
                    },
                    condition: function condition() {
                        var start = pm.Moment().format('YYYY-MM-01'),
                            end = pm.Moment(new Date()).format('YYYY-MM-DD');

                        start = this.$route.query.start_date ? this.$route.query.start_date : start;
                        end = this.$route.query.due_date ? this.$route.query.due_date : end;

                        return {
                            project_id: !this.getProjectId ? '' : this.getProjectId,
                            user_id: !this.getUserId ? '' : this.getUserId,
                            updated_at_start: start,
                            updated_at: end,
                            users: this.getUserId,
                            with: 'actor, project',
                            page: this.current_page_number,
                            per_page: 20,
                            orderby: 'created_at|ASC'

                        };
                    },
                    getUserReports: function getUserReports() {
                        var self = this;

                        var args = {
                            url: self.base_url + 'pm/v2/activities?',
                            conditions: this.condition(),
                            callback: function callback(res) {
                                self.$store.commit('reports/setUserTasks', res.data);
                                self.meta = res.meta;
                                self.show = false;
                                self.fetchReport = true;
                            }
                        };

                        self.getResults(args);
                    },
                    exportCSV: function exportCSV() {

                        var args = {
                            url: this.base_url + 'pm-pro/v2/users/' + PM_Vars.current_user.ID + '/advance-report/user-activities/csv/?',
                            conditions: {
                                project_id: !this.getProjectId ? '' : this.getProjectId,
                                user_id: !this.getUserId ? '' : this.getUserId,
                                start_date: this.$route.query.start_date,
                                due_date: this.$route.query.due_date,
                                per_page: -1
                            },
                            callback: function callback(res) {}
                        };

                        this.downloadCSV(args);
                    },
                    userActivitesPDF: function userActivitesPDF() {
                        var args = {
                            url: this.base_url + 'pm-pro/v2/users/' + PM_Vars.current_user.ID + '/advance-report/user-activities/pdf/?',
                            conditions: this.condition(),
                            callback: function callback(res) {}
                        };
                        this.downloadPDF(args);
                    },


// dropdown trigger
                    dropdownTrigger: function dropdownTrigger() {
                        this.showDropDownMenu = this.showDropDownMenu ? false : true;
                    },


// dropdown class toggler
                    dropdownToggleClass: function dropdownToggleClass() {
                        if (this.showDropDownMenu) {
                            return "pm-dropdown-menu pm-dropdown-open mt-10";
                        } else {
                            return "pm-settings pm-dropdown-menu";
                        }
                    }
                }
            });

            /***/ }),
        /* 105 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                props: ['activities'],
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                data: function data() {
                    return {
                        isRowExpanded: []
                    };
                },
                created: function created() {},


                methods: {
                    actiivtyGroupDate: function actiivtyGroupDate(date, format) {
                        if (!date) {
                            return;
                        }
                        date = new Date(date);
                        return pm.Moment(date).format(format);
                    },
                    collapsRow: function collapsRow(obj) {
                        if (this.isRowExpanded.findIndex(function (x) {
                            return x == obj.id;
                        }) == -1) {
                            return '';
                        } else {
                            return 'is-row-expanded';
                        }
                    },
                    toggleRow: function toggleRow(obj) {
                        var i = this.isRowExpanded.findIndex(function (x) {
                            return x == obj.id;
                        });
                        if (i == -1) {
                            this.isRowExpanded.push(obj.id);
                        } else {
                            this.isRowExpanded.splice(i, 1);
                        }
                    }
                }
            });

            /***/ }),
        /* 106 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Modal_vue__ = __webpack_require__(12);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__task_result_view_vue__ = __webpack_require__(307);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





            /* harmony default export */ __webpack_exports__["a"] = ({
                beforeRouteEnter: function beforeRouteEnter(to, from, next) {
                    if (!pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                        next(false);
                    } else {
                        next(function (vm) {
                            vm.getUserReports();
                            vm.getProjects({ conditions: { per_page: -1 } });
                            vm.getAllusers();
                        });
                    }
                },
                data: function data() {
                    return {
                        meta: {},
                        show: false,
                        assign_user: null,
                        projects: null,
                        select_user_text: __('Select User', 'pm-pro'),
                        select_project_text: __('Select Projects', 'pm-pro'),
                        current_page_number: 1,
                        start_date: this.$route.query.start_date || this.getFirstDate,
                        end_date: this.$route.query.end_date || this.getLastDate,
                        task_view: 0,
                        loading: true,
                        select_start_date: __('Select start date', 'pm-pro'),
                        select_end_date: __('Select end date', 'pm-pro'),
                        run_report: __('Run Report', 'pm-pro')
                    };
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],
                created: function created() {
                    this.$router.push({
                        name: 'report-user-task',
                        query: {
                            user_id: this.current_user.ID,
                            start_date: this.getFirstDate,
                            end_date: this.getLastDate
                        }
                    });
                },

                watch: {
                    '$route': function $route(route) {
                        this.current_page_number = route.params.current_page_number;
                        this.getUserReports();
                    }
                },
                computed: {
                    user_tasks: function user_tasks() {
                        return this.$store.state.reports.userTasks;
                    },
                    totalResule: function totalResule() {
                        if (this.meta.total_result !== 'undefined') {
                            return this.meta.total_result;
                        }
                    },
                    totalEstimation: function totalEstimation() {
                        if (this.meta.estimation !== 'undefined') {
                            return this.meta.estimation;
                        }
                    },
                    total_pages: function total_pages() {
                        if (typeof this.meta.pagination !== 'undefined') {
                            return this.meta.pagination.total_pages;
                        }
                    },
                    getFirstDate: function getFirstDate() {
                        return pm.Moment().format('YYYY-MM-01');
                    },
                    getLastDate: function getLastDate() {
                        return pm.Moment().endOf('month').format('YYYY-MM-DD');
                    }
                },
                components: {
                    modal: __WEBPACK_IMPORTED_MODULE_0__Modal_vue__["a" /* default */],
                    resultView: __WEBPACK_IMPORTED_MODULE_1__task_result_view_vue__["a" /* default */],
                    multiselect: pm.Multiselect.Multiselect
                },
                methods: {
                    filterProject: function filterProject() {
                        var query = {};
                        if (this.projects) {
                            query.project_id = this.projects.id;
                        }

                        if (this.assign_user) {
                            query.user_id = this.assign_user.id;
                        }

                        if (this.start_date) {
                            query.start_date = this.start_date;
                        }

                        if (this.end_date) {
                            query.end_date = this.end_date;
                        }
                        if (this.task_view) {
                            query.task_view = this.task_view;
                        }

                        this.$router.push({
                            name: 'report-user-task',
                            query: query
                        });
                        this.show = false;
                    },
                    getUserReports: function getUserReports() {

// this.loading = false;
// var args = {
//     conditions: {
                        //         project_id: this.getProjectId,
                        //         user_id: this.getUserId,
                        //         page: typeof this.$route.params.current_page_number != 'undefined'? this.$route.params.current_page_number: this.current_page_number,
                        //         per_page: this.getSettings('project_per_page', 10),
                        //         start_date : this.start_date,
                        //         end_date: this.end_date,
                        //         task_view: this.task_view
                        //     },
//     callback: function(res){
//         this.$store.commit('reports/setUserTasks', res.data);
//         this.meta = res.meta;
//         this.show = false;
//         this.loading = true;
//     }
// }
// this.userTasks(args);
                    },
                    exportCSV: function exportCSV() {
                        if (this.task_view) {
                            return;
                        }
                        var args = {
                            conditions: {
                                project_id: this.getProjectId,
                                user_id: this.getUserId,
                                start_date: this.start_date,
                                end_date: this.end_date
                            },
                            callback: function callback(res) {
                                this.downloadCSV({ data: res.data, title: this.__('User Activity Report', 'pm-pro'), project: this.project_title, user: this.unsername });
                            }
                        };
                        this.userTasks(args);
                    },
                    overDuePDF: function overDuePDF() {
                        var args = {
                            url: this.base_url + 'pm-pro/v2/users/' + PM_Vars.current_user.ID + '/advance-report/overdue-tasks/overdue-tasks-PDF/?',
                            conditions: {
                                project_id: !this.getProjectId ? '' : this.getProjectId,
                                user_id: !this.getUserId ? '' : this.getUserId,
                                start_date: this.$route.query.start_date,
                                due_date: this.$route.query.due_date,
                                per_page: -1
                            },
                            callback: function callback(res) {
// this.downloadCSV(
//     {
//         data: res.data,
//         title: this.__('Report for Overdue Tasks', 'pm-pro' ),
//         project: this.project_title, user: this.unsername
//     }
// );
                            }
                        };
                        this.downloadPDF(args);
                    }
                }
            });

            /***/ }),
        /* 107 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                props: ['projects', 'loading'],
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                data: function data() {
                    return {};
                },

                computed: {
                    taskView: function taskView() {
                        return this.$route.query.task_view;
                    }
                },
                methods: {
                    hasTasksInProject: function hasTasksInProject(project) {
                        var hasTask = false;
                        project.task_lists.data.map(function (taks_list) {
                            if (taks_list.tasks.data.length > 0) {
                                hasTask = true;
                            }
                        });
                        return hasTask;
                    },
                    hasTasksInList: function hasTasksInList(list) {
                        return list.tasks.data.length > 0;
                    },
                    assignees_at: function assignees_at(task) {
                        var _this = this;

                        if (!this.getUserId) {
                            return false;
                        }
                        var i = task.assignees.data.findIndex(function (user) {
                            return user.id == _this.getUserId;
                        });
                        return task.assignees.data[i].assigned_at;
                    },
                    completed_at: function completed_at(task) {
                        var _this2 = this;

                        if (!this.getUserId) {
                            return false;
                        }
                        var i = task.assignees.data.findIndex(function (user) {
                            return user.id == _this2.getUserId;
                        });
                        return task.assignees.data[i].completed_at;
                    },
                    projectEstimation: function projectEstimation(project) {
                        var total_estimation = 0,
                            completed_extimation = 0;
                        project.task_lists.data.map(function (task_list) {
                            task_list.tasks.data.map(function (task) {
                                total_estimation += parseInt(task.estimation, 10);
                                if (task.status == 'complete') {
                                    completed_extimation += parseInt(task.estimation, 10);
                                }
                            });
                        });

                        return {
                            total: total_estimation,
                            complete: completed_extimation
                        };
                    }
                }
            });

            /***/ }),
        /* 108 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Modal_vue__ = __webpack_require__(12);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__completed_task_results_vue__ = __webpack_require__(311);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





            /* harmony default export */ __webpack_exports__["a"] = ({
                beforeRouteEnter: function beforeRouteEnter(to, from, next) {
                    if (!pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                        next(false);
                    } else {
                        next(function (vm) {
                            vm.getReports();
                            vm.getProjects({
                                conditions: {
                                    per_page: -1,
                                    project_transform: false
                                }
                            });
                            vm.getAllusers();
                        });
                    }
                },
                data: function data() {
                    return {
                        meta: {},
                        show: false,
                        fetchReport: false,
                        assign_user: null,
                        projects: null,
                        select_user_text: __('All User', 'pm-pro'),
                        select_project_text: __('All Projects', 'pm-pro'),
                        current_page_number: 1,
                        run_report: __('Run Report', 'pm-pro'),
                        startDate: this.reduceMonth(),
                        endDate: pm.Moment().format('YYYY-MM-DD'),
                        showDropDownMenu: false
                    };
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],
                watch: {
                    '$route': function $route(route) {
                        this.current_page_number = route.params.current_page_number;
                        this.getReports();
                    }
                },
                computed: {
                    unsername: function unsername() {
                        if (this.assign_user) {
                            return this.assign_user.display_name;
                        }

                        return this.__('All Coworker', 'pm-pro');
                    },
                    completed_tasks: function completed_tasks() {
                        var projects = {};

                        this.$store.state.reports.completeTasks.forEach(function (task) {
                            projects[task.project_id] = {
                                'id': task.project_id,
                                'title': task.project_title,
                                'task_lists': {
                                    'data': {}
                                }
                            };
                        });

                        this.$store.state.reports.completeTasks.forEach(function (task) {
                            projects[task.project_id]['task_lists']['data'][task.task_list_id] = {
                                'id': task.task_list_id,
                                'title': task.task_list_title,
                                'tasks': {
                                    'data': {}
                                }
                            };
                        });

                        this.$store.state.reports.completeTasks.forEach(function (task) {
                            projects[task.project_id]['task_lists']['data'][task.task_list_id]['tasks']['data'][task.id] = task;
                        });

                        return projects;
                        return this.$store.state.reports.completeTasks;
                    },
                    totalResults: function totalResults() {
                        if (this.meta.total_tasks !== 'undefined') {
                            return this.meta.total_tasks;
                        }
                    },
                    total_pages: function total_pages() {
                        if (typeof this.meta.total_page !== 'undefined') {
                            return this.meta.total_page;
                        }
                    },
                    allprojects: function allprojects() {
                        var projects = this.$store.state.projects.sort(function (a, b) {
                            var atitle = a.title.toLowerCase();
                            var btitle = b.title.toLowerCase();

                            return atitle < btitle ? -1 : atitle > btitle ? 1 : 0;
                        });

                        if (!this.isEmpty(this.$route.query.project_id) && projects.length) {
                            var index = this.getIndex(projects, parseInt(this.$route.query.project_id), 'id');
                            this.projects = projects[index];
                        }

                        return projects.length ? projects : [];
                    }
                },
                created: function created() {
                    this.setFormData();
                },

                components: {
                    modal: __WEBPACK_IMPORTED_MODULE_0__Modal_vue__["a" /* default */],
                    'completed-task-results': __WEBPACK_IMPORTED_MODULE_1__completed_task_results_vue__["a" /* default */],
                    multiselect: pm.Multiselect.Multiselect
                },
                methods: {
                    setFormData: function setFormData() {

                        if (this.$route.query.start_date) {
                            this.startDate = this.$route.query.start_date;
                        }

                        if (this.$route.query.due_date) {
                            this.endDate = this.$route.query.due_date;
                        }
                    },
                    callBackDatePickerForm: function callBackDatePickerForm(date) {},
                    callBackDatePickerTo: function callBackDatePickerTo(date) {},
                    filterProject: function filterProject() {
                        if (!this.startDate || !this.startDate) {
                            pm.Toastr.error(__('Start and Due date field is required', 'pm-pro'));
                            return;
                        }
                        var query = {};
                        if (this.projects) {
                            query.project_id = this.projects.id;
                        }

                        if (this.assign_user) {
                            query.user_id = this.assign_user.id;
                        }

                        if (this.startDate) {
                            query.start_date = this.startDate;
                        }

                        if (this.endDate) {
                            query.due_date = this.endDate;
                        }

                        this.$router.push({
                            name: 'completed-tasks',
                            query: query
                        });

                        this.show = false;
                    },
                    condition: function condition() {
                        var self = this;

                        var start = pm.Moment().format('YYYY-MM-01'),
                            end = pm.Moment(new Date()).format('YYYY-MM-DD');

                        start = self.$route.query.start_date ? self.$route.query.start_date : start;
                        end = self.$route.query.due_date ? self.$route.query.due_date : end;

                        return {
                            project_id: !self.getProjectId ? '' : self.getProjectId,
                            users: self.assign_user ? self.assign_user.id : '',
                            completed_at_start: start,
                            completed_at: end,
                            with: 'project, task_list',
                            pages: self.current_page_number,
                            per_page: 20,
                            current_user_id: PM_Vars.current_user.ID,
                            status: 1
                        };
                    },
                    getReports: function getReports() {
                        var self = this;
                        self.fetchReport = false;

                        var args = {
                            url: self.base_url + 'pm/v2/tasks?',
                            conditions: self.condition(),
                            callback: function callback(res) {
                                self.$store.commit('reports/setCompleteTasks', res.data);
                                self.meta = res.meta;
                                self.fetchReport = true;
                                self.show = false;
                            }
                        };

                        self.getResults(args);
                    },
                    exportCSV: function exportCSV() {
                        var self = this;

                        var args = {
                            url: this.base_url + 'pm-pro/v2/users/' + PM_Vars.current_user.ID + '/advance-report/completed-tasks/csv/?',
                            conditions: self.condition(),
                            callback: function callback(res) {}
                        };

                        this.downloadCSV(args);
                    },
                    completedTaskPDF: function completedTaskPDF() {
                        var self = this;

                        var args = {
                            url: this.base_url + 'pm-pro/v2/users/' + PM_Vars.current_user.ID + '/advance-report/completed-tasks/pdf/?',
                            conditions: self.condition(),
                            callback: function callback(res) {}
                        };
                        this.downloadPDF(args);
                    },


// dropdown trigger
                    dropdownTrigger: function dropdownTrigger() {
                        this.showDropDownMenu = this.showDropDownMenu ? false : true;
                    },


// dropdown class toggler
                    dropdownToggleClass: function dropdownToggleClass() {
                        if (this.showDropDownMenu) {
                            return "pm-dropdown-menu pm-dropdown-open mt-10";
                        } else {
                            return "pm-settings pm-dropdown-menu";
                        }
                    }
                }
            });

            /***/ }),
        /* 109 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                props: ['projects'],
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                data: function data() {
                    return {
                        isRowExpanded: [],
                        individualTaskId: false,
                        individualProjectId: false,
                        hasSingleTask: false
                    };
                },
                created: function created() {},

                computed: {
                    hasTimeTracker: function hasTimeTracker() {
                        if (this.projects[0].task_lists.data[0].tasks.data.length && typeof this.projects[0].task_lists.data[0].tasks.data[0].time !== 'undefined') {
                            return true;
                        }
                        return false;
                    }
                },
                methods: {
                    openSingleTask: function openSingleTask(task) {
                        this.individualTaskId = parseInt(task.id);
                        this.individualProjectId = parseInt(task.project_id);
                        this.hasSingleTask = true;
                    },
                    closeTaskModal: function closeTaskModal() {
                        this.individualTaskId = false;
                        this.individualProjectId = false;
                        this.hasSingleTask = false;
                    },
                    collapsRow: function collapsRow(obj) {
                        if (this.isRowExpanded.findIndex(function (x) {
                            return x == obj.id;
                        }) == -1) {
                            return '';
                        } else {
                            return 'is-row-expanded';
                        }
                    },
                    toggleRow: function toggleRow(obj) {
                        var i = this.isRowExpanded.findIndex(function (x) {
                            return x == obj.id;
                        });
                        if (i == -1) {
                            this.isRowExpanded.push(obj.id);
                        } else {
                            this.isRowExpanded.splice(i, 1);
                        }
                    }
                }
            });

            /***/ }),
        /* 110 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(8);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Modal_vue__ = __webpack_require__(12);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__overdue_results_vue__ = __webpack_require__(319);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__mixin__);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





            /* harmony default export */ __webpack_exports__["a"] = ({
                beforeRouteEnter: function beforeRouteEnter(to, from, next) {
                    if (!pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                        next(false);
                    } else {
                        next(function (vm) {
                            vm.getProjects({
                                conditions: {
                                    project_transform: false,
                                    per_page: -1
                                }
                            });
                            vm.getAllusers();
                            vm.getOverdueReports();
                        });
                    }
                },
                data: function data() {
                    return {
                        meta: {},
                        show: false,
                        fetchReport: false,
                        assign_user: null,
                        projects: null,
                        select_user_text: __('All User', 'pm-pro'),
                        select_project_text: __('All Projects', 'pm-pro'),
                        current_page_number: 1,
                        run_report: __('Run Report', 'pm-pro'),
                        startDate: this.reduceMonth(),
                        endDate: pm.Moment().format('YYYY-MM-DD'),
                        showDropDownMenu: false
                    };
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_3__mixin___default.a],
                watch: {
                    '$route': function $route(route) {
                        this.current_page_number = route.params.current_page_number;
                        this.getOverdueReports();
                    }
                },

                computed: {
                    unsername: function unsername() {
                        if (this.assign_user) {
                            return this.assign_user.display_name;
                        }

                        return this.__('All Coworker', 'pm-pro');
                    },
                    overdue_tasks: function overdue_tasks() {
                        var projects = {};

                        this.$store.state.reports.overdueTasks.forEach(function (task) {
                            projects[task.project_id] = {
                                'id': task.project_id,
                                'title': task.project_title,
                                'task_lists': {
                                    'data': {}
                                }
                            };
                        });

                        this.$store.state.reports.overdueTasks.forEach(function (task) {
                            projects[task.project_id]['task_lists']['data'][task.task_list_id] = {
                                'id': task.task_list_id,
                                'title': task.task_list_title,
                                'tasks': {
                                    'data': {}
                                }
                            };
                        });

                        this.$store.state.reports.overdueTasks.forEach(function (task) {
                            projects[task.project_id]['task_lists']['data'][task.task_list_id]['tasks']['data'][task.id] = task;
                        });

                        return projects;
                    },
                    totalResults: function totalResults() {
                        if (this.meta.total_tasks !== 'undefined') {
                            return this.meta.total_tasks;
                        }
                    },
                    total_pages: function total_pages() {
                        if (typeof this.meta.total_page !== 'undefined') {

                            return this.meta.total_page;
                        }
                    },
                    allprojects: function allprojects() {
                        var projects = this.$store.state.projects.sort(function (a, b) {
                            var atitle = a.title.toLowerCase();
                            var btitle = b.title.toLowerCase();

                            return atitle < btitle ? -1 : atitle > btitle ? 1 : 0;
                        });

                        if (!this.isEmpty(this.$route.query.project_id) && projects.length) {
                            var index = this.getIndex(projects, parseInt(this.$route.query.project_id), 'id');
                            this.projects = projects[index];
                        }

                        return projects.length ? projects : [];
                    }
                },

                created: function created() {
                    this.setFormData();
                },


                components: {
                    modal: __WEBPACK_IMPORTED_MODULE_1__Modal_vue__["a" /* default */],
                    'overdue-result': __WEBPACK_IMPORTED_MODULE_2__overdue_results_vue__["a" /* default */],
                    multiselect: pm.Multiselect.Multiselect
                },

                methods: {
                    setFormData: function setFormData() {

                        if (this.$route.query.start_date) {
                            this.startDate = this.$route.query.start_date;
                        }

                        if (this.$route.query.due_date) {
                            this.endDate = this.$route.query.due_date;
                        }
                    },
                    reduceMonth: function reduceMonth() {
                        return pm.Moment().format('YYYY-MM-01');
                    },
                    callBackDatePickerForm: function callBackDatePickerForm(date) {},
                    callBackDatePickerTo: function callBackDatePickerTo(date) {},
                    filterProject: function filterProject() {
                        if (!this.startDate || !this.startDate) {
                            pm.Toastr.error(__('Start and Due date field is required', 'pm-pro'));
                            return;
                        }
                        if (!this.assign_user) {
//pm.Toastr.error(__('Please select user', 'pm-pro'));
//return;
                        }
                        var query = {};
                        if (this.projects) {
                            query.project_id = this.projects.id;
                        }

                        if (this.assign_user) {
                            query.user_id = this.assign_user.id;
                        }

                        if (this.startDate) {
                            query.start_date = this.startDate;
                        }

                        if (this.endDate) {
                            query.due_date = this.endDate;
                        }

                        this.$router.push({
                            name: 'overdue-tasks',
                            query: query
                        });

                        this.show = false;
                    },
                    condition: function condition() {
                        var self = this;
                        var start = pm.Moment().format('YYYY-MM-01');
                        var end = pm.Moment(new Date()).format('YYYY-MM-DD');

                        start = self.$route.query.start_date ? self.$route.query.start_date : start;
                        end = self.$route.query.due_date ? self.$route.query.due_date : end;

                        return {
                            project_id: self.getProjectId ? self.getProjectId : '',
                            due_date_start: start,
                            due_date: end,
                            users: self.assign_user ? self.assign_user.id : '',
                            due_date_operator: ['less_than'],
                            start_at_operator: ['greater_than_equal'],
                            with: 'project, task_list',
                            pages: self.current_page_number,
                            per_page: 20,
                            current_user_id: PM_Vars.current_user.ID,
                            status: 0
                        };
                    },
                    getOverdueReports: function getOverdueReports() {
                        var self = this;
                        self.fetchReport = false;

                        var args = {
                            url: self.base_url + 'pm/v2/tasks?',

                            data: self.condition(),

                            success: function success(res) {
                                pm.NProgress.done();

                                self.$store.commit('reports/setOverdueTasks', res.data);
                                self.meta = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, res.meta);
                                self.fetchReport = true;
                                self.show = false;
                            }
                        };

                        self.httpRequest(args);
                    },
                    exportCSV: function exportCSV() {
                        var args = {
                            url: this.base_url + 'pm-pro/v2/users/' + PM_Vars.current_user.ID + '/advance-report/overdue-tasks/csv/?',
                            conditions: this.condition(),
                            callback: function callback(res) {}
                        };
                        this.downloadCSV(args);
                    },
                    overDuePDF: function overDuePDF() {
                        var args = {
                            url: this.base_url + 'pm-pro/v2/users/' + PM_Vars.current_user.ID + '/advance-report/overdue-tasks/overdue-tasks-PDF/?',
                            conditions: this.condition(),
                            callback: function callback(res) {}
                        };
                        this.downloadPDF(args);
                    },


// dropdown trigger
                    dropdownTrigger: function dropdownTrigger() {
                        this.showDropDownMenu = this.showDropDownMenu ? false : true;
                    },


// dropdown class toggler
                    dropdownToggleClass: function dropdownToggleClass() {
                        if (this.showDropDownMenu) {
                            return "pm-dropdown-menu pm-dropdown-open mt-10";
                        } else {
                            return "pm-settings pm-dropdown-menu";
                        }
                    }
                }
            });

            /***/ }),
        /* 111 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(3);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                props: ['projects'],
                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                data: function data() {
                    return {
                        isRowExpanded: [],
                        individualTaskId: false,
                        individualProjectId: false,
                        hasSingleTask: false
                    };
                },
                created: function created() {},

                computed: {
                    hasTimeTracker: function hasTimeTracker() {
                        if (this.projects[0].task_lists.data[0].tasks.data.length && typeof this.projects[0].task_lists.data[0].tasks.data[0].time !== 'undefined') {
                            return true;
                        }
                        return false;
                    }
                },
                methods: {
                    openSingleTask: function openSingleTask(task) {
                        this.individualTaskId = parseInt(task.id);
                        this.individualProjectId = parseInt(task.project_id);
                        this.hasSingleTask = true;
                    },
                    closeTaskModal: function closeTaskModal() {
                        this.individualTaskId = false;
                        this.individualProjectId = false;
                        this.hasSingleTask = false;
                    },
                    collapsRow: function collapsRow(obj) {
                        if (this.isRowExpanded.findIndex(function (x) {
                            return x == obj.id;
                        }) == -1) {
                            return '';
                        } else {
                            return 'is-row-expanded';
                        }
                    },
                    toggleRow: function toggleRow(obj) {
                        var i = this.isRowExpanded.findIndex(function (x) {
                            return x == obj.id;
                        });
                        if (i == -1) {
                            this.isRowExpanded.push(obj.id);
                        } else {
                            this.isRowExpanded.splice(i, 1);
                        }
                    }
                }
            });

            /***/ }),
        /* 112 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                beforeRouteEnter: function beforeRouteEnter(to, from, next) {
                    if (pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                        next();
                    } else {
                        next('/');
                    }
                },


                mounted: function mounted() {
                    pm.NProgress.done();
                },

                created: function created() {}
            });

            /***/ }),
        /* 113 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                watch: {
                    '$route': function $route(route) {
                        if (route.name == 'reports') {
                            this.$router.push({ name: 'reports_component' });
                        }
                    }
                },
                created: function created() {
                    if (this.$route.name == 'reports') {
                        this.$router.push({ name: 'reports_component' });
                    }
                }
            });

            /***/ }),
        /* 114 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                beforeRouteEnter: function beforeRouteEnter(to, from, next) {
                    if (pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                        next();
                    } else {
                        next('/');
                    }
                },
                data: function data() {
                    return {
                        show_spinner: false,
                        loading: true

// activities_data: [],
// activities_meta: {},
                    };
                },
                created: function created() {
                    this.getProgress();
                },


                watch: {
                    '$route': function $route(route) {
                        if (typeof route.params.current_page_number !== 'undefined') {
                            this.getProgress();
                        } else {
                            this.activities_data = [];
                            this.getProgress();
                        }
                    }
                },
                computed: {
                    activities: function activities() {
                        if (this.activities_data.length) {
                            var records = this.activities_data,
                                self = this;
                            var activities = _.chain(records).groupBy(self.occurrenceDay).map(self.groupToDay).sortBy('day').value();
                            return activities;
                        }

                        return [];
                    },
                    loaded_activities: function loaded_activities() {
                        if (this.activities_data.length) return this.activities_data.length;
                    },
                    total_activity: function total_activity() {
                        if (typeof this.activities_meta.pagination !== 'undefined') return this.activities_meta.pagination.total;
                    },
                    current_page: function current_page() {
                        if (typeof this.$route.params.current_page_number !== 'undefined') {
                            return parseInt(this.$route.params.current_page_number, 10);
                        } else {
                            return 1;
                        }
                    },
                    activities_data: function activities_data() {
                        return this.$store.state.progress.activities_data;
                    },
                    activities_meta: function activities_meta() {
                        return this.$store.state.progress.activities_meta;
                    },
                    isFetchProgress: function isFetchProgress() {
                        return this.$store.state.progress.isFetchProgress;
                    }
                },
                methods: {
                    occurrenceDay: function occurrenceDay(occurrence) {
                        var date = new Date(occurrence.committed_at.date);
                        var date = pm.Moment(date).format('YYYY-MM-DD');

                        return pm.Moment(date).startOf('day').format('YYYY-MM-DD');
                    },
                    groupToDay: function groupToDay(group, day) {
                        return {
                            date: day,
                            activities: group
                        };
                    },


                    /**
                     * WP settings date format convert to moment date format with time zone
                     *
                     * @param  string date
                     *
                     * @return string
                     */
                    actiivtyGroupDate: function actiivtyGroupDate(date, format) {
                        if (!date) {
                            return;
                        }
                        date = new Date(date);
                        return pm.Moment(date).format(format);
                    },

                    getProgress: function getProgress(args) {
                        var self = this;
                        var pre_define = {
                            conditions: {
                                page: this.current_page,
                                per_page: 20
                            },

                            callback: false
                        };

                        var args = jQuery.extend(true, pre_define, args);
                        var condition = self.generateConditions(args.conditions);

                        var request = {
                            type: 'GET',
                            data: args.data,
                            url: self.base_url + 'pm-pro/v2/progress?' + condition,
                            success: function success(res) {
// self.activities_data = self.activities_data.concat(res.data);
// self.activities_meta = res.meta;
                                self.show_spinner = false;
                                self.loading = false;
                                self.$store.commit('progress/setProgress', res);
                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                                pm.NProgress.done();
                            }
                        };

                        self.httpRequest(request);
                    },
                    loadMore: function loadMore() {
                        this.show_spinner = true;
                        this.$router.push({
                            name: 'progress_pagination',
                            params: {
                                current_page_number: this.current_page + 1
                            }
                        });
                    },
                    project_url: function project_url(project_id) {
                        return this.$router.resolve({ name: 'pm_overview', params: { project_id: project_id } }).href;
                    }
                }
            });

            /***/ }),
        /* 115 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                name: 'modal',
                props: {
                    isActive: Boolean,
                    fullWidth: {
                        type: Boolean,
                        default: false
                    },
                    maxWidth: {
                        type: [String, Number],
                        default: 'none'
                    },
                    width: {
                        type: [String, Number],
                        default: 'auto'
                    }
                },

                computed: {
                    classes: function classes() {
                        return {

                            'modal-active': this.isActive,
                            'modal-fullwidth': this.fullWidth

                        };
                    },
                    styles: function styles() {
                        var style;
                        if (!this.fullWidth) {

                            style = {
                                maxWidth: this.maxWidth === 'none' ? undefined : isNaN(this.maxWidth) ? this.maxWidth : this.maxWidth + 'px',
                                width: this.width === 'auto' ? undefined : isNaN(this.width) ? this.width : this.width + 'px'
                            };
                        } else {
                            var pm = document.getElementById("wedevs-project-manager");
                            style = {
                                maxWidth: pm.clientWidth - 100 + 'px',
                                maxHeight: pm.clientHeight - 100 + 'px'
                            };
                        }
                        return style;
                    }
                }
            });

            /***/ }),
        /* 116 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//

//typeof PM_Pro_Vars === 'undefined'? PM_Pro_Vars.manage_capability
            /* harmony default export */ __webpack_exports__["a"] = ({
                created: function created() {
                    setLocaleData(PM_Vars.language.pm_pro);
                    this.registerModule();
                    this.setManageCapability();
                    this.setCommentMentionSettings();
                    this.addFilters();
                },


                methods: {
                    registerModule: function registerModule() {
                        var self = this;

                        weDevsPmProModules.forEach(function (module) {
                            var store = __webpack_require__(347)("./" + module.path + '/store.js');
                            self.registerStore(module.name, store.default);
                        });

                        weDevsPmProAddonModules.forEach(function (module) {
                            var store = __webpack_require__(359)("./" + module.path + '/views/assets/src/store/store');
                            var mixin = __webpack_require__(370)("./" + module.path + '/views/assets/src/helpers/mixin/mixin');

                            PmProMixin[module.name] = mixin.default;
                            self.registerStore(module.name, store.default);
                        });
                    },
                    setManageCapability: function setManageCapability() {
                        this.$root.$store.commit('setManageCapability', PM_Pro_Vars.manage_capability);
                    },
                    setCommentMentionSettings: function setCommentMentionSettings() {
                        PmProComment['mentions'] = {
                            queryBy: 'display_name',
                            delimiter: ['@', '#'],
                            delay: 0,
                            items: 10,
                            insert: function insert(item) {
                                var mentionElement = ['<span style="color: #0073aa;" data-pm-user-id=":', item.id, ':" ', 'data-pm-user=":', item.nicename, ':">', '@', item.display_name, '</span>&nbsp;'].join('');

                                return mentionElement;
                            }
                        };
                    },
                    addFilters: function addFilters() {}
                }
            });

            /***/ }),
        /* 117 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(8);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__folder_create_form_vue__ = __webpack_require__(393);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__file_lists_vue__ = __webpack_require__(395);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__file_upload_form_vue__ = __webpack_require__(424);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__doc_create_form_vue__ = __webpack_require__(41);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__link_create_form_vue__ = __webpack_require__(63);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__mixin__);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









            /* harmony default export */ __webpack_exports__["a"] = ({
                data: function data() {
                    return {
                        breadcrumbs: []
                    };
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_6__mixin___default.a],
                created: function created() {
                    this.selfGetFolders();
                },
                mounted: function mounted() {},


                watch: {
                    '$route': function $route() {
                        this.selfGetFolders();
                    }
                },

                computed: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapState('projectFiles', []), pm.Vuex.mapState('proProjectFiles', ['isFolder', 'isFile', 'isDoc', 'isLink', 'folders', 'files']), {
                    parentId: function parentId() {
// var dir = this.$store.state.proProjectFiles.meta;

// if (dir.hasOwnProperty('parent')) {
//     return dir.parent.data.parent;
// }

// return false;
                        var dir = this.$store.state.proProjectFiles.meta;
                        this.breadcrumbs = [];
                        if (dir.hasOwnProperty('parent')) {
                            this.getBreadcrumbs(dir.parent.data);
                        }
                        return this.breadcrumbs.reverse();
                    }
                }),

                components: {
                    'create-folder-form': __WEBPACK_IMPORTED_MODULE_1__folder_create_form_vue__["a" /* default */],
                    'file-lists': __WEBPACK_IMPORTED_MODULE_2__file_lists_vue__["a" /* default */],
                    'file-upload-form': __WEBPACK_IMPORTED_MODULE_3__file_upload_form_vue__["a" /* default */],
                    'doc-create-form': __WEBPACK_IMPORTED_MODULE_4__doc_create_form_vue__["a" /* default */],
                    'link-create-form': __WEBPACK_IMPORTED_MODULE_5__link_create_form_vue__["a" /* default */]
                },

                methods: {
                    getBreadcrumbs: function getBreadcrumbs(parent) {
                        if (typeof parent == 'undefined' || !parent.hasOwnProperty('id')) {
                            return;
                        }

                        this.breadcrumbs.push({
                            parent: parent.parent,
                            title: parent.title
                        });
                        this.getBreadcrumbs(parent.parents.data[0]);
                    },
                    selfGetFolders: function selfGetFolders() {

                        var data = {
                            conditions: {
                                folder_id: this.$route.params.folder_id
                            },

                            callback: function callback() {
                                pm.NProgress.done();
                            }
                        };

                        this.getProFiles(data);
                    }
                }
            });

            /***/ }),
        /* 118 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                data: function data() {
                    return {
                        base_dir_url: PM_Pro_Vars.dir_url,
                        folderName: '',
                        private: false,
                        submit_disabled: false,
                        show_spinner: false,
                        parent: 0,
                        create_a_folder: __('Create a folder', 'pm-pro')
                    };
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                methods: {
                    selfFolderCreate: function selfFolderCreate() {
                        var self = this;

                        var folder = {
                            data: {
                                title: self.folderName,
                                private: self.private ? 1 : 0,
                                parent: self.$route.params.folder_id ? self.$route.params.folder_id : 0,
                                project_id: self.project_id,
                                type: 'folder'
                            },

                            callback: function callback() {}
                        };

                        self.createFolder(folder);
                    }
                }
            });

            /***/ }),
        /* 119 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(8);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__mixin__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__move_file_vue__ = __webpack_require__(398);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




            /* harmony default export */ __webpack_exports__["a"] = ({
                data: function data() {
                    return {
                        base_dir_url: PM_Pro_Vars.dir_url,
                        isdirUpdate: false,
                        submit_disabled: false,
                        moveFileItems: {
                            file: {},
                            fileId: false,
                            projectId: false,
                            popupModal: false
                        }
                    };
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_1__mixin___default.a],
                computed: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapState('proProjectFiles', ['files'])),

                created: function created() {},


                components: {
                    'move-file': __WEBPACK_IMPORTED_MODULE_2__move_file_vue__["a" /* default */]
                },

                methods: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapMutations('proProjectFiles', ['updateEditMode']), {
                    checkInFolder: function checkInFolder(file) {
                        this.$router.push({
                            name: 'pro_file_lists',
                            params: {
                                folder_id: file.id
                            }
                        });
                    },
                    updatePrivacy: function updatePrivacy(folder, private_status) {
                        var formData = {
                            data: {
                                id: folder.id,
                                private: private_status ? 1 : 0
                            }
                        };

                        this.updateFolder(formData);
                    },
                    updateFolderName: function updateFolderName(folder, $element) {
                        var formData = {
                            data: {
                                id: folder.id,
                                title: folder.title
                            }
                        };

                        this.updateEditMode({
                            id: folder.id,
                            status: false
                        });

                        this.updateFolder(formData);
                    },
                    dirFieldShowHide: function dirFieldShowHide(folder) {
// if(!pm.hooks.applyFilters('before_update_directory_name', folder.editMode, folder)) {
//     return;
// }
                        var self = this;
                        if (!this.can_edit_file(folder)) {
                            return;
                        }
                        this.updateEditMode({
                            id: folder.id,
                            status: true
                        });

                        pm.Vue.nextTick(function () {
                            self.$refs.inputFolderName[0].focus();
                        });
                    },
                    selfDeleteFolder: function selfDeleteFolder(folder) {
                        var self = this;
                        var args = {

                            id: folder.id,

                            callback: function callback() {}
                        };

                        this.deleteFolder(args);
                    },
                    move: function move(items) {
                        this.moveFileItems.popupModal = true;
                        this.moveFileItems.fileId = parseInt(items.id);
                        this.moveFileItems.projectId = parseInt(items.project_id);
                    },
                    checkFolderlength: function checkFolderlength(items) {
                        items = items.filter(function (item) {
                            return item.file_type == "folder";
                        });

                        if (items.length > 1) {
                            return true;
                        }
                        return false;
                    }
                })
            });

            /***/ }),
        /* 120 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(401);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator__ = __webpack_require__(404);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);


//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    items: {
                        type: [Object],
                        default: function _default() {
                            return {
                                fileId: {},
                                projectId: false,
                                popupModal: false
                            };
                        }
                    }
                },

                data: function data() {
                    return {
                        folder: '',
                        asyncListLoading: false,
                        spinner: false,
                        isLoading: false,
                        options: {},
                        dropitems: []
                    };
                },


                mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],

                components: {
                    'multiselect': pm.Multiselect.Multiselect
                },

                created: function created() {
                    var _this = this;

                    return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default()( /*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee() {
                        var self, folders;
                        return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context) {
                            while (1) {
                                switch (_context.prev = _context.next) {
                                    case 0:
                                        self = _this;
                                        _context.next = 3;
                                        return self.GetFolders();

                                    case 3:
                                        folders = _context.sent;

                                    case 4:
                                    case 'end':
                                        return _context.stop();
                                }
                            }
                        }, _callee, _this);
                    }))();
                },
                mounted: function mounted() {},


                methods: {
                    asyncFind: function asyncFind(evt) {
                        var self = this,
                            timeout = 2000,
                            timer;

                        if (evt == '') {
                            return;
                        }

                        clearTimeout(timer);
                        self.asyncListLoading = true;

                        timer = setTimeout(function () {
                            if (self.abort) {
                                self.abort.abort();
                            }

                            var requestData = {
                                type: 'GET',
                                url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files/searchfolder',
                                data: {
                                    title: evt
                                },

                                success: function success(res) {
                                    self.asyncListLoading = false;
                                    self.isLoading = false;
                                    self.setSearchfiles(res.data);
                                }
                            };

                            self.isLoading = true;
                            self.abort = self.httpRequest(requestData);
                        }, timeout);
                    },
                    setSearchfiles: function setSearchfiles(files) {
                        var self = this;

                        files.forEach(function (file) {
                            if (file.id == self.items.dropitems.id) {
                                return;
                            }

                            var index = self.getIndex(self.items.dropitems, file.id, 'id');

                            if (index !== false) {
                                return;
                            }

                            self.items.dropitems.push({
                                id: file.id,
                                title: file.title
                            });
                        });
                    },
                    move: function move() {
                        var self = this;
                        this.spinner = true;
                        self.fileReceive({ destination: this.folder.id, source: this.items.fileId }, function () {
                            self.spinner = false;
                            self.closeModal();
                        });
                    },
                    closeModal: function closeModal() {
                        this.items.popupModal = false;
                    },
                    GetFolders: function GetFolders() {
                        var self = this;
                        var data = {
                            conditions: {},

                            callback: function callback(responseData) {
                                responseData.forEach(function (item) {
                                    if (self.items.fileId == item.id) {
                                        return;
                                    }

                                    if (item.file_type == "folder") {

                                        self.dropitems.push({
                                            id: item.id,
                                            title: item.title
                                        });
                                    }
                                });
                            }
                        };

                        this.getFolder(data);
                    }
                }
            });

            /***/ }),
        /* 121 */
        /***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
            var anObject = __webpack_require__(11);
            var aFunction = __webpack_require__(21);
            var SPECIES = __webpack_require__(7)('species');
            module.exports = function (O, D) {
                var C = anObject(O).constructor;
                var S;
                return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
            };


            /***/ }),
        /* 122 */
        /***/ (function(module, exports, __webpack_require__) {

            var ctx = __webpack_require__(15);
            var invoke = __webpack_require__(415);
            var html = __webpack_require__(73);
            var cel = __webpack_require__(30);
            var global = __webpack_require__(6);
            var process = global.process;
            var setTask = global.setImmediate;
            var clearTask = global.clearImmediate;
            var MessageChannel = global.MessageChannel;
            var Dispatch = global.Dispatch;
            var counter = 0;
            var queue = {};
            var ONREADYSTATECHANGE = 'onreadystatechange';
            var defer, channel, port;
            var run = function () {
                var id = +this;
// eslint-disable-next-line no-prototype-builtins
                if (queue.hasOwnProperty(id)) {
                    var fn = queue[id];
                    delete queue[id];
                    fn();
                }
            };
            var listener = function (event) {
                run.call(event.data);
            };
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
            if (!setTask || !clearTask) {
                setTask = function setImmediate(fn) {
                    var args = [];
                    var i = 1;
                    while (arguments.length > i) args.push(arguments[i++]);
                    queue[++counter] = function () {
// eslint-disable-next-line no-new-func
                        invoke(typeof fn == 'function' ? fn : Function(fn), args);
                    };
                    defer(counter);
                    return counter;
                };
                clearTask = function clearImmediate(id) {
                    delete queue[id];
                };
// Node.js 0.8-
                if (__webpack_require__(26)(process) == 'process') {
                    defer = function (id) {
                        process.nextTick(ctx(run, id, 1));
                    };
// Sphere (JS game engine) Dispatch API
                } else if (Dispatch && Dispatch.now) {
                    defer = function (id) {
                        Dispatch.now(ctx(run, id, 1));
                    };
// Browsers with MessageChannel, includes WebWorkers
                } else if (MessageChannel) {
                    channel = new MessageChannel();
                    port = channel.port2;
                    channel.port1.onmessage = listener;
                    defer = ctx(port.postMessage, port, 1);
// Browsers with postMessage, skip WebWorkers
// IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
                } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
                    defer = function (id) {
                        global.postMessage(id + '', '*');
                    };
                    global.addEventListener('message', listener, false);
// IE8-
                } else if (ONREADYSTATECHANGE in cel('script')) {
                    defer = function (id) {
                        html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
                            html.removeChild(this);
                            run.call(id);
                        };
                    };
// Rest old browsers
                } else {
                    defer = function (id) {
                        setTimeout(ctx(run, id, 1), 0);
                    };
                }
            }
            module.exports = {
                set: setTask,
                clear: clearTask
            };


            /***/ }),
        /* 123 */
        /***/ (function(module, exports) {

            module.exports = function (exec) {
                try {
                    return { e: false, v: exec() };
                } catch (e) {
                    return { e: true, v: e };
                }
            };


            /***/ }),
        /* 124 */
        /***/ (function(module, exports, __webpack_require__) {

            var anObject = __webpack_require__(11);
            var isObject = __webpack_require__(16);
            var newPromiseCapability = __webpack_require__(48);

            module.exports = function (C, x) {
                anObject(C);
                if (isObject(x) && x.constructor === C) return x;
                var promiseCapability = newPromiseCapability.f(C);
                var resolve = promiseCapability.resolve;
                resolve(x);
                return promiseCapability.promise;
            };


            /***/ }),
        /* 125 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__uploader_vue__ = __webpack_require__(427);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




            /* harmony default export */ __webpack_exports__["a"] = ({
                data: function data() {
                    return {
                        files: [],
                        deleted_files: [],
                        private: false,
                        show_spinner: false,
                        submit_disabled: false,
                        file_submit: __('Submit', 'pm-pro')
                    };
                },


                components: {
                    'file-uploader': __WEBPACK_IMPORTED_MODULE_0__uploader_vue__["a" /* default */]
                },
                mixins: [__WEBPACK_IMPORTED_MODULE_1__mixin___default.a],
                methods: {
                    selfUploadFile: function selfUploadFile() {
                        if (!this.files.length) {
                            return;
                        }
                        var formData = {
                            files: this.files,
                            private: this.private ? 1 : 0,
                            callback: function callback() {}
                        };

                        this.uploadFiles(formData);
                    },
                    uploadFiles: function uploadFiles(args) {
                        var self = this,
                            pre_define = {
                                files: [],
                                type: 'pro_file',
                                parent: this.$route.params.folder_id,
                                callback: false
                            };

                        var args = jQuery.extend(true, pre_define, args);
                        var data = new FormData();

                        args.files.forEach(function (file) {
                            if (typeof file.attachment_id === 'undefined') {
                                var decode = self.dataURLtoFile(file.thumb, file.name);
                                data.append('files[]', decode);
                            }
                        });

                        data.append('private', args.private);
                        data.append('type', args.type);
                        data.append('parent', args.parent);

// Showing loading option
                        this.show_spinner = true;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/files',
                            type: 'POST',
                            data: data,
                            cache: false,
                            contentType: false,
                            processData: false,
                            success: function success(res) {

// Display a success toast, with a title
                                if (res.message) {
                                    pm.Toastr.success(res.message);
                                }
                                self.show_spinner = false;
                                self.setAFiles(res.data);
                                self.showHideFile(false);

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.show_spinner = false;
                                pm.Toastr.error(res.messsage);

                                self.submit_disabled = false;
                            }
                        };
                        self.httpRequest(request_data);
                    }
                }
            });

            /***/ }),
        /* 126 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(4);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



// Register a global custom directive called v-pm-popup-box
            pm.Vue.directive('pm-uploader', {
                inserted: function inserted(el, binding, vnode) {

                    new PM_Uploader('pm-upload-pickfiles', 'pm-upload-container', vnode.context);
                },

                update: function update(el, binding, vnode) {
//new PM_Uploader('pm-upload-pickfiles', 'pm-upload-container', vnode.context );
                }
            });

            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    files: {
                        type: Array,
                        default: function _default() {
                            return [];
                        }
                    },
                    delete: {
                        type: Array,
                        default: function _default() {
                            return [];
                        }
                    },
                    single: {
                        type: Boolean,
                        default: false
                    }
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
                methods: {
                    /**
                     * Set the uploaded file
                     *
                     * @param  object file_res
                     *
                     * @return void
                     */
                    fileUploaded: function fileUploaded(file_res) {
                        if (typeof this.files == 'undefined') {
                            this.files = [];
                        }

                        this.files.push(file_res.res.file);
                    },

                    /**
                     * Delete file
                     *
                     * @param  object file_id
                     *
                     * @return void
                     */
                    deletefile: function deletefile(file_id) {
                        if (!confirm(this.text.are_you_sure)) {
                            return;
                        }
                        var self = this;
                        var index = self.getIndex(self.files, file_id, 'id');

                        if (index !== false) {
                            self.files.splice(index, 1);
                            this.delete.push(file_id);
                        }
                    }
                }
            });

            /***/ }),
        /* 127 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    actionData: {
                        type: [Array, Object],
                        default: function _default() {
                            return [];
                        }
                    }
                },

                data: function data() {
                    return {
                        projectId: this.project_id
                    };
                },
                created: function created() {},


                watch: {
                    actionData: function actionData(menu) {}
                },

                methods: {
                    setActiveMenu: function setActiveMenu(item) {
                        var name = this.$route.name;

                        if (name == item) {
                            return 'active';
                        }
                    }
                }

            });

            /***/ }),
        /* 128 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


            /* harmony default export */ __webpack_exports__["a"] = ({
                data: function data() {
                    return {
                        task_start_field: this.getSettings('task_start_field', true),
                        daily_digest: this.getSettings('daily_digest', true),
                        deleted_files: [],
                        logo: this.getLogo(),
                        logo_id: null,
                        logo_url: null,
                        wpmedia: null
                    };
                },

                components: {
//'file-uploader': FileUploader
                },
                created: function created() {
                    var self = this;
                    pm_add_filter('setting_data', function (value) {
                        value.task_start_field = self.task_start_field;
                        value.daily_digest = self.daily_digest;

//if (self.logo_id ) {
                        value.logo = self.logo_id;
//}

                        return value;
                    }, 1);
                },
                destroyed: function destroyed() {
                    pm_remove_filter('setting_data', '');
                },

                methods: {
                    handleLogoUpload: function handleLogoUpload() {
                        var self = this;

// If the media frame already exists, reopen it.
                        if (this.wpmedia) {
                            this.wpmedia.open();
                            return;
                        }

// Create a new media frame
                        this.wpmedia = wp.media({
                            title: 'Select or Upload Media Of Your Chosen Persuasion',
                            button: {
                                text: 'Use this media'
                            },
                            multiple: false // Set to true to allow multiple files to be selected
                        });

                        this.wpmedia.on('select', function () {
                            var attachment = self.wpmedia.state().get('selection').first().toJSON();
                            self.logo_id = attachment.id;

                            self.logo.splice(0, 1, {
                                'thumb': attachment.url
                            });
                        });

                        this.wpmedia.open();
                    },
                    getLogo: function getLogo() {

                        if (jQuery.isEmptyObject(PM_Pro_Vars.pm_logo)) {
                            return [];
                        } else {
                            return [PM_Pro_Vars.pm_logo];
                        }
                    },
                    handleLogoUploadDelete: function handleLogoUploadDelete(logo) {
                        this.logo = [];
                        this.logo_id = null;
                    }
                }

            });

            /***/ }),
        /* 129 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({});

            /***/ }),
        /* 130 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    actionData: {
                        type: Object,
                        default: function _default() {
                            return {};
                        }
                    }
                },
                data: function data() {
                    return {
                        privacy: typeof this.actionData.meta !== 'undefined' ? this.actionData.meta.privacy == '1' : false
                    };
                },
                created: function created() {
                    pm_add_filter('before_discuss_save', this.append_privacy, 1);
                },
                destroyed: function destroyed() {
                    pm_remove_filter('before_discuss_save', '');
                },

                methods: {
                    append_privacy: function append_privacy(value) {
                        value.append("privacy", this.privacy);
                        return value;
                    }
                }
            });

            /***/ }),
        /* 131 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                name: 'ListPrivacy',
                props: {
                    actionData: {
                        type: Object,
                        default: function _default() {
                            return {};
                        }
                    }
                },
                data: function data() {
                    return {
                        privacy: typeof this.actionData.meta !== 'undefined' ? this.actionData.meta.privacy == '1' : false
                    };
                },
                created: function created() {
                    if (this.user_can('view_private_list')) {
                        pm_add_filter('before_task_list_save', [this, 'append_privacy'], 1);
                    }
                },
                destroyed: function destroyed() {
                    pm_remove_filter('before_task_list_save', [this, 'append_privacy']);
                },

                methods: {
                    append_privacy: function append_privacy(value) {
                        value.privacy = this.privacy;
                        return value;
                    }
                }
            });

            /***/ }),
        /* 132 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                name: 'TaskPrivacy',
                props: {
                    actionData: {
                        type: Object,
                        default: function _default() {
                            return {};
                        }
                    }
                },
                data: function data() {
                    return {
                        privacy: typeof this.actionData.meta !== 'undefined' ? this.actionData.meta.privacy == '1' : false
                    };
                },
                created: function created() {
                    pmBus.$on('pm_after_create_task', this.afterCreateTask);
                },
                destroyed: function destroyed() {
                    pm_remove_filter('before_task_save', [this, 'append_privacy']);
                },

                methods: {
                    afterCreateTask: function afterCreateTask() {
                        this.onPrivate(false);
                    },
                    onPrivate: function onPrivate(status) {
                        this.privacy = status;

                        if (this.user_can('view_private_task')) {
                            pm_add_filter('before_task_save', [this, 'append_privacy'], 2);
                        }
                    },
                    append_privacy: function append_privacy(value) {
                        value.privacy = this.privacy;
                        return value;
                    }
                }
            });

            /***/ }),
        /* 133 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    actionData: {
                        type: Object,
                        default: function _default() {
                            return {};
                        }
                    }
                },
                data: function data() {
                    return {
                        privacy: typeof this.actionData.meta !== 'undefined' ? this.actionData.meta.privacy == '1' : false
                    };
                },
                created: function created() {
                    if (this.user_can('view_private_milestone')) {
                        pm_add_filter('before_milestone_save', this.append_privacy, 1);
                    }
                },
                destroyed: function destroyed() {
                    pm_remove_filter('before_milestone_save', '');
                },

                methods: {
                    append_privacy: function append_privacy(value) {
                        value.privacy = this.privacy;
                        return value;
                    }
                }
            });

            /***/ }),
        /* 134 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                props: ['actionData'],
                data: function data() {
                    return {
                        department_id: 0,
                        departments: []
                    };
                },
                created: function created() {

                    if (this.actionData.department_id) {
                        this.department_id = this.actionData.department_id;
                    }

                    this.getDepartments();
                },

                methods: {
                    departmentChange: function departmentChange() {
                        this.actionData['department_id'] = this.department_id;
                    },
                    getDepartments: function getDepartments() {

                        var self = this;

                        var request_data = {
                            url: self.base_url + '/erp/v1/hrm/departments',
                            type: 'GET',
                            data: {},
                            success: function success(res) {
                                self.departments = res;
                            },
                            error: function error(res) {
//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    }
                }
            });

            /***/ }),
        /* 135 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives__ = __webpack_require__(459);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__directives__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(136);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                data: function data() {
                    return {
                        search_all_text: __('Search ...', 'pm-pro'),
                        search_by_client: __('Search by Client2...', 'pm-pro')
                    };
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_1__mixin___default.a],
                computed: {
                    inProject: function inProject() {
                        return Boolean(this.project_id);
                    }
                }
            });

            /***/ }),
        /* 136 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                computed: {
                    listViewType: function listViewType() {
                        var meta = this.$store.state.projectMeta;
                        if (meta.hasOwnProperty('list_view_type')) {

                            if (meta.list_view_type && typeof meta.list_view_type.meta_value !== 'undefined') {
                                return meta.list_view_type.meta_value;
                            }
                        }
                        return false;
                    }
                },
                methods: {
                    get_search_user_project: function get_search_user_project(args) {
                        var self = this;
                        var pre_define = {
                            data: {},
                            conditions: {},
                            callback: false
                        };

                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = self.generateConditions(args.conditions);

                        var request = {
                            url: self.base_url + 'pm-pro/v2/search_by_client?' + conditions,
                            success: function success(res) {
                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                            }
                        };

                        return self.httpRequest(request);
                    },
                    search_all: function search_all(args) {
                        var self = this;
                        var pre_define = {
                            data: {},
                            conditions: {
                                project_id: this.project_id ? this.project_id : ''
                            },
                            callback: false
                        };

                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = self.generateConditions(args.conditions);

                        var request = {
                            url: self.base_url + 'pm/v2/search?' + conditions,
                            success: function success(res) {
                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                            }
                        };

                        return self.httpRequest(request);
                    },
                    ResultItemUrl: function ResultItemUrl(item) {
                        var url = "#";
                        switch (item.type) {
                            case 'task':
                                if (this.listViewType && this.listViewType == 'kanboard') {
                                    url = this.$router.resolve({ name: 'kanboard_single_task', params: { project_id: item.project_id, task_id: item.id } }).href;
                                } else if (this.listViewType && this.listViewType == 'archive') {
                                    url = this.$router.resolve({ name: 'archived_single_task', params: { project_id: item.project_id, task_id: item.id } }).href;
                                } else {
                                    url = this.$router.resolve({ name: 'lists_single_task', params: { project_id: item.project_id, task_id: item.id } }).href;
                                }
                                break;
                            case 'subtask':
                                url = this.$router.resolve({ name: 'lists_single_task', params: { project_id: item.project_id, task_id: item.parent_id } }).href;
                                break;
                            case 'project':
                                url = this.$router.resolve({ name: 'pm_overview', params: { project_id: item.id } }).href;
                                break;
                            case 'milestone':
                                url = this.$router.resolve({ name: 'milestones', params: { project_id: item.project_id } }).href;
                                break;

                            case 'discussion_board':
                                url = this.$router.resolve({ name: 'individual_discussions', params: { project_id: item.project_id, discussion_id: item.id } }).href;
                                break;
                            case 'task_list':
                                url = this.$router.resolve({ name: 'single_list', params: { project_id: item.project_id, list_id: item.id } }).href;
                                break;
                            default:
                                url = '#';
                                break;
                        }
                        return url;
                    }
                }
            };

            /***/ }),
        /* 137 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(136);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__search_loading_effect__ = __webpack_require__(464);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





            /* harmony default export */ __webpack_exports__["a"] = ({
                components: {
                    searchLoadingEffict: __WEBPACK_IMPORTED_MODULE_1__search_loading_effect__["a" /* default */]
                },
                data: function data() {
                    return {
                        search_all_text: __('Search ...', 'pm-pro'),
                        resultbox: false,
                        searachContent: '',
                        searchItems: [{
                            key: 'tasks',
                            value: 'Tasks',
                            loading: true,
                            results: []
                        }, {
                            key: 'task_list',
                            value: 'Task Lists',
                            loading: true,
                            results: []
                        }, {
                            key: 'discussion_board',
                            value: 'Messages',
                            loading: true,
                            results: []
                        }, {
                            key: 'milestone',
                            value: 'Milestones',
                            loading: true,
                            results: []
                        }],
                        selectItems: [],
                        timer: false,
                        loading: false

                    };
                },

                mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],

                watch: {
                    selectItems: function selectItems(new_val, old_val) {
                        if (new_val.length > old_val.length) {
                            this.searchproject();
                        }
                    }
                },

                created: function created() {
                    this.selectItems.push({
                        key: 'tasks',
                        value: 'Tasks',
                        loading: true,
                        results: []
                    });
                },

                computed: {
                    noResults: function noResults() {
                        var i = true;
                        this.selectItems.forEach(function (item) {
                            if (!item.loading && item.results.length) {
                                i = false;
                            }
                        });

                        return i;
                    },
                    allLoaded: function allLoaded() {
                        return this.selectItems.filter(function (i) {
                            return !i.loading;
                        }).length == this.selectItems.length;
                    },
                    resultClass: function resultClass() {
                        var rclass = [];
                        var isload = this.selectItems.some(function (i) {
                            return !i.loading;
                        });

                        if (isload) {
                            rclass.push('has-loaded');
                        } else {
                            rclass.push('not-loaded');
                        }

                        return rclass;
                    }
                },
                methods: {
                    toggleSelectbox: function toggleSelectbox() {
                        this.resultbox = !this.selectbox;
                    },
                    isItemSelect: function isItemSelect(item) {
                        var key = item.key;
                        var index = this.getIndex(this.selectItems, key, 'key');

                        if (index === false) {
                            return false;
                        } else {
                            return true;
                        }
                    },
                    closeResultBox: function closeResultBox() {
                        this.resultbox = false;
                    },
                    searchproject: function searchproject() {
                        var _this = this;

                        if (this.timer) {
                            clearTimeout(this.timer);
                        }

                        var self = this;
                        var query = this.searachContent.trim();

                        if (query.length < 1) {
                            return;
                        }

                        this.loading = true;
                        this.resultbox = true;

                        this.timer = setTimeout(function () {
                            _this.selectItems.forEach(function (item, i) {
                                _this.selectItems[i].loading = true;
                                var args = {
                                    conditions: {
                                        query: query,
                                        model: [item.key]
                                    },
                                    callback: function callback(res) {
                                        self.loading = false;
                                        this.selectItems[i].results = res;
                                        this.selectItems[i].loading = false;
                                    }
                                };

                                _this.search_all(args);
                            });
                        }, 500);
                    }
                }
            });

            /***/ }),
        /* 138 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__elements_vue__ = __webpack_require__(139);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    actionData: {
                        type: [Object],
                        default: function _default() {
                            return {};
                        }
                    }
                },
                data: function data() {
                    return {
                        popperOption: {
                            placement: 'bottom-end',
                            modifiers: { offset: { offset: '0, 3px' } }
                        },
                        storeTaskLabel: [],
                        isThisTaskLabelActive: false,
                        listId: 0,
                        taskId: 0
                    };
                },

                components: {
                    'label-elements': __WEBPACK_IMPORTED_MODULE_0__elements_vue__["a" /* default */]
                },
                created: function created() {
                    this.listId = parseInt(this.actionData.listId);

                    if (typeof this.actionData.id !== 'undefined') {
                        this.taskId = this.actionData.id;
                    }
                    this.setStoreTaskLabel();
                },

                computed: {
                    taskLabels: function taskLabels() {
                        if (typeof this.$store.state.project.labels === 'undefined') {
                            return false;
                        }
                        if (!this.$store.state.project.labels.data.length) {
                            return false;
                        }
                        return this.$store.state.project.labels.data;
                    },
                    calendarView: function calendarView() {
                        if (typeof this.$store.state.calendarFlag === 'undefined') {
                            return false;
                        }

                        return this.$store.state.calendarFlag;
                    }
                },
                methods: {
                    onSelect: function onSelect(data) {
                        var label = data.label;

                        var id = label.id;

                        if (this.storeTaskLabel.indexOf(id) == -1) {
                            this.storeTaskLabel.push(id);
                        } else {
                            var index = this.storeTaskLabel.indexOf(id);
                            this.storeTaskLabel.splice(index, 1);
                        }
                    },
                    setStoreTaskLabel: function setStoreTaskLabel() {
                        var self = this;

                        if (typeof this.actionData.labels === 'undefined') {
                            return [];
                        }

                        this.actionData.labels.data.forEach(function (label, index) {
                            self.storeTaskLabel.push(parseInt(label.id));
                        });
                    },
                    showHideLabel: function showHideLabel() {
                        this.isThisTaskLabelActive = this.isThisTaskLabelActive ? false : true;
                    },
                    appendTaskLabel: function appendTaskLabel(value) {
//console.log(value, this.storeTaskLabel);
//value.task_label = this.storeTaskLabel;

                        return value;
                    }
                },
                destroyed: function destroyed() {
//pm_remove_filter( 'before_task_save', [this, 'addFilter'] );
                }
            });

            /***/ }),
        /* 139 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_elements_vue__ = __webpack_require__(140);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_00aaab19_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_elements_vue__ = __webpack_require__(471);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_elements_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_00aaab19_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_elements_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/task-label/elements.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-00aaab19", Component.options)
                } else {
                    hotAPI.reload("data-v-00aaab19", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 140 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    labels: {
                        type: [Array, Boolean],
                        default: function _default() {
                            return [];
                        }
                    },
                    storeTaskLabel: {
                        type: [Array],
                        default: function _default() {
                            return [];
                        }
                    },
                    listId: {
                        type: [Number],
                        default: function _default() {
                            return 0;
                        }
                    },
                    taskId: {
                        type: [Number],
                        default: function _default() {
                            return 0;
                        }
                    }
                },

                created: function created() {
                    this.addFilter();
                },


                methods: {
                    addFilter: function addFilter() {
                        var self = this,
                            nameSpace = 'wedevsPMTaskLabel_' + this.listId + '_' + this.taskId;

//do not allow multiple
                        pm.hooks.removeFilter('before_task_save', nameSpace);

                        pm.hooks.addFilter('before_task_save', nameSpace, function (task) {
                            var filter_task_id = typeof task.task_id === 'undefined' ? 0 : task.task_id;
                            if (task.list_id === self.listId && filter_task_id === self.taskId) {
                                task.task_labels = self.storeTaskLabel.length ? self.storeTaskLabel : false;
                            }

                            return task;
                        });
                    },
                    removeFilterPrevAssing: function removeFilterPrevAssing(namespace) {
                        pm.hooks.removeFilter('before_task_save', namespace);
                    },
                    isSelected: function isSelected(label) {
                        var id = parseInt(label.id),
                            className = '';

                        if (this.storeTaskLabel.indexOf(id) != -1) {
                            className = 'icon-right';
                        }

                        return className;
                    },
                    selectForStore: function selectForStore(label) {

                        this.$emit('onSelect', {
                            label: label
                        });
                    }
                },
                destroyed: function destroyed() {
                    pm.hooks.removeFilter('before_task_save', 'wedevsPMTaskLabel');
                }
            });

            /***/ }),
        /* 141 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__elements_vue__ = __webpack_require__(139);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    actionData: {
                        type: [Object],
                        default: function _default() {
                            return {};
                        }
                    }
                },

                data: function data() {
                    return {};
                },
                created: function created() {},


                components: {},

                computed: {},

                methods: {}
            });

            /***/ }),
        /* 142 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(8);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__element_vue__ = __webpack_require__(480);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    actionData: {
                        type: [Object],
                        default: function _default() {
                            return {};
                        }
                    }
                },

                data: function data() {
                    return {
                        showLabelPopOver: false,
                        listId: 0,
                        taskId: 0,
                        storeTaskLabel: [],
                        updating: false,
                        isPopOverOpen: false,
                        labelLoading: false,
                        projectLoading: false
                    };
                },
                created: function created() {

                    var task = this.actionData.task;
                    this.listId = task.task_list_id;
                    this.taskId = task.id;
                    window.addEventListener('click', this.windowActivity);
                    this.setStoreTaskLabel();
                    pmBus.$on('pm_before_destroy_single_task', this.before_destroy_single_task);
                },


                components: {
                    'label-element': __WEBPACK_IMPORTED_MODULE_1__element_vue__["a" /* default */]
                },

                computed: {
                    taskLabels: function taskLabels() {
                        var self = this;

                        if (this.isEmpty(this.$store.state.project) && !this.projectLoading) {
                            this.projectLoading = true;

                            var project = this.getProject({
                                project_id: this.actionData.task.project_id,
                                callback: function callback() {
                                    self.projectLoading = false;
                                }
                            });
                        }

                        if (!this.isEmpty(this.$store.state.project)) {
                            return this.$store.state.project.labels.data;
                        }

                        return [];
                    },
                    isSingleTask: function isSingleTask() {
                        return this.$store.state.is_single_task;
                    }
                },

                methods: {
                    has_task_permission: function has_task_permission() {
                        var permission = this.can_edit_task(this.actionData.task);
                        return permission;
                    },
                    deleteLabel: function deleteLabel(label) {
                        this.onSelect({ label: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, label) });
                    },


// popper options
                    popperOptions: function popperOptions() {
                        return {
                            placement: 'bottom-end',
                            modifiers: { offset: { offset: '0, 3px' } }
                        };
                    },
                    before_destroy_single_task: function before_destroy_single_task(task) {
                        this.$store.commit('isSigleTask', false);
                    },
                    onSelect: function onSelect(data) {
                        if (this.labelLoading) {
                            return;
                        }

                        var self = this;

                        self.updateLabelStore(data.label);
                        self.updating = true;

                        self.updateLabel(function () {
                            self.updating = false;
                        });
                    },
                    updateLabelStore: function updateLabelStore(label) {
                        var id = label.id;

                        if (this.storeTaskLabel.indexOf(id) == -1) {
                            this.storeTaskLabel.push(id);
                        } else {
                            var index = this.storeTaskLabel.indexOf(id);
                            this.storeTaskLabel.splice(index, 1);
                        }
                    },
                    setStoreTaskLabel: function setStoreTaskLabel() {
                        var self = this;

                        if (typeof this.actionData.task === 'undefined') {
                            return [];
                        }

                        this.actionData.task.labels.data.forEach(function (label, index) {
                            self.storeTaskLabel.push(parseInt(label.id));
                        });
                    },
                    windowActivity: function windowActivity(el) {
                        var toltip = jQuery(el.target).closest('.tooltip'),
                            toltip = toltip.attr('id'),
                            button = jQuery(el.target).closest('.label-title-wrap');

                        if (!button.length && typeof toltip === 'undefined') {
                            this.showLabelPopOver = false;
                        }
                    },
                    getLabelPopoverStatus: function getLabelPopoverStatus() {
                        this.isPopOverOpen = this.isPopOverOpen ? false : true;
                    },
                    filterUserId: function filterUserId(users) {
                        var cuser = [];
                        cuser = users.map(function (user) {
                            return user.id;
                        });

                        if (!cuser.length) {
                            cuser = [0];
                        }

                        return cuser;
                    },
                    updateLabel: function updateLabel(callBack) {

                        var self = this;
                        var data = {
                            title: self.actionData.task.title,
                            task_labels: self.storeTaskLabel.length ? self.storeTaskLabel : '',
                            board_id: self.actionData.task.task_list_id,
                            assignees: self.filterUserId(this.actionData.task.assignees.data) //this.assigned_to,
                        };
                        var request_data = {
                            url: self.base_url + 'pm/v2/projects/' + self.actionData.task.project_id + '/tasks/' + self.actionData.task.id + '/update',
                            type: 'POST',
                            data: data,
                            success: function success(res) {
                                self.labelLoading = false;
                                self.actionData.task.labels = res.data.labels;
                                if (typeof callBack === 'function') {
                                    callBack(res);
                                }
                            },
                            error: function error(res) {}
                        };

                        self.labelLoading = true;
                        self.httpRequest(request_data);
                    }
                }
            });

            /***/ }),
        /* 143 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    labels: {
                        type: [Array, Boolean],
                        default: function _default() {
                            return [];
                        }
                    },
                    storeTaskLabel: {
                        type: [Array],
                        default: function _default() {
                            return [];
                        }
                    },
                    listId: {
                        type: [Number],
                        default: function _default() {
                            return 0;
                        }
                    },
                    taskId: {
                        type: [Number],
                        default: function _default() {
                            return 0;
                        }
                    },
                    label: {
                        type: [Object],
                        default: function _default() {
                            return {};
                        }
                    }
                },

                created: function created() {
//this.addFilter();
                },


                methods: {
                    addFilter: function addFilter() {
                        var self = this,
                            nameSpace = 'wedevsPMTaskLabel_' + this.listId + '_' + this.taskId;

//do not allow multiple
                        pm.hooks.removeFilter('before_task_save', nameSpace);

                        pm.hooks.addFilter('before_task_save', nameSpace, function (task) {
                            var filter_task_id = typeof task.task_id === 'undefined' ? 0 : task.task_id;
                            if (task.list_id === self.listId && filter_task_id === self.taskId) {
                                task.task_labels = self.storeTaskLabel.length ? self.storeTaskLabel : false;
                            }

                            return task;
                        });
                    },
                    removeFilterPrevAssing: function removeFilterPrevAssing(namespace) {
                        pm.hooks.removeFilter('before_task_save', namespace);
                    },
                    isSelected: function isSelected(label) {
                        var id = parseInt(label.id),
                            className = '';

                        if (this.storeTaskLabel.indexOf(id) != -1) {
                            className = 'icon-right icon-pm-incomplete';
                        }

                        return className;
                    },
                    selectForStore: function selectForStore(label) {
                        this.$emit('onSelect', {
                            label: label
                        });
                    }
                },
                destroyed: function destroyed() {
                    pm.hooks.removeFilter('before_task_save', 'wedevsPMTaskLabel');
                }
            });

            /***/ }),
        /* 144 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__user_reports_task_estimation_vue__ = __webpack_require__(490);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



            /* harmony default export */ __webpack_exports__["a"] = ({
                watch: {
                    '$route': function $route(route) {
                        this.getReports();
                    }
                },

                data: function data() {
                    return {
                        reports: {},
                        isResolving: true,
                        startDate: moment().startOf('month').format('MM/DD/YYYY'),
                        endDate: moment().endOf('month').format('MM/DD/YYYY'),
                        task_start_field: true
                    };
                },


                components: {
                    'user-reports-task-estimation': __WEBPACK_IMPORTED_MODULE_0__user_reports_task_estimation_vue__["a" /* default */]
                },

                created: function created() {
                    this.setDate();
                    this.getReports();
                },


                methods: {
                    moment: function moment() {
                        return pm.Moment();
                    },
                    getReports: function getReports() {
                        var self = this;
                        var user_id = this.$route.params.user_id;

                        var url = self.base_url + 'pm-pro/v2/report-summary?type=user&users=' + user_id + '&startDate=' + this.startDate + '&endDate=' + this.endDate;

                        var request = {
                            type: 'GET',
                            url: url,
                            success: function success(res) {
                                self.isResolving = false, self.reports = res.data;
                                pm.NProgress.done();
                            }
                        };

                        self.isResolving = true, this.$router.push({
                            name: 'mytask-reports',
                            params: {
                                user_id: this.$route.params.user_id
                            },
                            query: {
                                start_date: moment(this.startDate).format('YYYY-MM-DD'),
                                end_date: moment(this.endDate).format('YYYY-MM-DD')
                            }
                        });
                        self.httpRequest(request);
                    },
                    setDate: function setDate() {
                        if (this.$route.query.start_date) {
                            this.startDate = moment(this.$route.query.start_date).format('MM/DD/YYYY');
                        }

                        if (this.$route.query.end_date) {
                            this.endDate = moment(this.$route.query.end_date).format('MM/DD/YYYY');
                        }
                    },
                    getStartDate: function getStartDate() {
                        return this.startDate ? new Date(this.startDate) : pm.Moment();
                    },
                    getEndDate: function getEndDate() {
                        return this.endDate ? new Date(this.endDate) : pm.Moment();
                    },
                    onChangeDate: function onChangeDate(star, end) {

                        this.startDate = pm.Moment(star).format('MM/DD/YYYY');
                        this.endDate = pm.Moment(end).format('MM/DD/YYYY');

                        this.getReports();
                    },
                    deleteDate: function deleteDate() {}
                }
            });

            /***/ }),
        /* 145 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__ = __webpack_require__(17);
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

            /**
             * Required jQuery methods
             *
             * @type Object
             */
            var userReportsProjectsEstimation = {
                chart: function chart(el, binding, vnode) {
                    var data = {
                        labels: userReportsProjectsEstimation.getLabels(vnode.context),
                        datasets: [{
                            label: __('Est. Hours', 'pm-pro'),
                            borderWidth: 1,
                            fillColor: "#f77726",
                            strokeColor: "#f77726",
                            pointColor: "#f77726",
                            pointStrokeColor: "#f77726",
                            pointHighlightFill: "#f77726",
                            pointHighlightStroke: "#f77726",
                            data: userReportsProjectsEstimation.getEstimatedHours(vnode.context),
                            backgroundColor: "#f77726"
                        }, {
                            label: vnode.context.reports.report_for == 'task' ? __('Completed Tasks', 'pm-pro') : __('Completed Subtasks', 'pm-pro'),
                            borderWidth: 1,
                            fillColor: "#4bc0c0",
                            strokeColor: "#4bc0c0",
                            pointColor: "#4bc0c0",
                            pointStrokeColor: "#4bc0c0",
                            pointHighlightFill: "#4bc0c0",
                            pointHighlightStroke: "#4bc0c0",
                            data: userReportsProjectsEstimation.getCompletedTasks(vnode.context),
                            backgroundColor: "#4bc0c0"
                        }]
                    };

                    Chart.defaults.responsive = true;
                    var ctx = el.getContext("2d");
// This will get the first returned node in the jQuery collection.

// Destroy if canvas is already used.
                    if (window.pmMTUserReportProjectEst instanceof Chart) window.pmMTUserReportProjectEst.destroy();

                    window.pmMTUserReportProjectEst = new pm.Chart(ctx, {
                        type: 'bar',
                        data: data,
                        options: {
                            responsive: true,
                            scales: {
                                y: {
                                    ticks: {
                                        min: 0
                                        //stepSize: userReportsProjectsEstimation.getStepSize(vnode.context)
                                    },
                                    scaleLabel: {
                                        display: true,
                                        labelString: ''
                                    }
                                },

                                x: {
// Change here
                                    barPercentage: 0.5
                                }
                            },

                            plugins: {
                                datalabels: {

                                    anchor: function anchor(context) {
                                        return 'end';
                                    },
                                    align: function align(context) {
                                        return 'center';
                                    },
                                    backgroundColor: function backgroundColor(context) {
                                        return context.dataset.backgroundColor;
                                    },
                                    borderColor: 'white',
                                    borderRadius: 25,
                                    borderWidth: 2,
                                    color: function color(context) {
                                        return 'white';
                                    },
                                    font: {
                                        weight: 'normal'
                                    },
                                    formatter: Math.round
                                }
                            }
                        },
                        animationSteps: 60,
                        tooltipTemplate: "<%= labels + sss %>%",
                        animationEasing: "easeOutQuart"
                    });
                },

                getLabels: function getLabels(self) {
                    var labels = [];
                    jQuery.each(self.reports.projects.data, function (key, report) {
                        jQuery.each(report.data, function (key2, data) {

//Checking has estimation hour
                            if (report.meta.report_for == 'tasks') {
                                if (parseFloat(data.estimated_task_hours) > 0) {
                                    labels.push(data.project.title.replace(/ .*/, ''));
                                }
                            } else {
                                if (parseFloat(data.estimated_sub_task_hours) > 0) {
                                    labels.push(data.project.title.replace(/ .*/, ''));
                                }
                            }
                        });
                    });

                    return labels;
                },
                getCompletedTasks: function getCompletedTasks(self) {
                    var completedTasks = [];

                    jQuery.each(self.reports.projects.data, function (key, report) {
                        jQuery.each(report.data, function (key2, data) {

//Checking has estimation hour
                            if (report.meta.report_for == 'tasks') {
                                if (parseFloat(data.estimated_task_hours) > 0) {
                                    completedTasks.push(data.completed_tasks);
                                }
                            } else {
                                if (parseFloat(data.estimated_sub_task_hours) > 0) {
                                    completedTasks.push(data.completed_sub_tasks);
                                }
                            }
                        });
                    });

                    return completedTasks;
                },
                getEstimatedHours: function getEstimatedHours(self) {
                    var estimatedHours = [];

                    jQuery.each(self.reports.projects.data, function (key, report) {
                        jQuery.each(report.data, function (key2, data) {

//Checking has estimation hour
                            if (report.meta.report_for == 'tasks') {
                                if (parseFloat(data.estimated_task_hours) > 0) {
                                    estimatedHours.push(data.estimated_task_hours);
                                }
                            } else {
                                if (parseFloat(data.estimated_sub_task_hours) > 0) {
                                    estimatedHours.push(data.estimated_sub_task_hours);
                                }
                            }
                        });
                    });

                    return estimatedHours;
                }
            };

// Register a global custom directive called v-pm-sortable
            pm.Vue.directive('user-report-projects-estimation', {
                inserted: function inserted(el, binding, vnode) {
                    userReportsProjectsEstimation.chart(el, binding, vnode);
                }

// update: function (el, binding, vnode) {
//     userReportsProjectsEstimation.chart(el, binding, vnode);
// }
            });

            /**
             * Required jQuery methods
             *
             * @type Object
             */
            var userReportTaskTypeEstimation = {
                chart: function chart(el, binding, vnode) {
                    var data = {
                        labels: userReportTaskTypeEstimation.getLabels(vnode.context),
                        datasets: [{
                            label: __('Est. Hours', 'pm-pro'),
                            borderWidth: 1,
                            fillColor: "#f77726",
                            strokeColor: "#f77726",
                            pointColor: "#f77726",
                            pointStrokeColor: "#f77726",
                            pointHighlightFill: "#f77726",
                            pointHighlightStroke: "#f77726",
                            data: userReportTaskTypeEstimation.getEstimatedHours(vnode.context),
                            backgroundColor: "#f77726"
                        }, {
                            label: __('Completed Tasks', 'pm-pro'),
                            borderWidth: 1,
                            fillColor: "#4bc0c0",
                            strokeColor: "#4bc0c0",
                            pointColor: "#4bc0c0",
                            pointStrokeColor: "#4bc0c0",
                            pointHighlightFill: "#4bc0c0",
                            pointHighlightStroke: "#4bc0c0",
                            data: userReportTaskTypeEstimation.getCompletedTasks(vnode.context),
                            backgroundColor: "#4bc0c0"
                        }]
                    };

                    Chart.defaults.responsive = true;
                    var ctx = el.getContext("2d");
// This will get the first returned node in the jQuery collection.

// Destroy if canvas is already used.
                    if (window.pmMTUserReportTaskTypeEst instanceof Chart) window.pmMTUserReportTaskTypeEst.destroy();

                    window.pmMTUserReportTaskTypeEst = new pm.Chart(ctx, {
                        type: 'bar',
                        data: data,
                        options: {
                            responsive: true,
                            scales: {
                                y: {
                                    ticks: {
                                        min: 0
                                        //stepSize: 1
                                    },
                                    scaleLabel: {
                                        display: true,
                                        labelString: ''
                                    }
                                },

                                x: {
// Change here
                                    barPercentage: 0.5
                                }
                            },

                            plugins: {
                                datalabels: {

                                    anchor: function anchor(context) {
                                        return 'end';
                                    },
                                    align: function align(context) {
                                        return 'center';
                                    },
                                    backgroundColor: function backgroundColor(context) {
                                        return context.dataset.backgroundColor;
                                    },
                                    borderColor: 'white',
                                    borderRadius: 25,
                                    borderWidth: 2,
                                    color: function color(context) {
                                        return 'white';
                                    },
                                    font: {
                                        weight: 'normal'
                                    },
                                    formatter: Math.round
                                }
                            }
                        },
                        pointDotRadius: 8,
                        animationSteps: 60,
                        tooltipTemplate: "<%= labels + sss %>%",
                        animationEasing: "easeOutQuart"
                    });
                },

                getLabels: function getLabels(self) {
                    var labels = [];

                    jQuery.each(self.reports.task_types.data, function (key, report) {
                        jQuery.each(report.data, function (key2, data) {
                            labels.push(data.type.title);
                        });
                    });

                    return labels;
                },
                getCompletedTasks: function getCompletedTasks(self) {
                    var completedTasks = [];

                    jQuery.each(self.reports.task_types.data, function (key, report) {
                        jQuery.each(report.data, function (key2, data) {
                            completedTasks.push(data.completed);
                        });
                    });

                    return completedTasks;
                },
                getEstimatedHours: function getEstimatedHours(self) {
                    var estimatedHours = [];

                    jQuery.each(self.reports.task_types.data, function (key, report) {
                        jQuery.each(report.data, function (key2, data) {
                            estimatedHours.push(data.estimated_hours);
                        });
                    });

                    return estimatedHours;
                }
            };

// Register a global custom directive called v-pm-sortable
            pm.Vue.directive('user-report-task-type-estimation', {
                inserted: function inserted(el, binding, vnode) {
                    userReportTaskTypeEstimation.chart(el, binding, vnode);
                }

// update: function (el, binding, vnode) {
//     userReportTaskTypeEstimation.chart(el, binding, vnode);
// }
            });

            /**
             * Required jQuery methods
             *
             * @type Object
             */
            var userReportSubTaskTypeEstimation = {
                chart: function chart(el, binding, vnode) {
                    var data = {
                        labels: userReportSubTaskTypeEstimation.getLabels(vnode.context),
                        datasets: [{
                            label: __('Est. Hours', 'pm-pro'),
                            borderWidth: 1,
                            fillColor: "#f77726",
                            strokeColor: "#f77726",
                            pointColor: "#f77726",
                            pointStrokeColor: "#f77726",
                            pointHighlightFill: "#f77726",
                            pointHighlightStroke: "#f77726",
                            data: userReportSubTaskTypeEstimation.getEstimatedHours(vnode.context),
                            backgroundColor: "#f77726"
                        }, {
                            label: __('Completed Subtasks', 'pm-pro'),
                            borderWidth: 1,
                            fillColor: "#4bc0c0",
                            strokeColor: "#4bc0c0",
                            pointColor: "#4bc0c0",
                            pointStrokeColor: "#4bc0c0",
                            pointHighlightFill: "#4bc0c0",
                            pointHighlightStroke: "#4bc0c0",
                            data: userReportSubTaskTypeEstimation.getCompletedTasks(vnode.context),
                            backgroundColor: "#4bc0c0"
                        }]
                    };

                    Chart.defaults.responsive = true;
                    var ctx = el.getContext("2d");
// This will get the first returned node in the jQuery collection.

// Destroy if canvas is already used.
                    if (window.pmMTUserReportSubtaskTypeEst instanceof Chart) window.pmMTUserReportSubtaskTypeEst.destroy();

                    window.pmMTUserReportSubtaskTypeEst = new pm.Chart(ctx, {
                        type: 'bar',
                        data: data,
                        options: {
                            responsive: true,
                            scales: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()({
                                x: {
                                    ticks: {
                                        min: 0
                                        //stepSize: 1
                                    },
                                    scaleLabel: {
                                        display: true,
                                        labelString: ''
                                    }
                                }

                            }, 'x', {
// Change here
                                barPercentage: 0.5
                            }),
                            plugins: {
                                datalabels: {

                                    anchor: function anchor(context) {
                                        return 'end';
                                    },
                                    align: function align(context) {
                                        return 'center';
                                    },
                                    backgroundColor: function backgroundColor(context) {
                                        return context.dataset.backgroundColor;
                                    },
                                    borderColor: 'white',
                                    borderRadius: 25,
                                    borderWidth: 2,
                                    color: function color(context) {
                                        return 'white';
                                    },
                                    font: {
                                        weight: 'normal'
                                    },
                                    formatter: Math.round
                                }
                            }
                        },
                        pointDotRadius: 8,
                        animationSteps: 60,
                        tooltipTemplate: "<%= labels + sss %>%",
                        animationEasing: "easeOutQuart"
                    });
                },

                getLabels: function getLabels(self) {
                    var labels = [];

                    jQuery.each(self.reports.sub_task_types.data, function (key, report) {
                        jQuery.each(report.data, function (key2, data) {
                            labels.push(data.type.title);
                        });
                    });

                    return labels;
                },
                getCompletedTasks: function getCompletedTasks(self) {
                    var completedTasks = [];

                    jQuery.each(self.reports.sub_task_types.data, function (key, report) {
                        jQuery.each(report.data, function (key2, data) {
                            completedTasks.push(data.completed);
                        });
                    });

                    return completedTasks;
                },
                getEstimatedHours: function getEstimatedHours(self) {
                    var estimatedHours = [];

                    jQuery.each(self.reports.sub_task_types.data, function (key, report) {
                        jQuery.each(report.data, function (key2, data) {
                            estimatedHours.push(data.estimated_hours);
                        });
                    });

                    return estimatedHours;
                }
            };

// Register a global custom directive called v-pm-sortable
            pm.Vue.directive('user-report-sub-task-type-estimation', {
                inserted: function inserted(el, binding, vnode) {
                    userReportSubTaskTypeEstimation.chart(el, binding, vnode);
                }

// update: function (el, binding, vnode) {
//     userReportSubTaskTypeEstimation.chart(el, binding, vnode);
// }
            });

            /* harmony default export */ __webpack_exports__["a"] = ({
                props: {
                    reports: {
                        type: [Object, Array],
                        default: function _default() {
                            return {};
                        }
                    }
                },

                data: function data() {
                    return {
                        grapVisibility: true
                    };
                },


                watch: {
                    reports: {
                        handler: function handler(recent, old) {
                            var _this = this;

                            this.grapVisibility = false;

                            setTimeout(function () {
                                _this.grapVisibility = true;
                            }, 100);
                        },


                        deep: true
                    }
                },

                created: function created() {
                    this.getUsers();
                },


                computed: {
                    users: function users() {
                        return this.$store.state.timeTracker.users;
                    }
                },

                methods: {
                    hasResults: function hasResults() {
                        return false;
                    },
                    hasLength: function hasLength(obj) {
                        if (jQuery.isEmptyObject(obj)) {
                            return false;
                        }
                        return true;
                    },
                    secondToTime: function secondToTime(second) {
                        var time = this.secondsToHms(second);

                        return time.hour + ':' + time.minute;
                    },
                    timeGenerate: function timeGenerate(h, m) {
                        var seconds = parseInt(h) * 3600 + parseInt(m) * 60;
                        var time = this.secondsToHms(seconds);

                        return time.hour + ':' + time.minute + ':' + time.second;
                    },
                    getUserName: function getUserName(user_id) {
                        user_id = String(user_id);
                        var index = this.getIndex(this.users, user_id, 'user_id');

                        if (index === false) {
                            return '';
                        }
                        return this.users[index].display_name;
                    },
                    filterNullEstProject: function filterNullEstProject(project) {
                        var self = this;
                        var filtered = [];

                        jQuery.each(project, function (key, data) {

//Checking has estimation hour
                            if (self.reports.report_for == 'tasks') {
                                if (parseFloat(data.estimated_task_hours) > 0) {
                                    filtered.push(data);
                                }
                            } else {
                                if (parseFloat(data.estimated_sub_task_hours) > 0) {
                                    filtered.push(data);
                                }
                            }
                        });

                        return filtered;
                    },
                    filterNullEstTaskType: function filterNullEstTaskType() {}
                }
            });

            /***/ }),
        /* 146 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
//
//
//
//
//
//
//
//
//
//

            /* harmony default export */ __webpack_exports__["a"] = ({
                methods: {
                    routeLink: function routeLink(name) {
                        var route = { name: 'mytask-' + name };

                        if (typeof this.$route.params.user_id !== 'undefined') {
                            route.params = { user_id: this.$route.params.user_id };
                        }

                        return route;
                    }
                }
            });

            /***/ }),
        /* 147 */,
        /* 148 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            __webpack_require__.p = PM_Pro_Vars.dir_url + 'views/assets/js/';

            __webpack_require__(149);

            /***/ }),
        /* 149 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _store = __webpack_require__(150);

            var _store2 = _interopRequireDefault(_store);

            var _router = __webpack_require__(151);

            var _router2 = _interopRequireDefault(_router);

            var _directives = __webpack_require__(341);

            var _directives2 = _interopRequireDefault(_directives);

            var _mixin = __webpack_require__(342);

            var _mixin2 = _interopRequireDefault(_mixin);

            __webpack_require__(343);

            var _App = __webpack_require__(346);

            var _App2 = _interopRequireDefault(_App);

            var _files = __webpack_require__(388);

            var _files2 = _interopRequireDefault(_files);

            var _settings = __webpack_require__(433);

            var _settings2 = _interopRequireDefault(_settings);

            var _settings3 = __webpack_require__(436);

            var _settings4 = _interopRequireDefault(_settings3);

            var _privacy = __webpack_require__(441);

            var _privacy2 = _interopRequireDefault(_privacy);

            var _department = __webpack_require__(450);

            var _department2 = _interopRequireDefault(_department);

            var _search = __webpack_require__(455);

            var _search2 = _interopRequireDefault(_search);

            var _label = __webpack_require__(467);

            var _label2 = _interopRequireDefault(_label);

            __webpack_require__(485);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            __webpack_require__.p = PM_Pro_Vars.dir_url + 'views/assets/js/';

            weDevs_PM_Components.push({
                hook: 'pm-before-router-view',
                component: 'pm-pro',
                property: _App2.default
            });

            weDevs_PM_Components.push({
                hook: 'pm_file_footer',
                component: 'file-lists',
                property: _files2.default
            });

            /***/ }),
        /* 150 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = new pm.Vuex.Store({
                state: {

                    getIndex: function getIndex(itemList, id, slug) {
                        var index = false;

                        itemList.forEach(function (item, key) {
                            if (item[slug] == id) {
                                index = key;
                            }
                        });

                        return index;
                    }
                },
                mutations: {}
            });

            /***/ }),
        /* 151 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            __webpack_require__(152);

            __webpack_require__(155);

            var _router = __webpack_require__(190);

            var _router2 = _interopRequireDefault(_router);

            __webpack_require__(195);

            __webpack_require__(220);

            __webpack_require__(229);

            __webpack_require__(258);

            __webpack_require__(45);

            __webpack_require__(259);

            var _router3 = __webpack_require__(272);

            var _router4 = _interopRequireDefault(_router3);

            var _router5 = __webpack_require__(337);

            var _router6 = _interopRequireDefault(_router5);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            /***/ }),
        /* 152 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _pageTabContent = __webpack_require__(153);

            var _pageTabContent2 = _interopRequireDefault(_pageTabContent);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevsPMRegisterChildrenRoute('settings_root', [{
                path: 'pages',
                component: _pageTabContent2.default,
                name: 'page_settings_tab'
            }]);

            /***/ }),
        /* 153 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_page_tab_content_vue__ = __webpack_require__(49);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_076f6664_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_page_tab_content_vue__ = __webpack_require__(154);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_page_tab_content_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_076f6664_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_page_tab_content_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/settings/page-tab-content.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-076f6664", Component.options)
                } else {
                    hotAPI.reload("data-v-076f6664", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 154 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", [
                    _c("div", { staticClass: "metabox-holder" }, [
                        _c("div", { staticClass: "group", attrs: { id: "pm_mails" } }, [
                            _c(
                                "form",
                                {
                                    attrs: { method: "post", action: "options.php" },
                                    on: {
                                        submit: function($event) {
                                            $event.preventDefault()
                                            return _vm.saveEmailSettings()
                                        }
                                    }
                                },
                                [
                                    _c("h2", [_vm._v(_vm._s(_vm.__("Page Settings", "pm-pro")))]),
                                    _vm._v(" "),
                                    _c("table", { staticClass: "form-table" }, [
                                        _c("tbody", [
                                            _c("tr", [
                                                _c("th", { attrs: { scope: "row" } }, [
                                                    _c("label", { attrs: { for: "pm_page" } }, [
                                                        _vm._v(_vm._s(_vm.__("Front-end", "pm-pro")))
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("td", [
                                                    _c(
                                                        "select",
                                                        {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.frontEndPage,
                                                                    expression: "frontEndPage"
                                                                }
                                                            ],
                                                            staticClass: "page-drop-down",
                                                            on: {
                                                                change: function($event) {
                                                                    var $$selectedVal = Array.prototype.filter
                                                                        .call($event.target.options, function(o) {
                                                                            return o.selected
                                                                        })
                                                                        .map(function(o) {
                                                                            var val = "_value" in o ? o._value : o.value
                                                                            return val
                                                                        })
                                                                    _vm.frontEndPage = $event.target.multiple
                                                                        ? $$selectedVal
                                                                        : $$selectedVal[0]
                                                                }
                                                            }
                                                        },
                                                        _vm._l(_vm.pages, function(page) {
                                                            return _c("option", { domProps: { value: page.ID } }, [
                                                                _vm._v(_vm._s(page.post_title))
                                                            ])
                                                        }),
                                                        0
                                                    )
                                                ])
                                            ])
                                        ])
                                    ]),
                                    _vm._v(" "),
                                    _c("div", [
                                        _c("p", { staticClass: "submit" }, [
                                            _c("input", {
                                                staticClass: "button button-primary",
                                                attrs: { type: "submit", name: "submit", id: "submit" },
                                                domProps: { value: _vm.save_change }
                                            }),
                                            _vm._v(" "),
                                            _c("span", {
                                                directives: [
                                                    {
                                                        name: "show",
                                                        rawName: "v-show",
                                                        value: _vm.show_spinner,
                                                        expression: "show_spinner"
                                                    }
                                                ],
                                                staticClass: "pm-spinner"
                                            })
                                        ])
                                    ])
                                ]
                            )
                        ])
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-076f6664", esExports)
                }
            }

            /***/ }),
        /* 155 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _mixin = __webpack_require__(4);

            var _mixin2 = _interopRequireDefault(_mixin);

            var _singleDoc = __webpack_require__(165);

            var _singleDoc2 = _interopRequireDefault(_singleDoc);

            var _singleLink = __webpack_require__(179);

            var _singleLink2 = _interopRequireDefault(_singleLink);

            var _singleFile = __webpack_require__(186);

            var _singleFile2 = _interopRequireDefault(_singleFile);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevsPmProRegisterModule('proProjectFiles', 'project-files');


            PmProMixin.projectFiles = _mixin2.default;
// const singleDoc = resolve => {
//     require.ensure(['./single-doc.vue'], () => {
            //         resolve(require('./single-doc.vue'));
            //     });
// }

// const singleLink = resolve => {
//     require.ensure(['./single-link.vue'], () => {
            //         resolve(require('./single-link.vue'));
            //     });
// }

            weDevsPMRegisterChildrenRoute('pm_files', [{
                path: ':folder_id',
                name: 'pro_file_lists',
                component: {
                    render: function render(h) {
                        return h('router-view');
                    }
                },

                children: [{
                    path: 'doc/:docId',
                    name: 'singleDoc',
                    component: _singleDoc2.default
                }, {
                    path: 'files/:fileId',
                    name: 'singleFile',
                    component: _singleFile2.default
                }, {
                    path: 'link/:linkId',
                    name: 'singleLink',
                    component: _singleLink2.default
                }]
            }]);

            /***/ }),
        /* 156 */
        /***/ (function(module, exports, __webpack_require__) {

            __webpack_require__(157);
            module.exports = __webpack_require__(5).Object.assign;


            /***/ }),
        /* 157 */
        /***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
            var $export = __webpack_require__(9);

            $export($export.S + $export.F, 'Object', { assign: __webpack_require__(160) });


            /***/ }),
        /* 158 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = !__webpack_require__(10) && !__webpack_require__(22)(function () {
                return Object.defineProperty(__webpack_require__(30)('div'), 'a', { get: function () { return 7; } }).a != 7;
            });


            /***/ }),
        /* 159 */
        /***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
            var isObject = __webpack_require__(16);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
            module.exports = function (it, S) {
                if (!isObject(it)) return it;
                var fn, val;
                if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
                if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
                if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
                throw TypeError("Can't convert object to primitive value");
            };


            /***/ }),
        /* 160 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";

// 19.1.2.1 Object.assign(target, source, ...)
            var DESCRIPTORS = __webpack_require__(10);
            var getKeys = __webpack_require__(24);
            var gOPS = __webpack_require__(164);
            var pIE = __webpack_require__(54);
            var toObject = __webpack_require__(27);
            var IObject = __webpack_require__(50);
            var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
            module.exports = !$assign || __webpack_require__(22)(function () {
                var A = {};
                var B = {};
// eslint-disable-next-line no-undef
                var S = Symbol();
                var K = 'abcdefghijklmnopqrst';
                A[S] = 7;
                K.split('').forEach(function (k) { B[k] = k; });
                return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
            }) ? function assign(target, source) { // eslint-disable-line no-unused-vars
                var T = toObject(target);
                var aLen = arguments.length;
                var index = 1;
                var getSymbols = gOPS.f;
                var isEnum = pIE.f;
                while (aLen > index) {
                    var S = IObject(arguments[index++]);
                    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
                    var length = keys.length;
                    var j = 0;
                    var key;
                    while (length > j) {
                        key = keys[j++];
                        if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
                    }
                } return T;
            } : $assign;


            /***/ }),
        /* 161 */
        /***/ (function(module, exports, __webpack_require__) {

            var has = __webpack_require__(23);
            var toIObject = __webpack_require__(25);
            var arrayIndexOf = __webpack_require__(162)(false);
            var IE_PROTO = __webpack_require__(35)('IE_PROTO');

            module.exports = function (object, names) {
                var O = toIObject(object);
                var i = 0;
                var result = [];
                var key;
                for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
// Don't enum bug & hidden keys
                while (names.length > i) if (has(O, key = names[i++])) {
                    ~arrayIndexOf(result, key) || result.push(key);
                }
                return result;
            };


            /***/ }),
        /* 162 */
        /***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
            var toIObject = __webpack_require__(25);
            var toLength = __webpack_require__(33);
            var toAbsoluteIndex = __webpack_require__(163);
            module.exports = function (IS_INCLUDES) {
                return function ($this, el, fromIndex) {
                    var O = toIObject($this);
                    var length = toLength(O.length);
                    var index = toAbsoluteIndex(fromIndex, length);
                    var value;
// Array#includes uses SameValueZero equality algorithm
// eslint-disable-next-line no-self-compare
                    if (IS_INCLUDES && el != el) while (length > index) {
                        value = O[index++];
// eslint-disable-next-line no-self-compare
                        if (value != value) return true;
// Array#indexOf ignores holes, Array#includes - not
                    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
                        if (O[index] === el) return IS_INCLUDES || index || 0;
                    } return !IS_INCLUDES && -1;
                };
            };


            /***/ }),
        /* 163 */
        /***/ (function(module, exports, __webpack_require__) {

            var toInteger = __webpack_require__(34);
            var max = Math.max;
            var min = Math.min;
            module.exports = function (index, length) {
                index = toInteger(index);
                return index < 0 ? max(index + length, 0) : min(index, length);
            };


            /***/ }),
        /* 164 */
        /***/ (function(module, exports) {

            exports.f = Object.getOwnPropertySymbols;


            /***/ }),
        /* 165 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_doc_vue__ = __webpack_require__(55);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_57dce5f0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_doc_vue__ = __webpack_require__(178);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(166)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_doc_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_57dce5f0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_doc_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/single-doc.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-57dce5f0", Component.options)
                } else {
                    hotAPI.reload("data-v-57dce5f0", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 166 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(167);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("04561294", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-57dce5f0\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-doc.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-57dce5f0\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-doc.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 167 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-comment-content ul {\n    margin-left: 0 !important;\n}\nul.pm-attachments {\n    margin: 0 !important;\n}\n", ""]);

// exports


            /***/ }),
        /* 168 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = { "default": __webpack_require__(169), __esModule: true };

            /***/ }),
        /* 169 */
        /***/ (function(module, exports, __webpack_require__) {

            __webpack_require__(170);
            var $Object = __webpack_require__(5).Object;
            module.exports = function defineProperty(it, key, desc) {
                return $Object.defineProperty(it, key, desc);
            };


            /***/ }),
        /* 170 */
        /***/ (function(module, exports, __webpack_require__) {

            var $export = __webpack_require__(9);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
            $export($export.S + $export.F * !__webpack_require__(10), 'Object', { defineProperty: __webpack_require__(14).f });


            /***/ }),
        /* 171 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(172);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("4b571358", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-82cb3b22\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./comment-form.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-82cb3b22\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./comment-form.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 172 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-new-doc-comment-form {\n  margin-top: 10px;\n}\n.pm-new-doc-comment-form .pm-user-list {\n  padding: 10px 10px 10px 16px !important;\n}\n", ""]);

// exports


            /***/ }),
        /* 173 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("textarea", {
                    directives: [
                        {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.content.html,
                            expression: "content.html"
                        }
                    ],
                    attrs: { id: _vm.editor_id },
                    domProps: { value: _vm.content.html },
                    on: {
                        input: function($event) {
                            if ($event.target.composing) {
                                return
                            }
                            _vm.$set(_vm.content, "html", $event.target.value)
                        }
                    }
                })
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-3fcc7e9a", esExports)
                }
            }

            /***/ }),
        /* 174 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm-attachment-area" }, [
                    _c("div", { attrs: { id: "pm-upload-container" } }, [
                        _c(
                            "div",
                            { staticClass: "pm-upload-filelist" },
                            [
                                _vm._l(_vm.files, function(file) {
                                    return _c(
                                        "div",
                                        { key: file.id, staticClass: "pm-uploaded-item" },
                                        [
                                            _c("a", { attrs: { href: file.url, target: "_blank" } }, [
                                                _c("img", { attrs: { src: file.thumb, alt: file.name } })
                                            ]),
                                            _vm._v(" "),
                                            _c(
                                                "a",
                                                {
                                                    staticClass: "button",
                                                    attrs: { href: "#" },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.deletefile(file.id)
                                                        }
                                                    }
                                                },
                                                [_vm._v(_vm._s(_vm.__("Delete File", "pm-pro")))]
                                            )
                                        ]
                                    )
                                }),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-clearfix" })
                            ],
                            2
                        ),
                        _vm._v(" "),
                        _c("span", [
                            _vm._v(
                                " \n            " +
                                _vm._s(_vm.__("To attach", "pm-pro")) +
                                " \n            "
                            ),
                            _c("a", { attrs: { id: "pm-upload-pickfiles", href: "#" } }, [
                                _vm._v(_vm._s(_vm.__("select files", "pm-pro")))
                            ]),
                            _vm._v(
                                " \n            " +
                                _vm._s(_vm.__("from your computer.", "pm-pro")) +
                                "\n        "
                            )
                        ])
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-615029ec", esExports)
                }
            }

            /***/ }),
        /* 175 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm-new-doc-comment-form" }, [
                    _c(
                        "form",
                        {
                            staticClass: "pm-comment-form",
                            attrs: { id: "new_comment_form pm-comment-form" },
                            on: {
                                submit: function($event) {
                                    $event.preventDefault()
                                    return _vm.newSelfComment()
                                }
                            }
                        },
                        [
                            _c("text-editor", {
                                attrs: { editor_id: _vm.editor_id, content: _vm.content }
                            }),
                            _vm._v(" "),
                            _c("file-uploader", {
                                attrs: { files: _vm.files, delete: _vm.deleted_files }
                            }),
                            _vm._v(" "),
                            _c("pm-notify-user", {
                                model: {
                                    value: _vm.notify_users,
                                    callback: function($$v) {
                                        _vm.notify_users = $$v
                                    },
                                    expression: "notify_users"
                                }
                            }),
                            _vm._v(" "),
                            _c("div", { staticClass: "submit" }, [
                                !_vm.comment_id
                                    ? _c("input", {
                                        staticClass: "button-primary",
                                        attrs: { type: "submit", name: "submit" },
                                        domProps: { value: _vm.add_comment }
                                    })
                                    : _vm._e(),
                                _vm._v(" "),
                                _vm.comment_id
                                    ? _c("input", {
                                        staticClass: "button-primary",
                                        attrs: { type: "submit", name: "submit" },
                                        domProps: { value: _vm.update_comment }
                                    })
                                    : _vm._e(),
                                _vm._v(" "),
                                _c("span", {
                                    staticClass: "pm-spinner",
                                    staticStyle: { display: "none" }
                                })
                            ])
                        ],
                        1
                    )
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-82cb3b22", esExports)
                }
            }

            /***/ }),
        /* 176 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", [
                    _c("div", { staticClass: "metabox-holder" }, [
                        _c("div", { staticClass: "postbox" }, [
                            !_vm.isUpdate
                                ? _c("h2", { staticClass: "hndle" }, [
                                    _vm._v(_vm._s(_vm.__("Create a document", "pm-pro")))
                                ])
                                : _vm._e(),
                            _vm._v(" "),
                            _vm.isUpdate
                                ? _c("h2", { staticClass: "hndle" }, [
                                    _vm._v(_vm._s(_vm.__("Upgrade the doc", "pm-pro")))
                                ])
                                : _vm._e(),
                            _vm._v(" "),
                            _c("div", { staticClass: "inside" }, [
                                _c(
                                    "form",
                                    {
                                        staticClass: "docform",
                                        attrs: { autocomplete: "off", id: "pm-doc-form" },
                                        on: {
                                            submit: function($event) {
                                                $event.preventDefault()
                                                return _vm.selfCreateDoc()
                                            }
                                        }
                                    },
                                    [
                                        _c("div", { staticClass: "item" }, [
                                            _c("input", {
                                                directives: [
                                                    {
                                                        name: "model",
                                                        rawName: "v-model",
                                                        value: _vm.doc.title,
                                                        expression: "doc.title"
                                                    }
                                                ],
                                                attrs: {
                                                    type: "text",
                                                    placeholder: _vm.doc_title,
                                                    name: "title"
                                                },
                                                domProps: { value: _vm.doc.title },
                                                on: {
                                                    input: function($event) {
                                                        if ($event.target.composing) {
                                                            return
                                                        }
                                                        _vm.$set(_vm.doc, "title", $event.target.value)
                                                    }
                                                }
                                            })
                                        ]),
                                        _vm._v(" "),
                                        _c("text-editor", {
                                            attrs: { editor_id: _vm.editor_id, content: _vm.content }
                                        }),
                                        _vm._v(" "),
                                        _c("file-uploader", {
                                            attrs: { files: _vm.files, delete: _vm.deletedFiles }
                                        }),
                                        _vm._v(" "),
                                        _vm.user_can("view_private_file")
                                            ? _c("div", { staticClass: "pm-privacy" }, [
                                                _c("label", [
                                                    _c("input", {
                                                        directives: [
                                                            {
                                                                name: "model",
                                                                rawName: "v-model",
                                                                value: _vm.private,
                                                                expression: "private"
                                                            }
                                                        ],
                                                        attrs: { type: "checkbox", name: "privacy" },
                                                        domProps: {
                                                            checked: Array.isArray(_vm.private)
                                                                ? _vm._i(_vm.private, null) > -1
                                                                : _vm.private
                                                        },
                                                        on: {
                                                            change: function($event) {
                                                                var $$a = _vm.private,
                                                                    $$el = $event.target,
                                                                    $$c = $$el.checked ? true : false
                                                                if (Array.isArray($$a)) {
                                                                    var $$v = null,
                                                                        $$i = _vm._i($$a, $$v)
                                                                    if ($$el.checked) {
                                                                        $$i < 0 && (_vm.private = $$a.concat([$$v]))
                                                                    } else {
                                                                        $$i > -1 &&
                                                                        (_vm.private = $$a
                                                                            .slice(0, $$i)
                                                                            .concat($$a.slice($$i + 1)))
                                                                    }
                                                                } else {
                                                                    _vm.private = $$c
                                                                }
                                                            }
                                                        }
                                                    }),
                                                    _vm._v(
                                                        "\n\t\t\t        \t\t" +
                                                        _vm._s(_vm.__("Make this private.", "pm-pro")) +
                                                        "\n\t\t\t        \t"
                                                    )
                                                ])
                                            ])
                                            : _vm._e(),
                                        _vm._v(" "),
                                        _vm.isUpdate
                                            ? _c("input", {
                                                staticClass: "button button-primary",
                                                attrs: { type: "submit", name: "submit" },
                                                domProps: { value: _vm.update_doc }
                                            })
                                            : _vm._e(),
                                        _vm._v(" "),
                                        !_vm.isUpdate
                                            ? _c("input", {
                                                staticClass: "button button-primary",
                                                attrs: { type: "submit", name: "submit" },
                                                domProps: { value: _vm.create_a_doc }
                                            })
                                            : _vm._e(),
                                        _vm._v(" "),
                                        !_vm.singleDoc.status
                                            ? _c(
                                                "a",
                                                {
                                                    staticClass: "button button-primary",
                                                    attrs: { href: "#" },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.showHideDoc()
                                                        }
                                                    }
                                                },
                                                [_vm._v(_vm._s(_vm.__("Cancel", "pm-pro")))]
                                            )
                                            : _vm._e(),
                                        _vm._v(" "),
                                        _vm.singleDoc.status
                                            ? _c(
                                                "a",
                                                {
                                                    staticClass: "button button-primary",
                                                    attrs: { href: "#" },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.showHideSingleDoc()
                                                        }
                                                    }
                                                },
                                                [_vm._v(_vm._s(_vm.__("Cancel", "pm-pro")))]
                                            )
                                            : _vm._e()
                                    ],
                                    1
                                )
                            ])
                        ])
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-e07ef61a", esExports)
                }
            }

            /***/ }),
        /* 177 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", [
                    _c("h3", [
                        _vm._v("\n        " + _vm._s(_vm.doc.title) + "  \n\n        "),
                        _vm.revision
                            ? _c("span", { staticClass: "pm-right" }, [
                                _c(
                                    "a",
                                    {
                                        staticClass: "button button-primary",
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                                return _vm.viewCurrentDoc()
                                            }
                                        }
                                    },
                                    [_vm._v(_vm._s(_vm.__("View current doc.", "pm-pro")))]
                                )
                            ])
                            : _c("span", { staticClass: "pm-right" }, [
                                _vm.can_edit_file(_vm.doc)
                                    ? _c(
                                        "a",
                                        {
                                            staticClass: "button button-primary",
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.activeDocEditMode(_vm.doc)
                                                }
                                            }
                                        },
                                        [
                                            _c("span", { staticClass: "dashicons dashicons-edit" }),
                                            _vm._v(" " + _vm._s(_vm.__("Edit", "pm-pro")))
                                        ]
                                    )
                                    : _vm._e()
                            ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "sub-title" }, [
                            _vm._v(
                                "\n           \t" + _vm._s(_vm.__("by", "pm-pro")) + "\n            "
                            ),
                            _c(
                                "a",
                                { attrs: { href: _vm.myTaskRedirect(_vm.doc.creator.data.id) } },
                                [_c("strong", [_vm._v(_vm._s(_vm.doc.creator.data.display_name))])]
                            ),
                            _vm._v("\n            " + _vm._s(_vm.__("at", "pm-pro")) + " "),
                            _c("small", [
                                _vm._v(
                                    _vm._s(_vm.doc.created_at.date) +
                                    " " +
                                    _vm._s(_vm.doc.created_at.time)
                                )
                            ])
                        ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "document-details" }, [
                        _c("div", [
                            _c("div", { domProps: { innerHTML: _vm._s(_vm.doc.description) } })
                        ])
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-24fe6f77", esExports)
                }
            }

            /***/ }),
        /* 178 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm-pro-file-container" }, [
                    _vm.loading
                        ? _c(
                            "div",
                            {
                                staticClass: "modal-mask half-modal pm-task-modal modal-transition"
                            },
                            [_vm._m(0)]
                        )
                        : _c(
                            "div",
                            {
                                staticClass:
                                    "modal-mask half-modal pm-doc-modal pm-task-modal modal-transition"
                            },
                            [
                                _c("div", { staticClass: "modal-wrapper" }, [
                                    _c("div", { staticClass: "modal-container" }, [
                                        _c("span", { staticClass: "close-vue-modal" }, [
                                            _c(
                                                "a",
                                                {
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.closeModal()
                                                        }
                                                    }
                                                },
                                                [_c("span", { staticClass: "dashicons dashicons-no" })]
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "modal-body pm-doc-read-mod" }, [
                                            _c("div", { staticClass: "pm-col-9 pm-doc-content" }, [
                                                _c("div", { staticClass: "pm-created-doc" }, [
                                                    _c("div", { staticClass: "pm-modal-conetnt" }, [
                                                        _c(
                                                            "div",
                                                            { staticClass: "doc_contents" },
                                                            [
                                                                _vm.editMode.status && _vm.can_edit_file(_vm.file)
                                                                    ? _c("doc-update-form", {
                                                                        attrs: {
                                                                            editMode: _vm.editMode,
                                                                            doc: _vm.file,
                                                                            singleDoc: _vm.singelDoc
                                                                        }
                                                                    })
                                                                    : _c("doc-content", {
                                                                        attrs: {
                                                                            doc: _vm.file,
                                                                            editMode: _vm.editMode,
                                                                            currentDoc: _vm.currentDoc
                                                                        }
                                                                    })
                                                            ],
                                                            1
                                                        ),
                                                        _vm._v(" "),
                                                        _c(
                                                            "div",
                                                            { staticClass: "doc_attach_comments" },
                                                            [
                                                                _vm.file.files.data.length
                                                                    ? _c("div", [
                                                                        _c("h3", [
                                                                            _vm._v(
                                                                                _vm._s(_vm.__("Attachment", "pm-pro"))
                                                                            )
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "ul",
                                                                            [
                                                                                _vm._l(_vm.file.files.data, function(
                                                                                    file
                                                                                ) {
                                                                                    return _c(
                                                                                        "li",
                                                                                        {
                                                                                            key: file.id,
                                                                                            staticClass: "pm-doc-attachment"
                                                                                        },
                                                                                        [
                                                                                            _c("pm-file", {
                                                                                                attrs: { file: file }
                                                                                            })
                                                                                        ],
                                                                                        1
                                                                                    )
                                                                                }),
                                                                                _vm._v(" "),
                                                                                _c("div", { staticClass: "clearfix" })
                                                                            ],
                                                                            2
                                                                        )
                                                                    ])
                                                                    : _vm._e(),
                                                                _vm._v(" "),
                                                                _c("h3", [
                                                                    _vm._v(_vm._s(_vm.__("Comments", "pm-pro")))
                                                                ]),
                                                                _vm._v(" "),
                                                                _c("div", { staticClass: "comment-content" }, [
                                                                    _vm.file.comments.data.length
                                                                        ? _c(
                                                                            "ul",
                                                                            { staticClass: "pm-comment-wrap" },
                                                                            _vm._l(_vm.file.comments.data, function(
                                                                                comment
                                                                            ) {
                                                                                return _c(
                                                                                    "li",
                                                                                    {
                                                                                        key: comment.id,
                                                                                        staticClass:
                                                                                            "pm-comment clearfix even",
                                                                                        attrs: {
                                                                                            id: "pm-comment-" + comment.id
                                                                                        }
                                                                                    },
                                                                                    [
                                                                                        _c(
                                                                                            "div",
                                                                                            { staticClass: "pm-avatar " },
                                                                                            [
                                                                                                _c(
                                                                                                    "a",
                                                                                                    {
                                                                                                        attrs: {
                                                                                                            href: _vm.myTaskRedirect(
                                                                                                                comment.creator.data.id
                                                                                                            ),
                                                                                                            title:
                                                                                                            comment.creator.data
                                                                                                                .display_name
                                                                                                        }
                                                                                                    },
                                                                                                    [
                                                                                                        _c("img", {
                                                                                                            staticClass:
                                                                                                                "avatar avatar-48 photo",
                                                                                                            attrs: {
                                                                                                                alt:
                                                                                                                comment.creator.data
                                                                                                                    .display_name,
                                                                                                                src:
                                                                                                                comment.creator.data
                                                                                                                    .avatar_url,
                                                                                                                height: "48",
                                                                                                                width: "48"
                                                                                                            }
                                                                                                        })
                                                                                                    ]
                                                                                                )
                                                                                            ]
                                                                                        ),
                                                                                        _vm._v(" "),
                                                                                        _c(
                                                                                            "div",
                                                                                            {
                                                                                                staticClass:
                                                                                                    "pm-comment-container"
                                                                                            },
                                                                                            [
                                                                                                _c(
                                                                                                    "div",
                                                                                                    {
                                                                                                        staticClass: "pm-comment-meta"
                                                                                                    },
                                                                                                    [
                                                                                                        _c(
                                                                                                            "span",
                                                                                                            {
                                                                                                                staticClass: "pm-author"
                                                                                                            },
                                                                                                            [
                                                                                                                _c(
                                                                                                                    "a",
                                                                                                                    {
                                                                                                                        attrs: {
                                                                                                                            href: _vm.myTaskRedirect(
                                                                                                                                comment.creator
                                                                                                                                    .data.id
                                                                                                                            ),
                                                                                                                            title:
                                                                                                                            comment.creator
                                                                                                                                .data
                                                                                                                                .display_name
                                                                                                                        }
                                                                                                                    },
                                                                                                                    [
                                                                                                                        _vm._v(
                                                                                                                            "\n                                                                " +
                                                                                                                            _vm._s(
                                                                                                                                comment.creator
                                                                                                                                    .data
                                                                                                                                    .display_name
                                                                                                                            ) +
                                                                                                                            "\n                                                            "
                                                                                                                        )
                                                                                                                    ]
                                                                                                                )
                                                                                                            ]
                                                                                                        ),
                                                                                                        _vm._v(" "),
                                                                                                        _c(
                                                                                                            "span",
                                                                                                            { staticClass: "pm-date" },
                                                                                                            [
                                                                                                                _c(
                                                                                                                    "time",
                                                                                                                    {
                                                                                                                        attrs: {
                                                                                                                            datetime: _vm.getFullDate(
                                                                                                                                comment.created_at
                                                                                                                                    .datetime
                                                                                                                            ),
                                                                                                                            title: _vm.getFullDate(
                                                                                                                                comment.created_at
                                                                                                                                    .datetime
                                                                                                                            )
                                                                                                                        }
                                                                                                                    },
                                                                                                                    [
                                                                                                                        _vm._v(
                                                                                                                            _vm._s(
                                                                                                                                _vm.relativeDate(
                                                                                                                                    comment
                                                                                                                                        .created_at
                                                                                                                                        .datetime
                                                                                                                                )
                                                                                                                            )
                                                                                                                        )
                                                                                                                    ]
                                                                                                                )
                                                                                                            ]
                                                                                                        ),
                                                                                                        _vm._v(" "),
                                                                                                        _vm.can_edit_comment(comment)
                                                                                                            ? _c(
                                                                                                                "div",
                                                                                                                {
                                                                                                                    staticClass:
                                                                                                                        "pm-comment-action"
                                                                                                                },
                                                                                                                [
                                                                                                                    _c(
                                                                                                                        "span",
                                                                                                                        {
                                                                                                                            staticClass:
                                                                                                                                "pm-edit-link"
                                                                                                                        },
                                                                                                                        [
                                                                                                                            _c("a", {
                                                                                                                                staticClass:
                                                                                                                                    "pm-edit-comment-link dashicons dashicons-edit ",
                                                                                                                                attrs: {
                                                                                                                                    href: "#"
                                                                                                                                },
                                                                                                                                on: {
                                                                                                                                    click: function(
                                                                                                                                        $event
                                                                                                                                    ) {
                                                                                                                                        $event.preventDefault()
                                                                                                                                        return _vm.showHideDocCommentForm(
                                                                                                                                            "toggle",
                                                                                                                                            comment
                                                                                                                                        )
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            })
                                                                                                                        ]
                                                                                                                    ),
                                                                                                                    _vm._v(" "),
                                                                                                                    _c(
                                                                                                                        "span",
                                                                                                                        {
                                                                                                                            staticClass:
                                                                                                                                "pm-delete-link"
                                                                                                                        },
                                                                                                                        [
                                                                                                                            _c("a", {
                                                                                                                                staticClass:
                                                                                                                                    "pm-delete-comment-link dashicons dashicons-trash",
                                                                                                                                attrs: {
                                                                                                                                    href: "#"
                                                                                                                                },
                                                                                                                                on: {
                                                                                                                                    click: function(
                                                                                                                                        $event
                                                                                                                                    ) {
                                                                                                                                        $event.preventDefault()
                                                                                                                                        return _vm.deleteSelfComment(
                                                                                                                                            comment.id,
                                                                                                                                            _vm.file
                                                                                                                                                .id
                                                                                                                                        )
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            })
                                                                                                                        ]
                                                                                                                    )
                                                                                                                ]
                                                                                                            )
                                                                                                            : _vm._e()
                                                                                                    ]
                                                                                                ),
                                                                                                _vm._v(" "),
                                                                                                _c(
                                                                                                    "div",
                                                                                                    {
                                                                                                        staticClass:
                                                                                                            "pm-comment-content"
                                                                                                    },
                                                                                                    [
                                                                                                        _c("div", {
                                                                                                            domProps: {
                                                                                                                innerHTML: _vm._s(
                                                                                                                    comment.content
                                                                                                                )
                                                                                                            }
                                                                                                        }),
                                                                                                        _vm._v(" "),
                                                                                                        comment.files.data.length
                                                                                                            ? _c(
                                                                                                                "ul",
                                                                                                                {
                                                                                                                    staticClass:
                                                                                                                        "pm-attachments"
                                                                                                                },
                                                                                                                _vm._l(
                                                                                                                    comment.files.data,
                                                                                                                    function(file) {
                                                                                                                        return _c(
                                                                                                                            "li",
                                                                                                                            { key: file.id },
                                                                                                                            [
                                                                                                                                _c("pm-file", {
                                                                                                                                    attrs: {
                                                                                                                                        file: file,
                                                                                                                                        file_project_id:
                                                                                                                                        comment.project_id
                                                                                                                                    }
                                                                                                                                })
                                                                                                                            ],
                                                                                                                            1
                                                                                                                        )
                                                                                                                    }
                                                                                                                ),
                                                                                                                0
                                                                                                            )
                                                                                                            : _vm._e()
                                                                                                    ]
                                                                                                ),
                                                                                                _vm._v(" "),
                                                                                                _vm.can_edit_comment(comment)
                                                                                                    ? _c(
                                                                                                        "div",
                                                                                                        {
                                                                                                            staticClass:
                                                                                                                "pm-comment-edit-form"
                                                                                                        },
                                                                                                        [
                                                                                                            comment.editMode
                                                                                                                ? _c("comment-form", {
                                                                                                                    attrs: {
                                                                                                                        comment: comment
                                                                                                                    }
                                                                                                                })
                                                                                                                : _vm._e()
                                                                                                        ],
                                                                                                        1
                                                                                                    )
                                                                                                    : _vm._e()
                                                                                            ]
                                                                                        )
                                                                                    ]
                                                                                )
                                                                            }),
                                                                            0
                                                                        )
                                                                        : _vm._e()
                                                                ]),
                                                                _vm._v(" "),
                                                                _c("comment-form", {
                                                                    attrs: { comment: _vm.file.comments.data }
                                                                })
                                                            ],
                                                            1
                                                        ),
                                                        _vm._v(" "),
                                                        _c("div", { staticClass: "clearfix" })
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "clearfix" })
                                            ]),
                                            _vm._v(" "),
                                            _c("div", { staticClass: "pm-col-3 pm-revision" }, [
                                                _c("div", [
                                                    _c("h3", [_vm._v(_vm._s(_vm.__("Revisions", "pm-pro")))]),
                                                    _vm._v(" "),
                                                    _vm.file.revisions.data.length
                                                        ? _c(
                                                            "ul",
                                                            _vm._l(_vm.file.revisions.data, function(revision) {
                                                                return _c("li", { key: revision.id }, [
                                                                    _c(
                                                                        "a",
                                                                        {
                                                                            on: {
                                                                                click: function($event) {
                                                                                    $event.preventDefault()
                                                                                    return _vm.getRevision(revision)
                                                                                }
                                                                            }
                                                                        },
                                                                        [
                                                                            _vm._v(
                                                                                "#" +
                                                                                _vm._s(revision.created_at.date) +
                                                                                " " +
                                                                                _vm._s(revision.created_at.time)
                                                                            )
                                                                        ]
                                                                    )
                                                                ])
                                                            }),
                                                            0
                                                        )
                                                        : _vm._e(),
                                                    _vm._v(" "),
                                                    _c("div", { attrs: { else: "" } }, [
                                                        _vm._v(" " + _vm._s(_vm.__("No Revision", "pm-pro")))
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("div", { staticClass: "clearfix" })
                                        ])
                                    ])
                                ])
                            ]
                        )
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "modal-wrapper" }, [
                        _c(
                            "div",
                            {
                                staticClass: "modal-container",
                                staticStyle: { width: "700px", height: "20000px" }
                            },
                            [
                                _c("span", { staticClass: "close-vue-modal" }, [
                                    _c("a", {}, [_c("span", { staticClass: "dashicons dashicons-no" })])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "modal-body pm-todolist" }, [
                                    _c("div", { staticClass: "pm-data-load-before" }, [
                                        _c("div", { staticClass: "loadmoreanimation" }, [
                                            _c("div", { staticClass: "load-spinner" }, [
                                                _c("div", { staticClass: "rect1" }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "rect2" }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "rect3" }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "rect4" }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "rect5" })
                                            ])
                                        ])
                                    ])
                                ])
                            ]
                        )
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-57dce5f0", esExports)
                }
            }

            /***/ }),
        /* 179 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_link_vue__ = __webpack_require__(62);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8937e11c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_link_vue__ = __webpack_require__(185);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(180)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_link_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8937e11c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_link_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/single-link.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-8937e11c", Component.options)
                } else {
                    hotAPI.reload("data-v-8937e11c", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 180 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(181);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("4bd0a48c", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-8937e11c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-link.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-8937e11c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-link.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 181 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-comment-content ul {\n    margin-left: 0 !important;\n}\nul.pm-attachments {\n    margin: 0 !important;\n}\n.hrm-link-btn {\n    margin: 10px;\n}\n.pm-doc-modal .modal-body .pm-created-doc .pm-link-contents {\n    background: #f9f9f9;\n}\n.pm-doc-modal .modal-body .pm-created-doc .doc_contents .document-details {\n    border-top: 0;\n}\n", ""]);

// exports


            /***/ }),
        /* 182 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", [
                    _c("div", { staticClass: "metabox-holder" }, [
                        _c("div", { staticClass: "postbox" }, [
                            _c("h2", { staticClass: "hndle" }, [
                                _vm._v(_vm._s(_vm.__("Link to Docs", "pm-pro")))
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "inside" }, [
                                _c(
                                    "form",
                                    {
                                        staticClass: "docform",
                                        attrs: { autocomplete: "off", id: "pm-link-form" },
                                        on: {
                                            submit: function($event) {
                                                $event.preventDefault()
                                                return _vm.selfCreateLink()
                                            }
                                        }
                                    },
                                    [
                                        _c("div", { staticClass: "item" }, [
                                            _c("input", {
                                                directives: [
                                                    {
                                                        name: "model",
                                                        rawName: "v-model",
                                                        value: _vm.link.title,
                                                        expression: "link.title"
                                                    }
                                                ],
                                                attrs: { type: "text", placeholder: _vm.link_title },
                                                domProps: { value: _vm.link.title },
                                                on: {
                                                    input: function($event) {
                                                        if ($event.target.composing) {
                                                            return
                                                        }
                                                        _vm.$set(_vm.link, "title", $event.target.value)
                                                    }
                                                }
                                            })
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "item" }, [
                                            _c("input", {
                                                directives: [
                                                    {
                                                        name: "model",
                                                        rawName: "v-model",
                                                        value: _vm.link.url,
                                                        expression: "link.url"
                                                    }
                                                ],
                                                attrs: { type: "text", placeholder: _vm.link_for_doc },
                                                domProps: { value: _vm.link.url },
                                                on: {
                                                    input: function($event) {
                                                        if ($event.target.composing) {
                                                            return
                                                        }
                                                        _vm.$set(_vm.link, "url", $event.target.value)
                                                    }
                                                }
                                            })
                                        ]),
                                        _vm._v(" "),
                                        _c("text-editor", {
                                            attrs: { editor_id: _vm.editor_id, content: _vm.content }
                                        }),
                                        _vm._v(" "),
                                        _vm.user_can("view_private_file")
                                            ? _c("div", { staticClass: "pm-privacy" }, [
                                                _c("label", [
                                                    _c("input", {
                                                        directives: [
                                                            {
                                                                name: "model",
                                                                rawName: "v-model",
                                                                value: _vm.private,
                                                                expression: "private"
                                                            }
                                                        ],
                                                        attrs: { type: "checkbox", name: "privacy" },
                                                        domProps: {
                                                            checked: Array.isArray(_vm.private)
                                                                ? _vm._i(_vm.private, null) > -1
                                                                : _vm.private
                                                        },
                                                        on: {
                                                            change: function($event) {
                                                                var $$a = _vm.private,
                                                                    $$el = $event.target,
                                                                    $$c = $$el.checked ? true : false
                                                                if (Array.isArray($$a)) {
                                                                    var $$v = null,
                                                                        $$i = _vm._i($$a, $$v)
                                                                    if ($$el.checked) {
                                                                        $$i < 0 && (_vm.private = $$a.concat([$$v]))
                                                                    } else {
                                                                        $$i > -1 &&
                                                                        (_vm.private = $$a
                                                                            .slice(0, $$i)
                                                                            .concat($$a.slice($$i + 1)))
                                                                    }
                                                                } else {
                                                                    _vm.private = $$c
                                                                }
                                                            }
                                                        }
                                                    }),
                                                    _vm._v(
                                                        "\n\t\t\t        \t\t" +
                                                        _vm._s(_vm.__("Make this private.", "pm-pro")) +
                                                        "\n\t\t\t        \t"
                                                    )
                                                ])
                                            ])
                                            : _vm._e(),
                                        _vm._v(" "),
                                        !_vm.isUpdate
                                            ? _c("input", {
                                                staticClass: "button button-primary",
                                                attrs: { type: "submit", name: "submit" },
                                                domProps: { value: _vm.link_to_doc }
                                            })
                                            : _vm._e(),
                                        _vm._v(" "),
                                        _vm.isUpdate
                                            ? _c("input", {
                                                staticClass: "button button-primary",
                                                attrs: { type: "submit", name: "submit" },
                                                domProps: { value: _vm.update_link }
                                            })
                                            : _vm._e(),
                                        _vm._v(" "),
                                        !_vm.singleLink.status
                                            ? _c(
                                                "a",
                                                {
                                                    staticClass: "button button-primary",
                                                    attrs: { href: "#" },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.showHideLink()
                                                        }
                                                    }
                                                },
                                                [_vm._v(_vm._s(_vm.__("Cancel", "pm-pro")))]
                                            )
                                            : _vm._e(),
                                        _vm._v(" "),
                                        _vm.singleLink.status
                                            ? _c(
                                                "a",
                                                {
                                                    staticClass: "button button-primary",
                                                    attrs: { href: "#" },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.showHideSingleLink()
                                                        }
                                                    }
                                                },
                                                [_vm._v(_vm._s(_vm.__("Cancel", "pm-pro")))]
                                            )
                                            : _vm._e()
                                    ],
                                    1
                                )
                            ])
                        ])
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-fa74dbc2", esExports)
                }
            }

            /***/ }),
        /* 183 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_link_content_vue__ = __webpack_require__(65);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0ede1aba_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_link_content_vue__ = __webpack_require__(184);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_link_content_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0ede1aba_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_link_content_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/link-content.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-0ede1aba", Component.options)
                } else {
                    hotAPI.reload("data-v-0ede1aba", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 184 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", [
                    _c("h3", [
                        _vm._v("\n\t        " + _vm._s(_vm.link.title) + "  \n\n\t        "),
                        _vm.revision
                            ? _c("span", { staticClass: "pm-right" }, [
                                _c(
                                    "a",
                                    {
                                        staticClass: "button button-primary",
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                                return _vm.viewCurrentLink()
                                            }
                                        }
                                    },
                                    [_vm._v(_vm._s(_vm.__("View current link.", "pm-pro")))]
                                )
                            ])
                            : _c("span", { staticClass: "pm-right" }, [
                                _vm.can_edit_file(_vm.link)
                                    ? _c(
                                        "a",
                                        {
                                            staticClass: "button button-primary",
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.activeLinkEditMode(_vm.link)
                                                }
                                            }
                                        },
                                        [
                                            _c("span", { staticClass: "dashicons dashicons-edit" }),
                                            _vm._v(" " + _vm._s(_vm.__("Edit", "pm-pro")))
                                        ]
                                    )
                                    : _vm._e()
                            ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "sub-title" }, [
                            _vm._v(
                                "\n\t            " +
                                _vm._s(_vm.__("by", "pm-pro")) +
                                "\n\n\t            "
                            ),
                            _c(
                                "a",
                                { attrs: { href: _vm.myTaskRedirect(_vm.link.creator.data.id) } },
                                [_c("strong", [_vm._v(_vm._s(_vm.link.creator.data.display_name))])]
                            ),
                            _vm._v(
                                "\n\n\t            " +
                                _vm._s(_vm.__("at", "pm-pro")) +
                                "\n\t            \n\t            "
                            ),
                            _c("small", [
                                _vm._v(
                                    _vm._s(_vm.link.created_at.date) +
                                    " " +
                                    _vm._s(_vm.link.created_at.time)
                                )
                            ])
                        ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "document-details" }, [
                        _c("div", { staticClass: "online_doc_link" }, [
                            _c("div", { staticClass: "pm-box" }, [
                                _c("a", { attrs: { target: "_new", href: _vm.link.url } }, [
                                    _c("img", {
                                        attrs: {
                                            height: "128",
                                            src: _vm.getMimeTypeImageFromLink(_vm.link.url)
                                        }
                                    }),
                                    _vm._v(" "),
                                    _c("br")
                                ])
                            ]),
                            _vm._v(" "),
                            _c(
                                "a",
                                {
                                    staticClass: "button button-primary button-link",
                                    attrs: { target: "_blank", href: _vm.link.url }
                                },
                                [
                                    _c("span", { staticClass: "dashicons dashicons-external" }),
                                    _vm._v(" " + _vm._s(_vm.__("View Online", "pm-pro")) + " ")
                                ]
                            ),
                            _vm._v(" "),
                            _c("div", { staticClass: "pm-title" }, [
                                _vm._v(" " + _vm._s(_vm.__("Note :", "pm-pro")) + " ")
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { domProps: { innerHTML: _vm._s(_vm.link.description) } })
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-0ede1aba", esExports)
                }
            }

            /***/ }),
        /* 185 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm-pro-file-container" }, [
                    _vm.loading
                        ? _c(
                            "div",
                            {
                                staticClass: "modal-mask half-modal pm-task-modal modal-transition"
                            },
                            [_vm._m(0)]
                        )
                        : _c(
                            "div",
                            {
                                staticClass:
                                    "modal-mask half-modal pm-doc-modal pm-task-modal modal-transition"
                            },
                            [
                                _c("div", { staticClass: "modal-wrapper" }, [
                                    _c("div", { staticClass: "modal-container" }, [
                                        _c("span", { staticClass: "close-vue-modal" }, [
                                            _c(
                                                "a",
                                                {
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.closeModal()
                                                        }
                                                    }
                                                },
                                                [_c("span", { staticClass: "dashicons dashicons-no" })]
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "modal-body pm-doc-read-mod" }, [
                                            _c("div", { staticClass: "pm-col-9 pm-doc-content" }, [
                                                _c("div", { staticClass: "pm-created-doc" }, [
                                                    _c("div", { staticClass: "pm-modal-conetnt" }, [
                                                        _c(
                                                            "div",
                                                            { staticClass: "doc_contents pm-link-contents" },
                                                            [
                                                                _vm.editMode.status && _vm.can_edit_file(_vm.file)
                                                                    ? _c("link-update-form", {
                                                                        attrs: {
                                                                            editMode: _vm.editMode,
                                                                            singleLink: _vm.singleLink,
                                                                            link: _vm.file
                                                                        }
                                                                    })
                                                                    : _c("link-content", {
                                                                        attrs: {
                                                                            editMode: _vm.editMode,
                                                                            link: _vm.file,
                                                                            currentLink: _vm.currentLink
                                                                        }
                                                                    })
                                                            ],
                                                            1
                                                        ),
                                                        _vm._v(" "),
                                                        _c(
                                                            "div",
                                                            { staticClass: "doc_attach_comments" },
                                                            [
                                                                _vm.file.files.data.length
                                                                    ? _c("div", [
                                                                        _c("h3", [
                                                                            _vm._v(
                                                                                _vm._s(_vm.__("Attachment", "pm-pro"))
                                                                            )
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "ul",
                                                                            [
                                                                                _vm._l(_vm.file.files.data, function(
                                                                                    file
                                                                                ) {
                                                                                    return _c(
                                                                                        "li",
                                                                                        {
                                                                                            key: file.id,
                                                                                            staticClass: "pm-doc-attachment"
                                                                                        },
                                                                                        [
                                                                                            _c("pm-file", {
                                                                                                attrs: { file: file }
                                                                                            })
                                                                                        ],
                                                                                        1
                                                                                    )
                                                                                }),
                                                                                _vm._v(" "),
                                                                                _c("div", { staticClass: "clearfix" })
                                                                            ],
                                                                            2
                                                                        )
                                                                    ])
                                                                    : _vm._e(),
                                                                _vm._v(" "),
                                                                _c("h3", [
                                                                    _vm._v(_vm._s(_vm.__("Comments", "pm-pro")))
                                                                ]),
                                                                _vm._v(" "),
                                                                _c("div", { staticClass: "comment-content" }, [
                                                                    _vm.file.comments.data.length
                                                                        ? _c(
                                                                            "ul",
                                                                            { staticClass: "pm-comment-wrap" },
                                                                            _vm._l(_vm.file.comments.data, function(
                                                                                comment
                                                                            ) {
                                                                                return _c(
                                                                                    "li",
                                                                                    {
                                                                                        key: comment.id,
                                                                                        staticClass:
                                                                                            "pm-comment clearfix even",
                                                                                        attrs: {
                                                                                            id: "pm-comment-" + comment.id
                                                                                        }
                                                                                    },
                                                                                    [
                                                                                        _c(
                                                                                            "div",
                                                                                            { staticClass: "pm-avatar " },
                                                                                            [
                                                                                                _c(
                                                                                                    "a",
                                                                                                    {
                                                                                                        attrs: {
                                                                                                            href: _vm.myTaskRedirect(
                                                                                                                comment.creator.data.id
                                                                                                            ),
                                                                                                            title:
                                                                                                            comment.creator.data
                                                                                                                .display_name
                                                                                                        }
                                                                                                    },
                                                                                                    [
                                                                                                        _c("img", {
                                                                                                            staticClass:
                                                                                                                "avatar avatar-48 photo",
                                                                                                            attrs: {
                                                                                                                alt:
                                                                                                                comment.creator.data
                                                                                                                    .display_name,
                                                                                                                src:
                                                                                                                comment.creator.data
                                                                                                                    .avatar_url,
                                                                                                                height: "48",
                                                                                                                width: "48"
                                                                                                            }
                                                                                                        })
                                                                                                    ]
                                                                                                )
                                                                                            ]
                                                                                        ),
                                                                                        _vm._v(" "),
                                                                                        _c(
                                                                                            "div",
                                                                                            {
                                                                                                staticClass:
                                                                                                    "pm-comment-container"
                                                                                            },
                                                                                            [
                                                                                                _c(
                                                                                                    "div",
                                                                                                    {
                                                                                                        staticClass: "pm-comment-meta"
                                                                                                    },
                                                                                                    [
                                                                                                        _c(
                                                                                                            "span",
                                                                                                            {
                                                                                                                staticClass: "pm-author"
                                                                                                            },
                                                                                                            [
                                                                                                                _c(
                                                                                                                    "a",
                                                                                                                    {
                                                                                                                        attrs: {
                                                                                                                            href: _vm.myTaskRedirect(
                                                                                                                                comment.creator
                                                                                                                                    .data.id
                                                                                                                            ),
                                                                                                                            title:
                                                                                                                            comment.creator
                                                                                                                                .data
                                                                                                                                .display_name
                                                                                                                        }
                                                                                                                    },
                                                                                                                    [
                                                                                                                        _vm._v(
                                                                                                                            "\n                                                                " +
                                                                                                                            _vm._s(
                                                                                                                                comment.creator
                                                                                                                                    .data
                                                                                                                                    .display_name
                                                                                                                            ) +
                                                                                                                            "\n                                                            "
                                                                                                                        )
                                                                                                                    ]
                                                                                                                )
                                                                                                            ]
                                                                                                        ),
                                                                                                        _vm._v(" "),
                                                                                                        _c(
                                                                                                            "span",
                                                                                                            { staticClass: "pm-date" },
                                                                                                            [
                                                                                                                _c(
                                                                                                                    "time",
                                                                                                                    {
                                                                                                                        attrs: {
                                                                                                                            datetime: _vm.getFullDate(
                                                                                                                                comment.created_at
                                                                                                                                    .datetime
                                                                                                                            ),
                                                                                                                            title: _vm.getFullDate(
                                                                                                                                comment.created_at
                                                                                                                                    .datetime
                                                                                                                            )
                                                                                                                        }
                                                                                                                    },
                                                                                                                    [
                                                                                                                        _vm._v(
                                                                                                                            _vm._s(
                                                                                                                                _vm.relativeDate(
                                                                                                                                    comment
                                                                                                                                        .created_at
                                                                                                                                        .datetime
                                                                                                                                )
                                                                                                                            )
                                                                                                                        )
                                                                                                                    ]
                                                                                                                )
                                                                                                            ]
                                                                                                        ),
                                                                                                        _vm._v(" "),
                                                                                                        _vm.can_edit_comment(comment)
                                                                                                            ? _c(
                                                                                                                "div",
                                                                                                                {
                                                                                                                    staticClass:
                                                                                                                        "pm-comment-action"
                                                                                                                },
                                                                                                                [
                                                                                                                    _c(
                                                                                                                        "span",
                                                                                                                        {
                                                                                                                            staticClass:
                                                                                                                                "pm-edit-link"
                                                                                                                        },
                                                                                                                        [
                                                                                                                            _c("a", {
                                                                                                                                staticClass:
                                                                                                                                    "pm-edit-comment-link dashicons dashicons-edit ",
                                                                                                                                attrs: {
                                                                                                                                    href: "#"
                                                                                                                                },
                                                                                                                                on: {
                                                                                                                                    click: function(
                                                                                                                                        $event
                                                                                                                                    ) {
                                                                                                                                        $event.preventDefault()
                                                                                                                                        return _vm.showHideDocCommentForm(
                                                                                                                                            "toggle",
                                                                                                                                            comment
                                                                                                                                        )
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            })
                                                                                                                        ]
                                                                                                                    ),
                                                                                                                    _vm._v(" "),
                                                                                                                    _c(
                                                                                                                        "span",
                                                                                                                        {
                                                                                                                            staticClass:
                                                                                                                                "pm-delete-link"
                                                                                                                        },
                                                                                                                        [
                                                                                                                            _c("a", {
                                                                                                                                staticClass:
                                                                                                                                    "pm-delete-comment-link dashicons dashicons-trash",
                                                                                                                                attrs: {
                                                                                                                                    href: "#"
                                                                                                                                },
                                                                                                                                on: {
                                                                                                                                    click: function(
                                                                                                                                        $event
                                                                                                                                    ) {
                                                                                                                                        $event.preventDefault()
                                                                                                                                        return _vm.deleteSelfComment(
                                                                                                                                            comment.id,
                                                                                                                                            _vm.file
                                                                                                                                                .id
                                                                                                                                        )
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            })
                                                                                                                        ]
                                                                                                                    )
                                                                                                                ]
                                                                                                            )
                                                                                                            : _vm._e()
                                                                                                    ]
                                                                                                ),
                                                                                                _vm._v(" "),
                                                                                                _c(
                                                                                                    "div",
                                                                                                    {
                                                                                                        staticClass:
                                                                                                            "pm-comment-content"
                                                                                                    },
                                                                                                    [
                                                                                                        _c("div", {
                                                                                                            domProps: {
                                                                                                                innerHTML: _vm._s(
                                                                                                                    comment.content
                                                                                                                )
                                                                                                            }
                                                                                                        }),
                                                                                                        _vm._v(" "),
                                                                                                        comment.files.data.length
                                                                                                            ? _c(
                                                                                                                "ul",
                                                                                                                {
                                                                                                                    staticClass:
                                                                                                                        "pm-attachments"
                                                                                                                },
                                                                                                                _vm._l(
                                                                                                                    comment.files.data,
                                                                                                                    function(file) {
                                                                                                                        return _c(
                                                                                                                            "li",
                                                                                                                            { key: file.id },
                                                                                                                            [
                                                                                                                                _c("pm-file", {
                                                                                                                                    attrs: {
                                                                                                                                        file: file
                                                                                                                                    }
                                                                                                                                })
                                                                                                                            ],
                                                                                                                            1
                                                                                                                        )
                                                                                                                    }
                                                                                                                ),
                                                                                                                0
                                                                                                            )
                                                                                                            : _vm._e()
                                                                                                    ]
                                                                                                ),
                                                                                                _vm._v(" "),
                                                                                                _vm.can_edit_comment(comment)
                                                                                                    ? _c(
                                                                                                        "div",
                                                                                                        {
                                                                                                            staticClass:
                                                                                                                "pm-comment-edit-form"
                                                                                                        },
                                                                                                        [
                                                                                                            comment.editMode
                                                                                                                ? _c("comment-form", {
                                                                                                                    attrs: {
                                                                                                                        comment: comment
                                                                                                                    }
                                                                                                                })
                                                                                                                : _vm._e()
                                                                                                        ],
                                                                                                        1
                                                                                                    )
                                                                                                    : _vm._e()
                                                                                            ]
                                                                                        )
                                                                                    ]
                                                                                )
                                                                            }),
                                                                            0
                                                                        )
                                                                        : _vm._e()
                                                                ]),
                                                                _vm._v(" "),
                                                                _c("comment-form", {
                                                                    attrs: { comment: _vm.file.comments.data }
                                                                })
                                                            ],
                                                            1
                                                        ),
                                                        _vm._v(" "),
                                                        _c("div", { staticClass: "clearfix" })
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "clearfix" })
                                            ]),
                                            _vm._v(" "),
                                            _c("div", { staticClass: "pm-col-3 pm-revision" }, [
                                                _c("div", [
                                                    _c("h3", [_vm._v(_vm._s(_vm.__("Revisions", "pm-pro")))]),
                                                    _vm._v(" "),
                                                    _vm.file.revisions.data.length
                                                        ? _c(
                                                            "ul",
                                                            _vm._l(_vm.file.revisions.data, function(
                                                                revision,
                                                                key
                                                            ) {
                                                                return _c("li", { key: key }, [
                                                                    _c(
                                                                        "a",
                                                                        {
                                                                            on: {
                                                                                click: function($event) {
                                                                                    $event.preventDefault()
                                                                                    return _vm.getRevision(revision)
                                                                                }
                                                                            }
                                                                        },
                                                                        [
                                                                            _vm._v(
                                                                                "#" +
                                                                                _vm._s(revision.created_at.date) +
                                                                                " " +
                                                                                _vm._s(revision.created_at.time)
                                                                            )
                                                                        ]
                                                                    )
                                                                ])
                                                            }),
                                                            0
                                                        )
                                                        : _vm._e(),
                                                    _vm._v(" "),
                                                    _c("div", { attrs: { else: "" } }, [
                                                        _vm._v(" " + _vm._s(_vm.__("No Revision", "pm-pro")))
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("div", { staticClass: "clearfix" })
                                        ])
                                    ])
                                ])
                            ]
                        )
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "modal-wrapper" }, [
                        _c(
                            "div",
                            {
                                staticClass: "modal-container",
                                staticStyle: { width: "700px", height: "20000px" }
                            },
                            [
                                _c("span", { staticClass: "close-vue-modal" }, [
                                    _c("a", {}, [_c("span", { staticClass: "dashicons dashicons-no" })])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "modal-body pm-todolist" }, [
                                    _c("div", { staticClass: "pm-data-load-before" }, [
                                        _c("div", { staticClass: "loadmoreanimation" }, [
                                            _c("div", { staticClass: "load-spinner" }, [
                                                _c("div", { staticClass: "rect1" }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "rect2" }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "rect3" }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "rect4" }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "rect5" })
                                            ])
                                        ])
                                    ])
                                ])
                            ]
                        )
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-8937e11c", esExports)
                }
            }

            /***/ }),
        /* 186 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_file_vue__ = __webpack_require__(66);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_485ec3f4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_file_vue__ = __webpack_require__(189);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(187)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_file_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_485ec3f4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_file_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/single-file.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-485ec3f4", Component.options)
                } else {
                    hotAPI.reload("data-v-485ec3f4", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 187 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(188);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("2775daaf", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-485ec3f4\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-file.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-485ec3f4\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-file.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 188 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-comment-content ul {\n    margin-left: 0 !important;\n}\nul.pm-attachments {\n    margin: 0 !important;\n}\n.pm-pro-single-file-content {\n    text-align: center;\n}\n.pm-pro-single-file-size {\n    max-height: 400px;\n    max-width: 400px;\n}\n", ""]);

// exports


            /***/ }),
        /* 189 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm-pro-file-container" }, [
                    _vm.loading
                        ? _c(
                            "div",
                            {
                                staticClass: "modal-mask half-modal pm-task-modal modal-transition"
                            },
                            [_vm._m(0)]
                        )
                        : _c(
                            "div",
                            {
                                staticClass:
                                    "modal-mask half-modal pm-doc-modal pm-task-modal modal-transition"
                            },
                            [
                                _c("div", { staticClass: "modal-wrapper" }, [
                                    _c("div", { staticClass: "modal-container" }, [
                                        _c("span", { staticClass: "close-vue-modal" }, [
                                            _c(
                                                "a",
                                                {
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.closeModal()
                                                        }
                                                    }
                                                },
                                                [_c("span", { staticClass: "dashicons dashicons-no" })]
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "modal-body pm-doc-read-mod" }, [
                                            _c("div", { staticClass: "pm-col-9 pm-doc-content" }, [
                                                _c("div", { staticClass: "pm-created-doc" }, [
                                                    _c("div", { staticClass: "pm-modal-conetnt" }, [
                                                        _c("div", { staticClass: "doc_contents" }, [
                                                            _c(
                                                                "div",
                                                                { staticClass: "pm-pro-single-file-content" },
                                                                [
                                                                    _c("div", { staticClass: "image-content" }, [
                                                                        _vm.isVideo
                                                                            ? _c("video", { attrs: { controls: "" } }, [
                                                                                _c("source", {
                                                                                    attrs: {
                                                                                        src: _vm.file.url,
                                                                                        type: _vm.file.mime_type
                                                                                    }
                                                                                }),
                                                                                _vm._v(
                                                                                    "\n                                                Your browser does not support HTML5 video.\n                                            "
                                                                                )
                                                                            ])
                                                                            : _c("img", {
                                                                                staticClass: "pm-pro-single-file-size",
                                                                                attrs: {
                                                                                    src: _vm.file.thumb,
                                                                                    alt: _vm.file.title
                                                                                }
                                                                            }),
                                                                        _vm._v(" "),
                                                                        _c("div", { staticClass: "item-title" }, [
                                                                            _vm._v(_vm._s(_vm.file.title.slice(0, 20)))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("span", { staticClass: "text" }, [
                                                                            _vm._v(
                                                                                "\n                                                " +
                                                                                _vm._s(_vm.__("Attached to", "pm-pro")) +
                                                                                "\n                                                "
                                                                            ),
                                                                            _c(
                                                                                "a",
                                                                                {
                                                                                    attrs: { href: _vm.contentURL(_vm.file) }
                                                                                },
                                                                                [_vm._v(_vm._s(_vm.attachTo(_vm.file)))]
                                                                            ),
                                                                            _vm._v(
                                                                                "\n                                                " +
                                                                                _vm._s(_vm.__("by", "pm-pro")) +
                                                                                "\n                                                "
                                                                            ),
                                                                            _c(
                                                                                "a",
                                                                                {
                                                                                    attrs: {
                                                                                        href: _vm.myTaskRedirect(
                                                                                            _vm.file.creator.data.id
                                                                                        ),
                                                                                        title:
                                                                                        _vm.file.creator.data.display_name
                                                                                    }
                                                                                },
                                                                                [
                                                                                    _vm._v(
                                                                                        "\n                                                   " +
                                                                                        _vm._s(
                                                                                            _vm.file.creator.data.display_name
                                                                                        ) +
                                                                                        "\n                                                "
                                                                                    )
                                                                                ]
                                                                            )
                                                                        ])
                                                                    ]),
                                                                    _vm._v(" "),
                                                                    _c("div", { staticClass: "footer-section" }, [
                                                                        _c(
                                                                            "a",
                                                                            {
                                                                                attrs: {
                                                                                    href: _vm.getDownloadUrl(
                                                                                        _vm.file.attachment_id
                                                                                    )
                                                                                }
                                                                            },
                                                                            [
                                                                                _c("span", {
                                                                                    staticClass:
                                                                                        "dashicons dashicons-download"
                                                                                })
                                                                            ]
                                                                        )
                                                                    ])
                                                                ]
                                                            )
                                                        ]),
                                                        _vm._v(" "),
                                                        _c(
                                                            "div",
                                                            { staticClass: "doc_attach_comments" },
                                                            [
                                                                _vm.file.files.data.length
                                                                    ? _c("div", [
                                                                        _c("h3", [
                                                                            _vm._v(
                                                                                _vm._s(_vm.__("Attachment", "pm-pro"))
                                                                            )
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "ul",
                                                                            [
                                                                                _vm._l(_vm.file.files.data, function(
                                                                                    file
                                                                                ) {
                                                                                    return _c(
                                                                                        "li",
                                                                                        {
                                                                                            key: file.id,
                                                                                            staticClass: "pm-doc-attachment"
                                                                                        },
                                                                                        [
                                                                                            _c("pm-file", {
                                                                                                attrs: { file: file }
                                                                                            })
                                                                                        ],
                                                                                        1
                                                                                    )
                                                                                }),
                                                                                _vm._v(" "),
                                                                                _c("div", { staticClass: "clearfix" })
                                                                            ],
                                                                            2
                                                                        )
                                                                    ])
                                                                    : _vm._e(),
                                                                _vm._v(" "),
                                                                _c("h3", [
                                                                    _vm._v(_vm._s(_vm.__("Comments", "pm-pro")))
                                                                ]),
                                                                _vm._v(" "),
                                                                _c("div", { staticClass: "comment-content" }, [
                                                                    _vm.file.comments.data.length
                                                                        ? _c(
                                                                            "ul",
                                                                            { staticClass: "pm-comment-wrap" },
                                                                            _vm._l(_vm.file.comments.data, function(
                                                                                comment
                                                                            ) {
                                                                                return _c(
                                                                                    "li",
                                                                                    {
                                                                                        key: comment.id,
                                                                                        staticClass:
                                                                                            "pm-comment clearfix even",
                                                                                        attrs: {
                                                                                            id: "pm-comment-" + comment.id
                                                                                        }
                                                                                    },
                                                                                    [
                                                                                        _c(
                                                                                            "div",
                                                                                            { staticClass: "pm-avatar " },
                                                                                            [
                                                                                                _c(
                                                                                                    "a",
                                                                                                    {
                                                                                                        attrs: {
                                                                                                            href: _vm.myTaskRedirect(
                                                                                                                comment.creator.data.id
                                                                                                            ),
                                                                                                            title:
                                                                                                            comment.creator.data
                                                                                                                .display_name
                                                                                                        }
                                                                                                    },
                                                                                                    [
                                                                                                        _c("img", {
                                                                                                            staticClass:
                                                                                                                "avatar avatar-48 photo",
                                                                                                            attrs: {
                                                                                                                alt:
                                                                                                                comment.creator.data
                                                                                                                    .display_name,
                                                                                                                src:
                                                                                                                comment.creator.data
                                                                                                                    .avatar_url,
                                                                                                                height: "48",
                                                                                                                width: "48"
                                                                                                            }
                                                                                                        })
                                                                                                    ]
                                                                                                )
                                                                                            ]
                                                                                        ),
                                                                                        _vm._v(" "),
                                                                                        _c(
                                                                                            "div",
                                                                                            {
                                                                                                staticClass:
                                                                                                    "pm-comment-container"
                                                                                            },
                                                                                            [
                                                                                                _c(
                                                                                                    "div",
                                                                                                    {
                                                                                                        staticClass: "pm-comment-meta"
                                                                                                    },
                                                                                                    [
                                                                                                        _c(
                                                                                                            "span",
                                                                                                            {
                                                                                                                staticClass: "pm-author"
                                                                                                            },
                                                                                                            [
                                                                                                                _c(
                                                                                                                    "a",
                                                                                                                    {
                                                                                                                        attrs: {
                                                                                                                            href: _vm.myTaskRedirect(
                                                                                                                                comment.creator
                                                                                                                                    .data.id
                                                                                                                            ),
                                                                                                                            title:
                                                                                                                            comment.creator
                                                                                                                                .data
                                                                                                                                .display_name
                                                                                                                        }
                                                                                                                    },
                                                                                                                    [
                                                                                                                        _vm._v(
                                                                                                                            "\n                                                                " +
                                                                                                                            _vm._s(
                                                                                                                                comment.creator
                                                                                                                                    .data
                                                                                                                                    .display_name
                                                                                                                            ) +
                                                                                                                            "\n                                                            "
                                                                                                                        )
                                                                                                                    ]
                                                                                                                )
                                                                                                            ]
                                                                                                        ),
                                                                                                        _vm._v(" "),
                                                                                                        _c(
                                                                                                            "span",
                                                                                                            { staticClass: "pm-date" },
                                                                                                            [
                                                                                                                _c(
                                                                                                                    "time",
                                                                                                                    {
                                                                                                                        attrs: {
                                                                                                                            datetime: _vm.getFullDate(
                                                                                                                                comment.created_at
                                                                                                                                    .datetime
                                                                                                                            ),
                                                                                                                            title: _vm.getFullDate(
                                                                                                                                comment.created_at
                                                                                                                                    .datetime
                                                                                                                            )
                                                                                                                        }
                                                                                                                    },
                                                                                                                    [
                                                                                                                        _vm._v(
                                                                                                                            _vm._s(
                                                                                                                                _vm.relativeDate(
                                                                                                                                    comment
                                                                                                                                        .created_at
                                                                                                                                        .datetime
                                                                                                                                )
                                                                                                                            )
                                                                                                                        )
                                                                                                                    ]
                                                                                                                )
                                                                                                            ]
                                                                                                        ),
                                                                                                        _vm._v(" "),
                                                                                                        _vm.can_edit_comment(comment)
                                                                                                            ? _c(
                                                                                                                "div",
                                                                                                                {
                                                                                                                    staticClass:
                                                                                                                        "pm-comment-action"
                                                                                                                },
                                                                                                                [
                                                                                                                    _c(
                                                                                                                        "span",
                                                                                                                        {
                                                                                                                            staticClass:
                                                                                                                                "pm-edit-link"
                                                                                                                        },
                                                                                                                        [
                                                                                                                            _c("a", {
                                                                                                                                staticClass:
                                                                                                                                    "pm-edit-comment-link dashicons dashicons-edit ",
                                                                                                                                attrs: {
                                                                                                                                    href: "#"
                                                                                                                                },
                                                                                                                                on: {
                                                                                                                                    click: function(
                                                                                                                                        $event
                                                                                                                                    ) {
                                                                                                                                        $event.preventDefault()
                                                                                                                                        return _vm.showHideDocCommentForm(
                                                                                                                                            "toggle",
                                                                                                                                            comment
                                                                                                                                        )
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            })
                                                                                                                        ]
                                                                                                                    ),
                                                                                                                    _vm._v(" "),
                                                                                                                    _c(
                                                                                                                        "span",
                                                                                                                        {
                                                                                                                            staticClass:
                                                                                                                                "pm-delete-link"
                                                                                                                        },
                                                                                                                        [
                                                                                                                            _c("a", {
                                                                                                                                staticClass:
                                                                                                                                    "pm-delete-comment-link dashicons dashicons-trash",
                                                                                                                                attrs: {
                                                                                                                                    href: "#"
                                                                                                                                },
                                                                                                                                on: {
                                                                                                                                    click: function(
                                                                                                                                        $event
                                                                                                                                    ) {
                                                                                                                                        $event.preventDefault()
                                                                                                                                        return _vm.deleteSelfComment(
                                                                                                                                            comment.id,
                                                                                                                                            _vm.file
                                                                                                                                                .id
                                                                                                                                        )
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            })
                                                                                                                        ]
                                                                                                                    )
                                                                                                                ]
                                                                                                            )
                                                                                                            : _vm._e()
                                                                                                    ]
                                                                                                ),
                                                                                                _vm._v(" "),
                                                                                                _c(
                                                                                                    "div",
                                                                                                    {
                                                                                                        staticClass:
                                                                                                            "pm-comment-content"
                                                                                                    },
                                                                                                    [
                                                                                                        _c("div", {
                                                                                                            domProps: {
                                                                                                                innerHTML: _vm._s(
                                                                                                                    comment.content
                                                                                                                )
                                                                                                            }
                                                                                                        }),
                                                                                                        _vm._v(" "),
                                                                                                        comment.files.data.length
                                                                                                            ? _c(
                                                                                                                "ul",
                                                                                                                {
                                                                                                                    staticClass:
                                                                                                                        "pm-attachments"
                                                                                                                },
                                                                                                                _vm._l(
                                                                                                                    comment.files.data,
                                                                                                                    function(file) {
                                                                                                                        return _c(
                                                                                                                            "li",
                                                                                                                            { key: file.id },
                                                                                                                            [
                                                                                                                                _c("pm-file", {
                                                                                                                                    attrs: {
                                                                                                                                        file: file,
                                                                                                                                        file_project_id:
                                                                                                                                        comment.project_id
                                                                                                                                    }
                                                                                                                                })
                                                                                                                            ],
                                                                                                                            1
                                                                                                                        )
                                                                                                                    }
                                                                                                                ),
                                                                                                                0
                                                                                                            )
                                                                                                            : _vm._e()
                                                                                                    ]
                                                                                                ),
                                                                                                _vm._v(" "),
                                                                                                _vm.can_edit_comment(comment)
                                                                                                    ? _c(
                                                                                                        "div",
                                                                                                        {
                                                                                                            staticClass:
                                                                                                                "pm-comment-edit-form"
                                                                                                        },
                                                                                                        [
                                                                                                            comment.editMode
                                                                                                                ? _c("comment-form", {
                                                                                                                    attrs: {
                                                                                                                        type:
                                                                                                                            "file_comments_file",
                                                                                                                        comment: comment
                                                                                                                    }
                                                                                                                })
                                                                                                                : _vm._e()
                                                                                                        ],
                                                                                                        1
                                                                                                    )
                                                                                                    : _vm._e()
                                                                                            ]
                                                                                        )
                                                                                    ]
                                                                                )
                                                                            }),
                                                                            0
                                                                        )
                                                                        : _vm._e()
                                                                ]),
                                                                _vm._v(" "),
                                                                _c("comment-form", {
                                                                    attrs: {
                                                                        type: "file_comments_file",
                                                                        comment: _vm.file.comments.data
                                                                    }
                                                                })
                                                            ],
                                                            1
                                                        ),
                                                        _vm._v(" "),
                                                        _c("div", { staticClass: "clearfix" })
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "clearfix" })
                                            ]),
                                            _vm._v(" "),
                                            _c("div", { staticClass: "pm-col-3 pm-revision" }, [
                                                _c("div", [
                                                    _c("h3", [_vm._v(_vm._s(_vm.__("Revisions", "pm-pro")))]),
                                                    _vm._v(" "),
                                                    _vm.file.revisions.data.length
                                                        ? _c(
                                                            "ul",
                                                            _vm._l(_vm.file.revisions.data, function(revision) {
                                                                return _c("li", { key: revision.id }, [
                                                                    _c(
                                                                        "a",
                                                                        {
                                                                            on: {
                                                                                click: function($event) {
                                                                                    $event.preventDefault()
                                                                                    return _vm.getRevision(revision)
                                                                                }
                                                                            }
                                                                        },
                                                                        [
                                                                            _vm._v(
                                                                                "#" +
                                                                                _vm._s(revision.created_at.date) +
                                                                                " " +
                                                                                _vm._s(revision.created_at.time)
                                                                            )
                                                                        ]
                                                                    )
                                                                ])
                                                            }),
                                                            0
                                                        )
                                                        : _vm._e(),
                                                    _vm._v(" "),
                                                    _c("div", { attrs: { else: "" } }, [
                                                        _vm._v(" " + _vm._s(_vm.__("No Revision", "pm-pro")))
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("div", { staticClass: "clearfix" })
                                        ])
                                    ])
                                ])
                            ]
                        )
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "modal-wrapper" }, [
                        _c(
                            "div",
                            {
                                staticClass: "modal-container",
                                staticStyle: { width: "700px", height: "20000px" }
                            },
                            [
                                _c("span", { staticClass: "close-vue-modal" }, [
                                    _c("a", {}, [_c("span", { staticClass: "dashicons dashicons-no" })])
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "modal-body pm-todolist" }, [
                                    _c("div", { staticClass: "pm-data-load-before" }, [
                                        _c("div", { staticClass: "loadmoreanimation" }, [
                                            _c("div", { staticClass: "load-spinner" }, [
                                                _c("div", { staticClass: "rect1" }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "rect2" }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "rect3" }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "rect4" }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "rect5" })
                                            ])
                                        ])
                                    ])
                                ])
                            ]
                        )
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-485ec3f4", esExports)
                }
            }

            /***/ }),
        /* 190 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _mixin = __webpack_require__(67);

            var _mixin2 = _interopRequireDefault(_mixin);

            var _moduleLists = __webpack_require__(191);

            var _moduleLists2 = _interopRequireDefault(_moduleLists);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevsPmProRegisterModule("modulesLists", 'module-lists');

            PmProMixin.modulesLists = _mixin2.default;

// const module_lists = resolve => {
//     require.ensure(['./module-lists.vue'], () => {
            //         resolve(require('./module-lists.vue'));
            //     });
// }

            weDevsPMRegisterChildrenRoute('project_root', [{
                path: '/modules',
                component: _moduleLists2.default,
                name: 'module_lists',
                meta: {
                    permission: function permission() {
                        if (pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                            return true;
                        }

                        return false;
                    },
                    label: __('Modules', 'pm-pro'),
                    order: 8
                }
            }]);

            /***/ }),
        /* 191 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_module_lists_vue__ = __webpack_require__(68);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_74d1528e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_module_lists_vue__ = __webpack_require__(194);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(192)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_module_lists_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_74d1528e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_module_lists_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/module-lists/module-lists.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-74d1528e", Component.options)
                } else {
                    hotAPI.reload("data-v-74d1528e", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 192 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(193);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("a6289a3c", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-74d1528e\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./module-lists.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-74d1528e\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./module-lists.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 193 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-toggle-switch.big {\n    width: 35px;\n    height: 20px;\n}\n.pm-toggle-switch.checked {\n    background: #0085ba;\n}\n.pm-toggle-switch {\n    cursor: pointer;\n    text-indent: -9999px;\n    width: 25px;\n    height: 15px;\n    background: #ccc;\n    display: block;\n    border-radius: 100px;\n    position: relative;\n}\n.pm-toggle-switch.big.checked:after {\n    left: calc(95%);\n}\n.pm-toggle-switch.big:after {\n    top: 3px;\n    left: 3px;\n    width: 15px;\n    height: 15px;\n}\n.pm-toggle-switch.checked:after {\n    left: calc(90%);\n    transform: translateX(-100%);\n}\n.pm-toggle-switch:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: 2px;\n    width: 12px;\n    height: 12px;\n    background: #fff;\n    border-radius: 50%;\n    transition: 0.3s;\n}\n.pm-pro-module-icon {\n\theight: 90px !important;\n    width: auto !important;\n}\n\n", ""]);

// exports


            /***/ }),
        /* 194 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    { staticClass: "pm-wrap module-list-area" },
                    _vm._l(_vm.modules.all, function(module, path) {
                        return _c("div", { key: module.name, staticClass: "plugin-card" }, [
                            _c(
                                "div",
                                {
                                    staticClass: "plugin-card-top",
                                    attrs: { id: _vm.generateId(module.name) }
                                },
                                [
                                    _c("div", { staticClass: "name column-name" }, [
                                        _c("h3", [
                                            _c("span", { staticClass: "plugin-name" }, [
                                                _vm._v(_vm._s(module.name))
                                            ]),
                                            _vm._v(" "),
                                            _c("img", {
                                                staticClass: "plugin-icon pm-pro-module-icon",
                                                staticStyle: { height: "96px", width: "96px" },
                                                attrs: { src: module.thumbnail, alt: module.name }
                                            })
                                        ])
                                    ]),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "action-links" }, [
                                        _c("ul", { staticClass: "plugin-action-buttons" }, [
                                            _c("li", [
                                                _c("span", {
                                                    class:
                                                        "pm-toggle-switch big " + _vm.checkedClass(path, module),
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.selfToggleModule(
                                                                path,
                                                                module.name,
                                                                _vm.modules
                                                            )
                                                        }
                                                    }
                                                })
                                            ])
                                        ])
                                    ]),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "desc column-description" }, [
                                        _c("p", [
                                            _vm._v(
                                                "\n                    \t" +
                                                _vm._s(module.description) +
                                                "\n                    "
                                            )
                                        ])
                                    ])
                                ]
                            )
                        ])
                    }),
                    0
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-74d1528e", esExports)
                }
            }

            /***/ }),
        /* 195 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _mixin = __webpack_require__(28);

            var _mixin2 = _interopRequireDefault(_mixin);

            var _calendar = __webpack_require__(196);

            var _calendar2 = _interopRequireDefault(_calendar);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevsPmProRegisterModule("calendar", 'calendar');

            PmProMixin.calendar = _mixin2.default;

// const Calendar = resolve => {
//     require.ensure(['./calendar.vue'], () => {
            //         resolve(require('./calendar.vue'));
            //     });
// }

            weDevsPMRegisterChildrenRoute('project_root', [{
                path: '/calendar',
                component: _calendar2.default,
                name: 'calendar',
                meta: {
                    label: __('Calendar', 'pm-pro'),
                    order: 4
                },
                children: [{
                    path: 'projects/:project_id/tasks/:task_id',
                    components: {
                        singleTask: pm.SingleTask
                    },
                    name: 'calendar_single_task'
                }, {
                    path: 'project/:project_id',
                    components: {
                        'calendar': _calendar2.default
                    },
                    name: 'project_calendar'
                }]
            }]);

            /***/ }),
        /* 196 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_calendar_vue__ = __webpack_require__(69);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4c7f1b64_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_calendar_vue__ = __webpack_require__(219);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(197)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_calendar_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4c7f1b64_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_calendar_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/calendar/calendar.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-4c7f1b64", Component.options)
                } else {
                    hotAPI.reload("data-v-4c7f1b64", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 197 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(198);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("46ed0afa", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-4c7f1b64\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./calendar.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-4c7f1b64\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./calendar.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 198 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.fc-flat .fc-expander-space {\n  display: inline !important;\n}\n.fc-resource-area .fc-icon {\n  width: auto;\n  font-size: initial;\n  vertical-align: middle;\n  margin-top: -1%;\n}\n.pm-calender-page .project-select-area {\n  flex: 1;\n}\n.pm-calender-page .button-group {\n  display: flex;\n}\n.pm-calender-page .calendar-color-plate {\n  display: flex;\n  align-items: center;\n}\n.pm-calender-page .calendar-color-plate p {\n  display: flex;\n  align-items: center;\n}\n.pm-calender-page .calendar-color-plate .incomplete-task-color:before {\n  background: #61BD4F;\n  content: \"\";\n  margin: 0 5px;\n  width: 14px;\n  height: 14px;\n  display: inline-block;\n  vertical-align: middle;\n}\n.pm-calender-page .calendar-color-plate .complete-task-color:before {\n  background: #0090D9;\n  content: \"\";\n  margin: 0 5px;\n  width: 14px;\n  height: 14px;\n  display: inline-block;\n  vertical-align: middle;\n}\n.pm-calender-page .calendar-color-plate .outstanding-task-color:before {\n  background: #EB5A46;\n  content: \"\";\n  margin: 0 5px;\n  width: 14px;\n  height: 14px;\n  display: inline-block;\n  vertical-align: middle;\n}\n.pm-calender-page .calendar-color-plate .milestone-color:before {\n  background: #32b1c8;\n  content: \"\";\n  margin: 0 5px;\n  width: 14px;\n  height: 14px;\n  display: inline-block;\n  vertical-align: middle;\n}\n", ""]);

// exports


            /***/ }),
        /* 199 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_user_resource_vue__ = __webpack_require__(70);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c6c2dc20_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_user_resource_vue__ = __webpack_require__(210);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_user_resource_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c6c2dc20_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_user_resource_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/calendar/user-resource.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-c6c2dc20", Component.options)
                } else {
                    hotAPI.reload("data-v-c6c2dc20", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 200 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = { "default": __webpack_require__(201), __esModule: true };

            /***/ }),
        /* 201 */
        /***/ (function(module, exports, __webpack_require__) {

            __webpack_require__(71);
            __webpack_require__(208);
            module.exports = __webpack_require__(5).Array.from;


            /***/ }),
        /* 202 */
        /***/ (function(module, exports, __webpack_require__) {

            var toInteger = __webpack_require__(34);
            var defined = __webpack_require__(32);
// true  -> String#at
// false -> String#codePointAt
            module.exports = function (TO_STRING) {
                return function (that, pos) {
                    var s = String(defined(that));
                    var i = toInteger(pos);
                    var l = s.length;
                    var a, b;
                    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
                    a = s.charCodeAt(i);
                    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
                        ? TO_STRING ? s.charAt(i) : a
                        : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
                };
            };


            /***/ }),
        /* 203 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = __webpack_require__(13);


            /***/ }),
        /* 204 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";

            var create = __webpack_require__(205);
            var descriptor = __webpack_require__(31);
            var setToStringTag = __webpack_require__(43);
            var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
            __webpack_require__(13)(IteratorPrototype, __webpack_require__(7)('iterator'), function () { return this; });

            module.exports = function (Constructor, NAME, next) {
                Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
                setToStringTag(Constructor, NAME + ' Iterator');
            };


            /***/ }),
        /* 205 */
        /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
            var anObject = __webpack_require__(11);
            var dPs = __webpack_require__(206);
            var enumBugKeys = __webpack_require__(53);
            var IE_PROTO = __webpack_require__(35)('IE_PROTO');
            var Empty = function () { /* empty */ };
            var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
            var createDict = function () {
// Thrash, waste and sodomy: IE GC bug
                var iframe = __webpack_require__(30)('iframe');
                var i = enumBugKeys.length;
                var lt = '<';
                var gt = '>';
                var iframeDocument;
                iframe.style.display = 'none';
                __webpack_require__(73).appendChild(iframe);
                iframe.src = 'javascript:'; // eslint-disable-line no-script-url
// createDict = iframe.contentWindow.Object;
// html.removeChild(iframe);
                iframeDocument = iframe.contentWindow.document;
                iframeDocument.open();
                iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
                iframeDocument.close();
                createDict = iframeDocument.F;
                while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
                return createDict();
            };

            module.exports = Object.create || function create(O, Properties) {
                var result;
                if (O !== null) {
                    Empty[PROTOTYPE] = anObject(O);
                    result = new Empty();
                    Empty[PROTOTYPE] = null;
// add "__proto__" for Object.getPrototypeOf polyfill
                    result[IE_PROTO] = O;
                } else result = createDict();
                return Properties === undefined ? result : dPs(result, Properties);
            };


            /***/ }),
        /* 206 */
        /***/ (function(module, exports, __webpack_require__) {

            var dP = __webpack_require__(14);
            var anObject = __webpack_require__(11);
            var getKeys = __webpack_require__(24);

            module.exports = __webpack_require__(10) ? Object.defineProperties : function defineProperties(O, Properties) {
                anObject(O);
                var keys = getKeys(Properties);
                var length = keys.length;
                var i = 0;
                var P;
                while (length > i) dP.f(O, P = keys[i++], Properties[P]);
                return O;
            };


            /***/ }),
        /* 207 */
        /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
            var has = __webpack_require__(23);
            var toObject = __webpack_require__(27);
            var IE_PROTO = __webpack_require__(35)('IE_PROTO');
            var ObjectProto = Object.prototype;

            module.exports = Object.getPrototypeOf || function (O) {
                O = toObject(O);
                if (has(O, IE_PROTO)) return O[IE_PROTO];
                if (typeof O.constructor == 'function' && O instanceof O.constructor) {
                    return O.constructor.prototype;
                } return O instanceof Object ? ObjectProto : null;
            };


            /***/ }),
        /* 208 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";

            var ctx = __webpack_require__(15);
            var $export = __webpack_require__(9);
            var toObject = __webpack_require__(27);
            var call = __webpack_require__(74);
            var isArrayIter = __webpack_require__(75);
            var toLength = __webpack_require__(33);
            var createProperty = __webpack_require__(209);
            var getIterFn = __webpack_require__(76);

            $export($export.S + $export.F * !__webpack_require__(78)(function (iter) { Array.from(iter); }), 'Array', {
// 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
                from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
                    var O = toObject(arrayLike);
                    var C = typeof this == 'function' ? this : Array;
                    var aLen = arguments.length;
                    var mapfn = aLen > 1 ? arguments[1] : undefined;
                    var mapping = mapfn !== undefined;
                    var index = 0;
                    var iterFn = getIterFn(O);
                    var length, result, step, iterator;
                    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
// if object isn't iterable or it's array with default iterator - use simple case
                    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
                        for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
                            createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
                        }
                    } else {
                        length = toLength(O.length);
                        for (result = new C(length); length > index; index++) {
                            createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
                        }
                    }
                    result.length = index;
                    return result;
                }
            });


            /***/ }),
        /* 209 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";

            var $defineProperty = __webpack_require__(14);
            var createDesc = __webpack_require__(31);

            module.exports = function (object, index, value) {
                if (index in object) $defineProperty.f(object, index, createDesc(0, value));
                else object[index] = value;
            };


            /***/ }),
        /* 210 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    {
                        staticClass: "pm-resource-calendar",
                        attrs: { id: "pm-resource-calendar" }
                    },
                    [_c("div", { ref: "calendar", attrs: { id: "calendar" } })]
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-c6c2dc20", esExports)
                }
            }

            /***/ }),
        /* 211 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_select_projects_vue__ = __webpack_require__(79);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0865fccb_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_select_projects_vue__ = __webpack_require__(214);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(212)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_select_projects_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0865fccb_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_select_projects_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/calendar/select-projects.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-0865fccb", Component.options)
                } else {
                    hotAPI.reload("data-v-0865fccb", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 212 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(213);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("4ff2f86c", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0865fccb\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./select-projects.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0865fccb\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./select-projects.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 213 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.project-select-area .form-content-wrap {\n  display: flex;\n  align-items: baseline;\n}\n.project-select-area .form-content-wrap .button-primary {\n  margin-top: -1px;\n}\n.project-select-area .form-content-wrap .drop-down-wrap {\n  display: flex;\n  align-items: baseline;\n  z-index: 9;\n}\n.project-select-area .form-content-wrap .drop-down-wrap .users-drop-down,\n.project-select-area .form-content-wrap .drop-down-wrap .projects-drop-down {\n  width: 250px;\n  min-height: auto;\n  margin-right: 8px;\n}\n.project-select-area .form-content-wrap .drop-down-wrap .users-drop-down .multiselect__single,\n.project-select-area .form-content-wrap .drop-down-wrap .projects-drop-down .multiselect__single {\n  margin-bottom: 0;\n}\n.project-select-area .form-content-wrap .drop-down-wrap .users-drop-down .multiselect__select,\n.project-select-area .form-content-wrap .drop-down-wrap .projects-drop-down .multiselect__select {\n  display: none;\n}\n.project-select-area .form-content-wrap .drop-down-wrap .users-drop-down .multiselect__input,\n.project-select-area .form-content-wrap .drop-down-wrap .projects-drop-down .multiselect__input {\n  border: none;\n  box-shadow: none;\n  margin: 0;\n  font-size: 14px;\n  vertical-align: baseline;\n  height: 0;\n}\n.project-select-area .form-content-wrap .drop-down-wrap .users-drop-down .multiselect__element .multiselect__option,\n.project-select-area .form-content-wrap .drop-down-wrap .projects-drop-down .multiselect__element .multiselect__option {\n  font-weight: normal;\n  white-space: normal;\n  padding: 6px 12px;\n  line-height: 25px;\n  font-size: 14px;\n}\n.project-select-area .form-content-wrap .drop-down-wrap .users-drop-down .multiselect__tags,\n.project-select-area .form-content-wrap .drop-down-wrap .projects-drop-down .multiselect__tags {\n  min-height: auto;\n  padding: 4px;\n  border-color: #ddd;\n  border-radius: 3px;\n  white-space: normal;\n}\n.project-select-area .form-content-wrap .drop-down-wrap .users-drop-down .multiselect__tags .multiselect__tag,\n.project-select-area .form-content-wrap .drop-down-wrap .projects-drop-down .multiselect__tags .multiselect__tag {\n  margin-bottom: 0;\n  overflow: visible;\n  border-radius: 3px;\n  margin-top: 2px;\n}\n", ""]);

// exports


            /***/ }),
        /* 214 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "project-select-area" }, [
                    _c(
                        "form",
                        {
                            staticClass: "calendar-filter-form",
                            attrs: { action: "", method: "post" },
                            on: {
                                submit: function($event) {
                                    $event.preventDefault()
                                    return _vm.filterCalendar()
                                }
                            }
                        },
                        [
                            _c("div", { staticClass: "form-content-wrap" }, [
                                _c(
                                    "div",
                                    { staticClass: "drop-down-wrap" },
                                    [
                                        _c("multiselect", {
                                            staticClass: "projects-drop-down",
                                            attrs: {
                                                options: _vm.projects,
                                                "show-labels": false,
                                                placeholder: _vm.__("Filter by project", "pm-pro"),
                                                allowEmpty: false,
                                                label: "title",
                                                "track-by": "id"
                                            },
                                            on: { input: _vm.onChangeProject },
                                            model: {
                                                value: _vm.selected_project,
                                                callback: function($$v) {
                                                    _vm.selected_project = $$v
                                                },
                                                expression: "selected_project"
                                            }
                                        }),
                                        _vm._v(" "),
                                        _c("multiselect", {
                                            staticClass: "users-drop-down",
                                            attrs: {
                                                options: _vm.users,
                                                multiple: true,
                                                "show-labels": false,
                                                placeholder: _vm.__("Filter by user", "pm-pro"),
                                                label: "display_name",
                                                "track-by": "id"
                                            },
                                            model: {
                                                value: _vm.selected_users,
                                                callback: function($$v) {
                                                    _vm.selected_users = $$v
                                                },
                                                expression: "selected_users"
                                            }
                                        })
                                    ],
                                    1
                                ),
                                _vm._v(" "),
                                _c("input", {
                                    staticClass: "btn button-secondary",
                                    attrs: { type: "submit" },
                                    domProps: { value: _vm.filter }
                                })
                            ])
                        ]
                    )
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-0865fccb", esExports)
                }
            }

            /***/ }),
        /* 215 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_task_create_form_vue__ = __webpack_require__(80);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7024223d_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_task_create_form_vue__ = __webpack_require__(218);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(216)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_task_create_form_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7024223d_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_task_create_form_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/calendar/task-create-form.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-7024223d", Component.options)
                } else {
                    hotAPI.reload("data-v-7024223d", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 216 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(217);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("50cfbbb7", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7024223d\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./task-create-form.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7024223d\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./task-create-form.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 217 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.calendar-task-modal .popup-mask .popup-container {\n  height: 300px !important;\n  top: 110px !important;\n}\n.calendar-task-modal .popup-mask .popup-container .label {\n  color: #000;\n}\n.calendar-task-modal .popup-mask .popup-container .new-task-label {\n  text-align: center;\n  color: #000;\n  font-size: 16px;\n  font-weight: 600;\n}\n.calendar-task-modal .popup-mask .popup-container .project-list-drop-down .multiselect {\n  margin-bottom: 5px !important;\n  border-radius: none;\n  color: #999;\n  font-weight: 300;\n}\n.calendar-task-modal .popup-mask .popup-container .project-list-drop-down .multiselect .multiselect__tags {\n  border-radius: 0;\n}\n.calendar-task-modal .popup-mask .popup-container .project-list-drop-down .multiselect .multiselect__single {\n  margin-bottom: 0;\n}\n.calendar-task-modal .popup-mask .popup-container .project-list-drop-down .multiselect .multiselect__input {\n  border: none;\n  box-shadow: none;\n  margin: 0;\n  font-size: 14px;\n  vertical-align: baseline;\n  height: 0;\n}\n.calendar-task-modal .popup-mask .popup-container .project-list-drop-down .multiselect .multiselect__element .multiselect__option {\n  font-weight: normal;\n  white-space: normal;\n  padding: 6px 12px;\n  line-height: 25px;\n  font-size: 14px;\n}\n.calendar-task-modal .popup-mask .popup-container .project-list-drop-down .multiselect .multiselect__tags {\n  min-height: auto;\n  padding: 4px;\n  border-color: #ddd;\n  white-space: normal;\n}\n.calendar-task-modal .popup-mask .popup-container .project-list-drop-down .multiselect .multiselect__tags .multiselect__tag {\n  margin-bottom: 0;\n  overflow: visible;\n  border-radius: 3px;\n  margin-top: 2px;\n}\n", ""]);

// exports


            /***/ }),
        /* 218 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "calendar-task-modal" }, [
                    _c("div", { staticClass: "popup-mask" }, [
                        _c("div", { staticClass: "popup-container" }, [
                            _c("span", { staticClass: "close-modal" }, [
                                _c(
                                    "a",
                                    {
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                                return _vm.closePopup()
                                            }
                                        }
                                    },
                                    [_c("span", { staticClass: "dashicons dashicons-no" })]
                                )
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "popup-body" }, [
                                _c("div", { staticClass: "new-task-label" }, [
                                    _c("span", [
                                        _vm._v(_vm._s(_vm.__("New Task", "wedevs-project-manager")))
                                    ])
                                ]),
                                _vm._v(" "),
                                _c(
                                    "div",
                                    { staticClass: "project-list-drop-down" },
                                    [
                                        _c("pm-globally-task-create-form", {
                                            attrs: {
                                                setSelectedProjects: _vm.selectedProject,
                                                task: _vm.task
                                            },
                                            on: { afterCreateTask: _vm.afterCreateTask }
                                        })
                                    ],
                                    1
                                )
                            ])
                        ])
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-7024223d", esExports)
                }
            }

            /***/ }),
        /* 219 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    {
                        staticClass: "pm-calender-page pm-wrap pm-front-end",
                        attrs: { id: "pm-calender-page" }
                    },
                    [
                        _vm.loading
                            ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(0)])
                            : _c(
                                "div",
                                [
                                    _vm._m(1),
                                    _vm._v(" "),
                                    _c("h2", [_vm._v(_vm._s(_vm.__("Calendar", "pm-pro")))]),
                                    _vm._v(" "),
                                    _c(
                                        "div",
                                        { staticClass: "button-group" },
                                        [
                                            _c("select-projects", {
                                                attrs: { isProjctsLoaded: _vm.isProjctsLoaded },
                                                on: {
                                                    onChangeProject: _vm.onChangeProject,
                                                    afterGetRespose: _vm.afterGetRespose
                                                }
                                            })
                                        ],
                                        1
                                    ),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "calendar-color-plate" }, [
                                        _c("p", { staticClass: "incomplete-task-color" }, [
                                            _vm._v(_vm._s(_vm.__("Incomplete Task", "pm-pro")))
                                        ]),
                                        _vm._v(" "),
                                        _c("p", { staticClass: "complete-task-color" }, [
                                            _vm._v(_vm._s(_vm.__("Complete Task", "pm-pro")))
                                        ]),
                                        _vm._v(" "),
                                        _c("p", { staticClass: "outstanding-task-color" }, [
                                            _vm._v(_vm._s(_vm.__("Outstanding Task", "pm-pro")))
                                        ]),
                                        _vm._v(" "),
                                        _c("p", { staticClass: "milestone-color" }, [
                                            _vm._v(_vm._s(_vm.__("Milestone", "pm-pro")))
                                        ])
                                    ]),
                                    _vm._v(" "),
                                    _vm.isProjctsLoaded.status
                                        ? _c("pm-calendar", {
                                            attrs: {
                                                locale: _vm.locale,
                                                config: _vm.resourceConfig,
                                                resource: _vm.hasResource
                                            },
                                            on: {
                                                resources: _vm.resources,
                                                "resource-event-render": _vm.resourceRender,
                                                events: _vm.userResourceEvents,
                                                "event-render": _vm.eventRender,
                                                "event-resize": _vm.eventResize,
                                                "event-drop": _vm.eventDrop,
                                                "day-click": _vm.afterClickDay,
                                                "event-created": _vm.afterClickDay,
                                                "event-selected": _vm.clickEvent
                                            }
                                        })
                                        : _vm._e()
                                ],
                                1
                            ),
                        _vm._v(" "),
                        parseInt(_vm.individualTaskId) && parseInt(_vm.individualProjectId)
                            ? _c(
                                "div",
                                [
                                    _c("single-task", {
                                        attrs: {
                                            taskId: parseInt(_vm.individualTaskId),
                                            projectId: parseInt(_vm.individualProjectId)
                                        }
                                    })
                                ],
                                1
                            )
                            : _vm._e(),
                        _vm._v(" "),
                        _c("router-view", { attrs: { name: "singleTask" } }),
                        _vm._v(" "),
                        _vm.isTaskFormActive.status && _vm.isProjctsLoaded.status
                            ? _c("task-create-form", {
                                attrs: {
                                    day: _vm.day,
                                    formVisibility: _vm.isTaskFormActive,
                                    selectedProject: _vm.selectedProject
                                }
                            })
                            : _vm._e()
                    ],
                    1
                )
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "loadmoreanimation" }, [
                        _c("div", { staticClass: "load-spinner" }, [
                            _c("div", { staticClass: "rect1" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect2" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect3" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect4" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect5" })
                        ])
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "icon32", attrs: { id: "icon-themes" } }, [
                        _c("br")
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-4c7f1b64", esExports)
                }
            }

            /***/ }),
        /* 220 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _mixin = __webpack_require__(44);

            var _mixin2 = _interopRequireDefault(_mixin);

            var _duplicate = __webpack_require__(221);

            var _duplicate2 = _interopRequireDefault(_duplicate);

            var _listDuplicate = __webpack_require__(225);

            var _listDuplicate2 = _interopRequireDefault(_listDuplicate);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//weDevsPmProRegisterModule("duplicate", 'duplicate');
            weDevsPmProRegisterModule("duplicate", 'duplicate');


            PmProMixin.duplicate = _mixin2.default;

// const Duplicate = resolve => {
//     require.ensure(['./duplicate.vue'], () => {
            //         resolve(require('./duplicate.vue'));
            //     });
// }

            if (pmHasCreateCapability()) {
                weDevs_PM_Components.push({
                    hook: 'project_action_menu',
                    component: 'pm-duplicate-button',
                    property: _duplicate2.default
                });
            }

            if (pmHasCreateCapability()) {
                weDevs_PM_Components.push({
                    hook: 'list-action-menu',
                    component: 'pm-duplicate-list-button',
                    property: _listDuplicate2.default
                });
            }

            /***/ }),
        /* 221 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_duplicate_vue__ = __webpack_require__(81);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_039656a6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_duplicate_vue__ = __webpack_require__(224);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(222)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_duplicate_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_039656a6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_duplicate_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/duplicate/duplicate.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-039656a6", Component.options)
                } else {
                    hotAPI.reload("data-v-039656a6", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 222 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(223);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("58f67852", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-039656a6\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./duplicate.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-039656a6\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./duplicate.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 223 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-duplicate-project .icon-pm-undo-arrow:before {\n  font-size: 12px;\n}\n", ""]);

// exports


            /***/ }),
        /* 224 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "a",
                    {
                        staticClass: "pm-duplicate-project",
                        attrs: { href: "javscript: void(0)" },
                        on: {
                            click: function($event) {
                                $event.preventDefault()
                                return _vm.duplicateSelfProject()
                            }
                        }
                    },
                    [
                        _c("span", { staticClass: "icon-pm-undo-arrow dashicons" }),
                        _vm._v(" "),
                        _c("span", [_vm._v(_vm._s(_vm.__("Duplicate", "pm-pro")))])
                    ]
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-039656a6", esExports)
                }
            }

            /***/ }),
        /* 225 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_list_duplicate_vue__ = __webpack_require__(82);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_46f286de_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_list_duplicate_vue__ = __webpack_require__(228);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(226)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_list_duplicate_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_46f286de_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_list_duplicate_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/duplicate/list-duplicate.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-46f286de", Component.options)
                } else {
                    hotAPI.reload("data-v-46f286de", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 226 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(227);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("0a4937f2", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-46f286de\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./list-duplicate.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-46f286de\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./list-duplicate.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 227 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-duplicate-list {\n  color: #c2c2c2 !important;\n  cursor: pointer;\n}\n.pm-duplicate-list:hover .icon-pm-copy-files:before {\n  color: #444;\n}\n.pm-duplicate-list .icon-pm-copy-files:before {\n  font-weight: 600;\n}\n", ""]);

// exports


            /***/ }),
        /* 228 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _vm.canview
                    ? _c("li", { staticClass: "pm-duplicate-list" }, [
                        _c(
                            "a",
                            {
                                directives: [{ name: "pm-tooltip", rawName: "v-pm-tooltip" }],
                                staticClass: "li-a ",
                                attrs: { title: _vm.duplicate },
                                on: {
                                    click: function($event) {
                                        $event.preventDefault()
                                        return _vm.duplicateSelfList()
                                    }
                                }
                            },
                            [
                                _c("span", { staticClass: "li-a-icon icon-pm-copy-files" }),
                                _vm._v(" "),
                                _c("span", [_vm._v(_vm._s(_vm.__("Duplicate", "pm-pro")))])
                            ]
                        )
                    ])
                    : _vm._e()
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-46f286de", esExports)
                }
            }

            /***/ }),
        /* 229 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _mixin = __webpack_require__(83);

            var _mixin2 = _interopRequireDefault(_mixin);

            var _content = __webpack_require__(230);

            var _content2 = _interopRequireDefault(_content);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevsPmProRegisterModule('proProSettings', 'project-settings');

            PmProMixin.projectSettings = _mixin2.default;

// const settingsContent = resolve => {
//     require.ensure(['./content.vue'], () => {
            //         resolve(require('./content.vue'));
            //     });
// }

            weDevsPMRegisterChildrenRoute('project_root', [{
                path: ':project_id/settings',
                name: 'pm_pro_settings',
                component: _content2.default,
                meta: {
                    permission: function permission(project) {
                        if (pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                            return true;
                        }
                        return pmIsManager(project);
                    }
                }
            }]);

            pm_add_filter('pm-project-menu', function (menu) {

                menu.push({
                    route: {
                        name: 'pm_pro_settings'
                    },

                    name: __('Settings', 'pm-pro'),
                    count: '',
                    class: 'logo icon-pm-settings',
                    order: 100,
                    meta: {
                        permission: function permission(project) {
                            if (pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                                return true;
                            }
                            return pmIsManager(project);
                        }
                    }
                });

                return menu;
            });

            /***/ }),
        /* 230 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_content_vue__ = __webpack_require__(84);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_acfc829c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_content_vue__ = __webpack_require__(257);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(231)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_content_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_acfc829c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_content_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-settings/content.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-acfc829c", Component.options)
                } else {
                    hotAPI.reload("data-v-acfc829c", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 231 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(232);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("1a4e40c5", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-acfc829c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./content.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-acfc829c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./content.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 232 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-pro-project-settings .icon-pm-capability {\n  margin-right: 4px;\n}\n.pm-pro-project-settings .icon-pm-capability:before {\n  color: #1abc9c !important;\n}\n.pm-pro-project-settings .icon-pm-integration {\n  margin-right: 4px;\n}\n.pm-pro-project-settings .icon-pm-integration:before {\n  color: #f39c12 !important;\n}\n.pm-pro-project-settings .icon-pm-tag {\n  margin-right: 4px;\n}\n.pm-pro-project-settings .icon-pm-tag:before {\n  color: #3b80f4 !important;\n}\n.pm-pro-project-settings .pm-pro-settings-action {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  float: right;\n}\n.pm-pro-project-settings .pm-pro-settings-action:after {\n  content: \"\";\n  display: block;\n  clear: both;\n}\n.pm-pro-project-settings .pm-pro-settings-action .pm-spinner {\n  margin-right: 12px;\n}\n.pm-settings {\n  margin-top: 10px;\n}\n#project-settings .pm-table thead,\n#project-settings .pm-table tfoot {\n  background-color: #FFF;\n}\n#project-settings * {\n  box-sizing: border-box;\n}\n.pm-pro-settings .pm-pro-settngs-wrap {\n  position: relative;\n  display: flex;\n  border: 1px solid #E5E4E4;\n  border-top: none;\n}\n.pm-pro-settings .pm-pro-settngs-wrap h3.nav-tab-wrap {\n  flex: 1;\n  border-bottom: none;\n  padding: 0;\n  margin: 0;\n  background: #f1f1f1;\n  border-right: 1px solid #E5E4E4;\n}\n.pm-pro-settings .pm-pro-settngs-wrap h3.nav-tab-wrap a {\n  float: none;\n  display: block;\n  margin: 0;\n  border: none;\n  padding: 13px;\n  background: #f1f1f1;\n  font-weight: 500;\n  border-bottom: 1px solid #E5E4E4;\n  transition-property: none;\n  transition: none;\n}\n.pm-pro-settings .pm-pro-settngs-wrap h3.nav-tab-wrap .nav-tab-active {\n  background: #fafafa !important;\n  width: 110%;\n  color: #2e4453;\n  transition: none;\n  transition-property: none;\n}\n.pm-pro-settings .pm-pro-settngs-wrap .metabox-holder {\n  padding-top: 10px;\n  flex: 3;\n  padding-left: 3%;\n  padding-right: 10px;\n  background: #fafafa;\n}\n", ""]);

// exports


            /***/ }),
        /* 233 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_integrations_vue__ = __webpack_require__(85);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_26e400b6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_integrations_vue__ = __webpack_require__(244);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(234)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_integrations_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_26e400b6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_integrations_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-settings/integrations.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-26e400b6", Component.options)
                } else {
                    hotAPI.reload("data-v-26e400b6", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 234 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(235);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("0e2fab08", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-26e400b6\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./integrations.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-26e400b6\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./integrations.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 235 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.wpuf-integrations-wrap .pm-pro-slack-field-set {\n    margin: 0;\n    color: #848484;\n    font-weight: 500;\n    font-size: 1.1em;\n    padding-bottom: 5px;\n    margin-top: 20px;\n}\n.wpuf-integrations-wrap .pm-pro-slack-field-wrap {\n    float: left;\n}\n.wpuf-integrations-wrap .pm-pro-slack-field {\n    margin-top: 5px;\n}\n.wpuf-integrations-wrap .pm-pro-slack-field-wrap-right {\n    width: 17%;\n}\n.wpuf-integrations-wrap .pm-pro-slack-more-option {\n    margin-top: 18px;\n}\n.wpuf-integrations-wrap .pm-pro-slack-field-wrap-left {\n    margin-left: 10%;\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-header .wpuf-integration-header-actions button.toggle-area {\n    border: none;\n    border-left: 1px solid #eee;\n    background-color: #fff;\n    width: 100%;\n    height: 100%;\n    outline: none;\n}\n.wpuf-integrations-wrap .wpuf-integration.collapsed .wpuf-integration-header .wpuf-integration-header-actions .toggle-indicator:before {\n    content: \"\\F140\";\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-header .wpuf-integration-header-actions .toggle-indicator:before {\n    content: \"\\F140\";\n    content: \"\\F142\";\n    display: inline-block;\n    font: normal 20px/1 dashicons;\n    speak: none;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-decoration: none !important;\n}\n.wpuf-integrations-wrap .wpuf-integration {\n    background-color: #fff;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.04);\n    border: 1px solid #e5e5e5;\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-header {\n    padding: 0;\n    position: relative;\n    margin: 0 auto;\n    border-bottom: 1px solid #eee;\n    display: flex;\n    flex-direction: row;\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-settings {\n    padding: 15px;\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-header .wpuf-integration-header-toggle {\n    width: 65px;\n    padding: 10px 10px 8px 14px;\n    border-right: 1px solid #eee;\n    margin-right: 10px;\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-header .wpuf-integration-header-label {\n    width: 100%;\n    padding-top: 10px;\n    font-weight: 500;\n    font-size: 1.1em;\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-header .wpuf-integration-header-actions {\n    width: 44px;\n    display: block;\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-settings .wpuf-int-form-row {\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-settings .wpuf-int-form-row .wpuf-int-field-label {\n    float: left;\n    width: 160px;\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-settings .wpuf-int-form-row .wpuf-int-field {\n    float: left;\n    width: 80%;\n    position: relative;\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-settings .wpuf-int-form-row:before,\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-settings .wpuf-int-form-row:after {\n    content: \" \";\n    display: table;\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-settings .wpuf-int-form-row:after {\n    clear: both;\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-header .wpuf-integration-header-label img.icon {\n    width: 24px;\n}\n.wpuf-integrations-wrap .wpuf-integration .wpuf-integration-header .wpuf-integration-header-label img.icon {\n    height: 24px;\n    width: auto;\n    float: left;\n    margin-top: -3px;\n    margin-right: 5px;\n    border: 1px solid #eee;\n    border-radius: 50%;\n}\n.pm-toggle-switch.big {\n    width: 35px;\n    height: 20px;\n}\n.pm-toggle-switch.checked {\n    background: #0085ba;\n}\n.pm-toggle-switch {\n    cursor: pointer;\n    text-indent: -9999px;\n    width: 25px;\n    height: 15px;\n    background: #ccc;\n    display: block;\n    border-radius: 100px;\n    position: relative;\n}\n.pm-toggle-switch.big.checked:after {\n    left: calc(95%);\n}\n.pm-toggle-switch.big:after {\n    top: 3px;\n    left: 3px;\n    width: 15px;\n    height: 15px;\n}\n.pm-toggle-switch.checked:after {\n    left: calc(90%);\n    transform: translateX(-100%);\n}\n.pm-toggle-switch:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: 2px;\n    width: 12px;\n    height: 12px;\n    background: #fff;\n    border-radius: 50%;\n    transition: 0.3s;\n}\n.wpuf-integrations {\n    display:flex;\n}\n\n", ""]);

// exports


            /***/ }),
        /* 236 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_slack_vue__ = __webpack_require__(86);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3d8a4aee_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_slack_vue__ = __webpack_require__(239);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(237)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = "data-v-3d8a4aee"
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_slack_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3d8a4aee_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_slack_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-settings/slack.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-3d8a4aee", Component.options)
                } else {
                    hotAPI.reload("data-v-3d8a4aee", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 237 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(238);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("c3830ab6", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-3d8a4aee\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./slack.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-3d8a4aee\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./slack.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 238 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.wpuf-integrations-wrap .wpuf-integration[data-v-3d8a4aee] {\n    padding: 0 10px;\n    flex-basis: 25%;\n    max-width: 25%;\n    margin-bottom: 0;\n    background-color: transparent;\n    box-shadow: none;\n    border: 0;\n}\n.wpuf-panel[data-v-3d8a4aee] {\n    border: 1px solid #E2E2E2;\n    margin-bottom: 20px;\n}\n.wpuf-panel .wpuf-panel-body[data-v-3d8a4aee] {\n    position: relative;\n    background: #fff;\n    height: 163px;\n    padding: 10px 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 4px 4px 0 0;\n}\n.wpuf-panel .wpuf-panel-footer[data-v-3d8a4aee] {\n    border-radius: 0 0 4px 4px;\n    background: #FBFBFB;\n    border-top: 1px solid #E2E2E2;\n    padding: 10px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n.wpuf-panel .wpuf-panel-body img[data-v-3d8a4aee] {\n    max-height: 100%;\n    max-width: 160px;\n    filter: grayscale(100%);\n    opacity: .5;\n    transition: all 0.3s ease-in-out;\n}\n.wf-modal[data-v-3d8a4aee] {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 99;\n    background: rgba(0, 0, 0, 0.5);\n    opacity: 0;\n    visibility: hidden;\n    transition: all 0.3s ease-in-out;\n}\n.wf-modal.wf-modal-open[data-v-3d8a4aee] {\n    opacity: 1;\n    visibility: visible;\n}\n.wpuf-integrations-wrap .wf-modal .wf-modal-dialog[data-v-3d8a4aee] {\n    max-width: 600px;\n}\n.wf-modal.wf-modal-open .wf-modal-dialog[data-v-3d8a4aee] {\n    margin-top: 0px;\n}\n.wf-modal .wf-modal-dialog[data-v-3d8a4aee] {\n    position: relative;\n    width: 95%;\n    max-width: 820px;\n    max-height: 100%;\n    margin-top: -100px;\n    transition: all 0.3s ease-in-out;\n}\n.wf-modal .wf-modal-content[data-v-3d8a4aee] {\n    background-color: #fff;\n    border: 1px solid #F5F5F5;\n    border-radius: 4px;\n    box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\n    background-clip: padding-box;\n    outline: 0;\n    max-height: 90vh;\n    overflow-y: auto;\n}\n.wpuf-integrations-wrap .wf-modal-header[data-v-3d8a4aee] {\n    border-bottom: 1px solid #E2E2E2;\n    background: #FBFBFB;\n    padding: 10px 20px;\n}\n.wf-modal-header[data-v-3d8a4aee] {\n    padding: 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-radius: 3px 3px 0 0;\n    font-weight: 600;\n    color: #000;\n}\n.wf-modal-body[data-v-3d8a4aee] {\n    position: relative;\n    padding: 20px;\n    background: #fff;\n}\n.wpuf-integrations-wrap .wf-modal-footer[data-v-3d8a4aee] {\n    border-top: 1px solid #E2E2E2;\n    background: #FBFBFB;\n    padding: 10px 20px;\n}\n.wf-modal-footer[data-v-3d8a4aee] {\n    padding: 20px;\n    text-align: right;\n}\n.wpuf-int-form-row[data-v-3d8a4aee] {\n    display: flex;\n    margin-bottom: 10px;\n}\n.wpuf-int-form-row .wpuf-int-field-label[data-v-3d8a4aee] {\n    margin-right: 10px;\n    min-width: 120px;\n    display: inline-flex;\n}\n.wpuf-int-form-row .wpuf-int-field[data-v-3d8a4aee] {\n    width: calc(100% - 120px);\n    position: relative;\n}\n.wpuf-int-form-row .wpuf-int-field input[data-v-3d8a4aee]:not([type='checkbox']), .wpuf-int-form-row .wpuf-int-field select[data-v-3d8a4aee], .wpuf-int-form-row .wpuf-int-field textarea[data-v-3d8a4aee] {\n    padding: 7px 12px;\n    border-radius: 3px;\n    max-width: 100%;\n    width: 100%;\n}\n.wpuf-int-form-row .wpuf-int-field-label label[data-v-3d8a4aee] {\n    font-weight: 600;\n    display: block;\n    margin-top: 6px;\n}\n.wpuf-integrations-wrap .wf-modal-header .modal-header-left[data-v-3d8a4aee] {\n    display: flex;\n    align-items: center;\n}\n.wpuf-integrations-wrap .wf-modal-header .modal-close[data-v-3d8a4aee] {\n    color: #777;\n    width: 52px;\n    height: 52px;\n    border-radius: 0;\n    background: transparent;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    top: 0;\n    right: 0;\n    border-left: 1px solid #ddd;\n    font-size: 18px;\n    font-weight: 300;\n    border-radius: 0 3px 0 0;\n    border-bottom: 0;\n}\n.wf-modal span.modal-close[data-v-3d8a4aee] {\n    width: 24px;\n    height: 24px;\n    text-align: center;\n    border-radius: 50%;\n    background: rgba(0, 0, 0, 0.8);\n    border: 1px solid #f2f2f2;\n    position: absolute;\n    top: -8px;\n    right: -8px;\n    z-index: 9999;\n    cursor: pointer;\n}\n.pm-toggle-switch.big[data-v-3d8a4aee] {\n    width: 35px;\n    height: 20px;\n    margin-right: 10px;\n}\n.wpuf-panel.panel-checked .wpuf-panel-body img[data-v-3d8a4aee] {\n    filter: none;\n    opacity: 1;\n}\n.wpuf-integration .wf-modal-header .wpuf-toggle-switch.checked ~ img[data-v-3d8a4aee] {\n    opacity: 1;\n    filter: none;\n}\n.wpuf-integration .wf-modal-header img[data-v-3d8a4aee] {\n    opacity: .5;\n    filter: grayscale(100%);\n    transition: all 0.3s ease-in-out;\n}\n", ""]);

// exports


            /***/ }),
        /* 239 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _vm.hasSlack
                    ? _c("div", { staticClass: "wpuf-integration" }, [
                        _c("div", { class: "wpuf-panel" + " " + _vm.isActive }, [
                            _c("div", { staticClass: "wpuf-panel-body" }, [
                                _c("img", {
                                    staticClass: "icon",
                                    attrs: { src: _vm.slackIcon(), alt: "Slack" }
                                })
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "wpuf-panel-footer" }, [
                                _c("div", { staticClass: "wpuf-setting" }, [
                                    _c(
                                        "a",
                                        {
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.openModal($event.target)
                                                }
                                            }
                                        },
                                        [
                                            _c(
                                                "svg",
                                                {
                                                    attrs: {
                                                        width: "21px",
                                                        height: "21px",
                                                        viewBox: "0 0 21 21",
                                                        version: "1.1",
                                                        xmlns: "http://www.w3.org/2000/svg",
                                                        "xmlns:xlink": "http://www.w3.org/1999/xlink"
                                                    }
                                                },
                                                [
                                                    _c(
                                                        "g",
                                                        {
                                                            attrs: {
                                                                id: "Page-1",
                                                                stroke: "none",
                                                                "stroke-width": "1",
                                                                fill: "none",
                                                                "fill-rule": "evenodd"
                                                            }
                                                        },
                                                        [
                                                            _c(
                                                                "g",
                                                                {
                                                                    attrs: {
                                                                        id:
                                                                            "Individual-Form-Integration-Page-Design---weForms",
                                                                        transform:
                                                                            "translate(-203.000000, -290.000000)",
                                                                        fill: "#CCCCCC",
                                                                        "fill-rule": "nonzero"
                                                                    }
                                                                },
                                                                [
                                                                    _c(
                                                                        "g",
                                                                        {
                                                                            attrs: {
                                                                                id: "Group-4",
                                                                                transform:
                                                                                    "translate(183.000000, 116.000000)"
                                                                            }
                                                                        },
                                                                        [
                                                                            _c("path", {
                                                                                attrs: {
                                                                                    d:
                                                                                        "M40.9342889,183.334097 C40.9010806,183.038903 40.5568864,182.817077 40.259262,182.817077 C39.2970029,182.817077 38.4431201,182.252081 38.0850175,181.378295 C37.7191793,180.483334 37.9550754,179.439603 38.6722182,178.781783 C38.8979565,178.575428 38.9253826,178.229992 38.7360563,177.990038 C38.2435578,177.364644 37.6837832,176.799726 37.0725944,176.310131 C36.8332603,176.118075 36.4821119,176.144797 36.2745796,176.374592 C35.648701,177.06773 34.5244636,177.325342 33.6557347,176.962873 C32.7516878,176.582588 32.1815991,175.666531 32.237389,174.683199 C32.2557512,174.374331 32.030013,174.10578 31.7220744,174.069916 C30.9377337,173.979201 30.1465168,173.976388 29.3598319,174.063665 C29.0554096,174.097263 28.8296713,174.359485 28.8399073,174.664447 C28.8741314,175.63809 28.2971666,176.53813 27.4021055,176.90474 C26.5437688,177.255333 25.4274233,176.999909 24.8027948,176.312944 C24.5963565,176.086664 24.2509121,176.058848 24.0104059,176.246294 C23.3810893,176.740031 22.8087346,177.305417 22.3117041,177.925655 C22.1178459,178.16678 22.1463659,178.516279 22.3743701,178.723728 C23.105187,179.385534 23.3411612,180.438328 22.9614927,181.343602 C22.5990145,182.206684 21.7027813,182.762929 20.6767623,182.762929 C20.3438199,182.752224 20.1066736,182.975691 20.0702617,183.278387 C19.9779036,184.06724 19.9768096,184.871017 20.0657297,185.666278 C20.0987036,185.962723 20.4533682,186.182595 20.7542743,186.182595 C21.6686353,186.159233 22.5465063,186.725323 22.9147667,187.621456 C23.2818551,188.516417 23.0458809,189.559522 22.3276441,190.217889 C22.1029998,190.424245 22.0744797,190.769134 22.2638061,191.009087 C22.7516945,191.630496 23.3115472,192.195961 23.9249239,192.689619 C24.1655082,192.883473 24.5155626,192.856126 24.7241107,192.62633 C25.3523334,191.931473 26.4764927,191.67433 27.3417836,192.037503 C28.2480965,192.416615 28.8181852,193.332594 28.7623952,194.316473 C28.7441893,194.625498 28.9710214,194.894517 29.2777098,194.929835 C29.6789441,194.976638 30.0826006,195 30.4873511,195 C30.8715515,195 31.25583,194.978903 31.6400304,194.936164 C31.9445309,194.902565 32.1701129,194.640344 32.1598769,194.334835 C32.1246371,193.361739 32.7026176,192.461699 33.5965067,192.095713 C34.4606255,191.742777 35.5722828,192.001092 36.1969894,192.687353 C36.4045998,192.913164 36.7476219,192.940433 36.9894564,192.753612 C37.617601,192.261048 38.1887836,191.69613 38.6881582,191.074173 C38.8819384,190.833595 38.8545904,190.483549 38.6254141,190.276178 C37.8945972,189.614373 37.657451,188.561423 38.0371194,187.656773 C38.39405,186.805177 39.2569967,186.233383 40.185188,186.233383 L40.3150519,186.236743 C40.6161144,186.2612 40.8931106,186.029294 40.9296007,185.721988 C41.0221151,184.932432 41.023209,184.129358 40.9342889,183.334097 Z M30.5166525,188.024555 C28.5852583,188.024555 27.0142326,186.453568 27.0142326,184.522222 C27.0142326,182.590953 28.5852583,181.019888 30.5166525,181.019888 C32.4479686,181.019888 34.0189943,182.590953 34.0189943,184.522222 C34.0189943,186.453568 32.4479686,188.024555 30.5166525,188.024555 Z",
                                                                                    id: "Shape",
                                                                                    transform:
                                                                                        "translate(30.500000, 184.500000) scale(-1, 1) translate(-30.500000, -184.500000) "
                                                                                }
                                                                            })
                                                                        ]
                                                                    )
                                                                ]
                                                            )
                                                        ]
                                                    )
                                                ]
                                            )
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "wpuf-integration-footer-toggle" }, [
                                    _c("span", {
                                        class: "pm-toggle-switch big " + _vm.isChecked(),
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                                return _vm.changeStatus()
                                            }
                                        }
                                    })
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c(
                            "div",
                            { staticClass: "wf-modal", attrs: { id: "slack", role: "dialog" } },
                            [
                                _c("div", { staticClass: "wf-modal-dialog" }, [
                                    _c("div", { staticClass: "wf-modal-content" }, [
                                        _c("div", { staticClass: "wf-modal-header" }, [
                                            _c("div", { staticClass: "modal-header-left" }, [
                                                _c(
                                                    "div",
                                                    {
                                                        class: "wpuf-toggle-switch big" + " " + _vm.isChecked()
                                                    },
                                                    [
                                                        _c("span", {
                                                            class: "pm-toggle-switch big " + _vm.isChecked(),
                                                            on: {
                                                                click: function($event) {
                                                                    $event.preventDefault()
                                                                    return _vm.changeStatus()
                                                                }
                                                            }
                                                        })
                                                    ]
                                                ),
                                                _vm._v(" "),
                                                _c("img", {
                                                    staticClass: "icon",
                                                    attrs: {
                                                        height: "30px",
                                                        src: _vm.slackIcon(),
                                                        alt: "Slack"
                                                    }
                                                })
                                            ]),
                                            _vm._v(" "),
                                            _c(
                                                "span",
                                                {
                                                    staticClass: "modal-close",
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.hideModal($event.target)
                                                        }
                                                    }
                                                },
                                                [_vm._v("x")]
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "wf-modal-body" }, [
                                            _c("div", [
                                                _c("div", [
                                                    _c("div", { staticClass: "wpuf-int-form-row" }, [
                                                        _vm._m(0),
                                                        _vm._v(" "),
                                                        _c("div", { staticClass: "wpuf-int-field" }, [
                                                            _c("input", {
                                                                directives: [
                                                                    {
                                                                        name: "model",
                                                                        rawName: "v-model",
                                                                        value: _vm.slack.webhook,
                                                                        expression: "slack.webhook"
                                                                    }
                                                                ],
                                                                staticClass: "regular-text",
                                                                attrs: {
                                                                    type: "url",
                                                                    placeholder:
                                                                        "https://hooks.slack.com/services/..."
                                                                },
                                                                domProps: { value: _vm.slack.webhook },
                                                                on: {
                                                                    input: function($event) {
                                                                        if ($event.target.composing) {
                                                                            return
                                                                        }
                                                                        _vm.$set(
                                                                            _vm.slack,
                                                                            "webhook",
                                                                            $event.target.value
                                                                        )
                                                                    }
                                                                }
                                                            }),
                                                            _vm._v(" "),
                                                            _c("p", { staticClass: "help" }, [
                                                                _c(
                                                                    "a",
                                                                    {
                                                                        attrs: {
                                                                            href:
                                                                                "https://api.slack.com/incoming-webhooks",
                                                                            target: "_blank"
                                                                        }
                                                                    },
                                                                    [
                                                                        _vm._v(
                                                                            "\n                                " +
                                                                            _vm._s(
                                                                                _vm.__(
                                                                                    "Slack webhook URL",
                                                                                    "wedevs-project-manager"
                                                                                )
                                                                            ) +
                                                                            "\n                            "
                                                                        )
                                                                    ]
                                                                ),
                                                                _vm._v(
                                                                    "\n                            " +
                                                                    _vm._s(
                                                                        _vm.__(
                                                                            "to send our JSON payloads",
                                                                            "wedevs-project-manager"
                                                                        )
                                                                    ) +
                                                                    "\n                            ("
                                                                ),
                                                                _c(
                                                                    "a",
                                                                    {
                                                                        attrs: {
                                                                            href:
                                                                                "https://wedevs.com/docs/wp-project-manager/integrations/slack/",
                                                                            target: "_blank"
                                                                        }
                                                                    },
                                                                    [
                                                                        _vm._v(
                                                                            "\n                                " +
                                                                            _vm._s(
                                                                                _vm.__(
                                                                                    "View documentation",
                                                                                    "wedevs-project-manager"
                                                                                )
                                                                            ) +
                                                                            "\n                            "
                                                                        )
                                                                    ]
                                                                ),
                                                                _vm._v(")\n                        ")
                                                            ]),
                                                            _vm._v(" "),
                                                            _c(
                                                                "a",
                                                                {
                                                                    attrs: { href: "#" },
                                                                    on: {
                                                                        click: function($event) {
                                                                            $event.preventDefault()
                                                                            return _vm.showHideMoreOption()
                                                                        }
                                                                    }
                                                                },
                                                                [
                                                                    !_vm.isActiveMoreOption
                                                                        ? _c("span", [
                                                                            _c("i", {
                                                                                staticClass: "fa fa-plus-circle",
                                                                                attrs: { "aria-hidden": "true" }
                                                                            })
                                                                        ])
                                                                        : _vm._e(),
                                                                    _vm._v(" "),
                                                                    _vm.isActiveMoreOption
                                                                        ? _c("span", [
                                                                            _c("i", {
                                                                                staticClass: "fa fa-minus-circle",
                                                                                attrs: { "aria-hidden": "true" }
                                                                            })
                                                                        ])
                                                                        : _vm._e(),
                                                                    _vm._v(
                                                                        "\n                            " +
                                                                        _vm._s(
                                                                            _vm.__(
                                                                                "More option",
                                                                                "wedevs-project-manager"
                                                                            )
                                                                        ) +
                                                                        "\n                        "
                                                                    )
                                                                ]
                                                            ),
                                                            _vm._v(" "),
                                                            _vm.isActiveMoreOption
                                                                ? _c(
                                                                    "div",
                                                                    { staticClass: "pm-pro-slack-more-option" },
                                                                    [
                                                                        _c("div", [
                                                                            _c(
                                                                                "h3",
                                                                                { staticClass: "pm-pro-slack-field-set" },
                                                                                [
                                                                                    _vm._v(
                                                                                        "\n                                    " +
                                                                                        _vm._s(
                                                                                            _vm.__(
                                                                                                "Tasks",
                                                                                                "wedevs-project-manager"
                                                                                            )
                                                                                        ) +
                                                                                        "\n                                "
                                                                                    )
                                                                                ]
                                                                            ),
                                                                            _vm._v(" "),
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-pro-slack-field" },
                                                                                [
                                                                                    _c(
                                                                                        "div",
                                                                                        {
                                                                                            staticClass:
                                                                                                "pm-pro-slack-field-wrap pm-pro-slack-field-wrap-right"
                                                                                        },
                                                                                        [
                                                                                            _c("input", {
                                                                                                directives: [
                                                                                                    {
                                                                                                        name: "model",
                                                                                                        rawName: "v-model",
                                                                                                        value:
                                                                                                        _vm.slack.options.tasks
                                                                                                            .create,
                                                                                                        expression:
                                                                                                            "slack.options.tasks.create"
                                                                                                    }
                                                                                                ],
                                                                                                attrs: {
                                                                                                    type: "checkbox",
                                                                                                    id: "slack-task-create-box"
                                                                                                },
                                                                                                domProps: {
                                                                                                    checked: Array.isArray(
                                                                                                        _vm.slack.options.tasks.create
                                                                                                    )
                                                                                                        ? _vm._i(
                                                                                                        _vm.slack.options.tasks
                                                                                                            .create,
                                                                                                        null
                                                                                                    ) > -1
                                                                                                        : _vm.slack.options.tasks
                                                                                                            .create
                                                                                                },
                                                                                                on: {
                                                                                                    change: function($event) {
                                                                                                        var $$a =
                                                                                                                _vm.slack.options.tasks
                                                                                                                    .create,
                                                                                                            $$el = $event.target,
                                                                                                            $$c = $$el.checked
                                                                                                                ? true
                                                                                                                : false
                                                                                                        if (Array.isArray($$a)) {
                                                                                                            var $$v = null,
                                                                                                                $$i = _vm._i($$a, $$v)
                                                                                                            if ($$el.checked) {
                                                                                                                $$i < 0 &&
                                                                                                                _vm.$set(
                                                                                                                    _vm.slack.options
                                                                                                                        .tasks,
                                                                                                                    "create",
                                                                                                                    $$a.concat([$$v])
                                                                                                                )
                                                                                                            } else {
                                                                                                                $$i > -1 &&
                                                                                                                _vm.$set(
                                                                                                                    _vm.slack.options
                                                                                                                        .tasks,
                                                                                                                    "create",
                                                                                                                    $$a
                                                                                                                        .slice(0, $$i)
                                                                                                                        .concat(
                                                                                                                            $$a.slice($$i + 1)
                                                                                                                        )
                                                                                                                )
                                                                                                            }
                                                                                                        } else {
                                                                                                            _vm.$set(
                                                                                                                _vm.slack.options.tasks,
                                                                                                                "create",
                                                                                                                $$c
                                                                                                            )
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }),
                                                                                            _vm._v(" "),
                                                                                            _c(
                                                                                                "label",
                                                                                                {
                                                                                                    attrs: {
                                                                                                        for: "slack-task-create-box"
                                                                                                    }
                                                                                                },
                                                                                                [
                                                                                                    _vm._v(
                                                                                                        "\n                                            " +
                                                                                                        _vm._s(
                                                                                                            _vm.__(
                                                                                                                "Create",
                                                                                                                "wedevs-project-manager"
                                                                                                            )
                                                                                                        ) +
                                                                                                        "\n                                        "
                                                                                                    )
                                                                                                ]
                                                                                            )
                                                                                        ]
                                                                                    ),
                                                                                    _vm._v(" "),
                                                                                    _c(
                                                                                        "div",
                                                                                        {
                                                                                            staticClass:
                                                                                                "pm-pro-slack-field-wrap pm-pro-slack-field-wrap-left"
                                                                                        },
                                                                                        [
                                                                                            _c("input", {
                                                                                                directives: [
                                                                                                    {
                                                                                                        name: "model",
                                                                                                        rawName: "v-model",
                                                                                                        value:
                                                                                                        _vm.slack.options.tasks
                                                                                                            .update,
                                                                                                        expression:
                                                                                                            "slack.options.tasks.update"
                                                                                                    }
                                                                                                ],
                                                                                                attrs: {
                                                                                                    type: "checkbox",
                                                                                                    id: "slack-task-update-box"
                                                                                                },
                                                                                                domProps: {
                                                                                                    checked: Array.isArray(
                                                                                                        _vm.slack.options.tasks.update
                                                                                                    )
                                                                                                        ? _vm._i(
                                                                                                        _vm.slack.options.tasks
                                                                                                            .update,
                                                                                                        null
                                                                                                    ) > -1
                                                                                                        : _vm.slack.options.tasks
                                                                                                            .update
                                                                                                },
                                                                                                on: {
                                                                                                    change: function($event) {
                                                                                                        var $$a =
                                                                                                                _vm.slack.options.tasks
                                                                                                                    .update,
                                                                                                            $$el = $event.target,
                                                                                                            $$c = $$el.checked
                                                                                                                ? true
                                                                                                                : false
                                                                                                        if (Array.isArray($$a)) {
                                                                                                            var $$v = null,
                                                                                                                $$i = _vm._i($$a, $$v)
                                                                                                            if ($$el.checked) {
                                                                                                                $$i < 0 &&
                                                                                                                _vm.$set(
                                                                                                                    _vm.slack.options
                                                                                                                        .tasks,
                                                                                                                    "update",
                                                                                                                    $$a.concat([$$v])
                                                                                                                )
                                                                                                            } else {
                                                                                                                $$i > -1 &&
                                                                                                                _vm.$set(
                                                                                                                    _vm.slack.options
                                                                                                                        .tasks,
                                                                                                                    "update",
                                                                                                                    $$a
                                                                                                                        .slice(0, $$i)
                                                                                                                        .concat(
                                                                                                                            $$a.slice($$i + 1)
                                                                                                                        )
                                                                                                                )
                                                                                                            }
                                                                                                        } else {
                                                                                                            _vm.$set(
                                                                                                                _vm.slack.options.tasks,
                                                                                                                "update",
                                                                                                                $$c
                                                                                                            )
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }),
                                                                                            _vm._v(" "),
                                                                                            _c(
                                                                                                "label",
                                                                                                {
                                                                                                    attrs: {
                                                                                                        for: "slack-task-update-box"
                                                                                                    }
                                                                                                },
                                                                                                [
                                                                                                    _vm._v(
                                                                                                        "\n                                            " +
                                                                                                        _vm._s(
                                                                                                            _vm.__(
                                                                                                                "Update",
                                                                                                                "wedevs-project-manager"
                                                                                                            )
                                                                                                        ) +
                                                                                                        "\n                                        "
                                                                                                    )
                                                                                                ]
                                                                                            )
                                                                                        ]
                                                                                    ),
                                                                                    _vm._v(" "),
                                                                                    _c("div", {
                                                                                        staticClass: "pm-clearfix"
                                                                                    })
                                                                                ]
                                                                            ),
                                                                            _vm._v(" "),
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-pro-slack-field" },
                                                                                [
                                                                                    _c(
                                                                                        "div",
                                                                                        {
                                                                                            staticClass:
                                                                                                "pm-pro-slack-field-wrap pm-pro-slack-field-wrap-right"
                                                                                        },
                                                                                        [
                                                                                            _c("input", {
                                                                                                directives: [
                                                                                                    {
                                                                                                        name: "model",
                                                                                                        rawName: "v-model",
                                                                                                        value:
                                                                                                        _vm.slack.options.tasks
                                                                                                            .complete,
                                                                                                        expression:
                                                                                                            "slack.options.tasks.complete"
                                                                                                    }
                                                                                                ],
                                                                                                attrs: {
                                                                                                    type: "checkbox",
                                                                                                    id: "slack-task-done-box"
                                                                                                },
                                                                                                domProps: {
                                                                                                    checked: Array.isArray(
                                                                                                        _vm.slack.options.tasks
                                                                                                            .complete
                                                                                                    )
                                                                                                        ? _vm._i(
                                                                                                        _vm.slack.options.tasks
                                                                                                            .complete,
                                                                                                        null
                                                                                                    ) > -1
                                                                                                        : _vm.slack.options.tasks
                                                                                                            .complete
                                                                                                },
                                                                                                on: {
                                                                                                    change: function($event) {
                                                                                                        var $$a =
                                                                                                                _vm.slack.options.tasks
                                                                                                                    .complete,
                                                                                                            $$el = $event.target,
                                                                                                            $$c = $$el.checked
                                                                                                                ? true
                                                                                                                : false
                                                                                                        if (Array.isArray($$a)) {
                                                                                                            var $$v = null,
                                                                                                                $$i = _vm._i($$a, $$v)
                                                                                                            if ($$el.checked) {
                                                                                                                $$i < 0 &&
                                                                                                                _vm.$set(
                                                                                                                    _vm.slack.options
                                                                                                                        .tasks,
                                                                                                                    "complete",
                                                                                                                    $$a.concat([$$v])
                                                                                                                )
                                                                                                            } else {
                                                                                                                $$i > -1 &&
                                                                                                                _vm.$set(
                                                                                                                    _vm.slack.options
                                                                                                                        .tasks,
                                                                                                                    "complete",
                                                                                                                    $$a
                                                                                                                        .slice(0, $$i)
                                                                                                                        .concat(
                                                                                                                            $$a.slice($$i + 1)
                                                                                                                        )
                                                                                                                )
                                                                                                            }
                                                                                                        } else {
                                                                                                            _vm.$set(
                                                                                                                _vm.slack.options.tasks,
                                                                                                                "complete",
                                                                                                                $$c
                                                                                                            )
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }),
                                                                                            _vm._v(" "),
                                                                                            _c(
                                                                                                "label",
                                                                                                {
                                                                                                    attrs: {
                                                                                                        for: "slack-task-done-box"
                                                                                                    }
                                                                                                },
                                                                                                [
                                                                                                    _vm._v(
                                                                                                        "\n                                            " +
                                                                                                        _vm._s(
                                                                                                            _vm.__(
                                                                                                                "Complete",
                                                                                                                "wedevs-project-manager"
                                                                                                            )
                                                                                                        ) +
                                                                                                        "\n                                        "
                                                                                                    )
                                                                                                ]
                                                                                            )
                                                                                        ]
                                                                                    ),
                                                                                    _vm._v(" "),
                                                                                    _c(
                                                                                        "div",
                                                                                        {
                                                                                            staticClass:
                                                                                                "pm-pro-slack-field-wrap pm-pro-slack-field-wrap-left"
                                                                                        },
                                                                                        [
                                                                                            _c("input", {
                                                                                                directives: [
                                                                                                    {
                                                                                                        name: "model",
                                                                                                        rawName: "v-model",
                                                                                                        value:
                                                                                                        _vm.slack.options.tasks
                                                                                                            .incomplete,
                                                                                                        expression:
                                                                                                            "slack.options.tasks.incomplete"
                                                                                                    }
                                                                                                ],
                                                                                                attrs: {
                                                                                                    type: "checkbox",
                                                                                                    id: "slack-task-undone-box"
                                                                                                },
                                                                                                domProps: {
                                                                                                    checked: Array.isArray(
                                                                                                        _vm.slack.options.tasks
                                                                                                            .incomplete
                                                                                                    )
                                                                                                        ? _vm._i(
                                                                                                        _vm.slack.options.tasks
                                                                                                            .incomplete,
                                                                                                        null
                                                                                                    ) > -1
                                                                                                        : _vm.slack.options.tasks
                                                                                                            .incomplete
                                                                                                },
                                                                                                on: {
                                                                                                    change: function($event) {
                                                                                                        var $$a =
                                                                                                                _vm.slack.options.tasks
                                                                                                                    .incomplete,
                                                                                                            $$el = $event.target,
                                                                                                            $$c = $$el.checked
                                                                                                                ? true
                                                                                                                : false
                                                                                                        if (Array.isArray($$a)) {
                                                                                                            var $$v = null,
                                                                                                                $$i = _vm._i($$a, $$v)
                                                                                                            if ($$el.checked) {
                                                                                                                $$i < 0 &&
                                                                                                                _vm.$set(
                                                                                                                    _vm.slack.options
                                                                                                                        .tasks,
                                                                                                                    "incomplete",
                                                                                                                    $$a.concat([$$v])
                                                                                                                )
                                                                                                            } else {
                                                                                                                $$i > -1 &&
                                                                                                                _vm.$set(
                                                                                                                    _vm.slack.options
                                                                                                                        .tasks,
                                                                                                                    "incomplete",
                                                                                                                    $$a
                                                                                                                        .slice(0, $$i)
                                                                                                                        .concat(
                                                                                                                            $$a.slice($$i + 1)
                                                                                                                        )
                                                                                                                )
                                                                                                            }
                                                                                                        } else {
                                                                                                            _vm.$set(
                                                                                                                _vm.slack.options.tasks,
                                                                                                                "incomplete",
                                                                                                                $$c
                                                                                                            )
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }),
                                                                                            _vm._v(" "),
                                                                                            _c(
                                                                                                "label",
                                                                                                {
                                                                                                    attrs: {
                                                                                                        for: "slack-task-undone-box"
                                                                                                    }
                                                                                                },
                                                                                                [
                                                                                                    _vm._v(
                                                                                                        "\n                                            " +
                                                                                                        _vm._s(
                                                                                                            _vm.__(
                                                                                                                "Incomplete",
                                                                                                                "wedevs-project-manager"
                                                                                                            )
                                                                                                        ) +
                                                                                                        "\n                                        "
                                                                                                    )
                                                                                                ]
                                                                                            )
                                                                                        ]
                                                                                    ),
                                                                                    _vm._v(" "),
                                                                                    _c("div", {
                                                                                        staticClass: "pm-clearfix"
                                                                                    })
                                                                                ]
                                                                            ),
                                                                            _vm._v(" "),
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-pro-slack-field" },
                                                                                [
                                                                                    _c(
                                                                                        "div",
                                                                                        {
                                                                                            staticClass:
                                                                                                "pm-pro-slack-field-wrap pm-pro-slack-field-wrap-right"
                                                                                        },
                                                                                        [
                                                                                            _c("input", {
                                                                                                directives: [
                                                                                                    {
                                                                                                        name: "model",
                                                                                                        rawName: "v-model",
                                                                                                        value:
                                                                                                        _vm.slack.options.tasks
                                                                                                            .createComment,
                                                                                                        expression:
                                                                                                            "slack.options.tasks.createComment"
                                                                                                    }
                                                                                                ],
                                                                                                attrs: {
                                                                                                    type: "checkbox",
                                                                                                    id: "slack-task-comment-box"
                                                                                                },
                                                                                                domProps: {
                                                                                                    checked: Array.isArray(
                                                                                                        _vm.slack.options.tasks
                                                                                                            .createComment
                                                                                                    )
                                                                                                        ? _vm._i(
                                                                                                        _vm.slack.options.tasks
                                                                                                            .createComment,
                                                                                                        null
                                                                                                    ) > -1
                                                                                                        : _vm.slack.options.tasks
                                                                                                            .createComment
                                                                                                },
                                                                                                on: {
                                                                                                    change: function($event) {
                                                                                                        var $$a =
                                                                                                                _vm.slack.options.tasks
                                                                                                                    .createComment,
                                                                                                            $$el = $event.target,
                                                                                                            $$c = $$el.checked
                                                                                                                ? true
                                                                                                                : false
                                                                                                        if (Array.isArray($$a)) {
                                                                                                            var $$v = null,
                                                                                                                $$i = _vm._i($$a, $$v)
                                                                                                            if ($$el.checked) {
                                                                                                                $$i < 0 &&
                                                                                                                _vm.$set(
                                                                                                                    _vm.slack.options
                                                                                                                        .tasks,
                                                                                                                    "createComment",
                                                                                                                    $$a.concat([$$v])
                                                                                                                )
                                                                                                            } else {
                                                                                                                $$i > -1 &&
                                                                                                                _vm.$set(
                                                                                                                    _vm.slack.options
                                                                                                                        .tasks,
                                                                                                                    "createComment",
                                                                                                                    $$a
                                                                                                                        .slice(0, $$i)
                                                                                                                        .concat(
                                                                                                                            $$a.slice($$i + 1)
                                                                                                                        )
                                                                                                                )
                                                                                                            }
                                                                                                        } else {
                                                                                                            _vm.$set(
                                                                                                                _vm.slack.options.tasks,
                                                                                                                "createComment",
                                                                                                                $$c
                                                                                                            )
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }),
                                                                                            _vm._v(" "),
                                                                                            _c(
                                                                                                "label",
                                                                                                {
                                                                                                    attrs: {
                                                                                                        for: "slack-task-comment-box"
                                                                                                    }
                                                                                                },
                                                                                                [
                                                                                                    _vm._v(
                                                                                                        "\n                                            " +
                                                                                                        _vm._s(
                                                                                                            _vm.__(
                                                                                                                "New comment",
                                                                                                                "wedevs-project-manager"
                                                                                                            )
                                                                                                        ) +
                                                                                                        "\n                                        "
                                                                                                    )
                                                                                                ]
                                                                                            )
                                                                                        ]
                                                                                    ),
                                                                                    _vm._v(" "),
                                                                                    _c(
                                                                                        "div",
                                                                                        {
                                                                                            staticClass:
                                                                                                "pm-pro-slack-field-wrap pm-pro-slack-field-wrap-left"
                                                                                        },
                                                                                        [
                                                                                            _c("input", {
                                                                                                directives: [
                                                                                                    {
                                                                                                        name: "model",
                                                                                                        rawName: "v-model",
                                                                                                        value:
                                                                                                        _vm.slack.options.tasks
                                                                                                            .updateComment,
                                                                                                        expression:
                                                                                                            "slack.options.tasks.updateComment"
                                                                                                    }
                                                                                                ],
                                                                                                attrs: {
                                                                                                    type: "checkbox",
                                                                                                    id:
                                                                                                        "slack-task-update-comment-box"
                                                                                                },
                                                                                                domProps: {
                                                                                                    checked: Array.isArray(
                                                                                                        _vm.slack.options.tasks
                                                                                                            .updateComment
                                                                                                    )
                                                                                                        ? _vm._i(
                                                                                                        _vm.slack.options.tasks
                                                                                                            .updateComment,
                                                                                                        null
                                                                                                    ) > -1
                                                                                                        : _vm.slack.options.tasks
                                                                                                            .updateComment
                                                                                                },
                                                                                                on: {
                                                                                                    change: function($event) {
                                                                                                        var $$a =
                                                                                                                _vm.slack.options.tasks
                                                                                                                    .updateComment,
                                                                                                            $$el = $event.target,
                                                                                                            $$c = $$el.checked
                                                                                                                ? true
                                                                                                                : false
                                                                                                        if (Array.isArray($$a)) {
                                                                                                            var $$v = null,
                                                                                                                $$i = _vm._i($$a, $$v)
                                                                                                            if ($$el.checked) {
                                                                                                                $$i < 0 &&
                                                                                                                _vm.$set(
                                                                                                                    _vm.slack.options
                                                                                                                        .tasks,
                                                                                                                    "updateComment",
                                                                                                                    $$a.concat([$$v])
                                                                                                                )
                                                                                                            } else {
                                                                                                                $$i > -1 &&
                                                                                                                _vm.$set(
                                                                                                                    _vm.slack.options
                                                                                                                        .tasks,
                                                                                                                    "updateComment",
                                                                                                                    $$a
                                                                                                                        .slice(0, $$i)
                                                                                                                        .concat(
                                                                                                                            $$a.slice($$i + 1)
                                                                                                                        )
                                                                                                                )
                                                                                                            }
                                                                                                        } else {
                                                                                                            _vm.$set(
                                                                                                                _vm.slack.options.tasks,
                                                                                                                "updateComment",
                                                                                                                $$c
                                                                                                            )
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }),
                                                                                            _vm._v(" "),
                                                                                            _c(
                                                                                                "label",
                                                                                                {
                                                                                                    attrs: {
                                                                                                        for:
                                                                                                            "slack-task-update-comment-box"
                                                                                                    }
                                                                                                },
                                                                                                [
                                                                                                    _vm._v(
                                                                                                        "\n                                            " +
                                                                                                        _vm._s(
                                                                                                            _vm.__(
                                                                                                                "Update comment",
                                                                                                                "wedevs-project-manager"
                                                                                                            )
                                                                                                        ) +
                                                                                                        "\n                                        "
                                                                                                    )
                                                                                                ]
                                                                                            )
                                                                                        ]
                                                                                    ),
                                                                                    _vm._v(" "),
                                                                                    _c("div", {
                                                                                        staticClass: "pm-clearfix"
                                                                                    })
                                                                                ]
                                                                            )
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("pm-do-action", {
                                                                            attrs: {
                                                                                hook: "pm-pro-after-slack-more-options",
                                                                                actionData: _vm.slack
                                                                            }
                                                                        })
                                                                    ],
                                                                    1
                                                                )
                                                                : _vm._e()
                                                        ])
                                                    ])
                                                ])
                                            ])
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "wf-modal-footer" }, [
                                            _vm.spinner
                                                ? _c("span", { staticClass: "pm-spinner" })
                                                : _vm._e(),
                                            _vm._v(" "),
                                            _c(
                                                "button",
                                                {
                                                    staticClass: "button button-primary",
                                                    attrs: { type: "button" },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.save()
                                                        }
                                                    }
                                                },
                                                [
                                                    _vm._v(
                                                        "\n                        Save Form\n                    "
                                                    )
                                                ]
                                            )
                                        ])
                                    ])
                                ])
                            ]
                        )
                    ])
                    : _vm._e()
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "wpuf-int-field-label" }, [
                        _c("label", { attrs: { for: "mailchimp-list-id" } }, [
                            _vm._v("Slack Webhook URL")
                        ])
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-3d8a4aee", esExports)
                }
            }

            /***/ }),
        /* 240 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_github_bitbucket_vue__ = __webpack_require__(87);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0e3424e4_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_github_bitbucket_vue__ = __webpack_require__(243);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(241)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = "data-v-0e3424e4"
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_github_bitbucket_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0e3424e4_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_github_bitbucket_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-settings/github-bitbucket.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-0e3424e4", Component.options)
                } else {
                    hotAPI.reload("data-v-0e3424e4", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 241 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(242);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("2b1346f5", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0e3424e4\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./github-bitbucket.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0e3424e4\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./github-bitbucket.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 242 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.wpuf-integrations-wrap .wpuf-integration[data-v-0e3424e4] {\n    padding: 0 10px;\n    flex-basis: 25%;\n    max-width: 25%;\n    margin-bottom: 0;\n    background-color: transparent;\n    box-shadow: none;\n    border: 0;\n}\n.wpuf-panel[data-v-0e3424e4] {\n    border: 1px solid #E2E2E2;\n    margin-bottom: 20px;\n}\n.wpuf-panel .wpuf-panel-body[data-v-0e3424e4] {\n    position: relative;\n    background: #fff;\n    height: 163px;\n    padding: 10px 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 4px 4px 0 0;\n}\n.wpuf-panel .wpuf-panel-footer[data-v-0e3424e4] {\n    border-radius: 0 0 4px 4px;\n    background: #FBFBFB;\n    border-top: 1px solid #E2E2E2;\n    padding: 10px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n.wpuf-panel .wpuf-panel-body img[data-v-0e3424e4] {\n    max-height: 100%;\n    max-width: 160px;\n    filter: grayscale(100%);\n    opacity: .5;\n    transition: all 0.3s ease-in-out;\n}\n.wf-modal[data-v-0e3424e4] {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 99;\n    background: rgba(0, 0, 0, 0.5);\n    opacity: 0;\n    visibility: hidden;\n    transition: all 0.3s ease-in-out;\n}\n.wf-modal.wf-modal-open[data-v-0e3424e4] {\n    opacity: 1;\n    visibility: visible;\n}\n.wpuf-integrations-wrap .wf-modal .wf-modal-dialog[data-v-0e3424e4] {\n    max-width: 600px;\n}\n.wf-modal.wf-modal-open .wf-modal-dialog[data-v-0e3424e4] {\n    margin-top: 0px;\n}\n.wf-modal .wf-modal-dialog[data-v-0e3424e4] {\n    position: relative;\n    width: 95%;\n    max-width: 820px;\n    max-height: 100%;\n    margin-top: -100px;\n    transition: all 0.3s ease-in-out;\n}\n.wf-modal .wf-modal-content[data-v-0e3424e4] {\n    background-color: #fff;\n    border: 1px solid #F5F5F5;\n    border-radius: 4px;\n    box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\n    background-clip: padding-box;\n    outline: 0;\n    max-height: 90vh;\n    overflow-y: auto;\n}\n.wpuf-integrations-wrap .wf-modal-header[data-v-0e3424e4] {\n    border-bottom: 1px solid #E2E2E2;\n    background: #FBFBFB;\n    padding: 10px 20px;\n}\n.wf-modal-header[data-v-0e3424e4] {\n    padding: 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-radius: 3px 3px 0 0;\n    font-weight: 600;\n    color: #000;\n}\n.wf-modal-body[data-v-0e3424e4] {\n    position: relative;\n    padding: 20px;\n    background: #fff;\n}\n.wpuf-integrations-wrap .wf-modal-footer[data-v-0e3424e4] {\n    border-top: 1px solid #E2E2E2;\n    background: #FBFBFB;\n    padding: 10px 20px;\n}\n.wf-modal-footer[data-v-0e3424e4] {\n    padding: 20px;\n    text-align: right;\n}\n.wpuf-int-form-row[data-v-0e3424e4] {\n    display: flex;\n    margin-bottom: 10px;\n}\n.wpuf-int-form-row .wpuf-int-field-label[data-v-0e3424e4] {\n    margin-right: 10px;\n    min-width: 120px;\n    display: inline-flex;\n}\n.wpuf-int-form-row .wpuf-int-field[data-v-0e3424e4] {\n    width: calc(100% - 120px);\n    position: relative;\n}\n.wpuf-int-form-row .wpuf-int-field input[data-v-0e3424e4]:not([type='checkbox']), .wpuf-int-form-row .wpuf-int-field select[data-v-0e3424e4], .wpuf-int-form-row .wpuf-int-field textarea[data-v-0e3424e4] {\n    padding: 7px 12px;\n    border-radius: 3px;\n    max-width: 100%;\n    width: 100%;\n}\n.wpuf-int-form-row .wpuf-int-field-label label[data-v-0e3424e4] {\n    font-weight: 600;\n    display: block;\n    margin-top: 6px;\n}\n.wpuf-integrations-wrap .wf-modal-header .modal-header-left[data-v-0e3424e4] {\n    display: flex;\n    align-items: center;\n}\n.wpuf-integrations-wrap .wf-modal-header .modal-close[data-v-0e3424e4] {\n    color: #777;\n    width: 52px;\n    height: 52px;\n    border-radius: 0;\n    background: transparent;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    top: 0;\n    right: 0;\n    border-left: 1px solid #ddd;\n    font-size: 18px;\n    font-weight: 300;\n    border-radius: 0 3px 0 0;\n    border-bottom: 0;\n}\n.wf-modal span.modal-close[data-v-0e3424e4] {\n    width: 24px;\n    height: 24px;\n    text-align: center;\n    border-radius: 50%;\n    background: rgba(0, 0, 0, 0.8);\n    border: 1px solid #f2f2f2;\n    position: absolute;\n    top: -8px;\n    right: -8px;\n    z-index: 9999;\n    cursor: pointer;\n}\n.pm-toggle-switch.big[data-v-0e3424e4] {\n    width: 35px;\n    height: 20px;\n    margin-right: 10px;\n}\n.wpuf-panel.panel-checked .wpuf-panel-body img[data-v-0e3424e4] {\n    filter: none;\n    opacity: 1;\n}\n.wpuf-integration .wf-modal-header .wpuf-toggle-switch.checked ~ img[data-v-0e3424e4] {\n    opacity: 1;\n    filter: none;\n}\n.wpuf-integration .wf-modal-header img[data-v-0e3424e4] {\n    opacity: .5;\n    filter: grayscale(100%);\n    transition: all 0.3s ease-in-out;\n}\n.manage[data-v-0e3424e4] {\n        font-weight: bold;\n}\n.git_bit[data-v-0e3424e4] {\n        width: 100%;\n}\n.submit[data-v-0e3424e4] {\n        text-align: right;\n}\n.git_bit_wrap[data-v-0e3424e4] {\n        padding-right: 0px !important;\n        padding-left: 0px !important;\n        margin-top: 50px;\n}\n.git_bit_title[data-v-0e3424e4] {\n        padding-left: 5px;\n}\nspan.int_title[data-v-0e3424e4] {\n        font-size: 22px;\n        color: #000;\n        font-weight: bold;\n}\n.wpuf-panel.panel-checked .wpuf-panel-body img[data-v-0e3424e4] {\n        filter: none;\n        opacity: 1;\n}\n", ""]);

// exports


            /***/ }),
        /* 243 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _vm.hasGithub
                    ? _c("div", { staticClass: "wpuf-integration" }, [
                        _c("div", { class: "wpuf-panel" + " " + _vm.isActive }, [
                            _c("div", { staticClass: "wpuf-panel-body" }, [
                                _c("div", { staticClass: "wpuf-integration-header-label" }, [
                                    _c("div", { staticClass: "github-title-wrap" }, [
                                        _c("img", { attrs: { src: _vm.githubIcon() } }),
                                        _vm._v(" "),
                                        _c("span", { staticClass: "int_title" }, [_vm._v("Github")])
                                    ]),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "bitbucket-title-wrap" }, [
                                        _c("img", {
                                            attrs: { src: _vm.bitbucketIcon(), width: "128px" }
                                        })
                                    ])
                                ])
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "wpuf-panel-footer" }, [
                                _c("div", { staticClass: "wpuf-setting" }, [
                                    _c(
                                        "a",
                                        {
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.openModal($event.target)
                                                }
                                            }
                                        },
                                        [
                                            _c(
                                                "svg",
                                                {
                                                    attrs: {
                                                        width: "21px",
                                                        height: "21px",
                                                        viewBox: "0 0 21 21",
                                                        version: "1.1",
                                                        xmlns: "http://www.w3.org/2000/svg",
                                                        "xmlns:xlink": "http://www.w3.org/1999/xlink"
                                                    }
                                                },
                                                [
                                                    _c(
                                                        "g",
                                                        {
                                                            attrs: {
                                                                id: "Page-1",
                                                                stroke: "none",
                                                                "stroke-width": "1",
                                                                fill: "none",
                                                                "fill-rule": "evenodd"
                                                            }
                                                        },
                                                        [
                                                            _c(
                                                                "g",
                                                                {
                                                                    attrs: {
                                                                        id:
                                                                            "Individual-Form-Integration-Page-Design---weForms",
                                                                        transform:
                                                                            "translate(-203.000000, -290.000000)",
                                                                        fill: "#CCCCCC",
                                                                        "fill-rule": "nonzero"
                                                                    }
                                                                },
                                                                [
                                                                    _c(
                                                                        "g",
                                                                        {
                                                                            attrs: {
                                                                                id: "Group-4",
                                                                                transform:
                                                                                    "translate(183.000000, 116.000000)"
                                                                            }
                                                                        },
                                                                        [
                                                                            _c("path", {
                                                                                attrs: {
                                                                                    d:
                                                                                        "M40.9342889,183.334097 C40.9010806,183.038903 40.5568864,182.817077 40.259262,182.817077 C39.2970029,182.817077 38.4431201,182.252081 38.0850175,181.378295 C37.7191793,180.483334 37.9550754,179.439603 38.6722182,178.781783 C38.8979565,178.575428 38.9253826,178.229992 38.7360563,177.990038 C38.2435578,177.364644 37.6837832,176.799726 37.0725944,176.310131 C36.8332603,176.118075 36.4821119,176.144797 36.2745796,176.374592 C35.648701,177.06773 34.5244636,177.325342 33.6557347,176.962873 C32.7516878,176.582588 32.1815991,175.666531 32.237389,174.683199 C32.2557512,174.374331 32.030013,174.10578 31.7220744,174.069916 C30.9377337,173.979201 30.1465168,173.976388 29.3598319,174.063665 C29.0554096,174.097263 28.8296713,174.359485 28.8399073,174.664447 C28.8741314,175.63809 28.2971666,176.53813 27.4021055,176.90474 C26.5437688,177.255333 25.4274233,176.999909 24.8027948,176.312944 C24.5963565,176.086664 24.2509121,176.058848 24.0104059,176.246294 C23.3810893,176.740031 22.8087346,177.305417 22.3117041,177.925655 C22.1178459,178.16678 22.1463659,178.516279 22.3743701,178.723728 C23.105187,179.385534 23.3411612,180.438328 22.9614927,181.343602 C22.5990145,182.206684 21.7027813,182.762929 20.6767623,182.762929 C20.3438199,182.752224 20.1066736,182.975691 20.0702617,183.278387 C19.9779036,184.06724 19.9768096,184.871017 20.0657297,185.666278 C20.0987036,185.962723 20.4533682,186.182595 20.7542743,186.182595 C21.6686353,186.159233 22.5465063,186.725323 22.9147667,187.621456 C23.2818551,188.516417 23.0458809,189.559522 22.3276441,190.217889 C22.1029998,190.424245 22.0744797,190.769134 22.2638061,191.009087 C22.7516945,191.630496 23.3115472,192.195961 23.9249239,192.689619 C24.1655082,192.883473 24.5155626,192.856126 24.7241107,192.62633 C25.3523334,191.931473 26.4764927,191.67433 27.3417836,192.037503 C28.2480965,192.416615 28.8181852,193.332594 28.7623952,194.316473 C28.7441893,194.625498 28.9710214,194.894517 29.2777098,194.929835 C29.6789441,194.976638 30.0826006,195 30.4873511,195 C30.8715515,195 31.25583,194.978903 31.6400304,194.936164 C31.9445309,194.902565 32.1701129,194.640344 32.1598769,194.334835 C32.1246371,193.361739 32.7026176,192.461699 33.5965067,192.095713 C34.4606255,191.742777 35.5722828,192.001092 36.1969894,192.687353 C36.4045998,192.913164 36.7476219,192.940433 36.9894564,192.753612 C37.617601,192.261048 38.1887836,191.69613 38.6881582,191.074173 C38.8819384,190.833595 38.8545904,190.483549 38.6254141,190.276178 C37.8945972,189.614373 37.657451,188.561423 38.0371194,187.656773 C38.39405,186.805177 39.2569967,186.233383 40.185188,186.233383 L40.3150519,186.236743 C40.6161144,186.2612 40.8931106,186.029294 40.9296007,185.721988 C41.0221151,184.932432 41.023209,184.129358 40.9342889,183.334097 Z M30.5166525,188.024555 C28.5852583,188.024555 27.0142326,186.453568 27.0142326,184.522222 C27.0142326,182.590953 28.5852583,181.019888 30.5166525,181.019888 C32.4479686,181.019888 34.0189943,182.590953 34.0189943,184.522222 C34.0189943,186.453568 32.4479686,188.024555 30.5166525,188.024555 Z",
                                                                                    id: "Shape",
                                                                                    transform:
                                                                                        "translate(30.500000, 184.500000) scale(-1, 1) translate(-30.500000, -184.500000) "
                                                                                }
                                                                            })
                                                                        ]
                                                                    )
                                                                ]
                                                            )
                                                        ]
                                                    )
                                                ]
                                            )
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "wpuf-integration-footer-toggle" }, [
                                    _c("span", {
                                        class: "pm-toggle-switch big " + _vm.isChecked(),
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                                return _vm.changeStatus()
                                            }
                                        }
                                    })
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c(
                            "div",
                            { staticClass: "wf-modal", attrs: { id: "git_bit", role: "dialog" } },
                            [
                                _c("div", { staticClass: "wf-modal-dialog" }, [
                                    _c("div", { staticClass: "wf-modal-content" }, [
                                        _c("div", { staticClass: "wf-modal-header" }, [
                                            _c("div", { staticClass: "modal-header-left" }, [
                                                _c(
                                                    "div",
                                                    {
                                                        class: "wpuf-toggle-switch big" + " " + _vm.isChecked()
                                                    },
                                                    [
                                                        _c("span", {
                                                            class: "pm-toggle-switch big " + _vm.isChecked(),
                                                            on: {
                                                                click: function($event) {
                                                                    $event.preventDefault()
                                                                    return _vm.changeStatus()
                                                                }
                                                            }
                                                        })
                                                    ]
                                                ),
                                                _vm._v(" "),
                                                _c("img", { attrs: { src: _vm.githubIcon() } }),
                                                _vm._v(" "),
                                                _c("span", { staticClass: "int_title" }, [
                                                    _vm._v("Github")
                                                ]),
                                                _vm._v(" "),
                                                _c("img", {
                                                    attrs: { src: _vm.bitbucketIcon(), width: "128px" }
                                                })
                                            ]),
                                            _vm._v(" "),
                                            _c(
                                                "span",
                                                {
                                                    staticClass: "modal-close",
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.hideModal($event.target)
                                                        }
                                                    }
                                                },
                                                [_vm._v("x")]
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "wf-modal-body" }, [
                                            _c("div", [
                                                _c("div", [
                                                    _c("div", { staticClass: "wpuf-int-form-row" }, [
                                                        _c("div", { staticClass: "wpuf-int-field-label" }, [
                                                            _c("label", { attrs: { for: "mailchimp-list-id" } }, [
                                                                _vm._v(
                                                                    _vm._s(
                                                                        _vm.__("Webhook URL", "wedevs-project-manager")
                                                                    )
                                                                )
                                                            ])
                                                        ]),
                                                        _vm._v(" "),
                                                        _c("div", { staticClass: "wpuf-int-field" }, [
                                                            _c("input", {
                                                                staticClass: "regular-text token_field",
                                                                attrs: { type: "text", readonly: "readonly" },
                                                                domProps: { value: _vm.WebhookUrl() },
                                                                on: {
                                                                    click: function($event) {
                                                                        return _vm.selectText()
                                                                    }
                                                                }
                                                            }),
                                                            _vm._v(" "),
                                                            _c("span", { staticClass: "int_url" }),
                                                            _vm._v(" "),
                                                            _c("br"),
                                                            _vm._v(" "),
                                                            _c("p", { staticClass: "help" }, [
                                                                _vm._v(
                                                                    "\n\n                                                    " +
                                                                    _vm._s(
                                                                        _vm.__(
                                                                            "Webhook URL",
                                                                            "wedevs-project-manager"
                                                                        )
                                                                    ) +
                                                                    "\n\n                                                    " +
                                                                    _vm._s(
                                                                        _vm.__(
                                                                            "to send our JSON payloads",
                                                                            "wedevs-project-manager"
                                                                        )
                                                                    ) +
                                                                    "\n                                                    ("
                                                                ),
                                                                _c(
                                                                    "a",
                                                                    {
                                                                        attrs: {
                                                                            href:
                                                                                "https://wedevs.com/docs/wp-project-manager/integrations/github-bitbucket/",
                                                                            target: "_blank"
                                                                        }
                                                                    },
                                                                    [
                                                                        _vm._v(
                                                                            _vm._s(
                                                                                _vm.__(
                                                                                    "View documentation",
                                                                                    "wedevs-project-manager"
                                                                                )
                                                                            )
                                                                        )
                                                                    ]
                                                                ),
                                                                _vm._v(
                                                                    ")\n                                                "
                                                                )
                                                            ])
                                                        ])
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c(
                                                "form",
                                                {
                                                    attrs: { method: "post", id: "saveUsers" },
                                                    on: {
                                                        submit: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.saveUsers()
                                                        }
                                                    }
                                                },
                                                [
                                                    _c(
                                                        "div",
                                                        { staticClass: "metabox-holder git_bit_wrap" },
                                                        [
                                                            _c(
                                                                "div",
                                                                {
                                                                    staticClass: "group",
                                                                    attrs: { id: "pm_general" }
                                                                },
                                                                [
                                                                    _c(
                                                                        "select",
                                                                        {
                                                                            staticStyle: { display: "none" },
                                                                            attrs: { id: "getProjectUser" },
                                                                            on: {
                                                                                change: function($event) {
                                                                                    return _vm.getProjectUser()
                                                                                }
                                                                            }
                                                                        },
                                                                        [
                                                                            _c("option", { attrs: { value: "" } }, [
                                                                                _vm._v("Select")
                                                                            ]),
                                                                            _vm._v(" "),
                                                                            _vm._l(_vm.projects, function(project) {
                                                                                return _c(
                                                                                    "option",
                                                                                    {
                                                                                        domProps: {
                                                                                            value: JSON.stringify(
                                                                                                project.assignees.data
                                                                                            )
                                                                                        }
                                                                                    },
                                                                                    [_vm._v(_vm._s(project.title))]
                                                                                )
                                                                            })
                                                                        ],
                                                                        2
                                                                    ),
                                                                    _vm._v(" "),
                                                                    _c(
                                                                        "table",
                                                                        {
                                                                            staticClass:
                                                                                "wp-list-table widefat fixed striped posts"
                                                                        },
                                                                        [
                                                                            _vm._m(0),
                                                                            _vm._v(" "),
                                                                            _c(
                                                                                "tbody",
                                                                                [
                                                                                    _vm._l(_vm.users, function(user) {
                                                                                        return _c("tr", [
                                                                                            _c("td", [
                                                                                                _vm._v(_vm._s(user.username))
                                                                                            ]),
                                                                                            _vm._v(" "),
                                                                                            _c("td", [
                                                                                                _c("input", {
                                                                                                    directives: [
                                                                                                        {
                                                                                                            name: "model",
                                                                                                            rawName: "v-model",
                                                                                                            value: user.github,
                                                                                                            expression: "user.github"
                                                                                                        }
                                                                                                    ],
                                                                                                    staticClass:
                                                                                                        "git_bit regular-text",
                                                                                                    attrs: { type: "text" },
                                                                                                    domProps: { value: user.github },
                                                                                                    on: {
                                                                                                        input: function($event) {
                                                                                                            if ($event.target.composing) {
                                                                                                                return
                                                                                                            }
                                                                                                            _vm.$set(
                                                                                                                user,
                                                                                                                "github",
                                                                                                                $event.target.value
                                                                                                            )
                                                                                                        }
                                                                                                    }
                                                                                                })
                                                                                            ]),
                                                                                            _vm._v(" "),
                                                                                            _c("td", [
                                                                                                _c("input", {
                                                                                                    directives: [
                                                                                                        {
                                                                                                            name: "model",
                                                                                                            rawName: "v-model",
                                                                                                            value: user.bitbucket,
                                                                                                            expression: "user.bitbucket"
                                                                                                        }
                                                                                                    ],
                                                                                                    staticClass:
                                                                                                        "git_bit regular-text",
                                                                                                    attrs: { type: "text" },
                                                                                                    domProps: {
                                                                                                        value: user.bitbucket
                                                                                                    },
                                                                                                    on: {
                                                                                                        input: function($event) {
                                                                                                            if ($event.target.composing) {
                                                                                                                return
                                                                                                            }
                                                                                                            _vm.$set(
                                                                                                                user,
                                                                                                                "bitbucket",
                                                                                                                $event.target.value
                                                                                                            )
                                                                                                        }
                                                                                                    }
                                                                                                })
                                                                                            ])
                                                                                        ])
                                                                                    }),
                                                                                    _vm._v(" "),
                                                                                    !_vm.users.length
                                                                                        ? _c("tr", [
                                                                                            _c(
                                                                                                "td",
                                                                                                { attrs: { colspan: "3" } },
                                                                                                [_vm._v("No user found")]
                                                                                            )
                                                                                        ])
                                                                                        : _vm._e()
                                                                                ],
                                                                                2
                                                                            )
                                                                        ]
                                                                    )
                                                                ]
                                                            )
                                                        ]
                                                    )
                                                ]
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "wf-modal-footer" }, [
                                            _vm.spinner
                                                ? _c("span", { staticClass: "pm-spinner" })
                                                : _vm._e(),
                                            _vm._v(" "),
                                            _c(
                                                "button",
                                                {
                                                    staticClass: "button button-primary",
                                                    attrs: { type: "button" },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.saveUsers()
                                                        }
                                                    }
                                                },
                                                [
                                                    _vm._v(
                                                        "\n                                Save Form\n                            "
                                                    )
                                                ]
                                            )
                                        ])
                                    ])
                                ])
                            ]
                        )
                    ])
                    : _vm._e()
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("thead", [
                        _c("tr", [
                            _c(
                                "th",
                                {
                                    staticClass: "manage manage-column column-author",
                                    attrs: { scope: "col" }
                                },
                                [_vm._v("Users")]
                            ),
                            _vm._v(" "),
                            _c(
                                "th",
                                {
                                    staticClass: "manage manage-column column-categories",
                                    attrs: { scope: "col" }
                                },
                                [_vm._v("Github Username")]
                            ),
                            _vm._v(" "),
                            _c(
                                "th",
                                {
                                    staticClass: "manage manage-column column-categories",
                                    attrs: { scope: "col" }
                                },
                                [_vm._v("Bitbucket Username")]
                            )
                        ])
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-0e3424e4", esExports)
                }
            }

            /***/ }),
        /* 244 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", [
                    _c(
                        "div",
                        {
                            directives: [
                                {
                                    name: "show",
                                    rawName: "v-show",
                                    value: _vm.loading,
                                    expression: "loading"
                                }
                            ],
                            staticClass: "loadmoreanimation",
                            staticStyle: { display: "block" }
                        },
                        [_vm._m(0)]
                    ),
                    _vm._v(" "),
                    _c(
                        "div",
                        {
                            directives: [
                                {
                                    name: "show",
                                    rawName: "v-show",
                                    value: !_vm.loading,
                                    expression: "!loading"
                                }
                            ],
                            staticClass: "wpuf-integrations-wrap"
                        },
                        [
                            _c(
                                "div",
                                { staticClass: "wpuf-integrations" },
                                [
                                    _c("slack", {
                                        attrs: {
                                            slack: _vm.slack,
                                            loadingStatus: _vm.loadingStatus,
                                            projectid: _vm.project_id
                                        },
                                        on: {
                                            hasSlack: function($event) {
                                                _vm.loadingStatus.slack = true
                                            }
                                        }
                                    }),
                                    _vm._v(" "),
                                    _c("github", {
                                        attrs: {
                                            github: _vm.github,
                                            loadingStatus: _vm.loadingStatus,
                                            projectid: _vm.project_id
                                        },
                                        on: {
                                            hasGithub: function($event) {
                                                _vm.loadingStatus.github = true
                                            }
                                        }
                                    })
                                ],
                                1
                            )
                        ]
                    )
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "load-spinner" }, [
                        _c("div", { staticClass: "rect1" }),
                        _vm._v(" "),
                        _c("div", { staticClass: "rect2" }),
                        _vm._v(" "),
                        _c("div", { staticClass: "rect3" }),
                        _vm._v(" "),
                        _c("div", { staticClass: "rect4" }),
                        _vm._v(" "),
                        _c("div", { staticClass: "rect5" })
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-26e400b6", esExports)
                }
            }

            /***/ }),
        /* 245 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_capabilities_vue__ = __webpack_require__(88);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_191cb066_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_capabilities_vue__ = __webpack_require__(248);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(246)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_capabilities_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_191cb066_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_capabilities_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-settings/capabilities.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-191cb066", Component.options)
                } else {
                    hotAPI.reload("data-v-191cb066", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 246 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(247);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("1ca0f56c", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-191cb066\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./capabilities.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-191cb066\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./capabilities.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 247 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-settings {\n  margin-top: 10px;\n}\n#project-settings .pm-table thead,\n#project-settings .pm-table tfoot {\n  background-color: #FFF;\n}\n#project-settings * {\n  box-sizing: border-box;\n}\n.pm-pro-capabilities table thead tr th {\n  font-weight: 600;\n}\n.pm-pro-capabilities table tbody tr td.client,\n.pm-pro-capabilities table thead tr th.client {\n  text-align: left;\n  transform: translate(50%, 0);\n}\n.pm-pro-settings .pm-pro-settngs-wrap {\n  position: relative;\n  display: flex;\n  border: 1px solid #E5E4E4;\n  border-top: none;\n}\n.pm-pro-settings .pm-pro-settngs-wrap h2.nav-tab-wrap {\n  flex: 1;\n  border-bottom: none;\n  padding: 0;\n  margin: 0;\n  background: #f1f1f1;\n  border-right: 1px solid #E5E4E4;\n}\n.pm-pro-settings .pm-pro-settngs-wrap h2.nav-tab-wrap a {\n  float: none;\n  display: block;\n  margin: 0;\n  border: none;\n  padding: 13px;\n  background: #f1f1f1;\n  font-weight: 500;\n  border-bottom: 1px solid #E5E4E4;\n  transition-property: none;\n  transition: none;\n}\n.pm-pro-settings .pm-pro-settngs-wrap h2.nav-tab-wrap .nav-tab-active {\n  background: #fafafa !important;\n  width: 110%;\n  color: #2e4453;\n  transition: none;\n  transition-property: none;\n}\n.pm-pro-settings .pm-pro-settngs-wrap .metabox-holder {\n  padding-top: 10px;\n  flex: 3;\n  padding-left: 3%;\n  padding-right: 10px;\n  background: #fafafa;\n}\n", ""]);

// exports


            /***/ }),
        /* 248 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    {
                        staticClass: "pm-wrap pm-pro-capabilities pm-front-end",
                        attrs: { id: "project-settings" }
                    },
                    [
                        _vm.capabilities
                            ? _c(
                                "form",
                                {
                                    attrs: { id: "pm-settings", method: "post", action: "" },
                                    on: {
                                        submit: function($event) {
                                            $event.preventDefault()
                                            return _vm.saveCapabilities()
                                        }
                                    }
                                },
                                [
                                    _c("table", { staticClass: "widefat pm-table" }, [
                                        _c("thead", [
                                            _c("tr", [
                                                _c("th", [_vm._v(_vm._s(_vm.__("Co-worker", "pm-pro")))]),
                                                _vm._v(" "),
                                                _c("th", { staticClass: "client" }, [
                                                    _vm._v(_vm._s(_vm.__("Client", "pm-pro")))
                                                ])
                                            ])
                                        ]),
                                        _vm._v(" "),
                                        _vm._m(0),
                                        _vm._v(" "),
                                        _c("thead", [
                                            _c("tr", [
                                                _c("th", { attrs: { colspan: "2" } }, [
                                                    _vm._v(_vm._s(_vm.__("Message: ", "pm-pro")))
                                                ])
                                            ])
                                        ]),
                                        _vm._v(" "),
                                        _c("tbody", [
                                            _c("tr", { staticClass: "message" }, [
                                                _c("td", [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.capabilities.co_worker.create_message,
                                                                    expression:
                                                                        "capabilities.co_worker.create_message"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.co_worker.create_message
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.co_worker.create_message,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.co_worker.create_message
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.co_worker.create_message,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "create_message",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "create_message",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.co_worker,
                                                                            "create_message",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("Create", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("td", { staticClass: "client" }, [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.capabilities.client.create_message,
                                                                    expression: "capabilities.client.create_message"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.client.create_message
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.client.create_message,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.client.create_message
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a = _vm.capabilities.client.create_message,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "create_message",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "create_message",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.client,
                                                                            "create_message",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("Create", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("tr", { staticClass: "message" }, [
                                                _c("td", [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value:
                                                                    _vm.capabilities.co_worker.view_private_message,
                                                                    expression:
                                                                        "capabilities.co_worker.view_private_message"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.co_worker.view_private_message
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.co_worker
                                                                        .view_private_message,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.co_worker.view_private_message
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.co_worker
                                                                                .view_private_message,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "view_private_message",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "view_private_message",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.co_worker,
                                                                            "view_private_message",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("View Private", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("td", { staticClass: "client" }, [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value:
                                                                    _vm.capabilities.client.view_private_message,
                                                                    expression:
                                                                        "capabilities.client.view_private_message"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.client.view_private_message
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.client.view_private_message,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.client.view_private_message
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.client.view_private_message,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "view_private_message",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "view_private_message",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.client,
                                                                            "view_private_message",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("View Private", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("tr", { staticClass: "todo-list" })
                                        ]),
                                        _vm._v(" "),
                                        _c("thead", [
                                            _c("tr", [
                                                _c("th", { attrs: { colspan: "2" } }, [
                                                    _vm._v(_vm._s(_vm.__("Todo List", "pm-pro")))
                                                ])
                                            ])
                                        ]),
                                        _vm._v(" "),
                                        _c("tbody", [
                                            _c("tr", { staticClass: "todo-list" }, [
                                                _c("td", [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.capabilities.co_worker.create_list,
                                                                    expression: "capabilities.co_worker.create_list"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.co_worker.create_list
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.co_worker.create_list,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.co_worker.create_list
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a = _vm.capabilities.co_worker.create_list,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "create_list",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "create_list",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.co_worker,
                                                                            "create_list",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("Create", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("td", { staticClass: "client" }, [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.capabilities.client.create_list,
                                                                    expression: "capabilities.client.create_list"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.client.create_list
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.client.create_list,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.client.create_list
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a = _vm.capabilities.client.create_list,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "create_list",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "create_list",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.client,
                                                                            "create_list",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("Create", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("tr", { staticClass: "todo-list" }, [
                                                _c("td", [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value:
                                                                    _vm.capabilities.co_worker.view_private_list,
                                                                    expression:
                                                                        "capabilities.co_worker.view_private_list"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.co_worker.view_private_list
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.co_worker.view_private_list,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.co_worker.view_private_list
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.co_worker.view_private_list,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "view_private_list",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "view_private_list",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.co_worker,
                                                                            "view_private_list",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("View Private", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("td", { staticClass: "client" }, [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.capabilities.client.view_private_list,
                                                                    expression:
                                                                        "capabilities.client.view_private_list"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.client.view_private_list
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.client.view_private_list,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.client.view_private_list
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.client.view_private_list,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "view_private_list",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "view_private_list",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.client,
                                                                            "view_private_list",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("View Private", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("tr", { staticClass: "todo" })
                                        ]),
                                        _vm._v(" "),
                                        _c("thead", [
                                            _c("tr", [
                                                _c("th", { attrs: { colspan: "2" } }, [
                                                    _vm._v(_vm._s(_vm.__("Todo", "pm-pro")))
                                                ])
                                            ])
                                        ]),
                                        _vm._v(" "),
                                        _c("tbody", [
                                            _c("tr", { staticClass: "todo" }, [
                                                _c("td", [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.capabilities.co_worker.create_task,
                                                                    expression: "capabilities.co_worker.create_task"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.co_worker.create_task
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.co_worker.create_task,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.co_worker.create_task
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a = _vm.capabilities.co_worker.create_task,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "create_task",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "create_task",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.co_worker,
                                                                            "create_task",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("Create", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("td", { staticClass: "client" }, [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.capabilities.client.create_task,
                                                                    expression: "capabilities.client.create_task"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.client.create_task
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.client.create_task,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.client.create_task
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a = _vm.capabilities.client.create_task,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "create_task",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "create_task",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.client,
                                                                            "create_task",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("Create", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("tr", { staticClass: "todo" }, [
                                                _c("td", [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value:
                                                                    _vm.capabilities.co_worker.view_private_task,
                                                                    expression:
                                                                        "capabilities.co_worker.view_private_task"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.co_worker.view_private_task
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.co_worker.view_private_task,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.co_worker.view_private_task
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.co_worker.view_private_task,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "view_private_task",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "view_private_task",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.co_worker,
                                                                            "view_private_task",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("View Private", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("td", { staticClass: "client" }, [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.capabilities.client.view_private_task,
                                                                    expression:
                                                                        "capabilities.client.view_private_task"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.client.view_private_task
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.client.view_private_task,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.client.view_private_task
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.client.view_private_task,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "view_private_task",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "view_private_task",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.client,
                                                                            "view_private_task",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("View Private", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("tr", { staticClass: "milestone" })
                                        ]),
                                        _vm._v(" "),
                                        _c("thead", [
                                            _c("tr", [
                                                _c("th", { attrs: { colspan: "2" } }, [
                                                    _vm._v(_vm._s(_vm.__("Milestone", "pm-pro")))
                                                ])
                                            ])
                                        ]),
                                        _vm._v(" "),
                                        _c("tbody", [
                                            _c("tr", { staticClass: "milestone" }, [
                                                _c("td", [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value:
                                                                    _vm.capabilities.co_worker.create_milestone,
                                                                    expression:
                                                                        "capabilities.co_worker.create_milestone"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.co_worker.create_milestone
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.co_worker.create_milestone,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.co_worker.create_milestone
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.co_worker.create_milestone,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "create_milestone",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "create_milestone",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.co_worker,
                                                                            "create_milestone",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("Create", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("td", { staticClass: "client" }, [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.capabilities.client.create_milestone,
                                                                    expression: "capabilities.client.create_milestone"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.client.create_milestone
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.client.create_milestone,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.client.create_milestone
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.client.create_milestone,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "create_milestone",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "create_milestone",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.client,
                                                                            "create_milestone",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("Create", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("tr", { staticClass: "milestone" }, [
                                                _c("td", [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value:
                                                                    _vm.capabilities.co_worker
                                                                        .view_private_milestone,
                                                                    expression:
                                                                        "capabilities.co_worker.view_private_milestone"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.co_worker.view_private_milestone
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.co_worker
                                                                        .view_private_milestone,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.co_worker
                                                                        .view_private_milestone
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.co_worker
                                                                                .view_private_milestone,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "view_private_milestone",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "view_private_milestone",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.co_worker,
                                                                            "view_private_milestone",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("View Private", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("td", { staticClass: "client" }, [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value:
                                                                    _vm.capabilities.client.view_private_milestone,
                                                                    expression:
                                                                        "capabilities.client.view_private_milestone"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.client.view_private_milestone
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.client
                                                                        .view_private_milestone,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.client.view_private_milestone
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.client
                                                                                .view_private_milestone,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "view_private_milestone",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "view_private_milestone",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.client,
                                                                            "view_private_milestone",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("View Private", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("tr", { staticClass: "files" })
                                        ]),
                                        _vm._v(" "),
                                        _c("thead", [
                                            _c("tr", [
                                                _c("th", { attrs: { colspan: "2" } }, [
                                                    _vm._v(_vm._s(_vm.__("Files", "pm-pro")))
                                                ])
                                            ])
                                        ]),
                                        _vm._v(" "),
                                        _c("tbody", [
                                            _c("tr", { staticClass: "files" }, [
                                                _c("td", [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.capabilities.co_worker.create_file,
                                                                    expression: "capabilities.co_worker.create_file"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.co_worker.create_file
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.co_worker.create_file,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.co_worker.create_file
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a = _vm.capabilities.co_worker.create_file,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "create_file",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "create_file",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.co_worker,
                                                                            "create_file",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("Upload or create doc", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("td", { staticClass: "client" }, [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.capabilities.client.create_file,
                                                                    expression: "capabilities.client.create_file"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.client.create_file
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.client.create_file,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.client.create_file
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a = _vm.capabilities.client.create_file,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "create_file",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "create_file",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.client,
                                                                            "create_file",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(_vm.__("Upload or create doc", "pm-pro")) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("tr", { staticClass: "files" }, [
                                                _c("td", [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value:
                                                                    _vm.capabilities.co_worker.view_private_file,
                                                                    expression:
                                                                        "capabilities.co_worker.view_private_file"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.co_worker.view_private_file
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.co_worker.view_private_file,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.co_worker.view_private_file
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.co_worker.view_private_file,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "view_private_file",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.co_worker,
                                                                                "view_private_file",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.co_worker,
                                                                            "view_private_file",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(
                                                                _vm.__("View Private files or docs", "pm-pro")
                                                            ) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c("td", { staticClass: "client" }, [
                                                    _c("label", [
                                                        _c("input", {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: _vm.capabilities.client.view_private_file,
                                                                    expression:
                                                                        "capabilities.client.view_private_file"
                                                                }
                                                            ],
                                                            attrs: { type: "checkbox" },
                                                            domProps: {
                                                                checked: Array.isArray(
                                                                    _vm.capabilities.client.view_private_file
                                                                )
                                                                    ? _vm._i(
                                                                    _vm.capabilities.client.view_private_file,
                                                                    null
                                                                ) > -1
                                                                    : _vm.capabilities.client.view_private_file
                                                            },
                                                            on: {
                                                                change: function($event) {
                                                                    var $$a =
                                                                            _vm.capabilities.client.view_private_file,
                                                                        $$el = $event.target,
                                                                        $$c = $$el.checked ? true : false
                                                                    if (Array.isArray($$a)) {
                                                                        var $$v = null,
                                                                            $$i = _vm._i($$a, $$v)
                                                                        if ($$el.checked) {
                                                                            $$i < 0 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "view_private_file",
                                                                                $$a.concat([$$v])
                                                                            )
                                                                        } else {
                                                                            $$i > -1 &&
                                                                            _vm.$set(
                                                                                _vm.capabilities.client,
                                                                                "view_private_file",
                                                                                $$a
                                                                                    .slice(0, $$i)
                                                                                    .concat($$a.slice($$i + 1))
                                                                            )
                                                                        }
                                                                    } else {
                                                                        _vm.$set(
                                                                            _vm.capabilities.client,
                                                                            "view_private_file",
                                                                            $$c
                                                                        )
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        _vm._v(
                                                            "\n                                " +
                                                            _vm._s(
                                                                _vm.__("View Private files or docs", "pm-pro")
                                                            ) +
                                                            "\n                            "
                                                        )
                                                    ])
                                                ])
                                            ])
                                        ]),
                                        _vm._v(" "),
                                        _vm._m(1)
                                    ]),
                                    _vm._v(" "),
                                    _c("pm-do-action", { attrs: { hook: "pm-pro-after-settings" } }),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "pm-pro-settings-action" }, [
                                        _vm.spinner
                                            ? _c("span", { staticClass: "pm-spinner" })
                                            : _vm._e(),
                                        _vm._v(" "),
                                        _c("input", {
                                            staticClass: "button button-primary",
                                            attrs: { type: "submit" },
                                            domProps: { value: _vm.__("Save Changes", "pm-pro") }
                                        })
                                    ])
                                ],
                                1
                            )
                            : _vm._e()
                    ]
                )
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("tbody", [_c("tr", { staticClass: "message" })])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("tfoot", [
                        _c("tr", [_c("td", { staticClass: "submit", attrs: { colspan: "2" } })])
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-191cb066", esExports)
                }
            }

            /***/ }),
        /* 249 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_label_vue__ = __webpack_require__(89);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d5e63026_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_label_vue__ = __webpack_require__(256);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(250)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_label_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d5e63026_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_label_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-settings/label.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-d5e63026", Component.options)
                } else {
                    hotAPI.reload("data-v-d5e63026", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 250 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(251);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("3fbdd5e5", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-d5e63026\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./label.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-d5e63026\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./label.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 251 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-pro-task-label .pm-table thead tr {\n  box-shadow: none !important;\n}\n.pm-pro-task-label .pm-create-label {\n  float: right;\n  margin-top: 5px !important;\n}\n.pm-pro-task-label .display-table-wrap {\n  margin-top: 17px;\n  font-size: 13px;\n  border: 1px solid #eee;\n  border-bottom: none;\n}\n.pm-pro-task-label .display-table-wrap .th-title {\n  font-weight: 500;\n}\n.pm-pro-task-label .display-table-wrap tbody td {\n  padding: 10px 16px;\n}\n.pm-pro-task-label .display-table-wrap .tr-wrap .color-attribute {\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.pm-pro-task-label .display-table-wrap .tr-wrap .color-attribute .color-box {\n  margin-right: 10px;\n  height: 12px;\n  width: 12px;\n}\n.pm-pro-task-label .display-table-wrap .tr-wrap:hover .action-td .action-wrap {\n  position: static;\n}\n.pm-pro-task-label .display-table-wrap .tr-wrap .action-td .title {\n  border-radius: 2px;\n  box-shadow: inset 0 -1px 0 rgba(27, 31, 35, 0.12);\n  padding: 0.3em 10px;\n  color: #fff;\n  white-space: nowrap;\n  font-weight: 400;\n  font-size: 12px;\n  display: inline-block;\n}\n.pm-pro-task-label .display-table-wrap .tr-wrap .action-td .action-wrap {\n  position: relative;\n  left: -9999em;\n  padding-top: 2px;\n  color: #37aedf;\n  font-size: 12px;\n  font-weight: 400;\n}\n.pm-pro-task-label .display-table-wrap .tr-wrap .action-td .action-wrap .pipe {\n  color: #ddd;\n}\n.pm-pro-task-label .new-label-form .label-form {\n  display: inline-flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  width: 100%;\n}\n.pm-pro-task-label .new-label-form .label-form .form-group-wrap {\n  display: flex;\n}\n.pm-pro-task-label .new-label-form .label-form .form-group-wrap .form-control-color-picker {\n  position: relative;\n  z-index: 9;\n}\n.pm-pro-task-label .new-label-form .label-form .form-group-wrap .form-control-color-picker .color-picker-container {\n  position: absolute;\n}\n.pm-pro-task-label .new-label-form .label-form .form-group-wrap .form-control {\n  background-color: #fff;\n  background-position: right 8px center;\n  background-repeat: no-repeat;\n  border: 1px solid #d1d5da;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 2px rgba(27, 31, 35, 0.075);\n  color: #24292e;\n  line-height: 20px;\n  outline: none;\n  padding: 6px 8px;\n  vertical-align: middle;\n  font-size: 11px;\n}\n.pm-pro-task-label .new-label-form .label-form .form-group-wrap .form-control:focus {\n  border-color: #2188ff;\n  box-shadow: inset 0 1px 2px rgba(27, 31, 35, 0.075), 0 0 0 0.2em rgba(3, 102, 214, 0.3);\n  outline: none;\n}\n.pm-pro-task-label .new-label-form .label-form .form-group-wrap .form-group {\n  margin-right: 10px;\n}\n.pm-pro-task-label .new-label-form .label-form .form-group-wrap .form-group .description-control {\n  width: 230px;\n}\n.pm-pro-task-label .new-label-form .label-form .form-group-wrap .label-wrap {\n  margin: 0 0 6px;\n  font-size: 13px;\n}\n", ""]);

// exports


            /***/ }),
        /* 252 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_create_task_label_form_vue__ = __webpack_require__(90);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b6726e6a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_create_task_label_form_vue__ = __webpack_require__(255);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(253)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_create_task_label_form_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b6726e6a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_create_task_label_form_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-settings/create-task-label-form.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-b6726e6a", Component.options)
                } else {
                    hotAPI.reload("data-v-b6726e6a", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 253 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(254);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("2223912e", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b6726e6a\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./create-task-label-form.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b6726e6a\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./create-task-label-form.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 254 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.label-form .label-action {\n  display: flex;\n  align-items: center;\n}\n.label-form .label-action .pm-secondary {\n  margin-right: 5px !important;\n}\n.label-form .label-action .update-button-wrap,\n.label-form .label-action .add-button-wrap {\n  position: relative;\n}\n.label-form .label-action .update-button-wrap .update-text-color,\n.label-form .label-action .add-button-wrap .update-text-color,\n.label-form .label-action .update-button-wrap .add-text-color,\n.label-form .label-action .add-button-wrap .add-text-color {\n  color: #1A9ED4 !important;\n}\n.label-form .label-action .update-button-wrap .pm-spinner-circle:after,\n.label-form .label-action .add-button-wrap .pm-spinner-circle:after {\n  content: \"\";\n  border: 2px solid #fff;\n  border-radius: 50%;\n  height: 1em;\n  width: 1em;\n  position: absolute;\n  left: 50%;\n  margin-left: -8.5px;\n  top: 50%;\n  margin-top: -8.5px;\n  border-color: #fff #fff #fff transparent;\n  -webkit-animation: pm-spinner-circle 1s infinite;\n  animation: pm-spinner-circle 1s infinite;\n}\n@keyframes pm-spinner-circle {\n0% {\n    -webkit-transform: rotate(0);\n    transform: rotate(0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n}\n50% {\n    -webkit-transform: rotate(180deg);\n    transform: rotate(180deg);\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n}\nto {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n}\n}\n@-webkit-keyframes pm-spinner-circle {\n0% {\n    -webkit-transform: rotate(0);\n    transform: rotate(0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n}\n50% {\n    -webkit-transform: rotate(180deg);\n    transform: rotate(180deg);\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n}\nto {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n}\n}\n", ""]);

// exports


            /***/ }),
        /* 255 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "form",
                    {
                        staticClass: "label-form",
                        attrs: { action: "", method: "post" },
                        on: {
                            submit: function($event) {
                                $event.preventDefault()
                                return _vm.selfNewLabel()
                            }
                        }
                    },
                    [
                        _c("div", { staticClass: "form-group-wrap" }, [
                            _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "label-wrap" }, [
                                    _c("label", [_vm._v(_vm._s(_vm.__("Label Name", "pm-pro")))])
                                ]),
                                _vm._v(" "),
                                _c("div", [
                                    _c("input", {
                                        directives: [
                                            {
                                                name: "model",
                                                rawName: "v-model",
                                                value: _vm.label.title,
                                                expression: "label.title"
                                            }
                                        ],
                                        staticClass: "form-control",
                                        attrs: {
                                            placeholder: _vm.__("Label name...", "pm-pro"),
                                            type: "text"
                                        },
                                        domProps: { value: _vm.label.title },
                                        on: {
                                            input: function($event) {
                                                if ($event.target.composing) {
                                                    return
                                                }
                                                _vm.$set(_vm.label, "title", $event.target.value)
                                            }
                                        }
                                    })
                                ])
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "label-wrap" }, [
                                    _c("label", [_vm._v(_vm._s(_vm.__("Description", "pm-pro")))])
                                ]),
                                _vm._v(" "),
                                _c("div", [
                                    _c("input", {
                                        directives: [
                                            {
                                                name: "model",
                                                rawName: "v-model",
                                                value: _vm.label.description,
                                                expression: "label.description"
                                            }
                                        ],
                                        staticClass: "form-control description-control",
                                        attrs: {
                                            placeholder: _vm.__("Description (optional)", "pm-pro"),
                                            type: "text"
                                        },
                                        domProps: { value: _vm.label.description },
                                        on: {
                                            input: function($event) {
                                                if ($event.target.composing) {
                                                    return
                                                }
                                                _vm.$set(_vm.label, "description", $event.target.value)
                                            }
                                        }
                                    })
                                ])
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "form-group" }, [
                                _c("div", { staticClass: "label-wrap" }, [
                                    _c("label", [_vm._v(_vm._s(_vm.__("Color", "pm-pro")))])
                                ]),
                                _vm._v(" "),
                                _c(
                                    "div",
                                    { staticClass: "form-control-color-picker" },
                                    [
                                        _c("pm-color-picker", {
                                            model: {
                                                value: _vm.label.color,
                                                callback: function($$v) {
                                                    _vm.$set(_vm.label, "color", $$v)
                                                },
                                                expression: "label.color"
                                            }
                                        })
                                    ],
                                    1
                                )
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", [
                            _vm.labelId
                                ? _c("div", { staticClass: "label-action" }, [
                                    _c(
                                        "a",
                                        {
                                            staticClass: "pm-button pm-secondary",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.closeEditForm()
                                                }
                                            }
                                        },
                                        [_vm._v(_vm._s(_vm.__("Cancel", "pm-pro")))]
                                    ),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "update-button-wrap" }, [
                                        _c("input", {
                                            class: _vm.getUpdateButtonClass(),
                                            attrs: { type: "submit" },
                                            domProps: { value: _vm.__("Update", "pm-pro") }
                                        }),
                                        _vm._v(" "),
                                        _vm.updating
                                            ? _c("div", { staticClass: "pm-spinner-circle" })
                                            : _vm._e()
                                    ])
                                ])
                                : _c("div", { staticClass: "label-action" }, [
                                    _c(
                                        "a",
                                        {
                                            staticClass: "pm-button pm-secondary",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.closeNewLabelForm()
                                                }
                                            }
                                        },
                                        [_vm._v(_vm._s(_vm.__("Cancel", "pm-pro")))]
                                    ),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "add-button-wrap" }, [
                                        !_vm.labelId
                                            ? _c("input", {
                                                class: _vm.getNewLabelButtonClass(),
                                                attrs: { type: "submit" },
                                                domProps: { value: _vm.__("Create label", "pm-pro") }
                                            })
                                            : _vm._e(),
                                        _vm._v(" "),
                                        _vm.adding
                                            ? _c("div", { staticClass: "pm-spinner-circle" })
                                            : _vm._e()
                                    ])
                                ])
                        ])
                    ]
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-b6726e6a", esExports)
                }
            }

            /***/ }),
        /* 256 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    {
                        staticClass: "pm-wrap pm-pro-task-label pm-front-end",
                        attrs: { id: "project-settings" }
                    },
                    [
                        _vm.isFetchLabel
                            ? _c("div", [
                                _vm.isFormShow()
                                    ? _c("div", [
                                        _c(
                                            "a",
                                            {
                                                staticClass: "pm-create-label pm-button pm-primary",
                                                attrs: { href: "#" },
                                                on: {
                                                    click: function($event) {
                                                        $event.preventDefault()
                                                        return _vm.showForm()
                                                    }
                                                }
                                            },
                                            [_vm._v(_vm._s(_vm.__("+ Create label", "pm-pro")))]
                                        ),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "pm-clearfix" })
                                    ])
                                    : _c(
                                        "div",
                                        { staticClass: "new-label-form" },
                                        [
                                            _c("new-task-label-form", {
                                                attrs: {
                                                    formAction: _vm.formAction,
                                                    taskLabels: _vm.taskLabels
                                                }
                                            })
                                        ],
                                        1
                                    ),
                                _vm._v(" "),
                                _vm.labels.length
                                    ? _c("div", { staticClass: "display-table-wrap" }, [
                                        _c(
                                            "table",
                                            { staticClass: "pm-table table-striped table-justified" },
                                            [
                                                _c("thead", [
                                                    _c("tr", [
                                                        _c("th", { staticClass: "th-title" }, [
                                                            _vm._v(_vm._s(_vm.__("Name", "pm-pro")))
                                                        ]),
                                                        _vm._v(" "),
                                                        _c("th", { staticClass: "th-title" }, [
                                                            _vm._v(_vm._s(_vm.__("Description", "pm-pro")))
                                                        ]),
                                                        _vm._v(" "),
                                                        _c("th", { staticClass: "th-title" }, [
                                                            _vm._v(_vm._s(_vm.__("Action", "pm-pro")))
                                                        ])
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c(
                                                    "tbody",
                                                    [
                                                        _vm._l(_vm.labels, function(label, index) {
                                                            return [
                                                                !label.editMode
                                                                    ? _c(
                                                                        "tr",
                                                                        { key: label.id, staticClass: "tr-wrap" },
                                                                        [
                                                                            _c("td", { staticClass: "action-td" }, [
                                                                                _c(
                                                                                    "div",
                                                                                    {
                                                                                        staticClass: "title",
                                                                                        style: "background:" + label.color
                                                                                    },
                                                                                    [_vm._v(_vm._s(label.title))]
                                                                                )
                                                                            ]),
                                                                            _vm._v(" "),
                                                                            _c("td", [
                                                                                _vm._v(_vm._s(label.description))
                                                                            ]),
                                                                            _vm._v(" "),
                                                                            _c("td", [
                                                                                _c(
                                                                                    "div",
                                                                                    { staticClass: "action-wrap" },
                                                                                    [
                                                                                        _c("span", [
                                                                                            _c(
                                                                                                "a",
                                                                                                {
                                                                                                    attrs: { href: "#" },
                                                                                                    on: {
                                                                                                        click: function($event) {
                                                                                                            $event.preventDefault()
                                                                                                            return _vm.edit(
                                                                                                                label,
                                                                                                                index
                                                                                                            )
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                [
                                                                                                    _vm._v(
                                                                                                        _vm._s(
                                                                                                            _vm.__("Edit", "pm-pro")
                                                                                                        )
                                                                                                    )
                                                                                                ]
                                                                                            )
                                                                                        ]),
                                                                                        _vm._v(" "),
                                                                                        _c(
                                                                                            "span",
                                                                                            { staticClass: "pipe" },
                                                                                            [_vm._v("|")]
                                                                                        ),
                                                                                        _vm._v(" "),
                                                                                        _c("span", [
                                                                                            _c(
                                                                                                "a",
                                                                                                {
                                                                                                    attrs: { href: "#" },
                                                                                                    on: {
                                                                                                        click: function($event) {
                                                                                                            $event.preventDefault()
                                                                                                            return _vm.selfRemove(
                                                                                                                label,
                                                                                                                index
                                                                                                            )
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                [
                                                                                                    _vm._v(
                                                                                                        _vm._s(
                                                                                                            _vm.__("Delete", "pm-pro")
                                                                                                        )
                                                                                                    )
                                                                                                ]
                                                                                            )
                                                                                        ])
                                                                                    ]
                                                                                )
                                                                            ])
                                                                        ]
                                                                    )
                                                                    : _vm._e(),
                                                                _vm._v(" "),
                                                                label.editMode
                                                                    ? _c(
                                                                        "tr",
                                                                        { key: label.id, staticClass: "tr-wrap" },
                                                                        [
                                                                            _c("td", { attrs: { colspan: "3" } }, [
                                                                                _c(
                                                                                    "div",
                                                                                    { staticClass: "new-label-form" },
                                                                                    [
                                                                                        _c("new-task-label-form", {
                                                                                            attrs: { taskSingleLabel: label }
                                                                                        })
                                                                                    ],
                                                                                    1
                                                                                )
                                                                            ])
                                                                        ]
                                                                    )
                                                                    : _vm._e()
                                                            ]
                                                        })
                                                    ],
                                                    2
                                                )
                                            ]
                                        )
                                    ])
                                    : _vm._e()
                            ])
                            : _vm._e()
                    ]
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-d5e63026", esExports)
                }
            }

            /***/ }),
        /* 257 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    {
                        staticClass: "pm-wrap pm-pro-project-settings pm-front-end",
                        attrs: { id: "project-settings" }
                    },
                    [
                        _c("pm-header"),
                        _vm._v(" "),
                        _c("pm-heder-menu"),
                        _vm._v(" "),
                        _vm.hasPermission()
                            ? _c("div", { staticClass: "pm-pro-settings" }, [
                                _c("div", { staticClass: "pm-pro-settngs-wrap" }, [
                                    _c(
                                        "h3",
                                        { staticClass: "nav-tab-wrap" },
                                        _vm._l(_vm.tabs, function(tab) {
                                            return _c(
                                                "a",
                                                {
                                                    class: "nav-tab " + _vm.isTabActive(tab),
                                                    attrs: { href: "#" },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.tabChange(tab)
                                                        }
                                                    }
                                                },
                                                [
                                                    _c("span", { class: tab.icon }),
                                                    _vm._v(" "),
                                                    _c("span", [_vm._v(_vm._s(tab.label))])
                                                ]
                                            )
                                        }),
                                        0
                                    ),
                                    _vm._v(" "),
                                    _c(
                                        "div",
                                        { staticClass: "metabox-holder" },
                                        [
                                            _vm.tabContent("integrations")
                                                ? _c(
                                                    "div",
                                                    { staticClass: "group" },
                                                    [_c("pm-pro-integrations")],
                                                    1
                                                )
                                                : _vm._e(),
                                            _vm._v(" "),
                                            _vm.tabContent("capabilities")
                                                ? _c(
                                                    "div",
                                                    { staticClass: "group" },
                                                    [_c("pm-pro-capabilities")],
                                                    1
                                                )
                                                : _vm._e(),
                                            _vm._v(" "),
                                            _vm.tabContent("task_label")
                                                ? _c(
                                                    "div",
                                                    { staticClass: "group" },
                                                    [_c("pm-pro-label")],
                                                    1
                                                )
                                                : _vm._e(),
                                            _vm._v(" "),
                                            _c("pm-do-action", {
                                                attrs: {
                                                    hook: "pm_pro_settings_content",
                                                    actionData: { tabs: _vm.tabs }
                                                }
                                            })
                                        ],
                                        1
                                    )
                                ])
                            ])
                            : _vm._e()
                    ],
                    1
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-acfc829c", esExports)
                }
            }

            /***/ }),
        /* 258 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            weDevsPmProRegisterModule('proProLabel', 'task-label');

            /***/ }),
        /* 259 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _archiveList = __webpack_require__(260);

            var _archiveList2 = _interopRequireDefault(_archiveList);

            var _archivePageButton = __webpack_require__(264);

            var _archivePageButton2 = _interopRequireDefault(_archivePageButton);

            var _archiveTaskList = __webpack_require__(268);

            var _archiveTaskList2 = _interopRequireDefault(_archiveTaskList);

            var _backListPage = __webpack_require__(270);

            var _backListPage2 = _interopRequireDefault(_backListPage);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevs_PM_Components.push({
                hook: 'list-action-menu',
                component: 'pm-archive-list-button',
                property: _archiveList2.default
            });

            weDevs_PM_Components.push({
                hook: 'pm-inline-list-button',
                component: 'pm-archive-button',
                property: _archivePageButton2.default
            });

            weDevs_PM_Components.push({
                hook: 'pm-inline-left-side-list-button',
                component: 'back-to-list-page',
                property: _backListPage2.default
            });

            weDevsPMRegisterChildrenRoute('projects', [{
                path: ':project_id/task-lists/archived',
                component: _archiveTaskList2.default,
                name: 'task_lists_archive',

                children: [{
                    path: 'tasks/:task_id',
                    components: {
                        'archived-single-task': pm.SingleTask
                    },
                    name: 'archived_single_task'
                }, {
                    path: 'pages/:current_page_number',
                    component: _archiveTaskList2.default,
                    name: 'task_lists_archive_pagination'
                }]
            }]);

            /***/ }),
        /* 260 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_archive_list_vue__ = __webpack_require__(91);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_72e1b6a4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_archive_list_vue__ = __webpack_require__(263);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(261)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_archive_list_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_72e1b6a4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_archive_list_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/archive-list/archive-list.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-72e1b6a4", Component.options)
                } else {
                    hotAPI.reload("data-v-72e1b6a4", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 261 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(262);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("15704bf1", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-72e1b6a4\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./archive-list.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-72e1b6a4\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./archive-list.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 262 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


            /***/ }),
        /* 263 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("li", { staticClass: "pm-list-archive" }, [
                    _c(
                        "a",
                        {
                            directives: [{ name: "pm-tooltip", rawName: "v-pm-tooltip" }],
                            staticClass: "li-a",
                            attrs: { href: "#", title: _vm.text },
                            on: {
                                click: function($event) {
                                    $event.preventDefault()
                                    return _vm.markAsArchive()
                                }
                            }
                        },
                        [
                            _c("span", { class: _vm.setClass }),
                            _vm._v(" "),
                            _c("span", [_vm._v(_vm._s(_vm.text))])
                        ]
                    )
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-72e1b6a4", esExports)
                }
            }

            /***/ }),
        /* 264 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_archive_page_button_vue__ = __webpack_require__(92);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a35e3960_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_archive_page_button_vue__ = __webpack_require__(267);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(265)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_archive_page_button_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a35e3960_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_archive_page_button_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/archive-list/archive-page-button.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-a35e3960", Component.options)
                } else {
                    hotAPI.reload("data-v-a35e3960", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 265 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(266);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("3668a5b6", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-a35e3960\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./archive-page-button.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-a35e3960\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./archive-page-button.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 266 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-pro-archive-anchor .archive {\n  margin-left: 5px;\n  color: #788383;\n  font-size: 12px;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n}\n", ""]);

// exports


            /***/ }),
        /* 267 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm-action-wrap" }, [
                    _c(
                        "div",
                        {
                            directives: [{ name: "pm-tooltip", rawName: "v-pm-tooltip" }],
                            staticClass: "archive-page-button",
                            attrs: { title: _vm.__("Archive List", "pm-pro") }
                        },
                        [
                            _c(
                                "router-link",
                                {
                                    class:
                                        _vm.setActiveClass("task_lists_archive") +
                                        " pm-pro-archive-anchor list-action-group",
                                    attrs: { to: { name: "task_lists_archive" }, title: _vm.text }
                                },
                                [
                                    _c("span", { class: _vm.setHoverClass() + " icon-pm-archive" }),
                                    _vm._v(" "),
                                    _c("span", { staticClass: "archive" }, [
                                        _vm._v(_vm._s(_vm.__("Archive", "pm-pro")))
                                    ])
                                ]
                            )
                        ],
                        1
                    )
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-a35e3960", esExports)
                }
            }

            /***/ }),
        /* 268 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_archive_task_list_vue__ = __webpack_require__(93);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_32aae206_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_archive_task_list_vue__ = __webpack_require__(269);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_archive_task_list_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_32aae206_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_archive_task_list_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/archive-list/archive-task-list.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-32aae206", Component.options)
                } else {
                    hotAPI.reload("data-v-32aae206", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 269 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("pm-task-list")
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-32aae206", esExports)
                }
            }

            /***/ }),
        /* 270 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_back_list_page_vue__ = __webpack_require__(94);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_efb157c6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_back_list_page_vue__ = __webpack_require__(271);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_back_list_page_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_efb157c6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_back_list_page_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/archive-list/back-list-page.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-efb157c6", Component.options)
                } else {
                    hotAPI.reload("data-v-efb157c6", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 271 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _vm.isArchivedPage
                    ? _c(
                        "div",
                        { staticClass: "archive-page-button" },
                        [
                            _c(
                                "router-link",
                                {
                                    class: "pm-button pm-secondary",
                                    attrs: {
                                        title: _vm.__("Back to task list page", "pm-pro"),
                                        to: {
                                            name: "task_lists",
                                            params: { project_id: _vm.project_id }
                                        }
                                    }
                                },
                                [_c("span", {}, [_vm._v(_vm._s(_vm.__("Back", "pm-pro")))])]
                            )
                        ],
                        1
                    )
                    : _vm._e()
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-efb157c6", esExports)
                }
            }

            /***/ }),
        /* 272 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _mixin = __webpack_require__(3);

            var _mixin2 = _interopRequireDefault(_mixin);

            var _advanceTask = __webpack_require__(273);

            var _advanceTask2 = _interopRequireDefault(_advanceTask);

            var _unassignedTask = __webpack_require__(282);

            var _unassignedTask2 = _interopRequireDefault(_unassignedTask);

            var _milestoneTask = __webpack_require__(291);

            var _milestoneTask2 = _interopRequireDefault(_milestoneTask);

            var _projectTasks = __webpack_require__(297);

            var _projectTasks2 = _interopRequireDefault(_projectTasks);

            var _userActivity = __webpack_require__(300);

            var _userActivity2 = _interopRequireDefault(_userActivity);

            var _userTask = __webpack_require__(306);

            var _userTask2 = _interopRequireDefault(_userTask);

            var _completedTasks = __webpack_require__(310);

            var _completedTasks2 = _interopRequireDefault(_completedTasks);

            var _overdueTask = __webpack_require__(316);

            var _overdueTask2 = _interopRequireDefault(_overdueTask);

            var _reports = __webpack_require__(324);

            var _reports2 = _interopRequireDefault(_reports);

            var _main = __webpack_require__(335);

            var _main2 = _interopRequireDefault(_main);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevsPmProRegisterModule("reports", 'reports');

            PmProMixin.reports = _mixin2.default;

// const reports_component = resolve => {
//     require.ensure(['./reports.vue'], () => {
            //         resolve(require('./reports.vue'));
            //     });
// }
// const overdue_task = resolve => {
//     require.ensure(['./overdue-task.vue'], () => {
            //         resolve(require('./overdue-task.vue'));
            //     });
// }
// const completed_tasks = resolve => {
//     require.ensure(['./completed-tasks.vue'], () => {
            //         resolve(require('./completed-tasks.vue'));
            //     });
// }
// const user_activity = resolve => {
//     require.ensure(['./user-activity.vue'], () => {
            //         resolve(require('./user-activity.vue'));
            //     });
// }
// const project_tasks = resolve => {
//     require.ensure(['./project-tasks.vue'], () => {
            //         resolve(require('./project-tasks.vue'));
            //     });
// }
// const milestone_task = resolve => {
//     require.ensure(['./milestone-task.vue'], () => {
            //         resolve(require('./milestone-task.vue'));
            //     });
// }
// const unassigned_task = resolve => {
//     require.ensure(['./unassigned-task.vue'], () => {
            //         resolve(require('./unassigned-task.vue'));
            //     });
// }
// const advance_task = resolve => {
//     require.ensure(['./advance-task.vue'], () => {
            //         resolve(require('./advance-task.vue'));
            //     });
// }

            weDevsPMRegisterChildrenRoute('reports_component', [{
                path: 'sections',
                component: _reports2.default,
                name: 'reports_component'
            }, {
                path: 'overdue-tasks',
                component: _overdueTask2.default,
                name: 'overdue-tasks',
                children: [{
                    path: 'pages/:current_page_number',
                    component: _overdueTask2.default,
                    name: 'overdue_pagination'
                }]
            }, {
                path: 'completed-tasks',
                component: _completedTasks2.default,
                name: 'completed-tasks',
                children: [{
                    path: 'pages/:current_page_number',
                    component: _completedTasks2.default,
                    name: 'completed_pagination'
                }]
            }, {
                path: 'user-activities',
                component: _userActivity2.default,
                name: 'report-user-activities',
                children: [{
                    path: 'pages/:current_page_number',
                    component: _userActivity2.default,
                    name: 'user_activity_pagination'
                }]
            },
// {
//     path: 'user-task',
//     component: user_task,
//     name: 'report-user-task',
//     children: [
//         {
//             path: 'pages/:current_page_number',
//             component: user_task,
//             name: 'user_task_pagination',
//         },
//     ]
// },
                {
                    path: 'project-tasks',
                    component: _projectTasks2.default,
                    name: 'project-tasks',
                    children: [{
                        path: 'pages/:current_page_number',
                        component: _projectTasks2.default,
                        name: 'project_task_pagination'
                    }]
                }, {
                    path: 'milestone-tasks',
                    component: _milestoneTask2.default,
                    name: 'milestone-tasks',
                    children: [{
                        path: 'pages/:current_page_number',
                        component: _milestoneTask2.default,
                        name: 'milestone_task_pagination'
                    }]
                }, {
                    path: 'unassigned-tasks',
                    component: _unassignedTask2.default,
                    name: 'unassigned-tasks',
                    children: [{
                        path: 'pages/:current_page_number',
                        component: _unassignedTask2.default,
                        name: 'unassigned_pagination'
                    }]
                }, {
                    path: 'advance-tasks',
                    component: _advanceTask2.default,
                    name: 'advance-tasks',
                    children: [{
                        path: 'pages/:current_page_number',
                        component: _advanceTask2.default,
                        name: 'advance_pagination'
                    }]
                }]);

            weDevsPMRegisterChildrenRoute('project_root', [{

                path: '/reports',
                name: 'reports',
                component: _main2.default,
                meta: {
                    label: __('Reports', 'pm-pro'),
                    order: 5,
                    permission: function permission() {
                        if (pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                            return true;
                        }

                        return false;
                    }
                },

                children: wedevsPMGetRegisterChildrenRoute('reports_component')
            }]);

            /***/ }),
        /* 273 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_advance_task_vue__ = __webpack_require__(95);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6fb2cf31_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_advance_task_vue__ = __webpack_require__(281);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(274)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_advance_task_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6fb2cf31_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_advance_task_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/advance-task.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-6fb2cf31", Component.options)
                } else {
                    hotAPI.reload("data-v-6fb2cf31", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 274 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(275);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("1664c35f", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6fb2cf31\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./advance-task.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6fb2cf31\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./advance-task.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 275 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n#pm-advance-report .multiselect__content {\n  border-color: #ddd !important;\n  color: #788383;\n  font-size: 12px;\n}\n#pm-advance-report .pm-report-action-wrap input[type=\"text\"],\n#pm-advance-report .pm-report-content .pm-field {\n  width: 160px !important;\n}\n#pm-advance-report .pm-report-co-worker-wrap {\n  min-width: 160px;\n  margin-right: 10px;\n}\n#pm-advance-report .multiselect__tags {\n  display: flex;\n  align-items: center;\n  padding: 0 !important;\n  border: 0 !important;\n}\n#pm-advance-report .multiselect__tag {\n  border-radius: 3px !important;\n  height: 30px !important;\n  display: inline-flex;\n  align-items: center;\n  padding: 0 0 0 10px !important;\n}\n#pm-advance-report .multiselect__tag i {\n  position: static !important;\n  line-height: 28px !important;\n  border-radius: 0 3px 3px 0 !important;\n}\n#pm-advance-report .multiselect__tags-wrap {\n  line-height: 100%;\n}\n#pm-advance-report .multiselect__input {\n  padding-left: 10px !important;\n  position: static !important;\n}\n#pm-advance-report .multiselect__placeholder {\n  display: none !important;\n}\n#pm-advance-report .multiselect__select {\n  height: 30px !important;\n  width: 30px !important;\n}\n#pm-advance-report .multiselect__select:before {\n  margin-top: 0;\n  content: \"\\F125\";\n  font-family: Flaticon;\n  font-size: 9px;\n  border: 0;\n  top: 0;\n}\n#pm-advance-report .pm-report-lebel,\n#pm-advance-report .pm-report-co-worker-wrap .pm-has-custom-select {\n  position: relative;\n  display: flex;\n}\n#pm-advance-report .pm-report-lebel select,\n#pm-advance-report .pm-report-co-worker-wrap .pm-has-custom-select select {\n  color: #788383;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  border-radius: 3px;\n}\n#pm-advance-report .pm-report-lebel:after,\n#pm-advance-report .pm-report-co-worker-wrap .pm-has-custom-select:after {\n  content: \"\\F125\";\n  position: absolute;\n  top: 5px;\n  font-size: 9px;\n  font-weight: 300;\n  right: 10px;\n  z-index: 9;\n  font-family: Flaticon;\n  pointer-events: none;\n  color: #788383;\n}\n#pm-advance-report .pm-has-custom-datepicker {\n  display: inline-flex;\n  position: relative;\n  margin-right: 5px;\n}\n#pm-advance-report .pm-has-custom-datepicker:after,\n#pm-advance-report .pm-has-custom-datepicker:before {\n  position: absolute;\n  top: 5px;\n  z-index: 1;\n  font-family: Flaticon;\n  font-size: 9px;\n  pointer-events: none;\n  color: #788383;\n  font-weight: 300;\n}\n#pm-advance-report .pm-has-custom-datepicker:before {\n  content: \"\\F10C\";\n  left: 10px;\n}\n#pm-advance-report .pm-has-custom-datepicker:after {\n  content: \"\\F125\";\n  right: 10px;\n}\n#pm-advance-report .pm-has-custom-datepicker input {\n  padding-left: 30px;\n  padding-right: 30px;\n  color: #788383;\n}\n#pm-advance-report .multiselect__tags,\n#pm-advance-report input,\n#pm-advance-report .multiselect__tags,\n#pm-advance-report input {\n  border-radius: 3px;\n}\n#pm-advance-report .pm-report-action-wrap {\n  display: flex;\n  align-items: center;\n  height: auto;\n  min-height: inherit;\n}\n#pm-advance-report .filter-more {\n  display: inline-flex !important;\n}\n#pm-advance-report .filter-more .pm--btn {\n  margin-right: 5px;\n}\n#pm-advance-report .pm--btn[disabled=\"disabled\"] {\n  opacity: 0.6;\n  pointer-events: none;\n}\n#pm-advance-report .pm-report-button-wrap {\n  display: inline-flex !important;\n  align-items: center;\n  margin-top: 0 !important;\n}\n#pm-advance-report .pm-report-button-wrap .pm--btn {\n  margin-right: 5px;\n}\n@media screen and (max-width: 782px) {\n#wpbody select {\n    height: 30px;\n    font-size: 12px;\n}\n}\n", ""]);

// exports


            /***/ }),
        /* 276 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = { "default": __webpack_require__(277), __esModule: true };

            /***/ }),
        /* 277 */
        /***/ (function(module, exports, __webpack_require__) {

            __webpack_require__(278);
            module.exports = __webpack_require__(5).Object.keys;


            /***/ }),
        /* 278 */
        /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
            var toObject = __webpack_require__(27);
            var $keys = __webpack_require__(24);

            __webpack_require__(279)('keys', function () {
                return function keys(it) {
                    return $keys(toObject(it));
                };
            });


            /***/ }),
        /* 279 */
        /***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
            var $export = __webpack_require__(9);
            var core = __webpack_require__(5);
            var fails = __webpack_require__(22);
            module.exports = function (KEY, exec) {
                var fn = (core.Object || {})[KEY] || Object[KEY];
                var exp = {};
                exp[KEY] = exec(fn);
                $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
            };


            /***/ }),
        /* 280 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "report-content" }, [
                    _vm.projects.length
                        ? _c(
                            "div",
                            { staticClass: "pm-report-details" },
                            _vm._l(_vm.projects, function(project) {
                                return _c(
                                    "div",
                                    { key: project.id },
                                    [
                                        _c(
                                            "h4",
                                            { staticClass: "pm-task-title" },
                                            [
                                                _c("strong", [
                                                    _vm._v(_vm._s(_vm.__("Project:", "pm-pro")))
                                                ]),
                                                _vm._v(" "),
                                                _c(
                                                    "router-link",
                                                    {
                                                        attrs: {
                                                            to: {
                                                                name: "pm_overview",
                                                                params: { project_id: project.id }
                                                            }
                                                        }
                                                    },
                                                    [
                                                        _vm._v(
                                                            "\n                    " +
                                                            _vm._s(project.title) +
                                                            "\n                "
                                                        )
                                                    ]
                                                )
                                            ],
                                            1
                                        ),
                                        _vm._v(" "),
                                        _vm._l(project.task_lists.data, function(taskList) {
                                            return _c(
                                                "div",
                                                { key: taskList.id, staticClass: "task-list" },
                                                [
                                                    _c(
                                                        "h4",
                                                        { staticClass: "pm-task-title" },
                                                        [
                                                            _c(
                                                                "router-link",
                                                                {
                                                                    attrs: {
                                                                        to: {
                                                                            name: "single_list",
                                                                            params: {
                                                                                project_id: project.id,
                                                                                list_id: taskList.id
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                [_vm._v(_vm._s(taskList.title))]
                                                            )
                                                        ],
                                                        1
                                                    ),
                                                    _vm._v(" "),
                                                    _c("div", { staticClass: "table-container" }, [
                                                        _c(
                                                            "table",
                                                            {
                                                                staticClass:
                                                                    "pm-table table-striped table-justified"
                                                            },
                                                            [
                                                                _c("thead", [
                                                                    _c("tr", [
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--task column-primary",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [_vm._v(_vm._s(_vm.__("Tasks", "pm-pro")))]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        !_vm.getUserId
                                                                            ? _c(
                                                                                "th",
                                                                                {
                                                                                    staticClass: "col--assigned-to",
                                                                                    attrs: { scope: "col" }
                                                                                },
                                                                                [
                                                                                    _vm._v(
                                                                                        _vm._s(
                                                                                            _vm.__("Assigned to", "pm-pro")
                                                                                        )
                                                                                    )
                                                                                ]
                                                                            )
                                                                            : _vm._e(),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--asigned-date",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    _vm._s(_vm.__("Assigned Date", "pm-pro"))
                                                                                )
                                                                            ]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--due-date",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [_vm._v(_vm._s(_vm.__("Due Date", "pm-pro")))]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _vm.hasTimeTracker
                                                                            ? _c(
                                                                                "th",
                                                                                {
                                                                                    staticClass: "col--tracked-time",
                                                                                    attrs: { scope: "col" }
                                                                                },
                                                                                [
                                                                                    _vm._v(
                                                                                        _vm._s(
                                                                                            _vm.__("Tracked Time", "pm-pro")
                                                                                        )
                                                                                    )
                                                                                ]
                                                                            )
                                                                            : _vm._e(),
                                                                        _vm._v(" "),
                                                                        _vm.getUserId
                                                                            ? _c(
                                                                                "th",
                                                                                {
                                                                                    staticClass: "col--estimation",
                                                                                    attrs: { scope: "col" }
                                                                                },
                                                                                [
                                                                                    _vm._v(
                                                                                        _vm._s(_vm.__("Estimation", "pm-pro"))
                                                                                    )
                                                                                ]
                                                                            )
                                                                            : _vm._e(),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--status",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    " " + _vm._s(_vm.__("Status", "pm-pro"))
                                                                                )
                                                                            ]
                                                                        )
                                                                    ])
                                                                ]),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "tbody",
                                                                    _vm._l(taskList.tasks.data, function(task) {
                                                                        return _c(
                                                                            "tr",
                                                                            { key: task.id, class: _vm.collapsRow(task) },
                                                                            [
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--task column-primary",
                                                                                        attrs: { scope: "row" }
                                                                                    },
                                                                                    [
                                                                                        _c(
                                                                                            "router-link",
                                                                                            {
                                                                                                attrs: {
                                                                                                    to: {
                                                                                                        name: "single_task",
                                                                                                        params: {
                                                                                                            project_id: project.id,
                                                                                                            list_id: taskList.id,
                                                                                                            task_id: task.id
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            [_vm._v(_vm._s(task.title))]
                                                                                        ),
                                                                                        _vm._v(" "),
                                                                                        _c(
                                                                                            "button",
                                                                                            {
                                                                                                staticClass: "pm-toggle-row",
                                                                                                attrs: { type: "button" },
                                                                                                on: {
                                                                                                    click: function($event) {
                                                                                                        $event.preventDefault()
                                                                                                        return _vm.toggleRow(task)
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            [
                                                                                                _c(
                                                                                                    "span",
                                                                                                    {
                                                                                                        staticClass:
                                                                                                            "screen-reader-text"
                                                                                                    },
                                                                                                    [_vm._v("Show more details")]
                                                                                                )
                                                                                            ]
                                                                                        )
                                                                                    ],
                                                                                    1
                                                                                ),
                                                                                _vm._v(" "),
                                                                                !_vm.getUserId
                                                                                    ? _c(
                                                                                        "td",
                                                                                        {
                                                                                            staticClass: "col--assigned-user",
                                                                                            attrs: {
                                                                                                "data-colname": "Assigned to"
                                                                                            }
                                                                                        },
                                                                                        [
                                                                                            task.assignees.data.length
                                                                                                ? _c(
                                                                                                    "div",
                                                                                                    _vm._l(
                                                                                                        task.assignees.data,
                                                                                                        function(assignee) {
                                                                                                            return _c(
                                                                                                                "span",
                                                                                                                { key: assignee.id },
                                                                                                                [
                                                                                                                    _c(
                                                                                                                        "a",
                                                                                                                        {
                                                                                                                            attrs: {
                                                                                                                                href: _vm.myTaskRedirect(
                                                                                                                                    assignee.id
                                                                                                                                )
                                                                                                                            }
                                                                                                                        },
                                                                                                                        [
                                                                                                                            _c("img", {
                                                                                                                                staticClass:
                                                                                                                                    "avatar avatar-32 photo pm-no-print",
                                                                                                                                attrs: {
                                                                                                                                    src:
                                                                                                                                    assignee.avatar_url,
                                                                                                                                    title:
                                                                                                                                    assignee.display_name,
                                                                                                                                    width: "32",
                                                                                                                                    height: "32"
                                                                                                                                }
                                                                                                                            }),
                                                                                                                            _vm._v(" "),
                                                                                                                            _c(
                                                                                                                                "span",
                                                                                                                                {
                                                                                                                                    staticClass:
                                                                                                                                        "print"
                                                                                                                                },
                                                                                                                                [
                                                                                                                                    _vm._v(
                                                                                                                                        " " +
                                                                                                                                        _vm._s(
                                                                                                                                            assignee.display_name
                                                                                                                                        ) +
                                                                                                                                        " "
                                                                                                                                    )
                                                                                                                                ]
                                                                                                                            )
                                                                                                                        ]
                                                                                                                    )
                                                                                                                ]
                                                                                                            )
                                                                                                        }
                                                                                                    ),
                                                                                                    0
                                                                                                )
                                                                                                : _vm._e()
                                                                                        ]
                                                                                    )
                                                                                    : _vm._e(),
                                                                                _vm._v(" "),
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--date",
                                                                                        attrs: {
                                                                                            "data-colname": "Assigned Date"
                                                                                        }
                                                                                    },
                                                                                    [
                                                                                        _vm._v(
                                                                                            "\n                                    " +
                                                                                            _vm._s(task.start_at.date) +
                                                                                            "\n                                "
                                                                                        )
                                                                                    ]
                                                                                ),
                                                                                _vm._v(" "),
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--due-date",
                                                                                        attrs: { "data-colname": "Due Date" }
                                                                                    },
                                                                                    [
                                                                                        _vm._v(
                                                                                            "\n                                    " +
                                                                                            _vm._s(task.due_date.date) +
                                                                                            "\n                                "
                                                                                        )
                                                                                    ]
                                                                                ),
                                                                                _vm._v(" "),
                                                                                _vm.hasTimeTracker
                                                                                    ? _c(
                                                                                        "td",
                                                                                        {
                                                                                            staticClass: "col--tracked-time",
                                                                                            attrs: {
                                                                                                "data-colname": "Tracked Time"
                                                                                            }
                                                                                        },
                                                                                        [
                                                                                            _vm._v(
                                                                                                "\n                                    " +
                                                                                                _vm._s(
                                                                                                    task.time.meta.totalTaskTime
                                                                                                        .hour
                                                                                                ) +
                                                                                                ":" +
                                                                                                _vm._s(
                                                                                                    task.time.meta.totalTaskTime
                                                                                                        .minute
                                                                                                ) +
                                                                                                ":" +
                                                                                                _vm._s(
                                                                                                    task.time.meta.totalTaskTime
                                                                                                        .second
                                                                                                ) +
                                                                                                "\n                                "
                                                                                            )
                                                                                        ]
                                                                                    )
                                                                                    : _vm._e(),
                                                                                _vm._v(" "),
                                                                                _vm.getUserId
                                                                                    ? _c(
                                                                                        "td",
                                                                                        {
                                                                                            staticClass: "col--estimation",
                                                                                            attrs: {
                                                                                                "data-colname": "Estimation"
                                                                                            }
                                                                                        },
                                                                                        [_vm._v(_vm._s(task.estimation))]
                                                                                    )
                                                                                    : _vm._e(),
                                                                                _vm._v(" "),
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        class: task.status,
                                                                                        attrs: { "data-colname": "Status" }
                                                                                    },
                                                                                    [_vm._v(" " + _vm._s(task.status))]
                                                                                )
                                                                            ]
                                                                        )
                                                                    }),
                                                                    0
                                                                )
                                                            ]
                                                        )
                                                    ])
                                                ]
                                            )
                                        })
                                    ],
                                    2
                                )
                            }),
                            0
                        )
                        : _c("div", [
                            _c("h4", [
                                _vm._v(
                                    _vm._s(_vm.__("No Data Found, Please search again!", "pm-pro"))
                                )
                            ])
                        ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-ea89feb8", esExports)
                }
            }

            /***/ }),
        /* 281 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm pm-front-end" }, [
                    _c("div", { attrs: { id: "pm-advance-report" } }, [
                        _c(
                            "h1",
                            { staticClass: "pm-no-print report-page-title pm-mb-20" },
                            [
                                _vm._v(
                                    "\n            " +
                                    _vm._s(_vm.__("Advanced Report", "pm-pro")) +
                                    "\n            "
                                ),
                                _c(
                                    "router-link",
                                    {
                                        staticClass: "pm--btn pm--btn-primary pm-ml-10",
                                        attrs: { to: { name: "reports_component" } }
                                    },
                                    [_vm._v(_vm._s(_vm.__("Back", "pm-pro")))]
                                )
                            ],
                            1
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-card pm-card-default " }, [
                            _c(
                                "div",
                                { staticClass: "pm-action-parent" },
                                [
                                    _vm._l(_vm.filters, function(field, index) {
                                        return _c(
                                            "div",
                                            { key: field.skey, staticClass: "pm-report-action-wrap" },
                                            [
                                                _c("label", { staticClass: "pm-report-lebel" }, [
                                                    _c(
                                                        "select",
                                                        {
                                                            directives: [
                                                                {
                                                                    name: "model",
                                                                    rawName: "v-model",
                                                                    value: field.skey,
                                                                    expression: "field.skey"
                                                                }
                                                            ],
                                                            staticClass: "pm-report-action",
                                                            on: {
                                                                select: function($event) {
                                                                    return _vm.keySelect()
                                                                },
                                                                change: function($event) {
                                                                    var $$selectedVal = Array.prototype.filter
                                                                        .call($event.target.options, function(o) {
                                                                            return o.selected
                                                                        })
                                                                        .map(function(o) {
                                                                            var val = "_value" in o ? o._value : o.value
                                                                            return val
                                                                        })
                                                                    _vm.$set(
                                                                        field,
                                                                        "skey",
                                                                        $event.target.multiple
                                                                            ? $$selectedVal
                                                                            : $$selectedVal[0]
                                                                    )
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _c("option", { attrs: { value: "" } }, [
                                                                _vm._v(_vm._s(_vm.__("- Select -", "pm-pro")))
                                                            ]),
                                                            _vm._v(" "),
                                                            _vm._l(_vm.filtersData, function(option) {
                                                                return _c(
                                                                    "option",
                                                                    {
                                                                        key: option.key,
                                                                        attrs: { disabled: _vm.makeDisable(option.key) },
                                                                        domProps: { value: option.key }
                                                                    },
                                                                    [_vm._v(_vm._s(option.text))]
                                                                )
                                                            })
                                                        ],
                                                        2
                                                    )
                                                ]),
                                                _vm._v(" "),
                                                field.skey === "assigned"
                                                    ? _c(
                                                        "div",
                                                        { staticClass: "pm-report-co-worker-wrap" },
                                                        [
                                                            _c("multiselect", {
                                                                attrs: {
                                                                    options: _vm.assigned_users,
                                                                    multiple: true,
                                                                    "close-on-select": false,
                                                                    "clear-on-select": false,
                                                                    "hide-selected": true,
                                                                    "show-labels": false,
                                                                    searchable: true,
                                                                    placeholder: _vm.select_user_text,
                                                                    label: "display_name",
                                                                    "track-by": "id"
                                                                },
                                                                model: {
                                                                    value: _vm.assign_user,
                                                                    callback: function($$v) {
                                                                        _vm.assign_user = $$v
                                                                    },
                                                                    expression: "assign_user"
                                                                }
                                                            })
                                                        ],
                                                        1
                                                    )
                                                    : _vm._e(),
                                                _vm._v(" "),
                                                field.skey === "project"
                                                    ? _c(
                                                        "div",
                                                        { staticClass: "pm-report-co-worker-wrap" },
                                                        [
                                                            _c("multiselect", {
                                                                attrs: {
                                                                    options: _vm.allprojects,
                                                                    multiple: true,
                                                                    "close-on-select": false,
                                                                    "clear-on-select": false,
                                                                    "hide-selected": true,
                                                                    "show-labels": false,
                                                                    searchable: true,
                                                                    placeholder: _vm.select_project_text,
                                                                    label: "title",
                                                                    "track-by": "id"
                                                                },
                                                                model: {
                                                                    value: _vm.projects,
                                                                    callback: function($$v) {
                                                                        _vm.projects = $$v
                                                                    },
                                                                    expression: "projects"
                                                                }
                                                            })
                                                        ],
                                                        1
                                                    )
                                                    : _vm._e(),
                                                _vm._v(" "),
                                                field.skey === "status"
                                                    ? _c("div", { staticClass: "pm-report-co-worker-wrap" }, [
                                                        _c("label", { staticClass: "pm-has-custom-select" }, [
                                                            _c(
                                                                "select",
                                                                {
                                                                    directives: [
                                                                        {
                                                                            name: "model",
                                                                            rawName: "v-model",
                                                                            value: field.svalue,
                                                                            expression: "field.svalue"
                                                                        }
                                                                    ],
                                                                    staticClass: "pm-field",
                                                                    on: {
                                                                        change: function($event) {
                                                                            var $$selectedVal = Array.prototype.filter
                                                                                .call($event.target.options, function(o) {
                                                                                    return o.selected
                                                                                })
                                                                                .map(function(o) {
                                                                                    var val =
                                                                                        "_value" in o ? o._value : o.value
                                                                                    return val
                                                                                })
                                                                            _vm.$set(
                                                                                field,
                                                                                "svalue",
                                                                                $event.target.multiple
                                                                                    ? $$selectedVal
                                                                                    : $$selectedVal[0]
                                                                            )
                                                                        }
                                                                    }
                                                                },
                                                                [
                                                                    _c("option", { attrs: { value: "0" } }, [
                                                                        _vm._v(_vm._s(_vm.__("Incomplete", "pm-pro")))
                                                                    ]),
                                                                    _vm._v(" "),
                                                                    _c("option", { attrs: { value: "1" } }, [
                                                                        _vm._v(
                                                                            " " +
                                                                            _vm._s(_vm.__("Complete", "pm-pro")) +
                                                                            " "
                                                                        )
                                                                    ]),
                                                                    _vm._v(" "),
                                                                    _c("option", { attrs: { value: "2" } }, [
                                                                        _vm._v(_vm._s(_vm.__("Pending", "pm-pro")))
                                                                    ])
                                                                ]
                                                            )
                                                        ])
                                                    ])
                                                    : _vm._e(),
                                                _vm._v(" "),
                                                field.skey === "payable"
                                                    ? _c("div", { staticClass: "pm-report-co-worker-wrap" }, [
                                                        _c("label", { staticClass: "pm-has-custom-select" }, [
                                                            _c(
                                                                "select",
                                                                {
                                                                    directives: [
                                                                        {
                                                                            name: "model",
                                                                            rawName: "v-model",
                                                                            value: field.svalue,
                                                                            expression: "field.svalue"
                                                                        }
                                                                    ],
                                                                    staticClass: "pm-field",
                                                                    on: {
                                                                        change: function($event) {
                                                                            var $$selectedVal = Array.prototype.filter
                                                                                .call($event.target.options, function(o) {
                                                                                    return o.selected
                                                                                })
                                                                                .map(function(o) {
                                                                                    var val =
                                                                                        "_value" in o ? o._value : o.value
                                                                                    return val
                                                                                })
                                                                            _vm.$set(
                                                                                field,
                                                                                "svalue",
                                                                                $event.target.multiple
                                                                                    ? $$selectedVal
                                                                                    : $$selectedVal[0]
                                                                            )
                                                                        }
                                                                    }
                                                                },
                                                                [
                                                                    _c("option", { attrs: { value: "0" } }, [
                                                                        _vm._v(_vm._s(_vm.__("Not Payable", "pm-pro")))
                                                                    ]),
                                                                    _vm._v(" "),
                                                                    _c("option", { attrs: { value: "1" } }, [
                                                                        _vm._v(_vm._s(_vm.__("Payable", "pm-pro")))
                                                                    ])
                                                                ]
                                                            )
                                                        ])
                                                    ])
                                                    : _vm._e(),
                                                _vm._v(" "),
                                                field.skey === "time"
                                                    ? _c("div", { staticClass: "pm-report-co-worker-wrap" }, [
                                                        _c("label", [
                                                            _c(
                                                                "div",
                                                                { staticClass: "pm-has-custom-datepicker" },
                                                                [
                                                                    _c("pm-date-picker", {
                                                                        staticClass: "pm-datepickter-from",
                                                                        attrs: {
                                                                            dependency: "pm-datepickter-to",
                                                                            placeholder: _vm.select_start_date
                                                                        },
                                                                        model: {
                                                                            value: field.svalue.start_at,
                                                                            callback: function($$v) {
                                                                                _vm.$set(field.svalue, "start_at", $$v)
                                                                            },
                                                                            expression: "field.svalue.start_at"
                                                                        }
                                                                    })
                                                                ],
                                                                1
                                                            ),
                                                            _vm._v(" "),
                                                            _c(
                                                                "div",
                                                                { staticClass: "pm-has-custom-datepicker" },
                                                                [
                                                                    _c("pm-date-picker", {
                                                                        staticClass: "pm-datepickter-to",
                                                                        attrs: {
                                                                            dependency: "pm-datepickter-from",
                                                                            placeholder: _vm.select_due_date
                                                                        },
                                                                        model: {
                                                                            value: field.svalue.due_date,
                                                                            callback: function($$v) {
                                                                                _vm.$set(field.svalue, "due_date", $$v)
                                                                            },
                                                                            expression: "field.svalue.due_date"
                                                                        }
                                                                    })
                                                                ],
                                                                1
                                                            )
                                                        ])
                                                    ])
                                                    : _vm._e(),
                                                _vm._v(" "),
                                                index
                                                    ? _c(
                                                        "a",
                                                        {
                                                            staticClass: "button button-danger",
                                                            on: {
                                                                click: function($event) {
                                                                    $event.preventDefault()
                                                                    return _vm.removeField(index)
                                                                }
                                                            }
                                                        },
                                                        [_vm._v(" - ")]
                                                    )
                                                    : _vm._e(),
                                                _vm._v(" "),
                                                _c("span", { staticClass: "pm-clear" })
                                            ]
                                        )
                                    }),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "filter-more" }, [
                                        _vm.showHideMoreBtn
                                            ? _c(
                                                "a",
                                                {
                                                    staticClass: "pm--btn pm--btn-primary",
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.addField()
                                                        }
                                                    }
                                                },
                                                [_vm._v(" " + _vm._s(_vm.__("Load more", "pm-pro")) + " ")]
                                            )
                                            : _vm._e(),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "pm-report-button-wrap" }, [
                                            _c(
                                                "a",
                                                {
                                                    staticClass: "pm--btn pm--btn-primary",
                                                    attrs: { disabled: _vm.isFiltersEmpty },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.generateReport()
                                                        }
                                                    }
                                                },
                                                [_vm._v(" " + _vm._s(_vm.__("Generate", "pm-pro")) + " ")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                                "a",
                                                {
                                                    staticClass: "pm--btn pm--btn-default",
                                                    attrs: { disabled: _vm.isFiltersEmpty },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.advCSV()
                                                        }
                                                    }
                                                },
                                                [_vm._v(" " + _vm._s(_vm.__("Export to CSV", "pm-pro")))]
                                            ),
                                            _vm._v(" "),
                                            _c("span", {
                                                directives: [
                                                    {
                                                        name: "show",
                                                        rawName: "v-show",
                                                        value: _vm.show_spinner,
                                                        expression: "show_spinner"
                                                    }
                                                ],
                                                staticClass: "pm-spinner"
                                            })
                                        ])
                                    ])
                                ],
                                2
                            )
                        ]),
                        _vm._v(" "),
                        _vm.show_report
                            ? _c("div", { staticClass: "pm-report-page animated" }, [
                                _c(
                                    "div",
                                    { staticClass: "pm-report-body" },
                                    [
                                        _c(
                                            "div",
                                            { attrs: { id: "report" } },
                                            [
                                                _c("result-view", {
                                                    attrs: { projects: _vm.advance_tasks }
                                                })
                                            ],
                                            1
                                        ),
                                        _vm._v(" "),
                                        _c("pm-pagination", {
                                            attrs: {
                                                total_pages: _vm.total_pages,
                                                current_page_number: _vm.current_page_number,
                                                component_name: "advance_pagination"
                                            }
                                        })
                                    ],
                                    1
                                )
                            ])
                            : _vm._e()
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-6fb2cf31", esExports)
                }
            }

            /***/ }),
        /* 282 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_unassigned_task_vue__ = __webpack_require__(98);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_17f3fffa_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_unassigned_task_vue__ = __webpack_require__(290);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_unassigned_task_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_17f3fffa_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_unassigned_task_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/unassigned-task.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-17f3fffa", Component.options)
                } else {
                    hotAPI.reload("data-v-17f3fffa", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 283 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(284);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("60c7b848", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-9a5473c8\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Modal.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-9a5473c8\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Modal.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 284 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.modal-container {\n  background: transparent !important;\n}\n.modal-header,\n.modal-body,\n.modal-footer {\n  margin: 0 !important;\n  padding: 0 !important;\n  border: 0 !important;\n}\n.close-vue-modal a {\n  font-size: 12px !important;\n  padding: 20px !important;\n}\n", ""]);

// exports


            /***/ }),
        /* 285 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("transition", { attrs: { name: "modal" } }, [
                    _c(
                        "div",
                        {
                            directives: [
                                {
                                    name: "show",
                                    rawName: "v-show",
                                    value: _vm.isActive,
                                    expression: "isActive"
                                }
                            ],
                            staticClass: "modal-mask",
                            class: _vm.classes
                        },
                        [
                            _c("div", { staticClass: "modal-wrapper" }, [
                                _c("div", { staticClass: "modal-container", style: _vm.styles }, [
                                    _c(
                                        "div",
                                        { staticClass: "modal-header" },
                                        [
                                            _c("span", { staticClass: "pm-right close-vue-modal" }, [
                                                _c(
                                                    "a",
                                                    {
                                                        on: {
                                                            click: function($event) {
                                                                return _vm.$emit("close")
                                                            }
                                                        }
                                                    },
                                                    [_vm._v("X")]
                                                )
                                            ]),
                                            _vm._v(" "),
                                            _vm._t("header")
                                        ],
                                        2
                                    ),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "modal-body" }, [_vm._t("default")], 2),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "modal-footer" }, [_vm._t("footer")], 2)
                                ])
                            ])
                        ]
                    )
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-9a5473c8", esExports)
                }
            }

            /***/ }),
        /* 286 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_unassigned_task_results_vue__ = __webpack_require__(100);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7da3e0a3_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_unassigned_task_results_vue__ = __webpack_require__(289);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(287)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_unassigned_task_results_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7da3e0a3_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_unassigned_task_results_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/unassigned-task-results.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-7da3e0a3", Component.options)
                } else {
                    hotAPI.reload("data-v-7da3e0a3", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 287 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(288);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("88bfc59c", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7da3e0a3\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./unassigned-task-results.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7da3e0a3\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./unassigned-task-results.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 288 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.report-content .pm-table thead tr {\n  box-shadow: none;\n}\n.report-content.overdue .task-lists {\n  margin-left: 30px;\n}\n.pm-task-title {\n  font-size: 15px;\n  padding: 0 !important;\n  margin-top: 20px !important;\n  display: flex;\n  font-size: 13px;\n}\n.pm-task-title a {\n  color: #000;\n}\n.pm-task-title .project-title-wrap {\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n}\n.pm-task-title .project-title-wrap .title {\n  background: #75cbef;\n  padding: 3px 13px;\n  color: #fff;\n  text-shadow: 0px 0px 1px #929292;\n}\n.pm-task-title .project-title-wrap .link {\n  background: #e5e5e5;\n  padding: 2px 13px;\n  border: 1px solid #ddd;\n  border-left: none;\n}\n.pm-task-title .list-title-wrap {\n  display: flex;\n  align-items: center;\n}\n.pm-task-title .list-title-wrap .title {\n  background: #8f9aec;\n  padding: 3px 12px;\n  color: #fff;\n  text-shadow: 0px 0px 1px #6d6d6d;\n}\n.pm-task-title .list-title-wrap .link {\n  background: #e5e5e5;\n  padding: 2px 13px;\n  border: 1px solid #ddd;\n  border-left: none;\n}\n", ""]);

// exports


            /***/ }),
        /* 289 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "report-content overdue" }, [
                    !_vm.isEmpty(_vm.projects)
                        ? _c(
                            "div",
                            { staticClass: "pm-report-details" },
                            _vm._l(_vm.projects, function(project) {
                                return _c(
                                    "div",
                                    { key: project.id },
                                    [
                                        _c("h4", { staticClass: "pm-task-title" }, [
                                            _c(
                                                "div",
                                                { staticClass: "project-title-wrap" },
                                                [
                                                    _c("span", { staticClass: "title" }, [
                                                        _vm._v(_vm._s(_vm.__("Project", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c(
                                                        "router-link",
                                                        {
                                                            staticClass: "link",
                                                            attrs: {
                                                                to: {
                                                                    name: "task_lists",
                                                                    params: {
                                                                        project_id: project.id
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _vm._v(
                                                                "\n                        " +
                                                                _vm._s(project.title) +
                                                                "\n                    "
                                                            )
                                                        ]
                                                    )
                                                ],
                                                1
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _vm._l(project.task_lists.data, function(taskList) {
                                            return _c(
                                                "div",
                                                { key: taskList.id, staticClass: "task-lists" },
                                                [
                                                    _c("h4", { staticClass: "pm-task-title" }, [
                                                        _c(
                                                            "div",
                                                            { staticClass: "list-title-wrap" },
                                                            [
                                                                _c("span", { staticClass: "title" }, [
                                                                    _vm._v(_vm._s(_vm.__("Task List", "pm-pro")))
                                                                ]),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "router-link",
                                                                    {
                                                                        staticClass: "link",
                                                                        attrs: {
                                                                            to: {
                                                                                name: "single_list",
                                                                                params: {
                                                                                    project_id: project.id,
                                                                                    list_id: taskList.id
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _vm._v(
                                                                            "\n                            " +
                                                                            _vm._s(taskList.title) +
                                                                            "\n                        "
                                                                        )
                                                                    ]
                                                                )
                                                            ],
                                                            1
                                                        )
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("div", { staticClass: "table-container" }, [
                                                        _c(
                                                            "table",
                                                            {
                                                                staticClass:
                                                                    "pm-table table-striped table-justified"
                                                            },
                                                            [
                                                                _c("thead", [
                                                                    _c("tr", [
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--task column-primary",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    "\n                                    " +
                                                                                    _vm._s(_vm.__("Tasks", "pm-pro")) +
                                                                                    "\n                                "
                                                                                )
                                                                            ]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--date-beetwen ",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [_vm._v(_vm._s(_vm.__("Due Date", "pm-pro")))]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--created-at",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    _vm._s(_vm.__("Created At", "pm-pro"))
                                                                                )
                                                                            ]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--created-by",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    _vm._s(_vm.__("Created By", "pm-pro"))
                                                                                )
                                                                            ]
                                                                        )
                                                                    ])
                                                                ]),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "tbody",
                                                                    _vm._l(taskList.tasks.data, function(task) {
                                                                        return _c(
                                                                            "tr",
                                                                            { key: task.id, class: _vm.collapsRow(task) },
                                                                            [
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--task column-primary",
                                                                                        attrs: { scope: "row" }
                                                                                    },
                                                                                    [
                                                                                        _c(
                                                                                            "a",
                                                                                            {
                                                                                                attrs: { href: "#" },
                                                                                                on: {
                                                                                                    click: function($event) {
                                                                                                        $event.preventDefault()
                                                                                                        return _vm.openSingleTask(task)
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            [
                                                                                                _vm._v(
                                                                                                    "\n                                        " +
                                                                                                    _vm._s(task.title) +
                                                                                                    "\n                                    "
                                                                                                )
                                                                                            ]
                                                                                        ),
                                                                                        _vm._v(" "),
                                                                                        _c(
                                                                                            "button",
                                                                                            {
                                                                                                staticClass: "pm-toggle-row",
                                                                                                attrs: { type: "button" },
                                                                                                on: {
                                                                                                    click: function($event) {
                                                                                                        $event.preventDefault()
                                                                                                        return _vm.toggleRow(task)
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            [
                                                                                                _c(
                                                                                                    "span",
                                                                                                    {
                                                                                                        staticClass:
                                                                                                            "screen-reader-text"
                                                                                                    },
                                                                                                    [
                                                                                                        _vm._v(
                                                                                                            _vm._s(
                                                                                                                _vm.__(
                                                                                                                    "Show more details",
                                                                                                                    "pm-pro"
                                                                                                                )
                                                                                                            )
                                                                                                        )
                                                                                                    ]
                                                                                                )
                                                                                            ]
                                                                                        )
                                                                                    ]
                                                                                ),
                                                                                _vm._v(" "),
                                                                                task.due_date.date
                                                                                    ? _c(
                                                                                        "td",
                                                                                        {
                                                                                            staticClass: "col--date",
                                                                                            attrs: {
                                                                                                "data-colname": "Date between"
                                                                                            }
                                                                                        },
                                                                                        [
                                                                                            _c("span", [
                                                                                                _vm._v(_vm._s(task.due_date.date))
                                                                                            ])
                                                                                        ]
                                                                                    )
                                                                                    : _vm._e(),
                                                                                _vm._v(" "),
                                                                                !task.due_date.date
                                                                                    ? _c(
                                                                                        "td",
                                                                                        {
                                                                                            staticClass: "col--date",
                                                                                            attrs: {
                                                                                                "data-colname": "Date between"
                                                                                            }
                                                                                        },
                                                                                        [_c("span", [_vm._v("—")])]
                                                                                    )
                                                                                    : _vm._e(),
                                                                                _vm._v(" "),
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--created-at",
                                                                                        attrs: { "data-colname": "Created At" }
                                                                                    },
                                                                                    [_vm._v(_vm._s(task.created_at.date))]
                                                                                ),
                                                                                _vm._v(" "),
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--phone",
                                                                                        attrs: { "data-colname": "Created By" }
                                                                                    },
                                                                                    [
                                                                                        _vm._v(
                                                                                            _vm._s(task.creator.data.display_name)
                                                                                        )
                                                                                    ]
                                                                                )
                                                                            ]
                                                                        )
                                                                    }),
                                                                    0
                                                                )
                                                            ]
                                                        )
                                                    ])
                                                ]
                                            )
                                        })
                                    ],
                                    2
                                )
                            }),
                            0
                        )
                        : _vm._e(),
                    _vm._v(" "),
                    _vm.isEmpty(_vm.projects)
                        ? _c("div", [
                            _c("h4", [
                                _vm._v(
                                    _vm._s(_vm.__("No Data Found, Please search again!", "pm-pro"))
                                )
                            ])
                        ])
                        : _vm._e(),
                    _vm._v(" "),
                    _vm.hasSingleTask
                        ? _c(
                            "div",
                            [
                                _c("pm-single-task", {
                                    attrs: {
                                        taskId: parseInt(_vm.individualTaskId),
                                        projectId: parseInt(_vm.individualProjectId)
                                    },
                                    on: { onClickClose: _vm.closeTaskModal }
                                })
                            ],
                            1
                        )
                        : _vm._e()
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-7da3e0a3", esExports)
                }
            }

            /***/ }),
        /* 290 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm pm-front-end" }, [
                    _c("div", { attrs: { id: "pm-report" } }, [
                        _c("div", { staticClass: "pm-page-header" }, [
                            _c("div", { staticClass: "pm-page-title-container" }, [
                                _c("h1", [_vm._v(_vm._s(_vm.__("Unassigned Task", "pm-pro")))]),
                                _vm._v(" "),
                                _vm.startDate && _vm.endDate
                                    ? _c("div", { staticClass: "pm-report-date-range" }, [
                                        _c("span", [_vm._v(_vm._s(_vm.__("Date between", "pm-pro")))]),
                                        _vm._v(" "),
                                        _c(
                                            "span",
                                            {
                                                staticClass: "pm-text-primary",
                                                attrs: { title: _vm.getFullDate(_vm.startDate) }
                                            },
                                            [_vm._v(_vm._s(_vm.shortDateFormat(_vm.startDate)))]
                                        ),
                                        _vm._v(" "),
                                        _c("span", [_vm._v(_vm._s(_vm.__("to", "pm-pro")))]),
                                        _vm._v(" "),
                                        _c(
                                            "span",
                                            {
                                                staticClass: "pm-text-primary",
                                                attrs: { title: _vm.getFullDate(_vm.endDate) }
                                            },
                                            [_vm._v(_vm._s(_vm.shortDateFormat(_vm.endDate)))]
                                        )
                                    ])
                                    : _vm._e()
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "pm-display-flex pm-filter-wrapper" }, [
                                _vm.fetchReport
                                    ? _c(
                                        "a",
                                        {
                                            staticClass: "pm--btn pm--btn-default pm-mr-10",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    _vm.show = true
                                                }
                                            }
                                        },
                                        [
                                            _c("i", {
                                                staticClass: "flaticon-filter-tool-black-shape mr-5"
                                            }),
                                            _vm._v(_vm._s(_vm.__("Filter", "pm-pro")))
                                        ]
                                    )
                                    : _vm._e(),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-has-dropdown pm-report-export-block" }, [
                                    _c(
                                        "a",
                                        {
                                            staticClass: "pm--btn pm--btn-default pm-dropdown-trigger",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.dropdownTrigger($event)
                                                }
                                            }
                                        },
                                        [
                                            _c("i", { staticClass: "flaticon-export mr-5" }),
                                            _vm._v(
                                                "\n                        " +
                                                _vm._s(_vm.__("Export", "pm-pro")) +
                                                "\n                        "
                                            ),
                                            _c("i", {
                                                staticClass:
                                                    "flaticon-arrow-down-sign-to-navigate pm-mr-0 pm-ml-10"
                                            })
                                        ]
                                    ),
                                    _vm._v(" "),
                                    _c("ul", { class: _vm.dropdownToggleClass() }, [
                                        _c("li", [
                                            _vm.fetchReport
                                                ? _c(
                                                    "a",
                                                    {
                                                        attrs: { href: "#" },
                                                        on: {
                                                            click: function($event) {
                                                                $event.preventDefault()
                                                                return _vm.exportCSV()
                                                            }
                                                        }
                                                    },
                                                    [
                                                        _c("span", {
                                                            staticClass:
                                                                "flaticon-data-export-symbol-of-a-window-with-an-arrow"
                                                        }),
                                                        _vm._v(" "),
                                                        _c("span", [
                                                            _vm._v(_vm._s(_vm.__("Export to CSV", "pm-pro")))
                                                        ])
                                                    ]
                                                )
                                                : _vm._e()
                                        ]),
                                        _vm._v(" "),
                                        _vm.fetchReport
                                            ? _c("li", [
                                                _c(
                                                    "a",
                                                    {
                                                        attrs: { href: "#" },
                                                        on: {
                                                            click: function($event) {
                                                                $event.preventDefault()
                                                                return _vm.unassignedPDF()
                                                            }
                                                        }
                                                    },
                                                    [
                                                        _c("span", { staticClass: "flaticon-pdf" }),
                                                        _vm._v(" "),
                                                        _c("span", [
                                                            _vm._v(_vm._s(_vm.__("Export to PDF", "pm-pro")))
                                                        ])
                                                    ]
                                                )
                                            ])
                                            : _vm._e()
                                    ])
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-page-body" }, [
                            _c("div", { staticClass: "pm--row" }, [
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-project-panel"
                                        },
                                        [
                                            _vm._m(0),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.project_title))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Project", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-result-panel"
                                        },
                                        [
                                            _vm._m(1),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.totalResule))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Total Tasks", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-report-page" }, [
                            _c(
                                "div",
                                {},
                                [
                                    _c(
                                        "div",
                                        { attrs: { id: "report" } },
                                        [
                                            _vm.fetchReport
                                                ? _c("result-view", {
                                                    attrs: { projects: _vm.unsaaigned_tasks }
                                                })
                                                : _vm._e(),
                                            _vm._v(" "),
                                            !_vm.fetchReport
                                                ? _c("div", { staticClass: "pm-data-load-before" }, [
                                                    _vm._m(2)
                                                ])
                                                : _vm._e()
                                        ],
                                        1
                                    ),
                                    _vm._v(" "),
                                    _vm.fetchReport
                                        ? _c("pm-pagination", {
                                            attrs: {
                                                total_pages: _vm.total_pages,
                                                current_page_number: _vm.current_page_number,
                                                component_name: "unassigned_pagination"
                                            }
                                        })
                                        : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                        "modal",
                                        {
                                            attrs: { "is-active": _vm.show, width: 400 },
                                            on: {
                                                close: function($event) {
                                                    _vm.show = false
                                                }
                                            }
                                        },
                                        [
                                            _c("div", { staticClass: "pm-filter-report-modal" }, [
                                                _c(
                                                    "div",
                                                    {
                                                        staticClass: "pm-filter-modal-header",
                                                        attrs: { slot: "header" },
                                                        slot: "header"
                                                    },
                                                    [
                                                        _c("h3", { staticClass: "pm-mb-0" }, [
                                                            _vm._v(
                                                                _vm._s(_vm.__("Unassigned Task Filter", "pm-pro"))
                                                            )
                                                        ])
                                                    ]
                                                ),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "pm-filter-modal-body" }, [
                                                    _c(
                                                        "form",
                                                        {
                                                            on: {
                                                                submit: function($event) {
                                                                    $event.preventDefault()
                                                                    return _vm.filterProject()
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _c("div", [
                                                                _c(
                                                                    "div",
                                                                    {
                                                                        staticClass: "subtask-date new-task-calendar-wrap"
                                                                    },
                                                                    [
                                                                        _c("h3", [
                                                                            _vm._v(_vm._s(_vm.__("Select Date", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("div", { staticClass: "pm--row" }, [
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-col-sm-6 pm-col-xs-6" },
                                                                                [
                                                                                    _c("pm-date-picker", {
                                                                                        staticClass: "pm-datepickter-from",
                                                                                        attrs: {
                                                                                            dependency: "pm-datepickter-to",
                                                                                            placeholder: _vm.__(
                                                                                                "Select start date",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        },
                                                                                        model: {
                                                                                            value: _vm.startDate,
                                                                                            callback: function($$v) {
                                                                                                _vm.startDate = $$v
                                                                                            },
                                                                                            expression: "startDate"
                                                                                        }
                                                                                    })
                                                                                ],
                                                                                1
                                                                            ),
                                                                            _vm._v(" "),
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-col-sm-6 pm-col-xs-6" },
                                                                                [
                                                                                    _c("pm-date-picker", {
                                                                                        staticClass: "pm-datepickter-to",
                                                                                        attrs: {
                                                                                            dependency: "pm-datepickter-from",
                                                                                            placeholder: _vm.__(
                                                                                                "Select due date",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        },
                                                                                        model: {
                                                                                            value: _vm.endDate,
                                                                                            callback: function($$v) {
                                                                                                _vm.endDate = $$v
                                                                                            },
                                                                                            expression: "endDate"
                                                                                        }
                                                                                    })
                                                                                ],
                                                                                1
                                                                            )
                                                                        ])
                                                                    ]
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "div",
                                                                    { staticClass: "filter-input" },
                                                                    [
                                                                        _c("label", [
                                                                            _vm._v(_vm._s(_vm.__("All Project", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("multiselect", {
                                                                            attrs: {
                                                                                options: _vm.allprojects,
                                                                                multiple: false,
                                                                                searchable: true,
                                                                                "allow-empty": true,
                                                                                placeholder: _vm.select_project_text,
                                                                                label: "title",
                                                                                "track-by": "id"
                                                                            },
                                                                            model: {
                                                                                value: _vm.projects,
                                                                                callback: function($$v) {
                                                                                    _vm.projects = $$v
                                                                                },
                                                                                expression: "projects"
                                                                            }
                                                                        })
                                                                    ],
                                                                    1
                                                                )
                                                            ]),
                                                            _vm._v(" "),
                                                            _c("div", { staticClass: "pm-modal-form-buttons" }, [
                                                                _c("input", {
                                                                    staticClass: "button button-primary pm-doc-btn",
                                                                    attrs: { slot: "footer", type: "submit" },
                                                                    domProps: { value: _vm.run_report },
                                                                    slot: "footer"
                                                                })
                                                            ])
                                                        ]
                                                    )
                                                ])
                                            ])
                                        ]
                                    )
                                ],
                                1
                            )
                        ])
                    ])
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-resume" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-test" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "loadmoreanimation" }, [
                        _c("div", { staticClass: "load-spinner" }, [
                            _c("div", { staticClass: "rect1" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect2" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect3" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect4" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect5" })
                        ])
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-17f3fffa", esExports)
                }
            }

            /***/ }),
        /* 291 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_milestone_task_vue__ = __webpack_require__(101);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_68db03c3_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_milestone_task_vue__ = __webpack_require__(296);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_milestone_task_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_68db03c3_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_milestone_task_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/milestone-task.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-68db03c3", Component.options)
                } else {
                    hotAPI.reload("data-v-68db03c3", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 292 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_milestone_task_results_vue__ = __webpack_require__(102);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2e930b6c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_milestone_task_results_vue__ = __webpack_require__(295);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(293)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_milestone_task_results_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2e930b6c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_milestone_task_results_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/milestone-task-results.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-2e930b6c", Component.options)
                } else {
                    hotAPI.reload("data-v-2e930b6c", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 293 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(294);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("bb677498", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2e930b6c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./milestone-task-results.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2e930b6c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./milestone-task-results.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 294 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.report-content .pm-table thead tr {\n  box-shadow: none;\n}\n.report-content.overdue .task-lists {\n  margin-left: 30px;\n}\n.pm-task-title {\n  font-size: 15px;\n  padding: 0 !important;\n  margin-top: 20px !important;\n  display: flex;\n  font-size: 13px;\n}\n.pm-task-title a {\n  color: #000;\n}\n.pm-task-title .project-title-wrap {\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n}\n.pm-task-title .project-title-wrap .title {\n  background: #75cbef;\n  padding: 3px 13px;\n  color: #fff;\n  text-shadow: 0px 0px 1px #929292;\n}\n.pm-task-title .project-title-wrap .link {\n  background: #e5e5e5;\n  padding: 2px 13px;\n  border: 1px solid #ddd;\n  border-left: none;\n}\n.pm-task-title .list-title-wrap {\n  display: flex;\n  align-items: center;\n}\n.pm-task-title .list-title-wrap .title {\n  background: #8f9aec;\n  padding: 3px 12px;\n  color: #fff;\n  text-shadow: 0px 0px 1px #6d6d6d;\n}\n.pm-task-title .list-title-wrap .link {\n  background: #e5e5e5;\n  padding: 2px 13px;\n  border: 1px solid #ddd;\n  border-left: none;\n}\n", ""]);

// exports


            /***/ }),
        /* 295 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "report-content overdue" }, [
                    !_vm.isEmpty(_vm.projects)
                        ? _c(
                            "div",
                            { staticClass: "pm-report-details" },
                            _vm._l(_vm.projects, function(project) {
                                return _c(
                                    "div",
                                    { key: project.id },
                                    [
                                        _c("h4", { staticClass: "pm-task-title" }, [
                                            _c(
                                                "div",
                                                { staticClass: "project-title-wrap" },
                                                [
                                                    _c("span", { staticClass: "title" }, [
                                                        _vm._v(_vm._s(_vm.__("Project", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c(
                                                        "router-link",
                                                        {
                                                            staticClass: "link",
                                                            attrs: {
                                                                to: {
                                                                    name: "task_lists",
                                                                    params: {
                                                                        project_id: project.id
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _vm._v(
                                                                "\n                        " +
                                                                _vm._s(project.title) +
                                                                "\n                    "
                                                            )
                                                        ]
                                                    )
                                                ],
                                                1
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _vm._l(project.task_lists.data, function(taskList) {
                                            return _c(
                                                "div",
                                                { key: taskList.id, staticClass: "task-lists" },
                                                [
                                                    _c("h4", { staticClass: "pm-task-title" }, [
                                                        _c(
                                                            "div",
                                                            { staticClass: "list-title-wrap" },
                                                            [
                                                                _c("span", { staticClass: "title" }, [
                                                                    _vm._v(_vm._s(_vm.__("Task List", "pm-pro")))
                                                                ]),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "router-link",
                                                                    {
                                                                        staticClass: "link",
                                                                        attrs: {
                                                                            to: {
                                                                                name: "single_list",
                                                                                params: {
                                                                                    project_id: project.id,
                                                                                    list_id: taskList.id
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _vm._v(
                                                                            "\n                            " +
                                                                            _vm._s(taskList.title) +
                                                                            "\n                        "
                                                                        )
                                                                    ]
                                                                )
                                                            ],
                                                            1
                                                        )
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("div", { staticClass: "table-container" }, [
                                                        _c(
                                                            "table",
                                                            {
                                                                staticClass:
                                                                    "pm-table table-striped table-justified"
                                                            },
                                                            [
                                                                _c("thead", [
                                                                    _c("tr", [
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--task column-primary",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    "\n                                    " +
                                                                                    _vm._s(_vm.__("Tasks", "pm-pro")) +
                                                                                    "\n                                "
                                                                                )
                                                                            ]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--date-beetwen ",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [_vm._v(_vm._s(_vm.__("Due Date", "pm-pro")))]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--created-at",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    _vm._s(_vm.__("Created At", "pm-pro"))
                                                                                )
                                                                            ]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--created-by",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    _vm._s(_vm.__("Created By", "pm-pro"))
                                                                                )
                                                                            ]
                                                                        )
                                                                    ])
                                                                ]),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "tbody",
                                                                    _vm._l(taskList.tasks.data, function(task) {
                                                                        return _c(
                                                                            "tr",
                                                                            { key: task.id, class: _vm.collapsRow(task) },
                                                                            [
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--task column-primary",
                                                                                        attrs: { scope: "row" }
                                                                                    },
                                                                                    [
                                                                                        _c(
                                                                                            "a",
                                                                                            {
                                                                                                attrs: { href: "#" },
                                                                                                on: {
                                                                                                    click: function($event) {
                                                                                                        $event.preventDefault()
                                                                                                        return _vm.openSingleTask(task)
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            [
                                                                                                _vm._v(
                                                                                                    "\n                                        " +
                                                                                                    _vm._s(task.title) +
                                                                                                    "\n                                    "
                                                                                                )
                                                                                            ]
                                                                                        ),
                                                                                        _vm._v(" "),
                                                                                        _c(
                                                                                            "button",
                                                                                            {
                                                                                                staticClass: "pm-toggle-row",
                                                                                                attrs: { type: "button" },
                                                                                                on: {
                                                                                                    click: function($event) {
                                                                                                        $event.preventDefault()
                                                                                                        return _vm.toggleRow(task)
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            [
                                                                                                _c(
                                                                                                    "span",
                                                                                                    {
                                                                                                        staticClass:
                                                                                                            "screen-reader-text"
                                                                                                    },
                                                                                                    [
                                                                                                        _vm._v(
                                                                                                            _vm._s(
                                                                                                                _vm.__(
                                                                                                                    "Show more details",
                                                                                                                    "pm-pro"
                                                                                                                )
                                                                                                            )
                                                                                                        )
                                                                                                    ]
                                                                                                )
                                                                                            ]
                                                                                        )
                                                                                    ]
                                                                                ),
                                                                                _vm._v(" "),
                                                                                task.due_date.date
                                                                                    ? _c(
                                                                                        "td",
                                                                                        {
                                                                                            staticClass: "col--date",
                                                                                            attrs: {
                                                                                                "data-colname": "Date between"
                                                                                            }
                                                                                        },
                                                                                        [
                                                                                            _c("span", [
                                                                                                _vm._v(_vm._s(task.due_date.date))
                                                                                            ])
                                                                                        ]
                                                                                    )
                                                                                    : _vm._e(),
                                                                                _vm._v(" "),
                                                                                !task.due_date.date
                                                                                    ? _c(
                                                                                        "td",
                                                                                        {
                                                                                            staticClass: "col--date",
                                                                                            attrs: {
                                                                                                "data-colname": "Date between"
                                                                                            }
                                                                                        },
                                                                                        [_c("span", [_vm._v("—")])]
                                                                                    )
                                                                                    : _vm._e(),
                                                                                _vm._v(" "),
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--created-at",
                                                                                        attrs: { "data-colname": "Created At" }
                                                                                    },
                                                                                    [_vm._v(_vm._s(task.created_at.date))]
                                                                                ),
                                                                                _vm._v(" "),
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--phone",
                                                                                        attrs: { "data-colname": "Created By" }
                                                                                    },
                                                                                    [
                                                                                        _vm._v(
                                                                                            _vm._s(task.creator.data.display_name)
                                                                                        )
                                                                                    ]
                                                                                )
                                                                            ]
                                                                        )
                                                                    }),
                                                                    0
                                                                )
                                                            ]
                                                        )
                                                    ])
                                                ]
                                            )
                                        })
                                    ],
                                    2
                                )
                            }),
                            0
                        )
                        : _vm._e(),
                    _vm._v(" "),
                    _vm.isEmpty(_vm.projects)
                        ? _c("div", [
                            _c("h4", [
                                _vm._v(
                                    _vm._s(_vm.__("No Data Found, Please search again!", "pm-pro"))
                                )
                            ])
                        ])
                        : _vm._e(),
                    _vm._v(" "),
                    _vm.hasSingleTask
                        ? _c(
                            "div",
                            [
                                _c("pm-single-task", {
                                    attrs: {
                                        taskId: parseInt(_vm.individualTaskId),
                                        projectId: parseInt(_vm.individualProjectId)
                                    },
                                    on: { onClickClose: _vm.closeTaskModal }
                                })
                            ],
                            1
                        )
                        : _vm._e()
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-2e930b6c", esExports)
                }
            }

            /***/ }),
        /* 296 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "wrap pm pm-front-end" }, [
                    _c("div", { attrs: { id: "pm-report" } }, [
                        _c("div", { staticClass: "pm-page-header" }, [
                            _c("div", { staticClass: "pm-page-title-container" }, [
                                _c("h1", [_vm._v(_vm._s(_vm.__("Milestone Tasks", "pm-pro")))]),
                                _vm._v(" "),
                                _vm.startDate && _vm.endDate
                                    ? _c("div", { staticClass: "pm-report-date-range" }, [
                                        _c("span", [_vm._v(_vm._s(_vm.__("Date between", "pm-pro")))]),
                                        _vm._v(" "),
                                        _c(
                                            "span",
                                            {
                                                staticClass: "pm-text-primary",
                                                attrs: { title: _vm.getFullDate(_vm.startDate) }
                                            },
                                            [_vm._v(_vm._s(_vm.shortDateFormat(_vm.startDate)))]
                                        ),
                                        _vm._v(" "),
                                        _c("span", [_vm._v(_vm._s(_vm.__("to", "pm-pro")))]),
                                        _vm._v(" "),
                                        _c(
                                            "span",
                                            {
                                                staticClass: "pm-text-primary",
                                                attrs: { title: _vm.getFullDate(_vm.endDate) }
                                            },
                                            [_vm._v(_vm._s(_vm.shortDateFormat(_vm.endDate)))]
                                        )
                                    ])
                                    : _vm._e()
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "pm-display-flex pm-filter-wrapper" }, [
                                !_vm.loadingReports
                                    ? _c(
                                        "a",
                                        {
                                            staticClass: "pm--btn pm--btn-default pm-mr-10",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    _vm.show = true
                                                }
                                            }
                                        },
                                        [
                                            _c("i", {
                                                staticClass: "flaticon-filter-tool-black-shape mr-5"
                                            }),
                                            _vm._v(_vm._s(_vm.__("Filter", "pm-pro")))
                                        ]
                                    )
                                    : _vm._e(),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-has-dropdown pm-report-export-block" }, [
                                    _c(
                                        "a",
                                        {
                                            staticClass: "pm--btn pm--btn-default pm-dropdown-trigger",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.dropdownTrigger($event)
                                                }
                                            }
                                        },
                                        [
                                            _c("i", { staticClass: "flaticon-export mr-5" }),
                                            _vm._v(
                                                "\n                        " +
                                                _vm._s(_vm.__("Export", "pm-pro")) +
                                                "\n                        "
                                            ),
                                            _c("i", {
                                                staticClass:
                                                    "flaticon-arrow-down-sign-to-navigate pm-mr-0 pm-ml-10"
                                            })
                                        ]
                                    ),
                                    _vm._v(" "),
                                    _c("ul", { class: _vm.dropdownToggleClass() }, [
                                        _c("li", [
                                            _c(
                                                "a",
                                                {
                                                    attrs: { href: "#" },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.exportCSV()
                                                        }
                                                    }
                                                },
                                                [
                                                    _c("span", {
                                                        staticClass:
                                                            "flaticon-data-export-symbol-of-a-window-with-an-arrow"
                                                    }),
                                                    _vm._v(" "),
                                                    _c("span", [
                                                        _vm._v(_vm._s(_vm.__("Export to CSV", "pm-pro")))
                                                    ])
                                                ]
                                            )
                                        ]),
                                        _vm._v(" "),
                                        !_vm.loadingReports
                                            ? _c("li", [
                                                _c(
                                                    "a",
                                                    {
                                                        attrs: { href: "#" },
                                                        on: {
                                                            click: function($event) {
                                                                $event.preventDefault()
                                                                return _vm.milestonePDF()
                                                            }
                                                        }
                                                    },
                                                    [
                                                        _c("span", { staticClass: "flaticon-pdf" }),
                                                        _vm._v(" "),
                                                        _c("span", [
                                                            _vm._v(_vm._s(_vm.__("Export to PDF", "pm-pro")))
                                                        ])
                                                    ]
                                                )
                                            ])
                                            : _vm._e()
                                    ])
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-page-body" }, [
                            _c("div", { staticClass: "pm--row" }, [
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-project-panel"
                                        },
                                        [
                                            _vm._m(0),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.project_title))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Project", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-worker-panel"
                                        },
                                        [
                                            _vm._m(1),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.milestone.title))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Milestone", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-result-panel"
                                        },
                                        [
                                            _vm._m(2),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.totalResule))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Total Tasks", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-report-page" }, [
                            _c(
                                "div",
                                {},
                                [
                                    _c(
                                        "div",
                                        { attrs: { id: "report" } },
                                        [
                                            !_vm.loadingReports
                                                ? _c("result-view", {
                                                    attrs: { projects: _vm.milestone_tasks }
                                                })
                                                : _vm._e(),
                                            _vm._v(" "),
                                            _vm.loadingReports
                                                ? _c("div", { staticClass: "pm-data-load-before" }, [
                                                    _vm._m(3)
                                                ])
                                                : _vm._e()
                                        ],
                                        1
                                    ),
                                    _vm._v(" "),
                                    _c("pm-pagination", {
                                        attrs: {
                                            total_pages: _vm.total_pages,
                                            current_page_number: _vm.current_page_number,
                                            component_name: "milestone_task_pagination"
                                        }
                                    }),
                                    _vm._v(" "),
                                    _c(
                                        "modal",
                                        {
                                            attrs: { "is-active": _vm.show, width: 400 },
                                            on: {
                                                close: function($event) {
                                                    _vm.show = false
                                                }
                                            }
                                        },
                                        [
                                            _c("div", { staticClass: "pm-filter-report-modal" }, [
                                                _c(
                                                    "div",
                                                    {
                                                        staticClass: "pm-filter-modal-header",
                                                        attrs: { slot: "header" },
                                                        slot: "header"
                                                    },
                                                    [
                                                        _c("h3", { staticClass: "pm-mb-0" }, [
                                                            _vm._v(
                                                                _vm._s(_vm.__("Milestone Task Filter", "pm-pro"))
                                                            )
                                                        ])
                                                    ]
                                                ),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "pm-filter-modal-body" }, [
                                                    _c(
                                                        "form",
                                                        {
                                                            on: {
                                                                submit: function($event) {
                                                                    $event.preventDefault()
                                                                    return _vm.filterProject()
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _c("div", [
                                                                _c(
                                                                    "div",
                                                                    {
                                                                        staticClass: "subtask-date new-task-calendar-wrap"
                                                                    },
                                                                    [
                                                                        _c("h3", [
                                                                            _vm._v(_vm._s(_vm.__("Select Date", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("div", { staticClass: "pm--row" }, [
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-col-sm-6 pm-col-xs-6" },
                                                                                [
                                                                                    _c("pm-date-picker", {
                                                                                        staticClass: "pm-datepickter-from",
                                                                                        attrs: {
                                                                                            dependency: "pm-datepickter-to",
                                                                                            placeholder: _vm.__(
                                                                                                "Select start date",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        },
                                                                                        model: {
                                                                                            value: _vm.startDate,
                                                                                            callback: function($$v) {
                                                                                                _vm.startDate = $$v
                                                                                            },
                                                                                            expression: "startDate"
                                                                                        }
                                                                                    })
                                                                                ],
                                                                                1
                                                                            ),
                                                                            _vm._v(" "),
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-col-sm-6 pm-col-xs-6" },
                                                                                [
                                                                                    _c("pm-date-picker", {
                                                                                        staticClass: "pm-datepickter-to",
                                                                                        attrs: {
                                                                                            dependency: "pm-datepickter-from",
                                                                                            placeholder: _vm.__(
                                                                                                "Select due date",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        },
                                                                                        model: {
                                                                                            value: _vm.endDate,
                                                                                            callback: function($$v) {
                                                                                                _vm.endDate = $$v
                                                                                            },
                                                                                            expression: "endDate"
                                                                                        }
                                                                                    })
                                                                                ],
                                                                                1
                                                                            )
                                                                        ])
                                                                    ]
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "div",
                                                                    { staticClass: "filter-input" },
                                                                    [
                                                                        _c("label", [
                                                                            _vm._v(
                                                                                _vm._s(_vm.__("Select Project", "pm-pro"))
                                                                            )
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("multiselect", {
                                                                            attrs: {
                                                                                options: _vm.allprojects,
                                                                                multiple: false,
                                                                                searchable: true,
                                                                                "allow-empty": true,
                                                                                placeholder: _vm.select_project_text,
                                                                                label: "title",
                                                                                "track-by": "id"
                                                                            },
                                                                            model: {
                                                                                value: _vm.projects,
                                                                                callback: function($$v) {
                                                                                    _vm.projects = $$v
                                                                                },
                                                                                expression: "projects"
                                                                            }
                                                                        })
                                                                    ],
                                                                    1
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "div",
                                                                    { staticClass: "filter-input" },
                                                                    [
                                                                        _c("multiselect", {
                                                                            attrs: {
                                                                                options: _vm.milestones,
                                                                                disabled: _vm.is_disable,
                                                                                multiple: false,
                                                                                searchable: true,
                                                                                "allow-empty": true,
                                                                                placeholder: _vm.select_milestone_text,
                                                                                label: "title",
                                                                                "track-by": "id"
                                                                            },
                                                                            model: {
                                                                                value: _vm.select_milestone,
                                                                                callback: function($$v) {
                                                                                    _vm.select_milestone = $$v
                                                                                },
                                                                                expression: "select_milestone"
                                                                            }
                                                                        })
                                                                    ],
                                                                    1
                                                                )
                                                            ]),
                                                            _vm._v(" "),
                                                            _c("div", { staticClass: "pm-modal-form-buttons" }, [
                                                                _c("input", {
                                                                    staticClass: "button button-primary pm-doc-btn",
                                                                    attrs: { slot: "footer", type: "submit" },
                                                                    domProps: { value: _vm.run_report },
                                                                    on: {
                                                                        click: function($event) {
                                                                            $event.preventDefault()
                                                                            return _vm.filterProject()
                                                                        }
                                                                    },
                                                                    slot: "footer"
                                                                })
                                                            ])
                                                        ]
                                                    )
                                                ])
                                            ])
                                        ]
                                    )
                                ],
                                1
                            )
                        ])
                    ])
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-resume" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-people" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-test" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "loadmoreanimation" }, [
                        _c("div", { staticClass: "load-spinner" }, [
                            _c("div", { staticClass: "rect1" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect2" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect3" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect4" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect5" })
                        ])
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-68db03c3", esExports)
                }
            }

            /***/ }),
        /* 297 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_tasks_vue__ = __webpack_require__(103);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6cd849e9_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_tasks_vue__ = __webpack_require__(298);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_tasks_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6cd849e9_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_tasks_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/project-tasks.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-6cd849e9", Component.options)
                } else {
                    hotAPI.reload("data-v-6cd849e9", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 298 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "wrap pm pm-front-end" }, [
                    _c("div", { attrs: { id: "pm-report" } }, [
                        _c(
                            "h1",
                            { staticClass: "pm-no-print report-page-title" },
                            [
                                _vm._v(
                                    "\n            " +
                                    _vm._s(_vm.__("Project Report", "pm-pro")) +
                                    "\n            "
                                ),
                                _c(
                                    "router-link",
                                    {
                                        staticClass: "page-title-action",
                                        attrs: { to: { name: "reports_component" } }
                                    },
                                    [_vm._v(_vm._s(_vm.__("Back", "pm-pro")))]
                                )
                            ],
                            1
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-report-page" }, [
                            _c(
                                "div",
                                { staticClass: "pm-report-body" },
                                [
                                    _c("div", { staticClass: "pm-report-filter" }, [
                                        _c("div", { staticClass: "report-title" }, [
                                            _vm._v(
                                                "\n                        " +
                                                _vm._s(_vm.__("All Task by Project", "pm-pro")) +
                                                "\n                    "
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c(
                                            "div",
                                            { staticClass: " pm-no-print pm-report-btn-pc" },
                                            [
                                                _c("router-link", {
                                                    staticClass: "pm-right dashicons dashicons-no-alt pm-close",
                                                    attrs: { to: { name: "reports_component" } }
                                                }),
                                                _vm._v(" "),
                                                _vm._m(0)
                                            ],
                                            1
                                        ),
                                        _vm._v(" "),
                                        _c("div", { staticClass: " pm-no-print pm-report-btn-group" }, [
                                            _c(
                                                "a",
                                                {
                                                    staticClass:
                                                        " pm-right button-primary dashicons-before dashicons-media-spreadsheet",
                                                    attrs: { href: "#" },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.exportCSV()
                                                        }
                                                    }
                                                },
                                                [_vm._v(_vm._s(_vm.__("Export to CSV", "pm-pro")))]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                                "a",
                                                {
                                                    staticClass:
                                                        " pm-right button-primary dashicons-before dashicons-search",
                                                    attrs: { href: "#" },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            _vm.show = true
                                                        }
                                                    }
                                                },
                                                [_vm._v(_vm._s(_vm.__("Filter Report", "pm-pro")))]
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "clearfix" })
                                    ]),
                                    _vm._v(" "),
                                    _c(
                                        "div",
                                        { attrs: { id: "report" } },
                                        [
                                            _c("div", { staticClass: "cpl-data-head" }, [
                                                _c("div", { staticClass: "pm-col-3 pm-border-right first" }, [
                                                    _c("b", [_vm._v(_vm._s(_vm.__("Project", "pm-pro")))]),
                                                    _vm._v(" "),
                                                    _c("br"),
                                                    _vm._v(_vm._s(_vm.project_title))
                                                ]),
                                                _vm._v(" "),
                                                _c(
                                                    "div",
                                                    { staticClass: "pm-col-3 pm-border-right second" },
                                                    [
                                                        _c("b", [
                                                            _vm._v(_vm._s(_vm.__("Co Worker : ", "pm-pro")))
                                                        ]),
                                                        _c("br"),
                                                        _vm._v(" " + _vm._s(_vm.unsername) + " ")
                                                    ]
                                                ),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "pm-col-3 pm-border-right third" }, [
                                                    _c("b", [_vm._v(_vm._s(_vm.__("Total Result", "pm-pro")))]),
                                                    _c("br"),
                                                    _vm._v(_vm._s(_vm.totalResule))
                                                ]),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "pm-col-3 fourth" }, [
                                                    _c("h4", [_vm._v(" " + _vm._s(_vm.task_status_des) + " ")])
                                                ]),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "clearfix" })
                                            ]),
                                            _vm._v(" "),
                                            _c("result-view", { attrs: { projects: _vm.project_tasks } })
                                        ],
                                        1
                                    ),
                                    _vm._v(" "),
                                    _c("pm-pagination", {
                                        attrs: {
                                            total_pages: _vm.total_pages,
                                            current_page_number: _vm.current_page_number,
                                            component_name: "project_task_pagination"
                                        }
                                    }),
                                    _vm._v(" "),
                                    _c(
                                        "modal",
                                        {
                                            attrs: { "is-active": _vm.show, width: 400 },
                                            on: {
                                                close: function($event) {
                                                    _vm.show = false
                                                }
                                            }
                                        },
                                        [
                                            _c("h3", { attrs: { slot: "header" }, slot: "header" }, [
                                                _vm._v(
                                                    _vm._s(_vm.__("Report for", "pm-pro")) +
                                                    " " +
                                                    _vm._s(_vm.__("Project Task", "pm-pro")) +
                                                    " "
                                                )
                                            ]),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c(
                                                    "div",
                                                    { staticClass: "filter-input" },
                                                    [
                                                        _c("multiselect", {
                                                            attrs: {
                                                                options: _vm.allprojects,
                                                                multiple: false,
                                                                searchable: true,
                                                                "allow-empty": true,
                                                                placeholder: _vm.select_project_text,
                                                                label: "title",
                                                                "track-by": "id"
                                                            },
                                                            model: {
                                                                value: _vm.projects,
                                                                callback: function($$v) {
                                                                    _vm.projects = $$v
                                                                },
                                                                expression: "projects"
                                                            }
                                                        })
                                                    ],
                                                    1
                                                ),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "task-type" }, [
                                                    _c("p", [
                                                        _c("label", { attrs: { for: "all-tasks" } }, [
                                                            _c("input", {
                                                                directives: [
                                                                    {
                                                                        name: "model",
                                                                        rawName: "v-model",
                                                                        value: _vm.task_status,
                                                                        expression: "task_status"
                                                                    }
                                                                ],
                                                                attrs: {
                                                                    type: "radio",
                                                                    id: "all-tasks",
                                                                    value: "-1"
                                                                },
                                                                domProps: { checked: _vm._q(_vm.task_status, "-1") },
                                                                on: {
                                                                    change: function($event) {
                                                                        _vm.task_status = "-1"
                                                                    }
                                                                }
                                                            }),
                                                            _vm._v(
                                                                "\n                                            " +
                                                                _vm._s(_vm.__("All Task", "pm-pro")) +
                                                                "\n                                    "
                                                            )
                                                        ])
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("p", [
                                                        _c("label", { attrs: { for: "complete-tasks" } }, [
                                                            _c("input", {
                                                                directives: [
                                                                    {
                                                                        name: "model",
                                                                        rawName: "v-model",
                                                                        value: _vm.task_status,
                                                                        expression: "task_status"
                                                                    }
                                                                ],
                                                                attrs: {
                                                                    type: "radio",
                                                                    id: "complete-tasks",
                                                                    value: "1"
                                                                },
                                                                domProps: { checked: _vm._q(_vm.task_status, "1") },
                                                                on: {
                                                                    change: function($event) {
                                                                        _vm.task_status = "1"
                                                                    }
                                                                }
                                                            }),
                                                            _vm._v(
                                                                "\n                                        " +
                                                                _vm._s(_vm.__("All Complete Task", "pm-pro")) +
                                                                "\n                                    "
                                                            )
                                                        ])
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("p", [
                                                        _c("label", { attrs: { for: "incomplete-tasks" } }, [
                                                            _c("input", {
                                                                directives: [
                                                                    {
                                                                        name: "model",
                                                                        rawName: "v-model",
                                                                        value: _vm.task_status,
                                                                        expression: "task_status"
                                                                    }
                                                                ],
                                                                attrs: {
                                                                    type: "radio",
                                                                    id: "incomplete-tasks",
                                                                    value: "0"
                                                                },
                                                                domProps: { checked: _vm._q(_vm.task_status, "0") },
                                                                on: {
                                                                    change: function($event) {
                                                                        _vm.task_status = "0"
                                                                    }
                                                                }
                                                            }),
                                                            _vm._v(
                                                                "\n                                        " +
                                                                _vm._s(_vm.__("All Incomplete Task", "pm-pro")) +
                                                                "\n                                    "
                                                            )
                                                        ])
                                                    ])
                                                ])
                                            ]),
                                            _vm._v(" "),
                                            _c("input", {
                                                staticClass: "button button-primary pm-doc-btn",
                                                attrs: { slot: "footer", type: "submit" },
                                                domProps: { value: _vm.run_report },
                                                on: {
                                                    click: function($event) {
                                                        return _vm.filterProject()
                                                    }
                                                },
                                                slot: "footer"
                                            })
                                        ]
                                    )
                                ],
                                1
                            )
                        ])
                    ])
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c(
                        "a",
                        {
                            staticClass: "pm-right  pm-close",
                            attrs: { href: "#", onclick: "window.print()" }
                        },
                        [
                            _c("img", {
                                attrs: { src: __webpack_require__(299), height: "16" }
                            })
                        ]
                    )
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-6cd849e9", esExports)
                }
            }

            /***/ }),
        /* 299 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = __webpack_require__.p + "../images/print.svg?e8d0c996c661c498d462e40c28adfbfc";

            /***/ }),
        /* 300 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_user_activity_vue__ = __webpack_require__(104);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_34733160_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_user_activity_vue__ = __webpack_require__(305);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_user_activity_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_34733160_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_user_activity_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/user-activity.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-34733160", Component.options)
                } else {
                    hotAPI.reload("data-v-34733160", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 301 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_user_activity_results_vue__ = __webpack_require__(105);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_50b367ee_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_user_activity_results_vue__ = __webpack_require__(304);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(302)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_user_activity_results_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_50b367ee_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_user_activity_results_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/user-activity-results.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-50b367ee", Component.options)
                } else {
                    hotAPI.reload("data-v-50b367ee", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 302 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(303);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("aa7c09a6", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-50b367ee\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./user-activity-results.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-50b367ee\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./user-activity-results.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 303 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.report-content .pm-table thead tr {\n  box-shadow: none;\n}\n.pm-task-title {\n  font-size: 15px;\n  padding: 0 !important;\n  margin-top: 20px !important;\n  display: flex;\n  font-size: 13px;\n}\n.pm-task-title a {\n  color: #000;\n}\n.pm-task-title .project-title-wrap {\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n}\n.pm-task-title .project-title-wrap .title {\n  background: #75cbef;\n  padding: 3px 13px;\n  color: #fff;\n  text-shadow: 0px 0px 1px #929292;\n}\n.pm-task-title .project-title-wrap .link {\n  background: #e5e5e5;\n  padding: 2px 13px;\n  border: 1px solid #ddd;\n  border-left: none;\n}\n.pm-task-title .list-title-wrap {\n  display: flex;\n  align-items: center;\n}\n.pm-task-title .list-title-wrap .title {\n  background: #8f9aec;\n  padding: 3px 12px;\n  color: #fff;\n  text-shadow: 0px 0px 1px #6d6d6d;\n}\n.pm-task-title .list-title-wrap .link {\n  background: #e5e5e5;\n  padding: 2px 13px;\n  border: 1px solid #ddd;\n  border-left: none;\n}\n", ""]);

// exports


            /***/ }),
        /* 304 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "report-content" }, [
                    _c("div", { staticClass: "pm-activities pm-activities-container" }, [
                        _vm.activities.length
                            ? _c(
                                "ul",
                                { staticClass: "pm-activity-list" },
                                _vm._l(_vm.activities, function(group) {
                                    return _c("li", { key: group.id, staticClass: "pm-row" }, [
                                        _c(
                                            "div",
                                            { staticClass: "pm-activity-date pm-col-1 pm-sm-col-12" },
                                            [
                                                _c("span", [
                                                    _vm._v(_vm._s(_vm.actiivtyGroupDate(group.date, "DD")))
                                                ]),
                                                _vm._v(" "),
                                                _c("br"),
                                                _vm._v(
                                                    "\n                    " +
                                                    _vm._s(_vm.actiivtyGroupDate(group.date, "MMMM")) +
                                                    "\n\n                "
                                                )
                                            ]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                            "div",
                                            {
                                                staticClass:
                                                    "pm-activity-body pm-col-11 pm-sm-col-12 pm-right pm-last-col"
                                            },
                                            [
                                                _c(
                                                    "ul",
                                                    _vm._l(group.activities, function(activity) {
                                                        return _c("li", { key: activity.id }, [
                                                            _c(
                                                                "div",
                                                                { staticClass: "pm-col-8 pm-sm-col-12" },
                                                                [
                                                                    _c("activity-parser", {
                                                                        attrs: { activity: activity, page: "project" }
                                                                    })
                                                                ],
                                                                1
                                                            ),
                                                            _vm._v(" "),
                                                            _c(
                                                                "div",
                                                                { staticClass: "date pm-col-4 pm-sm-col-12" },
                                                                [
                                                                    _c(
                                                                        "time",
                                                                        {
                                                                            attrs: {
                                                                                datetime: _vm.pmDateISO8601Format(
                                                                                    activity.committed_at.date,
                                                                                    activity.committed_at.time
                                                                                ),
                                                                                title: _vm.pmDateISO8601Format(
                                                                                    activity.committed_at.date,
                                                                                    activity.committed_at.time
                                                                                )
                                                                            }
                                                                        },
                                                                        [
                                                                            _c("i", [
                                                                                _vm._v(
                                                                                    _vm._s(
                                                                                        _vm.taskDateFormat(
                                                                                            activity.committed_at.date
                                                                                        )
                                                                                    ) +
                                                                                    ", " +
                                                                                    _vm._s(
                                                                                        _vm.dateTimeFormat(
                                                                                            activity.committed_at.datetime
                                                                                        )
                                                                                    )
                                                                                )
                                                                            ])
                                                                        ]
                                                                    )
                                                                ]
                                                            ),
                                                            _vm._v(" "),
                                                            _c("div", { staticClass: "clear" })
                                                        ])
                                                    }),
                                                    0
                                                )
                                            ]
                                        )
                                    ])
                                }),
                                0
                            )
                            : _vm._e()
                    ]),
                    _vm._v(" "),
                    !_vm.activities.length
                        ? _c("div", [
                            _c("h4", [
                                _vm._v(
                                    _vm._s(_vm.__("No Data Found, Please search again!", "pm-pro"))
                                )
                            ])
                        ])
                        : _vm._e()
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-50b367ee", esExports)
                }
            }

            /***/ }),
        /* 305 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "wrap pm pm-front-end" }, [
                    _c("div", { attrs: { id: "pm-report" } }, [
                        _c("div", { staticClass: "pm-page-header" }, [
                            _c("div", { staticClass: "pm-page-title-container" }, [
                                _c("h1", [_vm._v(_vm._s(_vm.__("User Activities", "pm-pro")))]),
                                _vm._v(" "),
                                _vm.startDate && _vm.endDate
                                    ? _c("div", { staticClass: "pm-report-date-range" }, [
                                        _c("span", [_vm._v(_vm._s(_vm.__("Date between", "pm-pro")))]),
                                        _vm._v(" "),
                                        _c(
                                            "span",
                                            {
                                                staticClass: "pm-text-primary",
                                                attrs: { title: _vm.getFullDate(_vm.startDate) }
                                            },
                                            [_vm._v(_vm._s(_vm.shortDateFormat(_vm.startDate)))]
                                        ),
                                        _vm._v(" "),
                                        _c("span", [_vm._v(_vm._s(_vm.__("to", "pm-pro")))]),
                                        _vm._v(" "),
                                        _c(
                                            "span",
                                            {
                                                staticClass: "pm-text-primary",
                                                attrs: { title: _vm.getFullDate(_vm.endDate) }
                                            },
                                            [_vm._v(_vm._s(_vm.shortDateFormat(_vm.endDate)))]
                                        )
                                    ])
                                    : _vm._e()
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "pm-display-flex pm-filter-wrapper" }, [
                                _vm.fetchReport
                                    ? _c(
                                        "a",
                                        {
                                            staticClass: "pm--btn pm--btn-default pm-mr-10",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    _vm.show = true
                                                }
                                            }
                                        },
                                        [
                                            _c("i", {
                                                staticClass: "flaticon-filter-tool-black-shape mr-5"
                                            }),
                                            _vm._v(_vm._s(_vm.__("Filter", "pm-pro")))
                                        ]
                                    )
                                    : _vm._e()
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-page-body" }, [
                            _c("div", { staticClass: "pm--row" }, [
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-project-panel"
                                        },
                                        [
                                            _vm._m(0),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.project_title))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Project", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-worker-panel"
                                        },
                                        [
                                            _vm._m(1),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.unsername))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Co Worker", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-result-panel"
                                        },
                                        [
                                            _vm._m(2),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.totalResult))]),
                                                _vm._v(" "),
                                                _c("span", [
                                                    _vm._v(_vm._s(_vm.__("Total Activities", "pm-pro")))
                                                ])
                                            ])
                                        ]
                                    )
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-report-page" }, [
                            _c(
                                "div",
                                {},
                                [
                                    _c(
                                        "div",
                                        { attrs: { id: "report" } },
                                        [
                                            _vm.fetchReport
                                                ? _c("user-activity-results", {
                                                    attrs: { activities: _vm.user_tasks }
                                                })
                                                : _vm._e(),
                                            _vm._v(" "),
                                            !_vm.fetchReport
                                                ? _c("div", { staticClass: "pm-data-load-before" }, [
                                                    _vm._m(3)
                                                ])
                                                : _vm._e()
                                        ],
                                        1
                                    ),
                                    _vm._v(" "),
                                    _c("pm-pagination", {
                                        attrs: {
                                            total_pages: _vm.total_pages,
                                            current_page_number: _vm.current_page_number,
                                            component_name: "user_activity_pagination"
                                        }
                                    }),
                                    _vm._v(" "),
                                    _c(
                                        "modal",
                                        {
                                            attrs: { "is-active": _vm.show, width: 400 },
                                            on: {
                                                close: function($event) {
                                                    _vm.show = false
                                                }
                                            }
                                        },
                                        [
                                            _c("div", { staticClass: "pm-filter-report-modal" }, [
                                                _c(
                                                    "div",
                                                    {
                                                        staticClass: "pm-filter-modal-header",
                                                        attrs: { slot: "header" },
                                                        slot: "header"
                                                    },
                                                    [
                                                        _c("h3", { staticClass: "pm-mb-0" }, [
                                                            _vm._v(
                                                                _vm._s(_vm.__("User Activity Task Filter", "pm-pro"))
                                                            )
                                                        ])
                                                    ]
                                                ),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "pm-filter-modal-body" }, [
                                                    _c(
                                                        "form",
                                                        {
                                                            on: {
                                                                submit: function($event) {
                                                                    $event.preventDefault()
                                                                    return _vm.filterProject()
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _c("div", [
                                                                _c(
                                                                    "div",
                                                                    {
                                                                        staticClass: "subtask-date new-task-calendar-wrap"
                                                                    },
                                                                    [
                                                                        _c("h3", [
                                                                            _vm._v(_vm._s(_vm.__("Select Date", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("div", { staticClass: "pm--row" }, [
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-col-sm-6 pm-col-xs-6" },
                                                                                [
                                                                                    _c("pm-date-picker", {
                                                                                        staticClass: "pm-datepickter-from",
                                                                                        attrs: {
                                                                                            dependency: "pm-datepickter-to",
                                                                                            placeholder: _vm.__(
                                                                                                "Select start date",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        },
                                                                                        model: {
                                                                                            value: _vm.startDate,
                                                                                            callback: function($$v) {
                                                                                                _vm.startDate = $$v
                                                                                            },
                                                                                            expression: "startDate"
                                                                                        }
                                                                                    })
                                                                                ],
                                                                                1
                                                                            ),
                                                                            _vm._v(" "),
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-col-sm-6 pm-col-xs-6" },
                                                                                [
                                                                                    _c("pm-date-picker", {
                                                                                        staticClass: "pm-datepickter-to",
                                                                                        attrs: {
                                                                                            dependency: "pm-datepickter-from",
                                                                                            placeholder: _vm.__(
                                                                                                "Select due date",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        },
                                                                                        model: {
                                                                                            value: _vm.endDate,
                                                                                            callback: function($$v) {
                                                                                                _vm.endDate = $$v
                                                                                            },
                                                                                            expression: "endDate"
                                                                                        }
                                                                                    })
                                                                                ],
                                                                                1
                                                                            )
                                                                        ])
                                                                    ]
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "div",
                                                                    { staticClass: "filter-input" },
                                                                    [
                                                                        _c("label", [
                                                                            _vm._v(
                                                                                _vm._s(_vm.__("Select Project", "pm-pro"))
                                                                            )
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("multiselect", {
                                                                            attrs: {
                                                                                options: _vm.allprojects,
                                                                                multiple: false,
                                                                                searchable: true,
                                                                                "allow-empty": true,
                                                                                placeholder: _vm.select_project_text,
                                                                                label: "title",
                                                                                "track-by": "id"
                                                                            },
                                                                            model: {
                                                                                value: _vm.projects,
                                                                                callback: function($$v) {
                                                                                    _vm.projects = $$v
                                                                                },
                                                                                expression: "projects"
                                                                            }
                                                                        })
                                                                    ],
                                                                    1
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "div",
                                                                    { staticClass: "filter-input" },
                                                                    [
                                                                        _c("label", [
                                                                            _vm._v(_vm._s(_vm.__("Select User", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("multiselect", {
                                                                            attrs: {
                                                                                options: _vm.assigned_users,
                                                                                multiple: false,
                                                                                searchable: true,
                                                                                "allow-empty": true,
                                                                                placeholder: _vm.select_user_text,
                                                                                label: "display_name",
                                                                                "track-by": "id"
                                                                            },
                                                                            model: {
                                                                                value: _vm.assign_user,
                                                                                callback: function($$v) {
                                                                                    _vm.assign_user = $$v
                                                                                },
                                                                                expression: "assign_user"
                                                                            }
                                                                        })
                                                                    ],
                                                                    1
                                                                )
                                                            ]),
                                                            _vm._v(" "),
                                                            _c("div", { staticClass: "pm-modal-form-buttons" }, [
                                                                _c("input", {
                                                                    staticClass: "button button-primary pm-doc-btn",
                                                                    attrs: { slot: "footer", type: "submit" },
                                                                    domProps: { value: _vm.run_report },
                                                                    slot: "footer"
                                                                })
                                                            ])
                                                        ]
                                                    )
                                                ])
                                            ])
                                        ]
                                    )
                                ],
                                1
                            )
                        ])
                    ])
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-resume" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-people" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-test" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "loadmoreanimation" }, [
                        _c("div", { staticClass: "load-spinner" }, [
                            _c("div", { staticClass: "rect1" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect2" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect3" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect4" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect5" })
                        ])
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-34733160", esExports)
                }
            }

            /***/ }),
        /* 306 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_user_task_vue__ = __webpack_require__(106);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2c286554_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_user_task_vue__ = __webpack_require__(309);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_user_task_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2c286554_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_user_task_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/user-task.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-2c286554", Component.options)
                } else {
                    hotAPI.reload("data-v-2c286554", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 307 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_task_result_view_vue__ = __webpack_require__(107);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6ba2924e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_task_result_view_vue__ = __webpack_require__(308);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_task_result_view_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6ba2924e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_task_result_view_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/task-result-view.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-6ba2924e", Component.options)
                } else {
                    hotAPI.reload("data-v-6ba2924e", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 308 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _vm.loading
                    ? _c("div", { staticClass: "report-content" }, [
                        _vm.projects.length
                            ? _c("div", [
                                !_vm.taskView
                                    ? _c(
                                        "div",
                                        { staticClass: "pm-report-details" },
                                        _vm._l(_vm.projects, function(project) {
                                            return _vm.hasTasksInProject(project)
                                                ? _c(
                                                    "div",
                                                    {
                                                        key: project.id,
                                                        staticClass: "pm-report-project"
                                                    },
                                                    [
                                                        _c(
                                                            "h2",
                                                            [
                                                                _c(
                                                                    "router-link",
                                                                    {
                                                                        attrs: {
                                                                            to: {
                                                                                name: "pm_overview",
                                                                                params: { project_id: project.id }
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _vm._v(
                                                                            "\n                        " +
                                                                            _vm._s(project.title) +
                                                                            "\n                    "
                                                                        )
                                                                    ]
                                                                )
                                                            ],
                                                            1
                                                        ),
                                                        _vm._v(" "),
                                                        _c(
                                                            "div",
                                                            { staticClass: "task-list-parent" },
                                                            [
                                                                _vm._l(project.task_lists.data, function(
                                                                    taskList
                                                                ) {
                                                                    return _vm.hasTasksInList(taskList)
                                                                        ? _c(
                                                                            "div",
                                                                            {
                                                                                key: taskList.id,
                                                                                staticClass: "task-list"
                                                                            },
                                                                            [
                                                                                _c(
                                                                                    "h4",
                                                                                    {
                                                                                        staticClass: "pm-project-list"
                                                                                    },
                                                                                    [
                                                                                        _c(
                                                                                            "router-link",
                                                                                            {
                                                                                                attrs: {
                                                                                                    to: {
                                                                                                        name: "single_list",
                                                                                                        params: {
                                                                                                            project_id:
                                                                                                            project.id,
                                                                                                            list_id: taskList.id
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            [
                                                                                                _c("i", {
                                                                                                    staticClass:
                                                                                                        "dashicons dashicons-editor-ul"
                                                                                                }),
                                                                                                _vm._v(
                                                                                                    "    " +
                                                                                                    _vm._s(taskList.title) +
                                                                                                    "\n                            "
                                                                                                )
                                                                                            ]
                                                                                        )
                                                                                    ],
                                                                                    1
                                                                                ),
                                                                                _vm._v(" "),
                                                                                _c(
                                                                                    "table",
                                                                                    {
                                                                                        staticClass:
                                                                                            "wp-list-table widefat fixed striped posts",
                                                                                        attrs: {
                                                                                            border: "0",
                                                                                            align: "center"
                                                                                        }
                                                                                    },
                                                                                    [
                                                                                        _c("thead", [
                                                                                            _c("tr", [
                                                                                                _c("th", [
                                                                                                    _vm._v(
                                                                                                        _vm._s(
                                                                                                            _vm.__(
                                                                                                                "Tasks",
                                                                                                                "pm-pro"
                                                                                                            )
                                                                                                        )
                                                                                                    )
                                                                                                ]),
                                                                                                _vm._v(" "),
                                                                                                _c(
                                                                                                    "th",
                                                                                                    {
                                                                                                        attrs: { width: "200" }
                                                                                                    },
                                                                                                    [
                                                                                                        _vm._v(
                                                                                                            _vm._s(
                                                                                                                _vm.__(
                                                                                                                    "Date",
                                                                                                                    "pm-pro"
                                                                                                                )
                                                                                                            )
                                                                                                        )
                                                                                                    ]
                                                                                                ),
                                                                                                _vm._v(" "),
                                                                                                _vm.getUserId
                                                                                                    ? _c(
                                                                                                        "th",
                                                                                                        {
                                                                                                            attrs: {
                                                                                                                width: "100"
                                                                                                            }
                                                                                                        },
                                                                                                        [
                                                                                                            _vm._v(
                                                                                                                _vm._s(
                                                                                                                    _vm.__(
                                                                                                                        "Estimation",
                                                                                                                        "pm-pro"
                                                                                                                    )
                                                                                                                )
                                                                                                            )
                                                                                                        ]
                                                                                                    )
                                                                                                    : _vm._e(),
                                                                                                _vm._v(" "),
                                                                                                _c(
                                                                                                    "th",
                                                                                                    {
                                                                                                        attrs: { width: "130" }
                                                                                                    },
                                                                                                    [
                                                                                                        _vm._v(
                                                                                                            " " +
                                                                                                            _vm._s(
                                                                                                                _vm.__(
                                                                                                                    "Completed Date",
                                                                                                                    "pm-pro"
                                                                                                                )
                                                                                                            )
                                                                                                        )
                                                                                                    ]
                                                                                                ),
                                                                                                _vm._v(" "),
                                                                                                _c(
                                                                                                    "th",
                                                                                                    {
                                                                                                        attrs: { width: "120" }
                                                                                                    },
                                                                                                    [
                                                                                                        _vm._v(
                                                                                                            " " +
                                                                                                            _vm._s(
                                                                                                                _vm.__(
                                                                                                                    "Completed By",
                                                                                                                    "pm-pro"
                                                                                                                )
                                                                                                            )
                                                                                                        )
                                                                                                    ]
                                                                                                ),
                                                                                                _vm._v(" "),
                                                                                                _c(
                                                                                                    "th",
                                                                                                    {
                                                                                                        attrs: { width: "100" }
                                                                                                    },
                                                                                                    [
                                                                                                        _vm._v(
                                                                                                            " " +
                                                                                                            _vm._s(
                                                                                                                _vm.__(
                                                                                                                    "Status",
                                                                                                                    "pm-pro"
                                                                                                                )
                                                                                                            )
                                                                                                        )
                                                                                                    ]
                                                                                                )
                                                                                            ])
                                                                                        ]),
                                                                                        _vm._v(" "),
                                                                                        _c(
                                                                                            "tbody",
                                                                                            _vm._l(
                                                                                                taskList.tasks.data,
                                                                                                function(task) {
                                                                                                    return _c(
                                                                                                        "tr",
                                                                                                        { key: task.id },
                                                                                                        [
                                                                                                            _c(
                                                                                                                "td",
                                                                                                                [
                                                                                                                    _c(
                                                                                                                        "router-link",
                                                                                                                        {
                                                                                                                            attrs: {
                                                                                                                                to: {
                                                                                                                                    name:
                                                                                                                                        "single_task",
                                                                                                                                    params: {
                                                                                                                                        project_id:
                                                                                                                                        task.project_id,
                                                                                                                                        list_id: 1,
                                                                                                                                        task_id:
                                                                                                                                        task.id
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        [
                                                                                                                            _vm._v(
                                                                                                                                _vm._s(
                                                                                                                                    task.title
                                                                                                                                )
                                                                                                                            )
                                                                                                                        ]
                                                                                                                    )
                                                                                                                ],
                                                                                                                1
                                                                                                            ),
                                                                                                            _vm._v(" "),
                                                                                                            _c(
                                                                                                                "td",
                                                                                                                {
                                                                                                                    attrs: {
                                                                                                                        width: "200"
                                                                                                                    }
                                                                                                                },
                                                                                                                [
                                                                                                                    _c("span", [
                                                                                                                        _vm._v(
                                                                                                                            _vm._s(
                                                                                                                                _vm.pmDateFormat(
                                                                                                                                    task
                                                                                                                                        .due_date
                                                                                                                                        .date,
                                                                                                                                    "MMM DD YYYY"
                                                                                                                                )
                                                                                                                            )
                                                                                                                        )
                                                                                                                    ]),
                                                                                                                    _vm._v(" - "),
                                                                                                                    _c("span", [
                                                                                                                        _vm._v(
                                                                                                                            _vm._s(
                                                                                                                                _vm.pmDateFormat(
                                                                                                                                    task
                                                                                                                                        .start_at
                                                                                                                                        .date,
                                                                                                                                    "MMM DD YYYY"
                                                                                                                                )
                                                                                                                            )
                                                                                                                        )
                                                                                                                    ])
                                                                                                                ]
                                                                                                            ),
                                                                                                            _vm._v(" "),
                                                                                                            _vm.getUserId
                                                                                                                ? _c(
                                                                                                                    "td",
                                                                                                                    {
                                                                                                                        attrs: {
                                                                                                                            width: "100"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    [
                                                                                                                        _vm._v(
                                                                                                                            _vm._s(
                                                                                                                                task.estimation
                                                                                                                            )
                                                                                                                        )
                                                                                                                    ]
                                                                                                                )
                                                                                                                : _vm._e(),
                                                                                                            _vm._v(" "),
                                                                                                            _vm.getUserId
                                                                                                                ? _c(
                                                                                                                    "td",
                                                                                                                    {
                                                                                                                        attrs: {
                                                                                                                            width: "120"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    [
                                                                                                                        _vm._v(
                                                                                                                            _vm._s(
                                                                                                                                _vm.pmDateFormat(
                                                                                                                                    task
                                                                                                                                        .completed_at
                                                                                                                                        .date,
                                                                                                                                    "MMM DD YYYY"
                                                                                                                                )
                                                                                                                            )
                                                                                                                        )
                                                                                                                    ]
                                                                                                                )
                                                                                                                : _vm._e(),
                                                                                                            _vm._v(" "),
                                                                                                            _c(
                                                                                                                "td",
                                                                                                                {
                                                                                                                    attrs: {
                                                                                                                        width: "100"
                                                                                                                    }
                                                                                                                },
                                                                                                                [
                                                                                                                    task.completer
                                                                                                                        .data.id
                                                                                                                        ? _c("div", [
                                                                                                                            _c("span", [
                                                                                                                                _c(
                                                                                                                                    "a",
                                                                                                                                    {
                                                                                                                                        attrs: {
                                                                                                                                            href: _vm.myTaskRedirect(
                                                                                                                                                task
                                                                                                                                                    .completer
                                                                                                                                                    .data
                                                                                                                                                    .id
                                                                                                                                            )
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    [
                                                                                                                                        _c(
                                                                                                                                            "img",
                                                                                                                                            {
                                                                                                                                                staticClass:
                                                                                                                                                    "avatar avatar-32 photo no-print",
                                                                                                                                                attrs: {
                                                                                                                                                    src:
                                                                                                                                                    task
                                                                                                                                                        .completer
                                                                                                                                                        .data
                                                                                                                                                        .avatar_url,
                                                                                                                                                    title:
                                                                                                                                                    task
                                                                                                                                                        .completer
                                                                                                                                                        .data
                                                                                                                                                        .display_name,
                                                                                                                                                    width:
                                                                                                                                                        "32",
                                                                                                                                                    height:
                                                                                                                                                        "32"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        ),
                                                                                                                                        _vm._v(
                                                                                                                                            " "
                                                                                                                                        ),
                                                                                                                                        _c(
                                                                                                                                            "span",
                                                                                                                                            {
                                                                                                                                                staticClass:
                                                                                                                                                    "print"
                                                                                                                                            },
                                                                                                                                            [
                                                                                                                                                _vm._v(
                                                                                                                                                    " " +
                                                                                                                                                    _vm._s(
                                                                                                                                                        task
                                                                                                                                                            .completer
                                                                                                                                                            .data
                                                                                                                                                            .display_name
                                                                                                                                                    ) +
                                                                                                                                                    " "
                                                                                                                                                )
                                                                                                                                            ]
                                                                                                                                        )
                                                                                                                                    ]
                                                                                                                                )
                                                                                                                            ])
                                                                                                                        ])
                                                                                                                        : _vm._e()
                                                                                                                ]
                                                                                                            ),
                                                                                                            _vm._v(" "),
                                                                                                            _c(
                                                                                                                "td",
                                                                                                                {
                                                                                                                    class:
                                                                                                                    task.status,
                                                                                                                    attrs: {
                                                                                                                        width: "100"
                                                                                                                    }
                                                                                                                },
                                                                                                                [
                                                                                                                    _vm._v(
                                                                                                                        " " +
                                                                                                                        _vm._s(
                                                                                                                            task.status
                                                                                                                        )
                                                                                                                    )
                                                                                                                ]
                                                                                                            )
                                                                                                        ]
                                                                                                    )
                                                                                                }
                                                                                            ),
                                                                                            0
                                                                                        )
                                                                                    ]
                                                                                )
                                                                            ]
                                                                        )
                                                                        : _vm._e()
                                                                }),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "table",
                                                                    {
                                                                        staticClass:
                                                                            "wp-list-table widefat fixed striped posts project-estimation"
                                                                    },
                                                                    [
                                                                        _c("tr", [
                                                                            _c(
                                                                                "td",
                                                                                {
                                                                                    staticStyle: {
                                                                                        "text-align": "right"
                                                                                    },
                                                                                    attrs: { colspan: "3" }
                                                                                },
                                                                                [
                                                                                    _vm._v(
                                                                                        "\n                            " +
                                                                                        _vm._s(
                                                                                            _vm.__(
                                                                                                "Total Extimated: ",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        ) +
                                                                                        "\n                        "
                                                                                    )
                                                                                ]
                                                                            ),
                                                                            _vm._v(" "),
                                                                            _c("td", [
                                                                                _vm._v(
                                                                                    "\n                              " +
                                                                                    _vm._s(
                                                                                        _vm.projectEstimation(project)
                                                                                            .total
                                                                                    ) +
                                                                                    "\n                        "
                                                                                )
                                                                            ]),
                                                                            _vm._v(" "),
                                                                            _c(
                                                                                "td",
                                                                                {
                                                                                    staticStyle: {
                                                                                        "text-align": "right"
                                                                                    },
                                                                                    attrs: { colspan: "3" }
                                                                                },
                                                                                [
                                                                                    _vm._v(
                                                                                        "\n                             " +
                                                                                        _vm._s(
                                                                                            _vm.__(
                                                                                                "Complete Extimated: ",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        ) +
                                                                                        "\n                        "
                                                                                    )
                                                                                ]
                                                                            ),
                                                                            _vm._v(" "),
                                                                            _c("td", [
                                                                                _vm._v(
                                                                                    "\n                             " +
                                                                                    _vm._s(
                                                                                        _vm.projectEstimation(project)
                                                                                            .complete
                                                                                    ) +
                                                                                    "\n                        "
                                                                                )
                                                                            ])
                                                                        ])
                                                                    ]
                                                                )
                                                            ],
                                                            2
                                                        )
                                                    ]
                                                )
                                                : _vm._e()
                                        }),
                                        0
                                    )
                                    : _vm.taskView
                                        ? _c("div", { staticClass: "pm-report-details" }, [
                                            _c(
                                                "table",
                                                {
                                                    staticClass:
                                                        "wp-list-table widefat fixed striped posts",
                                                    attrs: { border: "0", align: "center" }
                                                },
                                                [
                                                    _c("thead", [
                                                        _c("tr", [
                                                            _c("th", [
                                                                _vm._v(_vm._s(_vm.__("Tasks", "pm-pro")))
                                                            ]),
                                                            _vm._v(" "),
                                                            _c("th", { attrs: { width: "200" } }, [
                                                                _vm._v(_vm._s(_vm.__("Date", "pm-pro")))
                                                            ]),
                                                            _vm._v(" "),
                                                            _vm.getUserId
                                                                ? _c("th", { attrs: { width: "100" } }, [
                                                                    _vm._v(_vm._s(_vm.__("Estimation", "pm-pro")))
                                                                ])
                                                                : _vm._e(),
                                                            _vm._v(" "),
                                                            _c("th", { attrs: { width: "150" } }, [
                                                                _vm._v(
                                                                    " " + _vm._s(_vm.__("Completed Date", "pm-pro"))
                                                                )
                                                            ]),
                                                            _vm._v(" "),
                                                            _c("th", { attrs: { width: "150" } }, [
                                                                _vm._v(
                                                                    " " + _vm._s(_vm.__("Completed By", "pm-pro"))
                                                                )
                                                            ]),
                                                            _vm._v(" "),
                                                            _c("th", { attrs: { width: "100" } }, [
                                                                _vm._v(" " + _vm._s(_vm.__("Status", "pm-pro")))
                                                            ])
                                                        ])
                                                    ]),
                                                    _vm._v(" "),
                                                    _c(
                                                        "tbody",
                                                        _vm._l(_vm.projects, function(task) {
                                                            return _c("tr", { key: task.id }, [
                                                                _c(
                                                                    "td",
                                                                    [
                                                                        _c(
                                                                            "router-link",
                                                                            {
                                                                                attrs: {
                                                                                    to: {
                                                                                        name: "single_task",
                                                                                        params: {
                                                                                            project_id: task.project_id,
                                                                                            list_id: 1,
                                                                                            task_id: task.id
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            [_vm._v(_vm._s(task.title))]
                                                                        )
                                                                    ],
                                                                    1
                                                                ),
                                                                _vm._v(" "),
                                                                _c("td", { attrs: { width: "200" } }, [
                                                                    _c("span", [
                                                                        _vm._v(
                                                                            _vm._s(
                                                                                _vm.pmDateFormat(
                                                                                    task.start_at.date,
                                                                                    "MMM DD YYYY"
                                                                                )
                                                                            )
                                                                        )
                                                                    ]),
                                                                    _vm._v(" - "),
                                                                    _c("span", [
                                                                        _vm._v(
                                                                            _vm._s(
                                                                                _vm.pmDateFormat(
                                                                                    task.due_date.date,
                                                                                    "MMM DD YYYY"
                                                                                )
                                                                            )
                                                                        )
                                                                    ])
                                                                ]),
                                                                _vm._v(" "),
                                                                _vm.getUserId
                                                                    ? _c("td", { attrs: { width: "100" } }, [
                                                                        _vm._v(_vm._s(task.estimation))
                                                                    ])
                                                                    : _vm._e(),
                                                                _vm._v(" "),
                                                                _c("td", { attrs: { width: "120" } }, [
                                                                    _vm._v(
                                                                        _vm._s(
                                                                            _vm.pmDateFormat(
                                                                                task.completed_at.date,
                                                                                "MMM DD YYYY"
                                                                            )
                                                                        )
                                                                    )
                                                                ]),
                                                                _vm._v(" "),
                                                                _c("td", { attrs: { width: "100" } }, [
                                                                    task.completer.data.id
                                                                        ? _c("div", [
                                                                            _c("span", [
                                                                                _c(
                                                                                    "a",
                                                                                    {
                                                                                        attrs: {
                                                                                            href: _vm.myTaskRedirect(
                                                                                                task.completer.data.id
                                                                                            )
                                                                                        }
                                                                                    },
                                                                                    [
                                                                                        _c("img", {
                                                                                            staticClass:
                                                                                                "avatar avatar-32 photo no-print",
                                                                                            attrs: {
                                                                                                src:
                                                                                                task.completer.data
                                                                                                    .avatar_url,
                                                                                                title:
                                                                                                task.completer.data
                                                                                                    .display_name,
                                                                                                width: "32",
                                                                                                height: "32"
                                                                                            }
                                                                                        }),
                                                                                        _vm._v(" "),
                                                                                        _c(
                                                                                            "span",
                                                                                            { staticClass: "print" },
                                                                                            [
                                                                                                _vm._v(
                                                                                                    " " +
                                                                                                    _vm._s(
                                                                                                        task.completer.data
                                                                                                            .display_name
                                                                                                    ) +
                                                                                                    " "
                                                                                                )
                                                                                            ]
                                                                                        )
                                                                                    ]
                                                                                )
                                                                            ])
                                                                        ])
                                                                        : _vm._e()
                                                                ]),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "td",
                                                                    { class: task.status, attrs: { width: "100" } },
                                                                    [_vm._v(" " + _vm._s(task.status))]
                                                                )
                                                            ])
                                                        }),
                                                        0
                                                    )
                                                ]
                                            )
                                        ])
                                        : _vm._e()
                            ])
                            : _c("div", [
                                _c("h4", [
                                    _vm._v(
                                        _vm._s(
                                            _vm.__("No Data Found, Please search again!", "pm-pro")
                                        )
                                    )
                                ])
                            ])
                    ])
                    : _vm._e()
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-6ba2924e", esExports)
                }
            }

            /***/ }),
        /* 309 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm pm-front-end" }, [
                    _c("div", { attrs: { id: "pm-report" } }, [
                        _c("div", { staticClass: "pm-page-header" }, [
                            _c("div", { staticClass: "pm-page-title-container" }, [
                                _c("h1", [_vm._v(_vm._s(_vm.__("User Tasks", "pm-pro")))]),
                                _vm._v(" "),
                                _vm.startDate && _vm.endDate && _vm.user_tasks.length
                                    ? _c("div", { staticClass: "pm-report-date-range" }, [
                                        _c("span", [_vm._v(_vm._s(_vm.__("Date between", "pm-pro")))]),
                                        _vm._v(" "),
                                        _c(
                                            "span",
                                            {
                                                staticClass: "pm-text-primary",
                                                attrs: { title: _vm.getFullDate(_vm.startDate) }
                                            },
                                            [_vm._v(_vm._s(_vm.shortDateFormat(_vm.startDate)))]
                                        ),
                                        _vm._v(" "),
                                        _c("span", [_vm._v(_vm._s(_vm.__("to", "pm-pro")))]),
                                        _vm._v(" "),
                                        _c(
                                            "span",
                                            {
                                                staticClass: "pm-text-primary",
                                                attrs: { title: _vm.getFullDate(_vm.endDate) }
                                            },
                                            [_vm._v(_vm._s(_vm.shortDateFormat(_vm.endDate)))]
                                        )
                                    ])
                                    : _vm._e()
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "pm-display-flex pm-filter-wrapper" }, [
                                _vm.fetchReport
                                    ? _c(
                                        "a",
                                        {
                                            staticClass: "pm--btn pm--btn-default pm-mr-10",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    _vm.show = true
                                                }
                                            }
                                        },
                                        [
                                            _c("i", {
                                                staticClass: "flaticon-filter-tool-black-shape mr-5"
                                            }),
                                            _vm._v(_vm._s(_vm.__("Filter", "pm-pro")))
                                        ]
                                    )
                                    : _vm._e(),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-has-dropdown pm-report-export-block" }, [
                                    _c(
                                        "a",
                                        {
                                            staticClass: "pm--btn pm--btn-default pm-dropdown-trigger",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.dropdownTrigger($event)
                                                }
                                            }
                                        },
                                        [
                                            _c("i", { staticClass: "flaticon-export mr-5" }),
                                            _vm._v(
                                                "\n                        " +
                                                _vm._s(_vm.__("Export", "pm-pro")) +
                                                "\n                        "
                                            ),
                                            _c("i", {
                                                staticClass:
                                                    "flaticon-arrow-down-sign-to-navigate pm-mr-0 pm-ml-10"
                                            })
                                        ]
                                    ),
                                    _vm._v(" "),
                                    _c("ul", { class: _vm.dropdownToggleClass() }, [
                                        _c("li", [
                                            _vm.fetchReport
                                                ? _c(
                                                    "a",
                                                    {
                                                        attrs: { href: "#" },
                                                        on: {
                                                            click: function($event) {
                                                                $event.preventDefault()
                                                                return _vm.exportCSV()
                                                            }
                                                        }
                                                    },
                                                    [
                                                        _c("span", {
                                                            staticClass:
                                                                "flaticon-data-export-symbol-of-a-window-with-an-arrow"
                                                        }),
                                                        _vm._v(" "),
                                                        _c("span", [
                                                            _vm._v(_vm._s(_vm.__("Export to CSV", "pm-pro")))
                                                        ])
                                                    ]
                                                )
                                                : _vm._e()
                                        ]),
                                        _vm._v(" "),
                                        _c("li", [
                                            _vm.fetchReport
                                                ? _c(
                                                    "a",
                                                    {
                                                        attrs: { href: "#" },
                                                        on: {
                                                            click: function($event) {
                                                                $event.preventDefault()
                                                                return _vm.overDuePDF()
                                                            }
                                                        }
                                                    },
                                                    [
                                                        _c("span", { staticClass: "flaticon-pdf" }),
                                                        _vm._v(" "),
                                                        _c("span", [
                                                            _vm._v(_vm._s(_vm.__("Export to PDF", "pm-pro")))
                                                        ])
                                                    ]
                                                )
                                                : _vm._e()
                                        ])
                                    ])
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-page-body" }, [
                            _c("div", { staticClass: "pm--row" }, [
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-project-panel"
                                        },
                                        [
                                            _vm._m(0),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.project_title))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Project", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-worker-panel"
                                        },
                                        [
                                            _vm._m(1),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.unsername))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Co Worker", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-result-panel"
                                        },
                                        [
                                            _vm._m(2),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.totalResule))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Total Result", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-report-page" }, [
                            _c(
                                "div",
                                {},
                                [
                                    _c("div", { attrs: { id: "report" } }, [
                                        _c(
                                            "div",
                                            { attrs: { id: "report" } },
                                            [
                                                _c("div", { staticClass: "cpl-data-head" }, [
                                                    _c(
                                                        "div",
                                                        { staticClass: "pm-col-3 pm-border-right first" },
                                                        [
                                                            _c("b", [_vm._v(_vm._s(_vm.__("Project", "pm-pro")))]),
                                                            _vm._v(" "),
                                                            _c("br"),
                                                            _vm._v(_vm._s(_vm.project_title))
                                                        ]
                                                    ),
                                                    _vm._v(" "),
                                                    _c(
                                                        "div",
                                                        { staticClass: "pm-col-3 pm-border-right second" },
                                                        [
                                                            _c("b", [
                                                                _vm._v(_vm._s(_vm.__("Co-Worker : ", "pm-pro")))
                                                            ]),
                                                            _c("br"),
                                                            _vm._v(_vm._s(_vm.unsername))
                                                        ]
                                                    ),
                                                    _vm._v(" "),
                                                    _c(
                                                        "div",
                                                        { staticClass: "pm-col-2 pm-border-right third" },
                                                        [
                                                            _c("b", [
                                                                _vm._v(_vm._s(_vm.__("Total Result", "pm-pro")))
                                                            ]),
                                                            _c("br"),
                                                            _vm._v(_vm._s(_vm.totalResule))
                                                        ]
                                                    ),
                                                    _vm._v(" "),
                                                    _c(
                                                        "div",
                                                        { staticClass: "pm-col-2 pm-border-right estimation" },
                                                        [
                                                            _c("b", [
                                                                _vm._v(_vm._s(_vm.__("Total Estimation", "pm-pro")))
                                                            ]),
                                                            _c("br"),
                                                            _vm._v(_vm._s(_vm.totalEstimation))
                                                        ]
                                                    ),
                                                    _vm._v(" "),
                                                    _c("div", { staticClass: "pm-col-2 fourth" }, [
                                                        _c("b", [
                                                            _vm._v(" " + _vm._s(_vm.__("Range", "pm-pro")) + " ")
                                                        ]),
                                                        _c("br"),
                                                        _vm._v(
                                                            " " +
                                                            _vm._s(_vm.start_date) +
                                                            " " +
                                                            _vm._s(_vm.__("to", "pm-pro")) +
                                                            "  " +
                                                            _vm._s(_vm.end_date)
                                                        )
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("div", { staticClass: "clearfix" })
                                                ]),
                                                _vm._v(" "),
                                                _c("result-view", {
                                                    attrs: { projects: _vm.user_tasks, loading: _vm.loading }
                                                })
                                            ],
                                            1
                                        ),
                                        _vm._v(" "),
                                        !_vm.fetchReport
                                            ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(3)])
                                            : _vm._e()
                                    ]),
                                    _vm._v(" "),
                                    _vm.fetchReport
                                        ? _c("pm-pagination", {
                                            attrs: {
                                                total_pages: _vm.total_pages,
                                                current_page_number: _vm.current_page_number,
                                                component_name: "overdue_pagination"
                                            }
                                        })
                                        : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                        "modal",
                                        {
                                            attrs: { "is-active": _vm.show, width: 400 },
                                            on: {
                                                close: function($event) {
                                                    _vm.show = false
                                                }
                                            }
                                        },
                                        [
                                            _c("div", { staticClass: "pm-filter-report-modal" }, [
                                                _c(
                                                    "div",
                                                    {
                                                        staticClass: "pm-filter-modal-header",
                                                        attrs: { slot: "header" },
                                                        slot: "header"
                                                    },
                                                    [
                                                        _c("h3", { staticClass: "pm-mb-0" }, [
                                                            _vm._v(_vm._s(_vm.__("Overdue Task Filter", "pm-pro")))
                                                        ])
                                                    ]
                                                ),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "pm-filter-modal-body" }, [
                                                    _c(
                                                        "form",
                                                        {
                                                            on: {
                                                                submit: function($event) {
                                                                    $event.preventDefault()
                                                                    return _vm.filterProject()
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _c("div", [
                                                                _c(
                                                                    "div",
                                                                    {
                                                                        staticClass: "subtask-date new-task-caledar-wrap"
                                                                    },
                                                                    [
                                                                        _c("h3", [
                                                                            _vm._v(_vm._s(_vm.__("Report", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("div", { staticClass: "pm--row" }, [
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-col-sm-6 pm-col-xs-6" },
                                                                                [
                                                                                    _c("pm-date-picker", {
                                                                                        staticClass: "pm-datepickter-from",
                                                                                        attrs: {
                                                                                            dependency: "pm-datepickter-to",
                                                                                            placeholder: _vm.__(
                                                                                                "Select start date",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        },
                                                                                        model: {
                                                                                            value: _vm.startDate,
                                                                                            callback: function($$v) {
                                                                                                _vm.startDate = $$v
                                                                                            },
                                                                                            expression: "startDate"
                                                                                        }
                                                                                    })
                                                                                ],
                                                                                1
                                                                            ),
                                                                            _vm._v(" "),
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-col-sm-6 pm-col-xs-6" },
                                                                                [
                                                                                    _c("pm-date-picker", {
                                                                                        staticClass: "pm-datepickter-to",
                                                                                        attrs: {
                                                                                            dependency: "pm-datepickter-from",
                                                                                            placeholder: _vm.__(
                                                                                                "Select due date",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        },
                                                                                        model: {
                                                                                            value: _vm.endDate,
                                                                                            callback: function($$v) {
                                                                                                _vm.endDate = $$v
                                                                                            },
                                                                                            expression: "endDate"
                                                                                        }
                                                                                    })
                                                                                ],
                                                                                1
                                                                            )
                                                                        ])
                                                                    ]
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "div",
                                                                    { staticClass: "filter-input" },
                                                                    [
                                                                        _c("label", [
                                                                            _vm._v(
                                                                                _vm._s(_vm.__("Select Project", "pm-pro"))
                                                                            )
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("multiselect", {
                                                                            attrs: {
                                                                                options: _vm.allprojects,
                                                                                multiple: false,
                                                                                searchable: true,
                                                                                "allow-empty": true,
                                                                                placeholder: _vm.select_project_text,
                                                                                label: "title",
                                                                                "track-by": "id"
                                                                            },
                                                                            model: {
                                                                                value: _vm.projects,
                                                                                callback: function($$v) {
                                                                                    _vm.projects = $$v
                                                                                },
                                                                                expression: "projects"
                                                                            }
                                                                        })
                                                                    ],
                                                                    1
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "div",
                                                                    { staticClass: "filter-input" },
                                                                    [
                                                                        _c("label", [
                                                                            _vm._v(_vm._s(_vm.__("Select User", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("multiselect", {
                                                                            attrs: {
                                                                                options: _vm.assigned_users,
                                                                                multiple: false,
                                                                                searchable: true,
                                                                                "allow-empty": true,
                                                                                placeholder: _vm.select_user_text,
                                                                                label: "display_name",
                                                                                "track-by": "id"
                                                                            },
                                                                            model: {
                                                                                value: _vm.assign_user,
                                                                                callback: function($$v) {
                                                                                    _vm.assign_user = $$v
                                                                                },
                                                                                expression: "assign_user"
                                                                            }
                                                                        })
                                                                    ],
                                                                    1
                                                                )
                                                            ]),
                                                            _vm._v(" "),
                                                            _c("div", { staticClass: "pm-modal-form-buttons" }, [
                                                                _c("input", {
                                                                    staticClass: "button button-primary pm-doc-btn",
                                                                    attrs: { slot: "footer", type: "submit" },
                                                                    domProps: { value: _vm.run_report },
                                                                    slot: "footer"
                                                                })
                                                            ])
                                                        ]
                                                    )
                                                ])
                                            ])
                                        ]
                                    )
                                ],
                                1
                            )
                        ])
                    ])
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-resume" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-people" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-test" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "loadmoreanimation" }, [
                        _c("div", { staticClass: "load-spinner" }, [
                            _c("div", { staticClass: "rect1" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect2" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect3" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect4" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect5" })
                        ])
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-2c286554", esExports)
                }
            }

            /***/ }),
        /* 310 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_completed_tasks_vue__ = __webpack_require__(108);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_684fdcdb_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_completed_tasks_vue__ = __webpack_require__(315);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_completed_tasks_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_684fdcdb_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_completed_tasks_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/completed-tasks.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-684fdcdb", Component.options)
                } else {
                    hotAPI.reload("data-v-684fdcdb", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 311 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_completed_task_results_vue__ = __webpack_require__(109);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7d561ff1_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_completed_task_results_vue__ = __webpack_require__(314);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(312)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_completed_task_results_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7d561ff1_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_completed_task_results_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/completed-task-results.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-7d561ff1", Component.options)
                } else {
                    hotAPI.reload("data-v-7d561ff1", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 312 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(313);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("3cc5431c", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7d561ff1\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./completed-task-results.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7d561ff1\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./completed-task-results.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 313 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.report-content .pm-table thead tr {\n  box-shadow: none;\n}\n.report-content.overdue .task-lists {\n  margin-left: 30px;\n}\n.pm-task-title {\n  font-size: 15px;\n  padding: 0 !important;\n  margin-top: 20px !important;\n  display: flex;\n  font-size: 13px;\n}\n.pm-task-title a {\n  color: #000;\n}\n.pm-task-title .project-title-wrap {\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n}\n.pm-task-title .project-title-wrap .title {\n  background: #75cbef;\n  padding: 3px 13px;\n  color: #fff;\n  text-shadow: 0px 0px 1px #929292;\n}\n.pm-task-title .project-title-wrap .link {\n  background: #e5e5e5;\n  padding: 2px 13px;\n  border: 1px solid #ddd;\n  border-left: none;\n}\n.pm-task-title .list-title-wrap {\n  display: flex;\n  align-items: center;\n}\n.pm-task-title .list-title-wrap .title {\n  background: #8f9aec;\n  padding: 3px 12px;\n  color: #fff;\n  text-shadow: 0px 0px 1px #6d6d6d;\n}\n.pm-task-title .list-title-wrap .link {\n  background: #e5e5e5;\n  padding: 2px 13px;\n  border: 1px solid #ddd;\n  border-left: none;\n}\n", ""]);

// exports


            /***/ }),
        /* 314 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "report-content overdue" }, [
                    !_vm.isEmpty(_vm.projects)
                        ? _c(
                            "div",
                            { staticClass: "pm-report-details" },
                            _vm._l(_vm.projects, function(project) {
                                return _c(
                                    "div",
                                    { key: project.id },
                                    [
                                        _c("h4", { staticClass: "pm-task-title" }, [
                                            _c(
                                                "div",
                                                { staticClass: "project-title-wrap" },
                                                [
                                                    _c("span", { staticClass: "title" }, [
                                                        _vm._v(_vm._s(_vm.__("Project", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c(
                                                        "router-link",
                                                        {
                                                            staticClass: "link",
                                                            attrs: {
                                                                to: {
                                                                    name: "task_lists",
                                                                    params: {
                                                                        project_id: project.id
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _vm._v(
                                                                "\n                        " +
                                                                _vm._s(project.title) +
                                                                "\n                    "
                                                            )
                                                        ]
                                                    )
                                                ],
                                                1
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _vm._l(project.task_lists.data, function(taskList) {
                                            return _c(
                                                "div",
                                                { key: taskList.id, staticClass: "task-lists" },
                                                [
                                                    _c("h4", { staticClass: "pm-task-title" }, [
                                                        _c(
                                                            "div",
                                                            { staticClass: "list-title-wrap" },
                                                            [
                                                                _c("span", { staticClass: "title" }, [
                                                                    _vm._v(_vm._s(_vm.__("Task List", "pm-pro")))
                                                                ]),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "router-link",
                                                                    {
                                                                        staticClass: "link",
                                                                        attrs: {
                                                                            to: {
                                                                                name: "single_list",
                                                                                params: {
                                                                                    project_id: project.id,
                                                                                    list_id: taskList.id
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _vm._v(
                                                                            "\n                            " +
                                                                            _vm._s(taskList.title) +
                                                                            "\n                        "
                                                                        )
                                                                    ]
                                                                )
                                                            ],
                                                            1
                                                        )
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("div", { staticClass: "table-container" }, [
                                                        _c(
                                                            "table",
                                                            {
                                                                staticClass:
                                                                    "pm-table table-striped table-justified"
                                                            },
                                                            [
                                                                _c("thead", [
                                                                    _c("tr", [
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--task column-primary",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    "\n                                    " +
                                                                                    _vm._s(_vm.__("Tasks", "pm-pro")) +
                                                                                    "\n                                "
                                                                                )
                                                                            ]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--date-beetwen ",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    _vm._s(_vm.__("Completed At", "pm-pro"))
                                                                                )
                                                                            ]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--created-at",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    _vm._s(_vm.__("Created At", "pm-pro"))
                                                                                )
                                                                            ]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--created-by",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    _vm._s(_vm.__("Created By", "pm-pro"))
                                                                                )
                                                                            ]
                                                                        )
                                                                    ])
                                                                ]),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "tbody",
                                                                    _vm._l(taskList.tasks.data, function(task) {
                                                                        return _c(
                                                                            "tr",
                                                                            { key: task.id, class: _vm.collapsRow(task) },
                                                                            [
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--task column-primary",
                                                                                        attrs: { scope: "row" }
                                                                                    },
                                                                                    [
                                                                                        _c(
                                                                                            "a",
                                                                                            {
                                                                                                attrs: { href: "#" },
                                                                                                on: {
                                                                                                    click: function($event) {
                                                                                                        $event.preventDefault()
                                                                                                        return _vm.openSingleTask(task)
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            [
                                                                                                _vm._v(
                                                                                                    "\n                                        " +
                                                                                                    _vm._s(task.title) +
                                                                                                    "\n                                    "
                                                                                                )
                                                                                            ]
                                                                                        ),
                                                                                        _vm._v(" "),
                                                                                        _c(
                                                                                            "button",
                                                                                            {
                                                                                                staticClass: "pm-toggle-row",
                                                                                                attrs: { type: "button" },
                                                                                                on: {
                                                                                                    click: function($event) {
                                                                                                        $event.preventDefault()
                                                                                                        return _vm.toggleRow(task)
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            [
                                                                                                _c(
                                                                                                    "span",
                                                                                                    {
                                                                                                        staticClass:
                                                                                                            "screen-reader-text"
                                                                                                    },
                                                                                                    [
                                                                                                        _vm._v(
                                                                                                            _vm._s(
                                                                                                                _vm.__(
                                                                                                                    "Show more details",
                                                                                                                    "pm-pro"
                                                                                                                )
                                                                                                            )
                                                                                                        )
                                                                                                    ]
                                                                                                )
                                                                                            ]
                                                                                        )
                                                                                    ]
                                                                                ),
                                                                                _vm._v(" "),
                                                                                task.completed_at.date
                                                                                    ? _c(
                                                                                        "td",
                                                                                        {
                                                                                            staticClass: "col--date",
                                                                                            attrs: {
                                                                                                "data-colname": "Date between"
                                                                                            }
                                                                                        },
                                                                                        [
                                                                                            _c("span", [
                                                                                                _vm._v(
                                                                                                    _vm._s(task.completed_at.date)
                                                                                                )
                                                                                            ])
                                                                                        ]
                                                                                    )
                                                                                    : _vm._e(),
                                                                                _vm._v(" "),
                                                                                !task.completed_at.date
                                                                                    ? _c(
                                                                                        "td",
                                                                                        {
                                                                                            staticClass: "col--date",
                                                                                            attrs: {
                                                                                                "data-colname": "Date between"
                                                                                            }
                                                                                        },
                                                                                        [_c("span", [_vm._v("—")])]
                                                                                    )
                                                                                    : _vm._e(),
                                                                                _vm._v(" "),
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--created-at",
                                                                                        attrs: { "data-colname": "Created At" }
                                                                                    },
                                                                                    [_vm._v(_vm._s(task.created_at.date))]
                                                                                ),
                                                                                _vm._v(" "),
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--phone",
                                                                                        attrs: { "data-colname": "Created By" }
                                                                                    },
                                                                                    [
                                                                                        _vm._v(
                                                                                            _vm._s(task.creator.data.display_name)
                                                                                        )
                                                                                    ]
                                                                                )
                                                                            ]
                                                                        )
                                                                    }),
                                                                    0
                                                                )
                                                            ]
                                                        )
                                                    ])
                                                ]
                                            )
                                        })
                                    ],
                                    2
                                )
                            }),
                            0
                        )
                        : _vm._e(),
                    _vm._v(" "),
                    _vm.isEmpty(_vm.projects)
                        ? _c("div", [
                            _c("h4", [
                                _vm._v(
                                    _vm._s(_vm.__("No Data Found, Please search again!", "pm-pro"))
                                )
                            ])
                        ])
                        : _vm._e(),
                    _vm._v(" "),
                    _vm.hasSingleTask
                        ? _c(
                            "div",
                            [
                                _c("pm-single-task", {
                                    attrs: {
                                        taskId: parseInt(_vm.individualTaskId),
                                        projectId: parseInt(_vm.individualProjectId)
                                    },
                                    on: { onClickClose: _vm.closeTaskModal }
                                })
                            ],
                            1
                        )
                        : _vm._e()
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-7d561ff1", esExports)
                }
            }

            /***/ }),
        /* 315 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm pm-front-end" }, [
                    _c("div", { attrs: { id: "pm-report" } }, [
                        _c("div", { staticClass: "pm-page-header" }, [
                            _c("div", { staticClass: "pm-page-title-container" }, [
                                _c("h1", [_vm._v(_vm._s(_vm.__("Completed Task", "pm-pro")))]),
                                _vm._v(" "),
                                _vm.startDate && _vm.endDate
                                    ? _c("div", { staticClass: "pm-report-date-range" }, [
                                        _c("span", [_vm._v(_vm._s(_vm.__("Date between", "pm-pro")))]),
                                        _vm._v(" "),
                                        _c(
                                            "span",
                                            {
                                                staticClass: "pm-text-primary",
                                                attrs: { title: _vm.getFullDate(_vm.startDate) }
                                            },
                                            [_vm._v(_vm._s(_vm.shortDateFormat(_vm.startDate)))]
                                        ),
                                        _vm._v(" "),
                                        _c("span", [_vm._v(_vm._s(_vm.__("to", "pm-pro")))]),
                                        _vm._v(" "),
                                        _c(
                                            "span",
                                            {
                                                staticClass: "pm-text-primary",
                                                attrs: { title: _vm.getFullDate(_vm.endDate) }
                                            },
                                            [_vm._v(_vm._s(_vm.shortDateFormat(_vm.endDate)))]
                                        )
                                    ])
                                    : _vm._e()
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "pm-display-flex pm-filter-wrapper" }, [
                                _vm.fetchReport
                                    ? _c(
                                        "a",
                                        {
                                            staticClass: "pm--btn pm--btn-default pm-mr-10",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    _vm.show = true
                                                }
                                            }
                                        },
                                        [
                                            _c("i", {
                                                staticClass: "flaticon-filter-tool-black-shape mr-5"
                                            }),
                                            _vm._v(_vm._s(_vm.__("Filter", "pm-pro")))
                                        ]
                                    )
                                    : _vm._e(),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-has-dropdown pm-report-export-block" }, [
                                    _c(
                                        "a",
                                        {
                                            staticClass: "pm--btn pm--btn-default pm-dropdown-trigger",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.dropdownTrigger($event)
                                                }
                                            }
                                        },
                                        [
                                            _c("i", { staticClass: "flaticon-export mr-5" }),
                                            _vm._v(
                                                "\n                        " +
                                                _vm._s(_vm.__("Export", "pm-pro")) +
                                                "\n                        "
                                            ),
                                            _c("i", {
                                                staticClass:
                                                    "flaticon-arrow-down-sign-to-navigate pm-mr-0 pm-ml-10"
                                            })
                                        ]
                                    ),
                                    _vm._v(" "),
                                    _c("ul", { class: _vm.dropdownToggleClass() }, [
                                        _c("li", [
                                            _vm.fetchReport
                                                ? _c(
                                                    "a",
                                                    {
                                                        attrs: { href: "#" },
                                                        on: {
                                                            click: function($event) {
                                                                $event.preventDefault()
                                                                return _vm.exportCSV()
                                                            }
                                                        }
                                                    },
                                                    [
                                                        _c("span", {
                                                            staticClass:
                                                                "flaticon-data-export-symbol-of-a-window-with-an-arrow"
                                                        }),
                                                        _vm._v(" "),
                                                        _c("span", [
                                                            _vm._v(_vm._s(_vm.__("Export to CSV", "pm-pro")))
                                                        ])
                                                    ]
                                                )
                                                : _vm._e()
                                        ]),
                                        _vm._v(" "),
                                        _vm.fetchReport
                                            ? _c("li", [
                                                _c(
                                                    "a",
                                                    {
                                                        attrs: { href: "#" },
                                                        on: {
                                                            click: function($event) {
                                                                $event.preventDefault()
                                                                return _vm.completedTaskPDF()
                                                            }
                                                        }
                                                    },
                                                    [
                                                        _c("span", { staticClass: "flaticon-pdf" }),
                                                        _vm._v(" "),
                                                        _c("span", [
                                                            _vm._v(_vm._s(_vm.__("Export to PDF", "pm-pro")))
                                                        ])
                                                    ]
                                                )
                                            ])
                                            : _vm._e()
                                    ])
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-page-body" }, [
                            _c("div", { staticClass: "pm--row" }, [
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-project-panel"
                                        },
                                        [
                                            _vm._m(0),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.project_title))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Project", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-worker-panel"
                                        },
                                        [
                                            _vm._m(1),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.unsername))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Co Worker", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-result-panel"
                                        },
                                        [
                                            _vm._m(2),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.totalResults))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Total Tasks", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-report-page" }, [
                            _c(
                                "div",
                                {},
                                [
                                    _c(
                                        "div",
                                        { attrs: { id: "report" } },
                                        [
                                            _vm.fetchReport
                                                ? _c("completed-task-results", {
                                                    attrs: { projects: _vm.completed_tasks }
                                                })
                                                : _vm._e(),
                                            _vm._v(" "),
                                            !_vm.fetchReport
                                                ? _c("div", { staticClass: "pm-data-load-before" }, [
                                                    _vm._m(3)
                                                ])
                                                : _vm._e()
                                        ],
                                        1
                                    ),
                                    _vm._v(" "),
                                    _vm.fetchReport
                                        ? _c("pm-pagination", {
                                            attrs: {
                                                total_pages: _vm.total_pages,
                                                current_page_number: _vm.current_page_number,
                                                component_name: "completed_pagination"
                                            }
                                        })
                                        : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                        "modal",
                                        {
                                            attrs: { "is-active": _vm.show, width: 400 },
                                            on: {
                                                close: function($event) {
                                                    _vm.show = false
                                                }
                                            }
                                        },
                                        [
                                            _c("div", { staticClass: "pm-filter-report-modal" }, [
                                                _c(
                                                    "div",
                                                    {
                                                        staticClass: "pm-filter-modal-header",
                                                        attrs: { slot: "header" },
                                                        slot: "header"
                                                    },
                                                    [
                                                        _c("h3", { staticClass: "pm-mb-0" }, [
                                                            _vm._v(
                                                                _vm._s(_vm.__("Completed Task Filter", "pm-pro"))
                                                            )
                                                        ])
                                                    ]
                                                ),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "pm-filter-modal-body" }, [
                                                    _c(
                                                        "form",
                                                        {
                                                            on: {
                                                                submit: function($event) {
                                                                    $event.preventDefault()
                                                                    return _vm.filterProject()
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _c("div", [
                                                                _c(
                                                                    "div",
                                                                    {
                                                                        staticClass: "subtask-date new-task-calendar-wrap"
                                                                    },
                                                                    [
                                                                        _c("h3", [
                                                                            _vm._v(_vm._s(_vm.__("Select Date", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("div", { staticClass: "pm--row" }, [
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-col-sm-6 pm-col-xs-6" },
                                                                                [
                                                                                    _c("pm-date-picker", {
                                                                                        staticClass: "pm-datepickter-from",
                                                                                        attrs: {
                                                                                            dependency: "pm-datepickter-to",
                                                                                            placeholder: _vm.__(
                                                                                                "Completed start date",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        },
                                                                                        model: {
                                                                                            value: _vm.startDate,
                                                                                            callback: function($$v) {
                                                                                                _vm.startDate = $$v
                                                                                            },
                                                                                            expression: "startDate"
                                                                                        }
                                                                                    })
                                                                                ],
                                                                                1
                                                                            ),
                                                                            _vm._v(" "),
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-col-sm-6 pm-col-xs-6" },
                                                                                [
                                                                                    _c("pm-date-picker", {
                                                                                        staticClass: "pm-datepickter-to",
                                                                                        attrs: {
                                                                                            dependency: "pm-datepickter-from",
                                                                                            placeholder: _vm.__(
                                                                                                "Completed end date",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        },
                                                                                        model: {
                                                                                            value: _vm.endDate,
                                                                                            callback: function($$v) {
                                                                                                _vm.endDate = $$v
                                                                                            },
                                                                                            expression: "endDate"
                                                                                        }
                                                                                    })
                                                                                ],
                                                                                1
                                                                            )
                                                                        ])
                                                                    ]
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "div",
                                                                    { staticClass: "filter-input" },
                                                                    [
                                                                        _c("label", [
                                                                            _vm._v(_vm._s(_vm.__("All Projects", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("multiselect", {
                                                                            attrs: {
                                                                                options: _vm.allprojects,
                                                                                multiple: false,
                                                                                searchable: true,
                                                                                "allow-empty": true,
                                                                                placeholder: _vm.select_project_text,
                                                                                label: "title",
                                                                                "track-by": "id"
                                                                            },
                                                                            model: {
                                                                                value: _vm.projects,
                                                                                callback: function($$v) {
                                                                                    _vm.projects = $$v
                                                                                },
                                                                                expression: "projects"
                                                                            }
                                                                        })
                                                                    ],
                                                                    1
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "div",
                                                                    { staticClass: "filter-input" },
                                                                    [
                                                                        _c("label", [
                                                                            _vm._v(_vm._s(_vm.__("Select User", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("multiselect", {
                                                                            attrs: {
                                                                                options: _vm.assigned_users,
                                                                                multiple: false,
                                                                                searchable: true,
                                                                                "allow-empty": true,
                                                                                placeholder: _vm.select_user_text,
                                                                                label: "display_name",
                                                                                "track-by": "id"
                                                                            },
                                                                            model: {
                                                                                value: _vm.assign_user,
                                                                                callback: function($$v) {
                                                                                    _vm.assign_user = $$v
                                                                                },
                                                                                expression: "assign_user"
                                                                            }
                                                                        })
                                                                    ],
                                                                    1
                                                                )
                                                            ]),
                                                            _vm._v(" "),
                                                            _c("div", { staticClass: "pm-modal-form-buttons" }, [
                                                                _c("input", {
                                                                    staticClass: "button button-primary pm-doc-btn",
                                                                    attrs: { slot: "footer", type: "submit" },
                                                                    domProps: { value: _vm.run_report },
                                                                    slot: "footer"
                                                                })
                                                            ])
                                                        ]
                                                    )
                                                ])
                                            ])
                                        ]
                                    )
                                ],
                                1
                            )
                        ])
                    ])
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-resume" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-people" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-test" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "loadmoreanimation" }, [
                        _c("div", { staticClass: "load-spinner" }, [
                            _c("div", { staticClass: "rect1" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect2" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect3" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect4" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect5" })
                        ])
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-684fdcdb", esExports)
                }
            }

            /***/ }),
        /* 316 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_overdue_task_vue__ = __webpack_require__(110);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_193790d3_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_overdue_task_vue__ = __webpack_require__(323);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(317)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_overdue_task_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_193790d3_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_overdue_task_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/overdue-task.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-193790d3", Component.options)
                } else {
                    hotAPI.reload("data-v-193790d3", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 317 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(318);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("3a63b24e", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-193790d3\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./overdue-task.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-193790d3\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./overdue-task.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 318 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "", ""]);

// exports


            /***/ }),
        /* 319 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_overdue_results_vue__ = __webpack_require__(111);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0b8bbc98_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_overdue_results_vue__ = __webpack_require__(322);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(320)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_overdue_results_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0b8bbc98_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_overdue_results_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/overdue-results.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-0b8bbc98", Component.options)
                } else {
                    hotAPI.reload("data-v-0b8bbc98", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 320 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(321);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("5b2fd53c", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0b8bbc98\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./overdue-results.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0b8bbc98\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./overdue-results.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 321 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.report-content .pm-table thead tr {\n  box-shadow: none;\n}\n.report-content.overdue .task-lists {\n  margin-left: 30px;\n}\n.pm-task-title {\n  font-size: 15px;\n  padding: 0 !important;\n  margin-top: 20px !important;\n  display: flex;\n  font-size: 13px;\n}\n.pm-task-title a {\n  color: #000;\n}\n.pm-task-title .project-title-wrap {\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n}\n.pm-task-title .project-title-wrap .title {\n  background: #75cbef;\n  padding: 3px 13px;\n  color: #fff;\n  text-shadow: 0px 0px 1px #929292;\n}\n.pm-task-title .project-title-wrap .link {\n  background: #e5e5e5;\n  padding: 2px 13px;\n  border: 1px solid #ddd;\n  border-left: none;\n}\n.pm-task-title .list-title-wrap {\n  display: flex;\n  align-items: center;\n}\n.pm-task-title .list-title-wrap .title {\n  background: #8f9aec;\n  padding: 3px 12px;\n  color: #fff;\n  text-shadow: 0px 0px 1px #6d6d6d;\n}\n.pm-task-title .list-title-wrap .link {\n  background: #e5e5e5;\n  padding: 2px 13px;\n  border: 1px solid #ddd;\n  border-left: none;\n}\n", ""]);

// exports


            /***/ }),
        /* 322 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "report-content overdue" }, [
                    !_vm.isEmpty(_vm.projects)
                        ? _c(
                            "div",
                            { staticClass: "pm-report-details" },
                            _vm._l(_vm.projects, function(project) {
                                return _c(
                                    "div",
                                    { key: project.id },
                                    [
                                        _c("h4", { staticClass: "pm-task-title" }, [
                                            _c(
                                                "div",
                                                { staticClass: "project-title-wrap" },
                                                [
                                                    _c("span", { staticClass: "title" }, [
                                                        _vm._v(_vm._s(_vm.__("Project", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c(
                                                        "router-link",
                                                        {
                                                            staticClass: "link",
                                                            attrs: {
                                                                to: {
                                                                    name: "task_lists",
                                                                    params: {
                                                                        project_id: project.id
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _vm._v(
                                                                "\n                        " +
                                                                _vm._s(project.title) +
                                                                "\n                    "
                                                            )
                                                        ]
                                                    )
                                                ],
                                                1
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _vm._l(project.task_lists.data, function(taskList) {
                                            return _c(
                                                "div",
                                                { key: taskList.id, staticClass: "task-lists" },
                                                [
                                                    _c("h4", { staticClass: "pm-task-title" }, [
                                                        _c(
                                                            "div",
                                                            { staticClass: "list-title-wrap" },
                                                            [
                                                                _c("span", { staticClass: "title" }, [
                                                                    _vm._v(_vm._s(_vm.__("Task List", "pm-pro")))
                                                                ]),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "router-link",
                                                                    {
                                                                        staticClass: "link",
                                                                        attrs: {
                                                                            to: {
                                                                                name: "single_list",
                                                                                params: {
                                                                                    project_id: project.id,
                                                                                    list_id: taskList.id
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _vm._v(
                                                                            "\n                            " +
                                                                            _vm._s(taskList.title) +
                                                                            "\n                        "
                                                                        )
                                                                    ]
                                                                )
                                                            ],
                                                            1
                                                        )
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("div", { staticClass: "table-container" }, [
                                                        _c(
                                                            "table",
                                                            {
                                                                staticClass:
                                                                    "pm-table table-striped table-justified"
                                                            },
                                                            [
                                                                _c("thead", [
                                                                    _c("tr", [
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--task column-primary",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    "\n                                    " +
                                                                                    _vm._s(_vm.__("Tasks", "pm-pro")) +
                                                                                    "\n                                "
                                                                                )
                                                                            ]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--date-beetwen ",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [_vm._v(_vm._s(_vm.__("Due Date", "pm-pro")))]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--created-at",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    _vm._s(_vm.__("Created At", "pm-pro"))
                                                                                )
                                                                            ]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "th",
                                                                            {
                                                                                staticClass: "col--created-by",
                                                                                attrs: { scope: "col" }
                                                                            },
                                                                            [
                                                                                _vm._v(
                                                                                    _vm._s(_vm.__("Created By", "pm-pro"))
                                                                                )
                                                                            ]
                                                                        )
                                                                    ])
                                                                ]),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "tbody",
                                                                    _vm._l(taskList.tasks.data, function(task) {
                                                                        return _c(
                                                                            "tr",
                                                                            { key: task.id, class: _vm.collapsRow(task) },
                                                                            [
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--task column-primary",
                                                                                        attrs: { scope: "row" }
                                                                                    },
                                                                                    [
                                                                                        _c(
                                                                                            "a",
                                                                                            {
                                                                                                attrs: { href: "#" },
                                                                                                on: {
                                                                                                    click: function($event) {
                                                                                                        $event.preventDefault()
                                                                                                        return _vm.openSingleTask(task)
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            [
                                                                                                _vm._v(
                                                                                                    "\n                                        " +
                                                                                                    _vm._s(task.title) +
                                                                                                    "\n                                    "
                                                                                                )
                                                                                            ]
                                                                                        ),
                                                                                        _vm._v(" "),
                                                                                        _c(
                                                                                            "button",
                                                                                            {
                                                                                                staticClass: "pm-toggle-row",
                                                                                                attrs: { type: "button" },
                                                                                                on: {
                                                                                                    click: function($event) {
                                                                                                        $event.preventDefault()
                                                                                                        return _vm.toggleRow(task)
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            [
                                                                                                _c(
                                                                                                    "span",
                                                                                                    {
                                                                                                        staticClass:
                                                                                                            "screen-reader-text"
                                                                                                    },
                                                                                                    [
                                                                                                        _vm._v(
                                                                                                            _vm._s(
                                                                                                                _vm.__(
                                                                                                                    "Show more details",
                                                                                                                    "pm-pro"
                                                                                                                )
                                                                                                            )
                                                                                                        )
                                                                                                    ]
                                                                                                )
                                                                                            ]
                                                                                        )
                                                                                    ]
                                                                                ),
                                                                                _vm._v(" "),
                                                                                task.due_date.date
                                                                                    ? _c(
                                                                                        "td",
                                                                                        {
                                                                                            staticClass: "col--date",
                                                                                            attrs: {
                                                                                                "data-colname": "Date between"
                                                                                            }
                                                                                        },
                                                                                        [
                                                                                            _c("span", [
                                                                                                _vm._v(_vm._s(task.due_date.date))
                                                                                            ])
                                                                                        ]
                                                                                    )
                                                                                    : _vm._e(),
                                                                                _vm._v(" "),
                                                                                !task.due_date.date
                                                                                    ? _c(
                                                                                        "td",
                                                                                        {
                                                                                            staticClass: "col--date",
                                                                                            attrs: {
                                                                                                "data-colname": "Date between"
                                                                                            }
                                                                                        },
                                                                                        [_c("span", [_vm._v("—")])]
                                                                                    )
                                                                                    : _vm._e(),
                                                                                _vm._v(" "),
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--created-at",
                                                                                        attrs: { "data-colname": "Created At" }
                                                                                    },
                                                                                    [_vm._v(_vm._s(task.created_at.date))]
                                                                                ),
                                                                                _vm._v(" "),
                                                                                _c(
                                                                                    "td",
                                                                                    {
                                                                                        staticClass: "col--phone",
                                                                                        attrs: { "data-colname": "Created By" }
                                                                                    },
                                                                                    [
                                                                                        _vm._v(
                                                                                            _vm._s(task.creator.data.display_name)
                                                                                        )
                                                                                    ]
                                                                                )
                                                                            ]
                                                                        )
                                                                    }),
                                                                    0
                                                                )
                                                            ]
                                                        )
                                                    ])
                                                ]
                                            )
                                        })
                                    ],
                                    2
                                )
                            }),
                            0
                        )
                        : _vm._e(),
                    _vm._v(" "),
                    _vm.isEmpty(_vm.projects)
                        ? _c("div", [
                            _c("h4", [
                                _vm._v(
                                    _vm._s(_vm.__("No Data Found, Please search again!", "pm-pro"))
                                )
                            ])
                        ])
                        : _vm._e(),
                    _vm._v(" "),
                    _vm.hasSingleTask
                        ? _c(
                            "div",
                            [
                                _c("pm-single-task", {
                                    attrs: {
                                        taskId: parseInt(_vm.individualTaskId),
                                        projectId: parseInt(_vm.individualProjectId)
                                    },
                                    on: { onClickClose: _vm.closeTaskModal }
                                })
                            ],
                            1
                        )
                        : _vm._e()
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-0b8bbc98", esExports)
                }
            }

            /***/ }),
        /* 323 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm pm-front-end" }, [
                    _c("div", { attrs: { id: "pm-report" } }, [
                        _c("div", { staticClass: "pm-page-header" }, [
                            _c("div", { staticClass: "pm-page-title-container" }, [
                                _c("h1", [_vm._v(_vm._s(_vm.__("Overdue Task", "pm-pro")))]),
                                _vm._v(" "),
                                _vm.startDate && _vm.endDate
                                    ? _c("div", { staticClass: "pm-report-date-range" }, [
                                        _c("span", [_vm._v(_vm._s(_vm.__("Date between", "pm-pro")))]),
                                        _vm._v(" "),
                                        _c(
                                            "span",
                                            {
                                                staticClass: "pm-text-primary",
                                                attrs: { title: _vm.getFullDate(_vm.startDate) }
                                            },
                                            [_vm._v(_vm._s(_vm.shortDateFormat(_vm.startDate)))]
                                        ),
                                        _vm._v(" "),
                                        _c("span", [_vm._v(_vm._s(_vm.__("to", "pm-pro")))]),
                                        _vm._v(" "),
                                        _c(
                                            "span",
                                            {
                                                staticClass: "pm-text-primary",
                                                attrs: { title: _vm.getFullDate(_vm.endDate) }
                                            },
                                            [_vm._v(_vm._s(_vm.shortDateFormat(_vm.endDate)))]
                                        )
                                    ])
                                    : _vm._e()
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "pm-display-flex pm-filter-wrapper" }, [
                                _vm.fetchReport
                                    ? _c(
                                        "a",
                                        {
                                            staticClass: "pm--btn pm--btn-default pm-mr-10",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    _vm.show = true
                                                }
                                            }
                                        },
                                        [
                                            _c("i", {
                                                staticClass: "flaticon-filter-tool-black-shape mr-5"
                                            }),
                                            _vm._v(_vm._s(_vm.__("Filter", "pm-pro")))
                                        ]
                                    )
                                    : _vm._e(),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-has-dropdown pm-report-export-block" }, [
                                    _c(
                                        "a",
                                        {
                                            staticClass: "pm--btn pm--btn-default pm-dropdown-trigger",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.dropdownTrigger($event)
                                                }
                                            }
                                        },
                                        [
                                            _c("i", { staticClass: "flaticon-export mr-5" }),
                                            _vm._v(
                                                "\n                        " +
                                                _vm._s(_vm.__("Export", "pm-pro")) +
                                                "\n                        "
                                            ),
                                            _c("i", {
                                                staticClass:
                                                    "flaticon-arrow-down-sign-to-navigate pm-mr-0 pm-ml-10"
                                            })
                                        ]
                                    ),
                                    _vm._v(" "),
                                    _c("ul", { class: _vm.dropdownToggleClass() }, [
                                        _c("li", [
                                            _vm.fetchReport
                                                ? _c(
                                                    "a",
                                                    {
                                                        attrs: { href: "#" },
                                                        on: {
                                                            click: function($event) {
                                                                $event.preventDefault()
                                                                return _vm.exportCSV()
                                                            }
                                                        }
                                                    },
                                                    [
                                                        _c("span", {
                                                            staticClass:
                                                                "flaticon-data-export-symbol-of-a-window-with-an-arrow"
                                                        }),
                                                        _vm._v(" "),
                                                        _c("span", [
                                                            _vm._v(_vm._s(_vm.__("Export to CSV", "pm-pro")))
                                                        ])
                                                    ]
                                                )
                                                : _vm._e()
                                        ]),
                                        _vm._v(" "),
                                        _vm.fetchReport
                                            ? _c("li", [
                                                _c(
                                                    "a",
                                                    {
                                                        attrs: { href: "#" },
                                                        on: {
                                                            click: function($event) {
                                                                $event.preventDefault()
                                                                return _vm.overDuePDF()
                                                            }
                                                        }
                                                    },
                                                    [
                                                        _c("span", { staticClass: "flaticon-pdf" }),
                                                        _vm._v(" "),
                                                        _c("span", [
                                                            _vm._v(_vm._s(_vm.__("Export to PDF", "pm-pro")))
                                                        ])
                                                    ]
                                                )
                                            ])
                                            : _vm._e()
                                    ])
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-page-body" }, [
                            _c("div", { staticClass: "pm--row" }, [
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-project-panel"
                                        },
                                        [
                                            _vm._m(0),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.project_title))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Project", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-worker-panel"
                                        },
                                        [
                                            _vm._m(1),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.unsername))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Co Worker", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ]),
                                _vm._v(" "),
                                _c("div", { staticClass: "pm-col-sm-4 pm-col-xs-12" }, [
                                    _c(
                                        "div",
                                        {
                                            staticClass:
                                                "pm-card pm-card-default pm-report-meta-panel pm-report-result-panel"
                                        },
                                        [
                                            _vm._m(2),
                                            _vm._v(" "),
                                            _c("div", [
                                                _c("h4", [_vm._v(_vm._s(_vm.totalResults))]),
                                                _vm._v(" "),
                                                _c("span", [_vm._v(_vm._s(_vm.__("Total Tasks", "pm-pro")))])
                                            ])
                                        ]
                                    )
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-report-page" }, [
                            _c(
                                "div",
                                {},
                                [
                                    _c(
                                        "div",
                                        { attrs: { id: "report" } },
                                        [
                                            _vm.fetchReport
                                                ? _c("overdue-result", {
                                                    attrs: { projects: _vm.overdue_tasks }
                                                })
                                                : _vm._e(),
                                            _vm._v(" "),
                                            !_vm.fetchReport
                                                ? _c("div", { staticClass: "pm-data-load-before" }, [
                                                    _vm._m(3)
                                                ])
                                                : _vm._e()
                                        ],
                                        1
                                    ),
                                    _vm._v(" "),
                                    _vm.fetchReport
                                        ? _c("pm-pagination", {
                                            attrs: {
                                                total_pages: _vm.total_pages,
                                                current_page_number: _vm.current_page_number,
                                                component_name: "overdue_pagination"
                                            }
                                        })
                                        : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                        "modal",
                                        {
                                            attrs: { "is-active": _vm.show, width: 400 },
                                            on: {
                                                close: function($event) {
                                                    _vm.show = false
                                                }
                                            }
                                        },
                                        [
                                            _c("div", { staticClass: "pm-filter-report-modal" }, [
                                                _c(
                                                    "div",
                                                    {
                                                        staticClass: "pm-filter-modal-header",
                                                        attrs: { slot: "header" },
                                                        slot: "header"
                                                    },
                                                    [
                                                        _c("h3", { staticClass: "pm-mb-0" }, [
                                                            _vm._v(_vm._s(_vm.__("Overdue Task Filter", "pm-pro")))
                                                        ])
                                                    ]
                                                ),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "pm-filter-modal-body" }, [
                                                    _c(
                                                        "form",
                                                        {
                                                            on: {
                                                                submit: function($event) {
                                                                    $event.preventDefault()
                                                                    return _vm.filterProject()
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _c("div", [
                                                                _c(
                                                                    "div",
                                                                    {
                                                                        staticClass: "subtask-date new-task-calendar-wrap"
                                                                    },
                                                                    [
                                                                        _c("h3", [
                                                                            _vm._v(_vm._s(_vm.__("Select Date", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("div", { staticClass: "pm--row" }, [
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-col-sm-6 pm-col-xs-6" },
                                                                                [
                                                                                    _c("pm-date-picker", {
                                                                                        staticClass: "pm-datepickter-from",
                                                                                        attrs: {
                                                                                            dependency: "pm-datepickter-to",
                                                                                            placeholder: _vm.__(
                                                                                                "Due date start",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        },
                                                                                        model: {
                                                                                            value: _vm.startDate,
                                                                                            callback: function($$v) {
                                                                                                _vm.startDate = $$v
                                                                                            },
                                                                                            expression: "startDate"
                                                                                        }
                                                                                    })
                                                                                ],
                                                                                1
                                                                            ),
                                                                            _vm._v(" "),
                                                                            _c(
                                                                                "div",
                                                                                { staticClass: "pm-col-sm-6 pm-col-xs-6" },
                                                                                [
                                                                                    _c("pm-date-picker", {
                                                                                        staticClass: "pm-datepickter-to",
                                                                                        attrs: {
                                                                                            dependency: "pm-datepickter-from",
                                                                                            placeholder: _vm.__(
                                                                                                "Due date end",
                                                                                                "pm-pro"
                                                                                            )
                                                                                        },
                                                                                        model: {
                                                                                            value: _vm.endDate,
                                                                                            callback: function($$v) {
                                                                                                _vm.endDate = $$v
                                                                                            },
                                                                                            expression: "endDate"
                                                                                        }
                                                                                    })
                                                                                ],
                                                                                1
                                                                            )
                                                                        ])
                                                                    ]
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "div",
                                                                    { staticClass: "filter-input" },
                                                                    [
                                                                        _c("label", [
                                                                            _vm._v(_vm._s(_vm.__("All Project", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("multiselect", {
                                                                            attrs: {
                                                                                options: _vm.allprojects,
                                                                                multiple: false,
                                                                                searchable: true,
                                                                                "allow-empty": true,
                                                                                placeholder: _vm.select_project_text,
                                                                                label: "title",
                                                                                "track-by": "id"
                                                                            },
                                                                            model: {
                                                                                value: _vm.projects,
                                                                                callback: function($$v) {
                                                                                    _vm.projects = $$v
                                                                                },
                                                                                expression: "projects"
                                                                            }
                                                                        })
                                                                    ],
                                                                    1
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "div",
                                                                    { staticClass: "filter-input" },
                                                                    [
                                                                        _c("label", [
                                                                            _vm._v(_vm._s(_vm.__("Select User", "pm-pro")))
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("multiselect", {
                                                                            attrs: {
                                                                                options: _vm.assigned_users,
                                                                                multiple: false,
                                                                                searchable: true,
                                                                                "allow-empty": true,
                                                                                placeholder: _vm.select_user_text,
                                                                                label: "display_name",
                                                                                "track-by": "id"
                                                                            },
                                                                            model: {
                                                                                value: _vm.assign_user,
                                                                                callback: function($$v) {
                                                                                    _vm.assign_user = $$v
                                                                                },
                                                                                expression: "assign_user"
                                                                            }
                                                                        })
                                                                    ],
                                                                    1
                                                                )
                                                            ]),
                                                            _vm._v(" "),
                                                            _c("div", { staticClass: "pm-modal-form-buttons" }, [
                                                                _c("input", {
                                                                    staticClass: "button button-primary pm-doc-btn",
                                                                    attrs: { slot: "footer", type: "submit" },
                                                                    domProps: { value: _vm.run_report },
                                                                    slot: "footer"
                                                                })
                                                            ])
                                                        ]
                                                    )
                                                ])
                                            ])
                                        ]
                                    )
                                ],
                                1
                            )
                        ])
                    ])
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-resume" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-people" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-test" })
                    ])
                },
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "loadmoreanimation" }, [
                        _c("div", { staticClass: "load-spinner" }, [
                            _c("div", { staticClass: "rect1" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect2" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect3" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect4" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect5" })
                        ])
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-193790d3", esExports)
                }
            }

            /***/ }),
        /* 324 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_reports_vue__ = __webpack_require__(112);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b67fbae4_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_reports_vue__ = __webpack_require__(329);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(325)
                __webpack_require__(327)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = "data-v-b67fbae4"
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_reports_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b67fbae4_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_reports_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/reports.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-b67fbae4", Component.options)
                } else {
                    hotAPI.reload("data-v-b67fbae4", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 325 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(326);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("50eaa554", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b67fbae4\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./reports.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b67fbae4\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./reports.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 326 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm--btn[data-v-b67fbae4] {\n  font-weight: 500;\n}\n.pm--btn i[data-v-b67fbae4]:before {\n  font-size: 16px !important;\n}\n", ""]);

// exports


            /***/ }),
        /* 327 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(328);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("1b358934", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b67fbae4\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=1!./reports.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b67fbae4\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=1!./reports.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 328 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.report-page-title {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.pm-reports-container {\n  list-style: none;\n  font-weight: 300;\n}\n.pm-reports-container.pm--row {\n  margin: 20px -10px 0 !important;\n  padding: 0;\n  width: inherit;\n}\n.pm-reports-container.pm--row [class^=\"pm-col\"] {\n  padding: 0 10px;\n}\n.pm-reports-container li {\n  margin-bottom: 20px;\n}\n.pm-reports-container .pm-card .pm--btn {\n  margin-top: 15px;\n}\n.pm-reports-container .project-meta-text {\n  min-height: 65px;\n  color: #A5ACB1;\n  font-weight: 300;\n}\n@media (max-width: 480px) {\n.pm #pm-report ul.not(.pm-dropdown-menu) li {\n    flex-basis: 100%;\n    max-width: 100%;\n    margin-bottom: 30px;\n}\n}\n", ""]);

// exports


            /***/ }),
        /* 329 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    { staticClass: "pm-wrap pm-front-end" },
                    [
                        _c("div", { attrs: { id: "pm-report" } }, [
                            _c("div", { staticClass: "pm-report-input" }, [
                                _c(
                                    "ul",
                                    {
                                        staticClass:
                                            "pm--row pm-gutter-20 pm-text-center pm-reports-container"
                                    },
                                    [
                                        _c("li", { staticClass: "pm-col-lg-3 pm-col-sm-4 pm-col-xs-6" }, [
                                            _c(
                                                "div",
                                                { staticClass: "pm-card pm-card-default card-overdue-task" },
                                                [
                                                    _c("img", {
                                                        attrs: {
                                                            src: __webpack_require__(330),
                                                            height: "50"
                                                        }
                                                    }),
                                                    _vm._v(" "),
                                                    _c("br"),
                                                    _vm._v(" "),
                                                    _c("h3", [
                                                        _vm._v(
                                                            " " + _vm._s(_vm.__("Overdue Tasks", "pm-pro")) + " "
                                                        )
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("div", {
                                                        staticClass: "project-meta-text",
                                                        domProps: {
                                                            innerHTML: _vm._s(
                                                                _vm.__(
                                                                    "Generate a report based on <strong>tasks</strong> which are <strong>pending</strong> beyond due dates.",
                                                                    "pm-pro"
                                                                )
                                                            )
                                                        }
                                                    }),
                                                    _vm._v(" "),
                                                    _c(
                                                        "router-link",
                                                        {
                                                            staticClass: "pm--btn pm--btn-default",
                                                            attrs: { to: { name: "overdue-tasks" }, tag: "a" }
                                                        },
                                                        [
                                                            _c("i", { staticClass: "flaticon-eye" }),
                                                            _vm._v(
                                                                "\n                            " +
                                                                _vm._s(_vm.__("View Full Report", "pm-pro")) +
                                                                "\n                        "
                                                            )
                                                        ]
                                                    )
                                                ],
                                                1
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c("li", { staticClass: "pm-col-lg-3 pm-col-sm-4 pm-col-xs-6" }, [
                                            _c(
                                                "div",
                                                {
                                                    staticClass: "pm-card pm-card-default card-completed-tasks"
                                                },
                                                [
                                                    _c("img", {
                                                        attrs: {
                                                            src: __webpack_require__(331),
                                                            height: "50"
                                                        }
                                                    }),
                                                    _c("br"),
                                                    _vm._v(" "),
                                                    _c("h3", [
                                                        _vm._v(_vm._s(_vm.__("Complete Task", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("div", {
                                                        staticClass: "project-meta-text",
                                                        domProps: {
                                                            innerHTML: _vm._s(
                                                                _vm.__(
                                                                    "Generate a report from <strong>tasks</strong> which were <strong>completed</strong>.",
                                                                    "pm-pro"
                                                                )
                                                            )
                                                        }
                                                    }),
                                                    _vm._v(" "),
                                                    _c(
                                                        "router-link",
                                                        {
                                                            staticClass: "pm--btn pm--btn-default",
                                                            attrs: { to: { name: "completed-tasks" }, tag: "a" }
                                                        },
                                                        [
                                                            _c("i", { staticClass: "flaticon-eye" }),
                                                            _vm._v(
                                                                "\n                            " +
                                                                _vm._s(_vm.__("View Full Report", "pm-pro")) +
                                                                "\n                        "
                                                            )
                                                        ]
                                                    )
                                                ],
                                                1
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c("li", { staticClass: "pm-col-lg-3 pm-col-sm-4 pm-col-xs-6" }, [
                                            _c(
                                                "div",
                                                {
                                                    staticClass:
                                                        "pm-card pm-card-default card-report-user-activities"
                                                },
                                                [
                                                    _c("img", {
                                                        attrs: {
                                                            src: __webpack_require__(332),
                                                            height: "50"
                                                        }
                                                    }),
                                                    _vm._v(" "),
                                                    _c("br"),
                                                    _vm._v(" "),
                                                    _c("h3", [
                                                        _vm._v(_vm._s(_vm.__("User Activities", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("div", {
                                                        staticClass: "project-meta-text",
                                                        domProps: {
                                                            innerHTML: _vm._s(
                                                                _vm.__(
                                                                    "Create a report based on an employee or <strong>all employee</strong> activity on <strong>tasks</strong>.",
                                                                    "pm-pro"
                                                                )
                                                            )
                                                        }
                                                    }),
                                                    _vm._v(" "),
                                                    _c(
                                                        "router-link",
                                                        {
                                                            staticClass: "pm--btn pm--btn-default",
                                                            attrs: {
                                                                to: { name: "report-user-activities" },
                                                                tag: "a"
                                                            }
                                                        },
                                                        [
                                                            _c("i", { staticClass: "flaticon-eye" }),
                                                            _vm._v(
                                                                "\n                            " +
                                                                _vm._s(_vm.__("View Full Report", "pm-pro")) +
                                                                "\n                        "
                                                            )
                                                        ]
                                                    )
                                                ],
                                                1
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c("li", { staticClass: "pm-col-lg-3 pm-col-sm-6 pm-col-xs-6" }, [
                                            _c(
                                                "div",
                                                {
                                                    staticClass: "pm-card pm-card-default card-milestone-tasks"
                                                },
                                                [
                                                    _c("img", {
                                                        attrs: {
                                                            src: __webpack_require__(333),
                                                            height: "50"
                                                        }
                                                    }),
                                                    _vm._v(" "),
                                                    _c("br"),
                                                    _vm._v(" "),
                                                    _c("h3", [
                                                        _vm._v(
                                                            " " +
                                                            _vm._s(_vm.__("Task by Milestone", "pm-pro")) +
                                                            " "
                                                        )
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("div", {
                                                        staticClass: "project-meta-text",
                                                        domProps: {
                                                            innerHTML: _vm._s(
                                                                _vm.__(
                                                                    "Browse   <strong>tasks</strong> reports according to <strong>Milestones</strong> (CSV exportable).",
                                                                    "pm-pro"
                                                                )
                                                            )
                                                        }
                                                    }),
                                                    _vm._v(" "),
                                                    _c(
                                                        "router-link",
                                                        {
                                                            staticClass: "pm--btn pm--btn-default",
                                                            attrs: { to: { name: "milestone-tasks" }, tag: "a" }
                                                        },
                                                        [
                                                            _c("i", { staticClass: "flaticon-eye" }),
                                                            _vm._v(
                                                                "\n                            " +
                                                                _vm._s(_vm.__("View Full Report", "pm-pro")) +
                                                                "\n                        "
                                                            )
                                                        ]
                                                    )
                                                ],
                                                1
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c("li", { staticClass: "pm-col-lg-3 pm-col-sm-6 pm-col-xs-6" }, [
                                            _c(
                                                "div",
                                                {
                                                    staticClass: "pm-card pm-card-default card-unassigned-tasks"
                                                },
                                                [
                                                    _c("img", {
                                                        attrs: {
                                                            src: __webpack_require__(334),
                                                            height: "50"
                                                        }
                                                    }),
                                                    _vm._v(" "),
                                                    _c("br"),
                                                    _vm._v(" "),
                                                    _c("h3", [
                                                        _vm._v(_vm._s(_vm.__("Unassigned Task", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("div", {
                                                        staticClass: "project-meta-text",
                                                        domProps: {
                                                            innerHTML: _vm._s(
                                                                _vm.__(
                                                                    "Find out <strong>all tasks</strong> whichwere not  <strong>assigned</strong> to any employee.",
                                                                    "pm-pro"
                                                                )
                                                            )
                                                        }
                                                    }),
                                                    _vm._v(" "),
                                                    _c(
                                                        "router-link",
                                                        {
                                                            staticClass: "pm--btn pm--btn-default",
                                                            attrs: { to: { name: "unassigned-tasks" }, tag: "a" }
                                                        },
                                                        [
                                                            _c("i", { staticClass: "flaticon-eye" }),
                                                            _vm._v(
                                                                "\n                            " +
                                                                _vm._s(_vm.__("View Full Report", "pm-pro")) +
                                                                "\n                        "
                                                            )
                                                        ]
                                                    )
                                                ],
                                                1
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c(
                                            "li",
                                            { staticClass: "pm-col-lg-6 pm-col-sm-12" },
                                            [
                                                _c("pm-do-action", {
                                                    attrs: { hook: "after-task-report-contenet" }
                                                })
                                            ],
                                            1
                                        ),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "clearfix" })
                                    ]
                                )
                            ])
                        ]),
                        _vm._v(" "),
                        _c("router-view")
                    ],
                    1
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-b67fbae4", esExports)
                }
            }

            /***/ }),
        /* 330 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = __webpack_require__.p + "../images/overdue_task.svg?d74483727458308bc13cc6535bdb08b6";

            /***/ }),
        /* 331 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = __webpack_require__.p + "../images/completed_task.svg?6cb626042bb04f118a956c5fb4169ee8";

            /***/ }),
        /* 332 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = __webpack_require__.p + "../images/user_activity.svg?3b381b9a2cba5f8ead8059144aba7ca4";

            /***/ }),
        /* 333 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = __webpack_require__.p + "../images/taskby_milestone.svg?40505893bf2b43973c0759910313222b";

            /***/ }),
        /* 334 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = __webpack_require__.p + "../images/unassign_task.svg?8639aca0a08a98a127425507aa725ed2";

            /***/ }),
        /* 335 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_main_vue__ = __webpack_require__(113);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4fc1d17a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_main_vue__ = __webpack_require__(336);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_main_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4fc1d17a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_main_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/reports/main.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-4fc1d17a", Component.options)
                } else {
                    hotAPI.reload("data-v-4fc1d17a", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 336 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("router-view")
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-4fc1d17a", esExports)
                }
            }

            /***/ }),
        /* 337 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _mixin = __webpack_require__(338);

            var _mixin2 = _interopRequireDefault(_mixin);

            var _progress = __webpack_require__(339);

            var _progress2 = _interopRequireDefault(_progress);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevsPmProRegisterModule("progress", 'progress');

            PmProMixin.progress = _mixin2.default;

// const progress_component = resolve => {
//     require.ensure(['./progress.vue'], () => {
            //         resolve(require('./progress.vue'));
            //     });
// }

            weDevsPMRegisterChildrenRoute('project_root', [{
                path: '/progress',
                component: _progress2.default,
                name: 'progress',
                meta: {
                    permission: function permission() {
                        if (pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                            return true;
                        }

                        return false;
                    },
                    label: __('Progress', 'pm-pro'),
                    order: 6
                },
                children: [{
                    path: 'pages/:current_page_number',
                    components: {
                        'project-lists': _progress2.default
                    },
                    name: 'progress_pagination',
                    meta: {
                        permission: function permission() {
                            if (pmUserCanAccess(PM_Vars.manager_cap_slug)) {
                                return true;
                            }

                            return false;
                        }
                    }
                }]
            }]);

            /***/ }),
        /* 338 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            /***/ }),
        /* 339 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_progress_vue__ = __webpack_require__(114);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_68b65f2e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_progress_vue__ = __webpack_require__(340);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_progress_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_68b65f2e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_progress_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/progress/progress.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-68b65f2e", Component.options)
                } else {
                    hotAPI.reload("data-v-68b65f2e", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 340 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "wrap pm pm-front-end" }, [
                    !_vm.isFetchProgress
                        ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(0)])
                        : _c("div", { attrs: { id: "pm-progress-wrap" } }, [
                            _c("h2", [_vm._v(_vm._s(_vm.__("Progress", "pm-pro")))]),
                            _vm._v(" "),
                            _vm.activities.length
                                ? _c(
                                    "ul",
                                    { staticClass: "pm-activity dash" },
                                    _vm._l(_vm.activities, function(group) {
                                        return _c(
                                            "li",
                                            { key: group.id, staticClass: "pm-progress-wrap" },
                                            [
                                                _c("div", { staticClass: "pm-activity-heads" }, [
                                                    _c("span", [
                                                        _vm._v(
                                                            _vm._s(
                                                                _vm.actiivtyGroupDate(group.date, "MMM DD YYYY")
                                                            )
                                                        )
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c(
                                                    "ul",
                                                    _vm._l(group.activities, function(activity, key) {
                                                        return _c(
                                                            "li",
                                                            { key: key },
                                                            [
                                                                _c(
                                                                    "a",
                                                                    {
                                                                        staticClass: "pm-progress-label",
                                                                        attrs: {
                                                                            href: _vm.project_url(
                                                                                activity.project.data.id
                                                                            )
                                                                        }
                                                                    },
                                                                    [_vm._v(_vm._s(activity.project.data.title))]
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "span",
                                                                    {
                                                                        staticClass: "pm-progress-label",
                                                                        class: "pm-" + activity.action_type
                                                                    },
                                                                    [_vm._v(_vm._s(activity.action_type))]
                                                                ),
                                                                _vm._v(" "),
                                                                _c("activity-parser", {
                                                                    attrs: { activity: activity }
                                                                }),
                                                                _vm._v(" "),
                                                                _c("span", { staticClass: "date" }, [
                                                                    _c(
                                                                        "time",
                                                                        {
                                                                            attrs: {
                                                                                datetime: _vm.pmDateISO8601Format(
                                                                                    activity.committed_at.date,
                                                                                    activity.committed_at.time
                                                                                ),
                                                                                title: _vm.pmDateISO8601Format(
                                                                                    activity.committed_at.date,
                                                                                    activity.committed_at.time
                                                                                )
                                                                            }
                                                                        },
                                                                        [
                                                                            _vm._v(
                                                                                "\n                                " +
                                                                                _vm._s(activity.committed_at.date) +
                                                                                " " +
                                                                                _vm._s(activity.committed_at.time) +
                                                                                "\n                            "
                                                                            )
                                                                        ]
                                                                    )
                                                                ])
                                                            ],
                                                            1
                                                        )
                                                    }),
                                                    0
                                                )
                                            ]
                                        )
                                    }),
                                    0
                                )
                                : _vm._e(),
                            _vm._v(" "),
                            _vm.total_activity > _vm.loaded_activities
                                ? _c(
                                    "a",
                                    {
                                        staticClass: "button pm-load-more",
                                        attrs: { href: "#" },
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                                return _vm.loadMore()
                                            }
                                        }
                                    },
                                    [_vm._v(_vm._s(_vm.__("Load More ...", "pm-pro")))]
                                )
                                : _vm._e(),
                            _vm._v(" "),
                            _c("span", {
                                directives: [
                                    {
                                        name: "show",
                                        rawName: "v-show",
                                        value: _vm.show_spinner,
                                        expression: "show_spinner"
                                    }
                                ],
                                staticClass: "pm-spinner"
                            }),
                            _vm._v(" "),
                            !_vm.activities.length
                                ? _c("div", { staticClass: "no-activity" }, [
                                    _vm._v(" " + _vm._s(_vm.__("No activity found", "pm")) + " ")
                                ])
                                : _vm._e()
                        ])
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "loadmoreanimation" }, [
                        _c("div", { staticClass: "load-spinner" }, [
                            _c("div", { staticClass: "rect1" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect2" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect3" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect4" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect5" })
                        ])
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-68b65f2e", esExports)
                }
            }

            /***/ }),
        /* 341 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            /***/ }),
        /* 342 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = pm.Vue.mixin({
                data: function data() {
                    return {};
                },

                methods: {
                    isActiveModuel: function isActiveModuel(moduleSlug) {
                        var isActive = PM_Pro_Vars.active_modules.indexOf(moduleSlug);

                        if (isActive == -1) {
                            return false;
                        }

                        return true;
                    },
                    isInvoiceModuelActive: function isInvoiceModuelActive() {
                        return this.isActiveModuel('Invoice/Invoice.php');
                    },
                    reportsProBtnText: function reportsProBtnText() {
                        return __('PDF', 'pm-pro');
                    },
                    reportsProUrl: function reportsProUrl() {
                        return '#';
                    },
                    exportCsvFile: function exportCsvFile(xhr, response) {
                        if ('html/csv' === xhr.getResponseHeader('Content-type')) {
                            var filename = "";
                            var disposition = xhr.getResponseHeader('Content-Disposition');
                            if (disposition && disposition.indexOf('attachment') !== -1) {
                                var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                                var matches = filenameRegex.exec(disposition);
                                if (matches != null && matches[1]) {
                                    filename = matches[1].replace(/['"]/g, '');
                                }
                            }
                            var type = xhr.getResponseHeader('Content-Type');
                            var blob = typeof File === 'function' ? new File([response], filename, { type: type }) : new Blob([response], { type: type });
                            if (typeof window.navigator.msSaveBlob !== 'undefined') {
// IE workaround for "HTML7007: One or more blob URLs were revoked by closing the blob for which they were created. These URLs will no longer resolve as the data backing the URL has been freed."
                                window.navigator.msSaveBlob(blob, filename);
                            } else {
                                var URL = window.URL || window.webkitURL;
                                var downloadUrl = URL.createObjectURL(blob);
                                if (filename) {
// use HTML5 a[download] attribute to specify filename
                                    var a = document.createElement("a");
// safari doesn't support this yet
                                    if (typeof a.download === 'undefined') {
                                        window.location = downloadUrl;
                                    } else {
                                        a.href = downloadUrl;
                                        a.download = filename;
                                        document.body.appendChild(a);
                                        a.click();
                                    }
                                } else {
                                    window.location = downloadUrl;
                                }
                                setTimeout(function () {
                                    URL.revokeObjectURL(downloadUrl);
                                }, 100); // cleanup
                            }
                        }
                    }
                }
            });

            /***/ }),
        /* 343 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _modal = __webpack_require__(344);

            var _modal2 = _interopRequireDefault(_modal);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            pm.Vue.component('pm-modal', _modal2.default);

            /***/ }),
        /* 344 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_modal_vue__ = __webpack_require__(115);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2d0b4a0c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_modal_vue__ = __webpack_require__(345);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_modal_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2d0b4a0c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_modal_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/common/modal.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-2d0b4a0c", Component.options)
                } else {
                    hotAPI.reload("data-v-2d0b4a0c", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 345 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("transition", { attrs: { name: "modal" } }, [
                    _c(
                        "div",
                        {
                            directives: [
                                {
                                    name: "show",
                                    rawName: "v-show",
                                    value: _vm.isActive,
                                    expression: "isActive"
                                }
                            ],
                            staticClass: "modal-mask",
                            class: _vm.classes
                        },
                        [
                            _c("div", { staticClass: "modal-wrapper" }, [
                                _c("div", { staticClass: "modal-container", style: _vm.styles }, [
                                    _c(
                                        "div",
                                        { staticClass: "modal-header" },
                                        [
                                            _c("span", { staticClass: "pm-right close-vue-modal" }, [
                                                _c(
                                                    "a",
                                                    {
                                                        on: {
                                                            click: function($event) {
                                                                return _vm.$emit("close")
                                                            }
                                                        }
                                                    },
                                                    [_vm._v("X")]
                                                )
                                            ]),
                                            _vm._v(" "),
                                            _vm._t("header")
                                        ],
                                        2
                                    ),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "modal-body" }, [_vm._t("default")], 2),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "modal-footer" }, [_vm._t("footer")], 2)
                                ])
                            ])
                        ]
                    )
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-2d0b4a0c", esExports)
                }
            }

            /***/ }),
        /* 346 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__ = __webpack_require__(116);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_24fef4ce_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__ = __webpack_require__(387);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_24fef4ce_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/App.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-24fef4ce", Component.options)
                } else {
                    hotAPI.reload("data-v-24fef4ce", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 347 */
        /***/ (function(module, exports, __webpack_require__) {

            var map = {
                "./calendar/store.js": 348,
                "./duplicate/store.js": 349,
                "./front-end/store.js": 350,
                "./module-lists/store.js": 351,
                "./progress/store.js": 352,
                "./project-files/store.js": 353,
                "./project-settings/store.js": 354,
                "./reports/store.js": 355,
                "./search/store.js": 356,
                "./task-label/store.js": 357,
                "./update/store.js": 358
            };
            function webpackContext(req) {
                return __webpack_require__(webpackContextResolve(req));
            };
            function webpackContextResolve(req) {
                var id = map[req];
                if(!(id + 1)) // check for number or string
                    throw new Error("Cannot find module '" + req + "'.");
                return id;
            };
            webpackContext.keys = function webpackContextKeys() {
                return Object.keys(map);
            };
            webpackContext.resolve = webpackContextResolve;
            module.exports = webpackContext;
            webpackContext.id = 347;

            /***/ }),
        /* 348 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            /**
             * Make sure to call pm.Vue.use(Vuex) first if using a vuex module system
             */
            exports.default = {

                state: {
                    isFetchCalendar: false,
                    calendarProject: {},
                    calendarProjects: [],
                    calendarUsers: []
                },

                mutations: {
                    setCalendarProject: function setCalendarProject(state, calendarProject) {
                        state.calendarProject = calendarProject;
                    },
                    setCalendarProjects: function setCalendarProjects(state, calendarProjects) {
                        state.calendarProjects = calendarProjects;
// state.calendarProjects.unshift({
//     id: 0,
//     title: __('All Projects', 'wedevs-project-manager')
// })
                    },
                    setCalendarUsers: function setCalendarUsers(state, calendarUsers) {
                        state.calendarUsers = calendarUsers;
                    },


//optional you should remove it next time
                    setCalendarViewFlag: function setCalendarViewFlag(state) {
                        this.state.calendarFlag = true;
                    },


//optional you should remove it next time
                    removeCalendarViewFlag: function removeCalendarViewFlag(state) {
                        this.state.calendarFlag = false;
                    }
                }
            };

            /***/ }),
        /* 349 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            /**
             * Make sure to call pm.Vue.use(Vuex) first if using a vuex module system
             */
            exports.default = {

                state: {},

                mutations: {}
            };

            /***/ }),
        /* 350 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {},
                mutations: {}
            };

            /***/ }),
        /* 351 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            /**
             * Make sure to call pm.Vue.use(Vuex) first if using a vuex module system
             */
            exports.default = {

                state: {
                    module_lists: [],
                    activeModules: [],
                    getIndex: function getIndex(itemList, id, slug) {
                        var index = false;

                        itemList.forEach(function (item, key) {
                            if (item[slug] == id) {
                                index = key;
                            }
                        });

                        return index;
                    }
                },

                mutations: {
                    setModuleLists: function setModuleLists(state, module_lists) {
                        state.module_lists = module_lists;
                        state.activeModules = module_lists.active;
                    },
                    afterActiveModules: function afterActiveModules(state, lists) {
                        state.activeModules.push(lists);
                    },
                    afterDeactiveModules: function afterDeactiveModules(state, lists) {
                        var index = state.getIndex(state.activeModules, lists.path, 'path');

                        if (index !== false) {
                            state.activeModules.splice(index, 1);
                        }
                    }
                }
            };

            /***/ }),
        /* 352 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {
                    activities_data: [],
                    activities_meta: {},
                    isFetchProgress: false
                },
                mutations: {
                    setProgress: function setProgress(state, res) {

//state.activities_data = [];
                        state.activities_data = state.activities_data.concat(res.data);
                        state.activities_meta = res.meta;
                        state.isFetchProgress = true;
                    }
                }
            };

            /***/ }),
        /* 353 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {
                    isFolder: false,
                    isFile: false,
                    isDoc: false,
                    isLink: false,
                    files: [],
                    file: {},
                    currentFile: {},
                    revisionStatus: false,
                    meta: {},
                    getIndex: function getIndex(itemList, id, slug) {
                        var index = false;

                        itemList.forEach(function (item, key) {
                            if (item[slug] == id) {
                                index = key;
                            }
                        });

                        return index;
                    }
                },
                mutations: {
                    setRevision: function setRevision(state, revision) {
                        state.file.title = revision.title;
                        state.file.description = revision.description;
                        state.revisionStatus = true;
                    },
                    resetRevision: function resetRevision(state) {

                        state.file.title = state.currentFile.title;
                        state.file.description = state.currentFile.description;
                        state.revisionStatus = false;
                    },
                    showHideRevisionStatus: function showHideRevisionStatus(state, status) {
                        state.revisionStatus = status;
                    },
                    afterDeleteComment: function afterDeleteComment(state, data) {
                        var comment_index = state.getIndex(state.file.comments.data, data.comment_id, 'id');
                        state.file.comments.data.splice(comment_index, 1);
                    },
                    afterNewComment: function afterNewComment(state, comment) {
                        state.file.comments.data.push(comment);
                    },
                    afterUpdateComment: function afterUpdateComment(state, comment) {
                        var index = state.getIndex(state.file.comments.data, comment.id, 'id');

                        state.file.comments.data.splice(index, 1, comment);
                    },
                    setAFiles: function setAFiles(state, files) {
                        files.forEach(function (file) {
                            state.files.push(file);
                        });
                    },
                    createAfterDoc: function createAfterDoc(state, file) {
                        state.files.push(file);
                    },
                    createAfterLink: function createAfterLink(state, link) {
                        state.files.push(link);
                    },
                    setFile: function setFile(state, file) {
                        state.files = [];
                        state.files.push(file);
                        state.file = file;
                        state.currentFile = jQuery.extend(true, {}, file);
                    },
                    setFiles: function setFiles(state, files) {
                        state.files = files.data;
                        state.meta = files.meta;
                    },
                    setFolderViewStatus: function setFolderViewStatus(state, status) {
                        state.isFile = false;
                        state.isDoc = false;
                        state.isLink = false;
                        if (status === 'toggle') {
                            state.isFolder = state.isFolder ? false : true;
                        } else {
                            state.isFolder = status;
                        }
                    },
                    setFileViewStatus: function setFileViewStatus(state, status) {
                        state.isFolder = false;
                        state.isDoc = false;
                        state.isLink = false;
                        if (status === 'toggle') {
                            state.isFile = state.isFile ? false : true;
                        } else {
                            state.isFile = status;
                        }
                    },
                    setDocViewStatus: function setDocViewStatus(state, status) {
                        state.isFolder = false;
                        state.isFile = false;
                        state.isLink = false;
                        if (status === 'toggle') {
                            state.isDoc = state.isDoc ? false : true;
                        } else {
                            state.isDoc = status;
                        }
                    },
                    afterUpdateFolder: function afterUpdateFolder(state, file) {
                        var index = state.getIndex(state.files, file.id, 'id');
                        state.files.splice(index, 1, file);
                    },
                    afterCreateFolder: function afterCreateFolder(state, folders) {
                        state.files.push(folders);
                    },
                    updateEditMode: function updateEditMode(state, data) {
                        var index = state.getIndex(state.files, data.id, 'id');
                        state.files[index].editMode = data.status;

                        if (typeof data.callback === 'function') {
                            data.callback();
                        }
                    },
                    afterDeleteFolder: function afterDeleteFolder(state, id) {
                        var index = state.getIndex(state.files, id, 'id');
                        state.files.splice(index, 1);
                    },
                    setLinkViewStatus: function setLinkViewStatus(state, status) {
                        state.isFolder = false;
                        state.isFile = false;
                        state.isDoc = false;
                        if (status === 'toggle') {
                            state.isLink = state.isLink ? false : true;
                        } else {
                            state.isLink = status;
                        }
                    },
                    receiveFile: function receiveFile(state, data) {
                        var res = data.res;
                        var receive = data.receive;
                        var setFileindex = state.getIndex(state.files, receive.source, 'id');
                        var senderFileindex = state.getIndex(state.files, res.destination, 'id');
                        var setIndex = false;
                        var reverseIndex = 0;
                        var receiveOrders = [];

                        console.log(setFileindex);
                        console.log(senderFileindex);
                    }
                }
            };

            /***/ }),
        /* 354 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _toConsumableArray2 = __webpack_require__(42);

            var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            exports.default = {
                state: {
                    getIndex: function getIndex(itemList, id, slug) {
                        var index = false;

                        if (typeof itemList === 'undefined') return index;

                        itemList.forEach(function (item, key) {
                            if (item[slug] == id) {
                                index = key;
                            }
                        });

                        return index;
                    }
                },

                mutations: {
                    setLabel: function setLabel(state, data) {

                        var index = state.getIndex(this.state.projects, data.project_id, 'id');
                        var projectLabels = this.state.project.labels;

                        if (!this.state.projects[index].labels) {
                            this.state.projects[index].labels = {
                                data: []
                            };
                        }

                        if (projectLabels) {
                            this.state.projects[index].labels = {
                                data: [].concat((0, _toConsumableArray3.default)(projectLabels.data))
                            };
                        }

                        this.state.projects[index].labels.data.unshift(data.label);

                        if (typeof this.state.project.id !== 'undefined') {
                            this.state.project.labels.data.unshift(data.label);
                        }
                    },
                    updateLabel: function updateLabel(state, data) {
                        var index = state.getIndex(this.state.projects, data.project_id, 'id');

                        var projectLabels = this.state.project.labels;

                        if (!this.state.projects[index].labels) {
                            this.state.projects[index].labels = {
                                data: []
                            };
                        }

                        if (projectLabels) {
                            this.state.projects[index].labels = {
                                data: [].concat((0, _toConsumableArray3.default)(projectLabels.data))
                            };
                        }

                        var labelIndex = state.getIndex(this.state.projects[index].labels.data, data.label_id, 'id');

                        this.state.projects[index].labels.data[labelIndex] = data.label;

                        if (typeof this.state.project.id !== 'undefined') {
                            labelIndex = state.getIndex(this.state.project.labels.data, data.label_id, 'id');
                            this.state.project.labels.data[labelIndex] = data.label;
                        }
                    },
                    removeLabel: function removeLabel(state, data) {
                        var index = state.getIndex(this.state.projects, data.project_id, 'id');

                        var projectLabels = this.state.project.labels;

                        if (!this.state.projects[index].labels) {
                            this.state.projects[index].labels = {
                                data: []
                            };
                        }

                        if (projectLabels) {
                            this.state.projects[index].labels = {
                                data: [].concat((0, _toConsumableArray3.default)(projectLabels.data))
                            };
                        }

                        var labelIndex = state.getIndex(this.state.projects[index].labels.data, data.label_id, 'id');

                        this.state.projects[index].labels.data.splice(labelIndex, 1);

                        if (typeof this.state.project.id !== 'undefined') {
                            var pLabelIndex = state.getIndex(this.state.project.labels.data, data.label_id, 'id');
                            this.state.project.labels.data.splice(pLabelIndex, 1);
                        }
                    }
                }
            };

            /***/ }),
        /* 355 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {
                    assigned_users: [],
                    overdueTasks: [],
                    completeTasks: [],
                    userTasks: [],
                    projectTasks: [],
                    milestoneTasks: [],
                    unassignedTasks: [],
                    advanceTasks: [],
                    summary: []
                },
                mutations: {
                    setAssigneduser: function setAssigneduser(state, users) {
                        state.assigned_users = users;
                    },
                    setOverdueTasks: function setOverdueTasks(state, reports) {
                        state.overdueTasks = reports;
                    },
                    setCompleteTasks: function setCompleteTasks(state, reports) {
                        state.completeTasks = reports;
                    },
                    setUserTasks: function setUserTasks(state, reports) {
                        state.userTasks = reports;
                    },
                    setProjectTasks: function setProjectTasks(state, reports) {
                        state.projectTasks = reports;
                    },
                    setMilestoneTasks: function setMilestoneTasks(state, reports) {
                        state.milestoneTasks = reports;
                    },
                    setUnassignedTasks: function setUnassignedTasks(state, reports) {
                        state.unassignedTasks = reports;
                    },
                    setAdvanceTasks: function setAdvanceTasks(state, reports) {
                        state.advanceTasks = reports;
                    },
                    setSummary: function setSummary(state, reports) {
                        state.summary = reports;
                    }
                }
            };

            /***/ }),
        /* 356 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {
                    results: []
                },
                mutations: {
                    setResults: function setResults(state, results) {
                        state.results = results;
                    }
                }
            };

            /***/ }),
        /* 357 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {
                    getIndex: function getIndex(itemList, id, slug) {
                        var index = false;

                        if (typeof itemList === 'undefined') return index;

                        itemList.forEach(function (item, key) {
                            if (item[slug] == id) {
                                index = key;
                            }
                        });

                        return index;
                    }
                },

                mutations: {}
            };

            /***/ }),
        /* 358 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            /**
             * Make sure to call pm.Vue.use(Vuex) first if using a vuex module system
             */
            exports.default = {

                state: {},

                mutations: {}
            };

            /***/ }),
        /* 359 */
        /***/ (function(module, exports, __webpack_require__) {

            var map = {
                "./Custom_Fields/views/assets/src/store/store": 360,
                "./Gantt/views/assets/src/store/store": 361,
                "./Invoice/views/assets/src/store/store": 362,
                "./Kanboard/views/assets/src/store/store": 363,
                "./PM_Pro_Buddypress/views/assets/src/store/store": 364,
                "./Sprint/views/assets/src/store/store": 365,
                "./Stripe/views/assets/src/store/store": 366,
                "./Sub_Tasks/views/assets/src/store/store": 367,
                "./Time_Tracker/views/assets/src/store/store": 368,
                "./Woo_Project/views/assets/src/store/store": 369
            };
            function webpackContext(req) {
                return __webpack_require__(webpackContextResolve(req));
            };
            function webpackContextResolve(req) {
                var id = map[req];
                if(!(id + 1)) // check for number or string
                    throw new Error("Cannot find module '" + req + "'.");
                return id;
            };
            webpackContext.keys = function webpackContextKeys() {
                return Object.keys(map);
            };
            webpackContext.resolve = webpackContextResolve;
            module.exports = webpackContext;
            webpackContext.id = 359;

            /***/ }),
        /* 360 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony default export */ __webpack_exports__["default"] = ({
                state: {
                    fields: [],
                    getIndex: function ( itemList, id, slug) {
                        var index = false;

                        itemList.forEach(function(item, key) {
                            if (item[slug] == id) {
                                index = key;
                            }
                        });

                        return index;
                    },
                },

                mutations: {
                    setFields (state, fields) {
                        state.fields = [];
                        state.fields = fields
                    },

                    setField (state, field) {
                        state.fields.push(field)
                    },

                    updateField (state, field) {
                        let index = state.getIndex(state.fields, field.id, 'id');
                        Object.assign(state.fields[index], field )
                    },

                    deleteField (state, id) {
                        let index = state.getIndex(state.fields, id, 'id');
                        state.fields.splice(index,1);
                    }
                }
            });



            /***/ }),
        /* 361 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {
                    tasks: [],
                    links: [],
                    isActiveListForm: false,
                    isActiveTaskForm: false,
                    list_id: false,
                    ganttLists: [],
                    updatedList: {},
                    updatedTask: {},
                    newTask: true,
                    getIndex: function getIndex(itemList, id, slug) {
                        var index = false;

                        jQuery.each(itemList, function (key, item) {

                            if (item[slug] == id) {
                                index = key;
                            }
                        });

                        return index;
                    }
                },

                mutations: {
                    setTasks: function setTasks(state, tasks) {
                        state.tasks = [];
                        tasks.forEach(function (task) {
                            state.tasks.push(task);
                        });
                    },
                    setLinks: function setLinks(state, links) {
                        links.forEach(function (link) {
                            state.links.push(link);
                        });
                    },
                    changeListFormStatus: function changeListFormStatus(state, status) {
                        state.isActiveListForm = status;
                        if (status === false) {
                            state.updatedList = {};
                        }
                    },
                    afterCreateList: function afterCreateList(state, list) {
                        state.tasks.push(list);
                    },
                    afterCreateTask: function afterCreateTask(state, data) {
                        var index = state.getIndex(state.ganttLists, data.listId, 'id');
                        state.ganttLists[index].incomplete_tasks.data.push(data.task);
                    },
                    changeTaskFormStatus: function changeTaskFormStatus(state, status) {
                        state.isActiveTaskForm = status;

                        if (status === false) {
                            state.updatedTask = {};
                        }
                    },
                    setListId: function setListId(state, list_id) {
                        state.list_id = list_id;
                    },
                    setList: function setList(state, lists) {
                        state.ganttLists = lists;
                    },
                    afterCreateNewList: function afterCreateNewList(state, list) {
                        state.ganttLists.push(list);
                    },
                    setUpdateList: function setUpdateList(state, list) {
                        state.updatedList = list;
                    },
                    afterUpdateList: function afterUpdateList(state, list) {

                        var index = state.getIndex(state.ganttLists, list.list_id, 'id');

//state.ganttLists[index] = list;


// var index = state.getIndex(state.lists, list.id, 'id');
                        var incomplete_tasks = state.ganttLists[index].incomplete_tasks;
                        var merge_list = jQuery.extend(true, state.ganttLists[index], list);
                        merge_list.incomplete_tasks = incomplete_tasks;

                        state.ganttLists.splice(index, 1, merge_list);

                        state.updatedList = {};
                    },
                    setUpdateTask: function setUpdateTask(state, task) {
                        state.updatedTask = task;
                    },
                    afterUpdateTask: function afterUpdateTask(state, task) {
                        var index = state.getIndex(state.ganttLists, task.task_list_id, 'id');
                        var task_index = state.getIndex(state.ganttLists[index].incomplete_tasks.data, task.id, 'id');

                        state.ganttLists[index].incomplete_tasks.data[task_index] = task;
                        state.updatedTask = {};
                    },
                    deleteTask: function deleteTask(state, task) {
                        var index = state.getIndex(state.ganttLists, task.id, 'id');

                        state.ganttLists.splice(index, 1);
                    },

                    afterDeleteTask: function afterDeleteTask(state, data) {
                        var list_index = state.getIndex(state.ganttLists, data.list.id, 'id');

                        if (data.task.status === false || data.task.status === 'incomplete') {
                            var task_index = state.getIndex(state.ganttLists[list_index].incomplete_tasks.data, data.task.id, 'id');
                            state.ganttLists[list_index].incomplete_tasks.data.splice(task_index, 1);
                            state.ganttLists[list_index].meta.total_incomplete_tasks = state.ganttLists[list_index].meta.total_incomplete_tasks - 1;
                        } else {
                            var task_index = state.getIndex(state.ganttLists[list_index].complete_tasks.data, data.task.id, 'id');
                            state.ganttLists[list_index].complete_tasks.data.splice(task_index, 1);
                            state.ganttLists[list_index].meta.total_incomplete_tasks = state.ganttLists[list_index].meta.total_complete_tasks - 1;
                        }
                    },

                    setNewTask: function setNewTask(state, status) {
                        state.newTask = status;
                    }
                }
            };

            /***/ }),
        /* 362 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {
                    isFatchInvoice: true,
                    invoices: [],
                    crateInvoiceForm: false,
                    adminAddress: {},
                    meta: {},
                    invoice: {},
                    admin: {},
                    client: {},
                    clientAddresses: [],
                    getIndex: function getIndex(array, id, slug) {
                        var target = false;

                        array.forEach(function (content, index) {
                            if (content[slug] == id) {
                                target = index;
                            }
                        });

                        return target;
                    }
                },

                mutations: {
                    showHideInvoiceForm: function showHideInvoiceForm(state, status) {
                        if (status === 'toggle') {
                            state.crateInvoiceForm = state.crateInvoiceForm ? false : true;
                        } else {
                            state.crateInvoiceForm = status;
                        }
                    },
                    setInvoice: function setInvoice(state, invoice) {
                        state.invoice = invoice;
                        state.isFatchInvoice = false;
                    },
                    deleteInvoice: function deleteInvoice(state, invoice_id) {
                        var invoice_index = state.getIndex(state.invoices, invoice_id, 'id');
                        state.invoices.splice(invoice_index, 1);
                    },
                    setInvoices: function setInvoices(state, invoices) {
                        state.invoices = invoices;
                        state.isFatchInvoice = false;
                    },
                    setInvoiceMeta: function setInvoiceMeta(state, meta) {
                        state.meta = meta;
                        state.clientAddresses = meta.client_addresses;
                    },
                    newInvoice: function newInvoice(state, invoice) {
                        var per_page = state.meta.pagination.per_page,
                            length = state.invoices.length;

                        if (per_page <= length) {
                            state.invoices.splice(0, 0, invoice);
                            state.invoices.pop();
                        } else {
                            state.invoices.splice(0, 0, invoice);
                        }
                    },
                    updateMetaAfterNewInvoice: function updateMetaAfterNewInvoice(state) {
                        state.meta.pagination.total = state.meta.pagination.total + 1;
                        state.meta.pagination.total_pages = Math.ceil(state.meta.pagination.total / state.meta.pagination.per_page);
                    },
                    updateInvoice: function updateInvoice(state, data) {
                        var invoice_index = state.getIndex(state.invoices, data.id, 'id');
//jQuery.extend(true, state.invoices[invoice_index], data);
                        state.invoices.splice(invoice_index, 1, data);
                    },
                    setAdminAddress: function setAdminAddress(state) {
                        state.admin = PM_Vars.settings.invoice;
                    },
                    setClientAddress: function setClientAddress(state, data) {
                        if (Array.isArray(data.address)) {
                            state.client = {};
                        } else {
                            state.client = data.address;
                        }
                    },
                    colseEditInvoiceForm: function colseEditInvoiceForm(state) {
                        state.invoices.forEach(function (val, key) {
                            val.edit_mode = false;
                        });
                    }
                }

            };

            /***/ }),
        /* 363 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {
                    boards: [],
                    searchData: [],
                    count: [],
                    lists: [],
                    users: [],
                    tasks: [],
                    isFetchBoard: false,
                    getIndex: function getIndex(itemList, id, slug) {
                        return itemList.findIndex(function (x) {
                            return x[slug] == id;
                        });
                    }
                },

                mutations: {
                    setDefaultStore: function setDefaultStore(state) {
                        state.boards = [];
                        state.count = [];
                        state.lists = [];
                        state.users = [];
                        state.tasks = [];
                        state.isFetchBoard = false;
                    },
                    setLoadMoreData: function setLoadMoreData(state, data) {
                        var index = state.getIndex(state.boards, data.board_id, 'id');
                        var new_arr = state.boards[index].task.data.concat(data.res.data);

                        state.boards[index].task.data = new_arr;
                        state.boards[index].task.meta = data.res.meta;
                    },
                    setSearchableTask: function setSearchableTask(state, data) {
                        var index = state.getIndex(state.boards, data.board.id, 'id');

// state.boards[index].task.data.splice(0, 0, data.task);
                        state.boards[index].task.data.push(data.task);
                    },
                    setSearchTasks: function setSearchTasks(state, tasks) {
                        state.tasks = tasks;
                    },
                    afterCreateNewBoard: function afterCreateNewBoard(state, board) {
                        state.boards.push(board);
                    },
                    afterDeleteBoard: function afterDeleteBoard(state, board_id) {
                        var index = state.getIndex(state.boards, board_id, 'id');
                        state.boards.splice(index, 1);
                    },
                    setNewTask: function setNewTask(state, data) {
                        var index = state.getIndex(state.boards, data.board_id, 'id');
                        state.boards[index].task.data.push(data.task);
                    },
                    showHideBoardTitleUpdate: function showHideBoardTitleUpdate(state, data) {
                        var index = state.getIndex(state.boards, data.board_id, 'id');
                        state.boards[index].isUpdateMode = data.status;
                    },
                    hideAllTaskForm: function hideAllTaskForm(state) {
                        state.boards.forEach(function (board, index) {
                            board.newTaskForm = false;
                        });
                    },
                    showHideTaskSearch: function showHideTaskSearch(state, data) {
                        var index = state.getIndex(state.boards, data.board_id, 'id');
                        state.boards[index].searchTask = data.status;
                    },
                    showTaskEndField: function showTaskEndField(state, data) {
                        var index = state.getIndex(state.boards, data.board_id, 'id');
                        state.boards[index].is_enable_due_date = data.status;
                    },
                    showUsersDropDown: function showUsersDropDown(state, data) {
                        var index = state.getIndex(state.boards, data.board_id, 'id');
                        state.boards[index].is_active_assignUser_dropDown = data.status;
                    },
                    setLists: function setLists(state, lists) {
                        state.lists = lists;
                    },
                    showListsDropDown: function showListsDropDown(state, data) {
                        var index = state.getIndex(state.boards, data.board_id, 'id');
                        state.boards[index].is_active_lists_drop_dwon = data.status;
                    },
                    showHideAction: function showHideAction(state, data) {
                        var index = state.getIndex(state.boards, data.board_id, 'id');
                        state.boards[index].action = data.status;
                    },
                    showHideTaskForm: function showHideTaskForm(state, data) {
                        var index = state.getIndex(state.boards, data.board_id, 'id');
                        state.boards[index].newTaskForm = data.status;
                    },
                    setBoard: function setBoard(state, boards) {
                        state.boards = boards;
                        state.isFetchBoard = true;
                    },
                    isFetchBoard: function isFetchBoard(state, status) {
                        state.isFetchBoard = status;
                    },
                    setBoardable: function setBoardable(state, data) {
                        if (!data || typeof data == 'undefined') {
                            return;
                        }

                        var index = state.getIndex(state.boards, data.board_id, 'id');
                        if (index !== false && index != -1) {
                            state.count[data.board_id] = {
                                board_id: data.board_id,
                                totalTask: data.tasks.data.length
                            };

                            state.boards[index].task = data.tasks;
                        }
                    },
                    afterUpdateBoard: function afterUpdateBoard(state, data) {
                        var index = state.getIndex(state.boards, data.board_id, 'id');
                        state.boards[index].title = data.res.title;
                    },
                    deleteTask: function deleteTask(state, data) {
                        var index = state.getIndex(state.boards, data.board_id, 'id');
                        var task_index = state.getIndex(state.boards[index].task.data, data.task_id, 'id');

                        if (task_index !== false) {
                            state.boards[index].task.data.splice(task_index, 1);
                        }
                    },
                    updateCount: function updateCount(state, data) {
                        if (data.status == 'addition') {
                            state.count[data.board_id].totalTask = parseInt(state.count[data.board_id].totalTask) + data.number;
                        }
                    },
                    setSearchLists: function setSearchLists(state, lists) {
                        lists.forEach(function (list) {
                            var index = state.getIndex(state.lists, list.id, 'id');

                            if (index == -1) {
                                state.lists.push(list);
                            }
                        });
                    },
                    updateTask: function updateTask(state, data) {
                        var receiveSectionIndex = state.getIndex(state.boards, data.dropSectionId, 'id');
                        var senderSectionIndex = state.getIndex(state.boards, data.senderSectionId, 'id');
                        var dragabelTaskId = data.dragabel_task_id;
                        var senderSectionTaskIndex = state.getIndex(state.boards[senderSectionIndex].task.data, dragabelTaskId, 'id');

                        jQuery('.kbc-section-order-wrap').find('[data-section_id="' + data.dropSectionId + '"]').first().find('[data-task_id="' + dragabelTaskId + '"]').first().remove();

                        state.boards[receiveSectionIndex].task.data.splice(data.receive_task_index, 0, data.task);

                        state.boards[senderSectionIndex].task.data.splice(senderSectionTaskIndex, 1);
                    },
                    updateBoard: function updateBoard(state, boardsOrder) {
                        var newBoards = [];

                        boardsOrder.forEach(function (order, index) {
                            var boardIndex = state.getIndex(state.boards, order.section_id, 'id');
// state.boards[boardIndex].order = index;
                            newBoards.push(state.boards[boardIndex]);
                        });
                        state.boards = newBoards;
//console.log(state.boards, newBoards);
                    },
                    updateBoardTaks: function updateBoardTaks(state, data) {
                        var board_id = data.board_id;
                        var tasks = data.tasks;

                        var boardIndex = state.getIndex(state.boards, board_id, 'id');
                        state.boards[boardIndex].task.data = tasks;
                    },


// beforeSetSearchContent (state) {
//     state.boards.forEach(function(board) {
//         state.searchData.push( Object.assign( {}, board));
//     });

// },

                    setSearchContent: function setSearchContent(state, data) {

                        data.boards.forEach(function (board) {
                            var boardIndex = state.getIndex(state.boards, parseInt(board.id), 'id');
                            if (typeof state.boards[boardIndex] != 'undefined') {
                                state.boards[boardIndex].task.data = board.tasks;
                            }
                        });
                    },
                    setTask: function setTask(state, data) {
                        var index = state.getIndex(state.boards, data.board.id, 'id');

                        state.boards[index].task.data.push(data.task);
                    }
                }

            };

            /***/ }),
        /* 364 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {
                    options: []
                },

                mutations: {}

            };

            /***/ }),
        /* 365 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony default export */ __webpack_exports__["default"] = ({
                state: {
                    sprints: [],
                    subTasks: [],
                    pagination: {
                        perPage: 0,
                        totalPages: 0,
                        foundRows: 0
                    },
                    getIndex: function ( itemList, id, slug) {
                        var index = false;

                        itemList.forEach(function(item, key) {
                            if (item[slug] == id) {
                                index = key;
                            }
                        });

                        return index;
                    },
                    dropDownSprints: []
                },

                getters: {
                    completeTasks: (state) => (sprintId) => {
                        let SPIndex = state.getIndex( state.sprints, sprintId, 'id' );
                        let tasks = state.sprints[SPIndex].tasks;

                        return tasks.filter( task => ( task.status === 'complete' || task.status === true ) );
                    },

                    inCompleteTasks: (state) => (sprintId) => {
                        let SPIndex = state.getIndex( state.sprints, sprintId, 'id' );
                        let tasks = state.sprints[SPIndex].tasks;

                        return tasks.filter( task => ( task.status === 'incomplete' || task.status === false ) );
                    },

                    completeSubTasks: (state) => (taskId) => {
                        return state.subTasks.filter( subTask => (
                            subTask.status === 'complete' && parseInt(subTask.parent_id) == parseInt(taskId)
                        ) );
                    },

                    inCompleteSubTasks: (state) => (taskId) => {
                        return state.subTasks.filter( subTask => (
                            subTask.status === 'incomplete' && parseInt(subTask.parent_id) == parseInt(taskId)
                        ) );
                    }
                },

                mutations: {
                    setDropDownSprints (state, Sprints) {
                        state.dropDownSprints = Sprints;
                    },

                    setDropDownSprint (state, sprints) {
                        sprints.forEach( sprint => {
                            let index = state.getIndex( state.dropDownSprints, sprint.id, 'id' );

                            if(index === false) {
                                state.dropDownSprints.push(sprint);
                            }

                        })
                    },

                    setSprints (state, sprints) {
                        state.sprints = [];
                        state.sprints = sprints
                    },

                    addSprint (state, sprint) {
                        state.sprints.unshift(sprint)

                        if(state.sprints.length > state.pagination.perPage) {
                            let lastIndex = state.sprints.length-1;
                            state.sprints.splice( lastIndex, 1 )
                        }

                        state.pagination.foundRows = parseInt(state.pagination.foundRows) + 1;
                        state.pagination.perPage = parseInt(state.pagination.perPage);

                        state.pagination.totalPages = Math.ceil( state.pagination.foundRows / state.pagination.perPage );
                    },

                    setPagination (state, pagination) {
                        state.pagination.perPage    = parseInt(pagination.per_page);
                        state.pagination.totalPages = parseInt(pagination.total_pages);
                        state.pagination.foundRows  = parseInt(pagination.found_rows);
                    },

                    updateSprint (state, sprint) {

                        var index = state.getIndex(state.sprints, sprint.id, 'id');

                        Object.assign(state.sprints[index], sprint );
// console.log(state.sprints[index]);
// state.sprints[index].tasks.forEach( (task, tIndex) => {

//     let pIndex = state.getIndex( state.sprints[index].projects.data, task.project_id, 'project_id' )

//     if(pIndex === false) {
//         state.sprints[index].tasks.splice( tIndex, 1 )
//     }
// } )
                    },

                    deleteSprint (state, id) {
                        let index = state.getIndex(state.sprints, id, 'id');
                        state.sprints.splice(index,1);
                    },

                    addTask (state, data) {
                        let sprintId = data.sprintId;
                        let task     = data.task;
                        let index    = state.getIndex( state.sprints, sprintId, 'id' );

                        state.sprints[index].tasks.push(task);
                    },

                    addTasks (state, data) {
                        let sprintId = data.sprintId;
                        let tasks    = data.tasks;
                        let index    = state.getIndex( state.sprints, sprintId, 'id' );

                        state.sprints[index].tasks = [ ...state.sprints[index].tasks, ...tasks ];
                    },

                    setTasksInSprint (state, data) {
                        let sprintId = data.sprintId;
                        let tasks    = data.tasks;
                        let index    = state.getIndex( state.sprints, sprintId, 'id' );

                        state.sprints[index].tasks.push(tasks);
                    },

                    setProjectAfterCreateTask (state, data) {
                        let sprintIndex = state.getIndex( state.sprints, parseInt(data.sprintId), 'id' )
                        var sprint      = state.sprints[sprintIndex];

                        data.projects.forEach( project => {
                            let index = state.getIndex( sprint.projects.data, parseInt(project.id), 'id' )

                            if(index === false) {
                                state.sprints[sprintIndex].projects.data.push(project);
                            }
                        } )
                    },


                    afterTaskDoneUndone: function( state, data ) {
                        var sprint_index = state.getIndex( state.sprints, data.sprint_id, 'id' );

                        if( state.sprints[sprint_index] ); {
                            var task_index = state.getIndex( state.sprints[sprint_index].tasks, data.task_id, 'id' );

                            if ( task_index !== false ) {
                                state.sprints[sprint_index].tasks[task_index].status = data.status == 1 ? 'complete' : 'incomplete';
                            }
                        }
                    },

                    updateSprintTask: function( state, data ) {
                        var sprint_index = state.getIndex( state.sprints, data.sprint_id, 'id' );

                        if( state.sprints[sprint_index] ); {
                            var task_index = state.getIndex( state.sprints[sprint_index].tasks, data.task.id, 'id' );

                            if ( task_index !== false ) {
                                state.sprints[sprint_index].tasks.splice(task_index, 1, data.task);
                            }
                        }
                    },

                    afterDeleteTask (state, data) {
                        var sprintIndex = state.getIndex( state.sprints, data.sprintId, 'id' );

                        if( state.sprints[sprintIndex] ); {
                            var taskIndex = state.getIndex( state.sprints[sprintIndex].tasks, data.taskId, 'id' );

                            state.sprints[sprintIndex].tasks.splice( taskIndex, 1 );
                        }
                    },

                    setSubTasks ( state, subTasks ) {
                        state.subTasks = [...subTasks];
                    },

                    setSubTask ( state, subTask ) {
                        state.subTasks.push( subTask );
                    },

                    updateSubTask ( state, subTask ) {
                        var index = state.getIndex( state.subTasks, parseInt( subTask.id ), 'id' );

                        state.subTasks.splice(index, 1, subTask);
                    },

                    afterDeleteSubTask (state, subTaskId) {

                        let index = state.getIndex(state.subTasks, parseInt(subTaskId), 'id');

                        state.subTasks.splice(index, 1);
                    }
                }
            });



            /***/ }),
        /* 366 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {},

                mutations: {}

            };

            /***/ }),
        /* 367 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {
                    getIndex: function getIndex(itemList, id, slug) {
                        return itemList.findIndex(function (x) {
                            return x[slug] == id;
                        });
                    }
                },

                mutations: {
                    afterNewSubTask: function afterNewSubTask(state, data) {
                        var lists = this.state.projectTaskLists.lists;
                        var list_id = data.task.task_list.data.id;
                        var list_index = state.getIndex(lists, list_id, 'id');
                        var task_index = state.getIndex(lists[list_index].incomplete_tasks.data, data.task.id, 'id');

                        lists[list_index].incomplete_tasks.data[task_index].sub_tasks.push(data.subTask);

                        this.commit('projectTaskLists/updateLists', lists);
                    },
                    formVisibility: function formVisibility(state, data) {
                        var lists = this.state.projectTaskLists.lists;
                        var list_id = data.task.task_list.data.id;
                        var list_index = state.getIndex(lists, list_id, 'id');
                        var task_index = state.getIndex(lists[list_index].incomplete_tasks.data, data.task.id, 'id');
                        var visibility = lists[list_index].incomplete_tasks.data[task_index].new_sub_task_form;

                        if (data.status == 'toggle') {
                            visibility = visibility ? false : true;
                        } else {
                            visibility = data.status;
                        }

                        lists[list_index].incomplete_tasks.data[task_index].new_sub_task_form = visibility;

                        this.commit('projectTaskLists/updateLists', lists);
                    },
                    setSubTasks: function setSubTasks(state, data) {

                        var lists = this.state.projectTaskLists.lists;
                        var list_id = data.task.task_list.data.id;
                        var list_index = state.getIndex(lists, list_id, 'id');

                        if (data.task.status == 'incomplete' || data.task.status === false) {
                            if (typeof lists[list_index].incomplete_tasks == 'undefined') {
                                return [];
                            }
                            var task_index = state.getIndex(lists[list_index].incomplete_tasks.data, data.task.id, 'id');
                            lists[list_index].incomplete_tasks.data[task_index].sub_tasks = data.subTasks;
                        } else {
                            if (typeof lists[list_index].complete_tasks == 'undefined') {
                                return [];
                            }
                            var _task_index = state.getIndex(lists[list_index].complete_tasks.data, data.task.id, 'id');
                            lists[list_index].complete_tasks.data[_task_index].sub_tasks = data.subTasks;
                        }

                        this.commit('projectTaskLists/updateLists', lists);
                    },
                    afterUpdateSubTask: function afterUpdateSubTask(state, data) {
                        var lists = this.state.projectTaskLists.lists;
                        var list_id = data.task.task_list.data.id;
                        var list_index = state.getIndex(lists, list_id, 'id');

                        if (typeof lists[list_index].incomplete_tasks != 'undefined') {
                            var task_index = state.getIndex(lists[list_index].incomplete_tasks.data, data.task.id, 'id');

                            if (task_index != -1) {
                                var subTaskIndex = state.getIndex(lists[list_index].incomplete_tasks.data[task_index].sub_tasks, data.subTask.id, 'id');
                                lists[list_index].incomplete_tasks.data[task_index].sub_tasks.splice(subTaskIndex, 1, data.subTask);
                            }
                        }

                        if (typeof lists[list_index].complete_tasks != 'undefined') {
                            var _task_index2 = state.getIndex(lists[list_index].complete_tasks.data, data.task.id, 'id');

                            if (_task_index2 != -1) {
                                var _subTaskIndex = state.getIndex(lists[list_index].complete_tasks.data[_task_index2].sub_tasks, data.subTask.id, 'id');
                                lists[list_index].complete_tasks.data[_task_index2].sub_tasks.splice(_subTaskIndex, 1, data.subTask);
                            }
                        }

                        this.commit('projectTaskLists/updateLists', lists);
                    },
                    afterDoneUndoneSubTask: function afterDoneUndoneSubTask(state, subTask) {
                        var lists = this.state.projectTaskLists.lists;
                        var list_id = subTask.task_list.data.id;
                        var list_index = state.getIndex(lists, list_id, 'id');

                        if (typeof lists[list_index].incomplete_tasks != 'undefined') {
                            var task_index = state.getIndex(lists[list_index].incomplete_tasks.data, subTask.parent_id, 'id');

                            if (task_index != -1) {
                                var subTaskIndex = state.getIndex(lists[list_index].incomplete_tasks.data[task_index].sub_tasks, subTask.id, 'id');
                                lists[list_index].incomplete_tasks.data[task_index].sub_tasks.splice(subTaskIndex, 1, subTask);
                            }
                        }

                        if (typeof lists[list_index].complete_tasks != 'undefined') {
                            var _task_index3 = state.getIndex(lists[list_index].complete_tasks.data, subTask.parent_id, 'id');

                            if (_task_index3 != -1) {
                                var _subTaskIndex2 = state.getIndex(lists[list_index].complete_tasks.data[_task_index3].sub_tasks, subTask.id, 'id');
                                lists[list_index].complete_tasks.data[_task_index3].sub_tasks.splice(_subTaskIndex2, 1, subTask);
                            }
                        }

                        this.commit('projectTaskLists/updateLists', lists);
                    },
                    afterDeleteSubTask: function afterDeleteSubTask(state, data) {
                        var lists = this.state.projectTaskLists.lists;
                        var list_index = state.getIndex(lists, data.list_id, 'id');

                        if (typeof lists[list_index] == 'undefined') {
                            return;
                        }

                        if (typeof lists[list_index].incomplete_tasks != 'undefined') {
                            var task_index = state.getIndex(lists[list_index].incomplete_tasks.data, parseInt(data.task_id), 'id');

                            if (task_index != -1) {
                                var subTaskIndex = state.getIndex(lists[list_index].incomplete_tasks.data[task_index].sub_tasks, data.sub_task_id, 'id');
                                lists[list_index].incomplete_tasks.data[task_index].sub_tasks.splice(subTaskIndex, 1);
                            }
                        }

                        if (typeof lists[list_index].complete_tasks != 'undefined') {
                            var _task_index4 = state.getIndex(lists[list_index].complete_tasks.data, parseInt(data.task_id), 'id');

                            if (_task_index4 != -1) {
                                var _subTaskIndex3 = state.getIndex(lists[list_index].complete_tasks.data[_task_index4].sub_tasks, data.sub_task_id, 'id');
                                lists[list_index].complete_tasks.data[_task_index4].sub_tasks.splice(_subTaskIndex3, 1);
                            }
                        }

                        this.commit('projectTaskLists/updateLists', lists);
                    },
                    showSubTaskContent: function showSubTaskContent(state, data) {
                        data.status = data.status || 'toggle';

                        var lists = this.state.projectTaskLists.lists;
                        var list_index = state.getIndex(lists, data.task.task_list.data.id, 'id');

                        if (data.task.status == 'incomplete' || data.task.status === false) {
                            var task_index = state.getIndex(lists[list_index].incomplete_tasks.data, data.task.id, 'id');
                            var prev_status = lists[list_index].incomplete_tasks.data[task_index].sub_task_content;
                            if (data.status == 'toggle') {
                                data.status = prev_status ? false : true;
                            }
                            lists[list_index].incomplete_tasks.data[task_index].sub_task_content = data.status;
                        } else {
                            var _task_index5 = state.getIndex(lists[list_index].complete_tasks.data, data.task.id, 'id');
                            var _prev_status = lists[list_index].complete_tasks.data[_task_index5].sub_task_content;
                            if (data.status == 'toggle') {
                                data.status = _prev_status ? false : true;
                            }
                            lists[list_index].complete_tasks.data[_task_index5].sub_task_content = data.status;
                        }

                        this.commit('projectTaskLists/updateLists', lists);
                    }
                }

            };

            /***/ }),
        /* 368 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {
                    reports: {
                        type: ''
                    },
                    othersLog: [],
                    users: [],
                    getIndex: function getIndex(itemList, id, slug) {
                        return itemList.findIndex(function (x) {
                            return x[slug] == id;
                        });
                    }
                },

                mutations: {
                    afterDeletedOtherTime: function afterDeletedOtherTime(state, data) {
                        var user_index = false;
                        state.othersLog.forEach(function (time, index) {
                            if (parseInt(time.meta.user.ID) == parseInt(data.user_id)) {
                                user_index = index;
                            }
                        });

                        var time_index = state.getIndex(state.othersLog[user_index].data, user_index, 'id');

                        state.othersLog[user_index].data.splice(time_index, 1);
                    },
                    setOthersLog: function setOthersLog(state, logs) {
                        state.othersLog = logs;
                    },
                    logFormShowHide: function logFormShowHide(state, data) {
                        var lists = this.state.projectTaskLists.lists;
                        var list_index = state.getIndex(lists, data.list_id, 'id');
                        var task_index = state.getIndex(lists[list_index].incomplete_tasks.data, data.task_id, 'id');
                        var form = lists[list_index].incomplete_tasks.data[task_index].custom_time_form;

                        if (data.status == 'toggle') {
                            lists[list_index].incomplete_tasks.data[task_index].custom_time_form = form ? false : true;
                        } else {
                            lists[list_index].incomplete_tasks.data[task_index].custom_time_form = data.status;
                        }

                        this.commit('projectTaskLists/updateLists', lists);
                    },
                    toggelStopWatch: function toggelStopWatch(state, data) {

// let lists      = this.state.projectTaskLists.lists;
//       let list_id    = data.task.task_list.data.id;
//       let list_index = state.getIndex(lists, list_id, 'id');
//       let task_index = state.getIndex(lists[list_index].incomplete_tasks.data, data.task.id, 'id');

//       if( task_index != -1 ) {
//           let stop_watch = lists[list_index].incomplete_tasks.data[task_index].is_stop_watch_visible;

//           lists[list_index].incomplete_tasks.data[task_index].is_stop_watch_visible = stop_watch ? false : true;
//       }

//       this.commit('projectTaskLists/updateLists', lists);
                    },
                    afterStopTime: function afterStopTime(state, data) {

                        var lists = this.state.projectTaskLists.lists;
                        var list_index = state.getIndex(lists, data.list_id, 'id');
                        var task_index = state.getIndex(lists[list_index].incomplete_tasks.data, data.task_id, 'id');
                        var time_index = state.getIndex(lists[list_index].incomplete_tasks.data[task_index].time.data, data.res.data.id, 'id');

                        lists[list_index].incomplete_tasks.data[task_index].time.data[time_index] = data.res.data;
                        lists[list_index].incomplete_tasks.data[task_index].time.meta.totalTime = data.res.meta.total_time;
                        lists[list_index].incomplete_tasks.data[task_index].time.meta.running = false;

                        this.commit('projectTaskLists/updateLists', lists);

                        if (this.state.is_single_task) {
                            this.state.projectTaskLists.task.time.data[time_index] = data.res.data;
                            this.state.projectTaskLists.task.time.meta.totalTime = data.res.meta.total_time; //time.data.splice( time_index, 1 );
                            this.state.projectTaskLists.task.time.meta.running = false;
                            this.commit('projectTaskLists/updateTask', this.state.projectTaskLists.task);
                        }
                    },
                    afterStartTime: function afterStartTime(state, data) {

                        var lists = this.state.projectTaskLists.lists;
                        var list_index = state.getIndex(lists, data.list_id, 'id');
                        var task_index = state.getIndex(lists[list_index].incomplete_tasks.data, data.task_id, 'id');

                        lists[list_index].incomplete_tasks.data[task_index].time = data.res.time;
                        this.commit('projectTaskLists/updateLists', lists);

                        if (this.state.is_single_task) {
                            this.state.projectTaskLists.task.time = data.res.time; //time.data.splice( time_index, 1 );
                            this.commit('projectTaskLists/updateTask', this.state.projectTaskLists.task);
                        }
                    },
                    afterDeletedTime: function afterDeletedTime(state, data) {

                        var lists = this.state.projectTaskLists.lists;
                        var list_index = state.getIndex(lists, data.list_id, 'id');
                        var task_index = state.getIndex(lists[list_index].incomplete_tasks.data, data.task_id, 'id');

                        if (task_index === false) {
                            task_index = state.getIndex(lists[list_index].complete_tasks.data, data.task_id, 'id');
                            var time_index = state.getIndex(lists[list_index].complete_tasks.data[task_index].time.data, data.time_id, 'id');

                            lists[list_index].complete_tasks.data[task_index].time = data.res.time; //time.data.splice( time_index, 1 );
                        } else {
                            var time_index = state.getIndex(lists[list_index].incomplete_tasks.data[task_index].time.data, data.time_id, 'id');

                            lists[list_index].incomplete_tasks.data[task_index].time = data.res.time; //.time.data.splice( time_index, 1 );
                            // lists[list_index].incomplete_tasks.data[task_index].time.meta.running = false;
                        }

                        this.commit('projectTaskLists/updateLists', lists);

                        if (this.state.is_single_task) {
                            this.state.projectTaskLists.task.time = data.res.time; //time.data.splice( time_index, 1 );
// this.state.projectTaskLists.task.time.meta.running = false;
                            this.commit('projectTaskLists/updateTask', this.state.projectTaskLists.task);
                        }
                    },
                    setReports: function setReports(state, reports) {
                        state.reports = reports.data;
                    },
                    setUsers: function setUsers(state, data) {
                        state.users = data.data;
                    }
                }
            };

            /***/ }),
        /* 369 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                state: {
                    options: [],
                    products: [],
                    projects: [],
                    users: []
                },

                mutations: {
                    /**
                     * Add project, product, user whenever available
                     * and make it unique by pushing uniq id;
                     */
                    addProducts: function addProducts(state, products) {
                        products.map(function (product) {
                            var i = state.products.findIndex(function (p) {
                                return p.id == product.id;
                            });
                            if (i == -1) {
                                state.products.push(product);
                            }
                        });
                    },
                    addProject: function addProject(state, project) {
                        project.map(function (pro) {
                            if (state.projects.findIndex(function (p) {
                                return p.id == pro.id;
                            }) == -1) {
                                state.projects.push(pro);
                            }
                        });
                    },
                    addUser: function addUser(state, users) {
                        users.map(function (user) {
                            if (state.users.findIndex(function (u) {
                                return u.id == user.id;
                            }) == -1) {
                                state.users.push(user);
                            }
                        });
                    }
                }

            };

            /***/ }),
        /* 370 */
        /***/ (function(module, exports, __webpack_require__) {

            var map = {
                "./Custom_Fields/views/assets/src/helpers/mixin/mixin": 371,
                "./Gantt/views/assets/src/helpers/mixin/mixin": 372,
                "./Invoice/views/assets/src/helpers/mixin/mixin": 373,
                "./Kanboard/views/assets/src/helpers/mixin/mixin": 376,
                "./PM_Pro_Buddypress/views/assets/src/helpers/mixin/mixin": 377,
                "./Sprint/views/assets/src/helpers/mixin/mixin": 378,
                "./Stripe/views/assets/src/helpers/mixin/mixin": 379,
                "./Sub_Tasks/views/assets/src/helpers/mixin/mixin": 380,
                "./Time_Tracker/views/assets/src/helpers/mixin/mixin": 381,
                "./Woo_Project/views/assets/src/helpers/mixin/mixin": 382
            };
            function webpackContext(req) {
                return __webpack_require__(webpackContextResolve(req));
            };
            function webpackContextResolve(req) {
                var id = map[req];
                if(!(id + 1)) // check for number or string
                    throw new Error("Cannot find module '" + req + "'.");
                return id;
            };
            webpackContext.keys = function webpackContextKeys() {
                return Object.keys(map);
            };
            webpackContext.resolve = webpackContextResolve;
            module.exports = webpackContext;
            webpackContext.id = 370;

            /***/ }),
        /* 371 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony default export */ __webpack_exports__["default"] = ({

                data () {
                    return {
                        abort: false
                    }
                },

                methods: {
                    removeLink (link_id) {
                        var self = this;
                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/'+self.project_id+'/gantt/'+link_id + '/delete',
                            type: 'POST',
                            data: {},
                            success (res) {

                            },

                            error (res) {
//Showing error
                                res.responseJSON.message.forEach( function( value, index ) {
                                    pm.Toastr.error(value);
                                });
                            }
                        }

                        self.httpRequest(request_data);
                    },
                    saveLink (link) {
                        var self = this;
                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/'+self.project_id+'/gantt',
                            type: 'POST',
                            data: link,
                            success (res) {

                            },

                            error (res) {
//Showing error
                                res.responseJSON.message.forEach( function( value, index ) {
                                    pm.Toastr.error(value);
                                });
                            }
                        }

                        self.httpRequest(request_data);
                    },

                    updateList (list) {
                        var index      = this.getIndex( this.$store.state.gantt.ganttLists, list.list_id, 'id' );
                        var updateList = this.$store.state.gantt.ganttLists[index];

                        this.$store.commit('gantt/setUpdateList', updateList);

                        this.listFormActivity(true);
                    },

                    updateGanttTask (task) {
                        var list_index = this.getIndex( this.$store.state.gantt.ganttLists, task.list_id, 'id' );
                        var task_index = this.getIndex( this.$store.state.gantt.ganttLists[list_index].incomplete_tasks.data, task.id, 'id' );

                        var task = this.$store.state.gantt.ganttLists[list_index].incomplete_tasks.data[task_index];

                        this.$store.commit('gantt/setUpdateTask', task);
                        this.taskFormActivity(true);
                        this.setNewTask(false);
                    },

                    updateTask (task) {
                        var self = this;
                        var due_date = pm.Moment(task.end_date).subtract(1, "days");
                        var request_data = {
                            url: self.base_url + 'pm/v2/projects/'+self.project_id+'/tasks/'+ task.id + '/update',
                            type: 'POST',
                            data: {
                                title: task.text,
                                start_at: pm.Moment( task.start_date ).format('YYYY-MM-DD'),
                                due_date: pm.Moment( due_date ).format('YYYY-MM-DD')
                            },
                            success (res) {
                                pm.NProgress.done();
                            },

                            error (res) {
//Showing error
// res.responseJSON.message.forEach( function( value, index ) {
//     pm.Toastr.error(value);
// });
                            }
                        }

                        self.httpRequest(request_data);
                    },
                    /**
                     * Retrive All task list
                     * @param  {[object]}   args SSR url condition
                     * @param  {Function} callback  [description]
                     * @return {[void]}             [description]
                     */
                    getLists (args) {
                        var self = this,
                            pre_define = {
                                condition: {
                                    with: 'incomplete_tasks,complete_tasks',
                                    per_page: 1000, //this.getSettings('list_per_page', 10),
                                    page: this.setCurrentPageNumber()
                                },
                                callback: false,
                            };

                        var args = jQuery.extend(true, pre_define, args );
                        var condition = this.generateConditions(args.condition);
                        var request = {
                            url: self.base_url + 'pm/v2/projects/'+self.project_id+'/task-lists?'+condition,
                            success (res) {

                                var tasks = self.filterTasks(res.data, true);
                                var links = self.filterLinks(res.data);

                                self.$store.commit('gantt/setList', res.data);
                                self.$store.commit('gantt/setTasks', tasks);
                                self.$store.commit('gantt/setLinks', links);
                                pm.NProgress.done();

                                if( typeof args.callback === 'function' ) {
                                    args.callback(self, res);
                                }
                            }
                        };
                        self.httpRequest(request);
                    },

                    generatePassword() {
                        var length = 15,
                            charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",
                            retVal = "";
                        for (var i = 0, n = charset.length; i < length; ++i) {
                            retVal += charset.charAt(Math.floor(Math.random() * n));
                        }
                        return retVal;
                    },

                    filterTasks (lists, withProject) {
                        var self = this;
                        var tasks = [];
                        withProject = withProject || false;

                        if ( withProject ) {
                            var project_start = '',
                                duration      = '';

                            if (
                                typeof this.$store.state.project.meta != 'undefined'
                                &&
                                this.$store.state.project.meta.data.total_task_lists < 1
                            ) {
                                project_start = this.$store.state.project.created_at.date;
                                project_start = new Date(project_start);
                                project_start = pm.Moment(project_start).format('DD-MM-YYYY');
                                duration = 1;
                            }

                            tasks.push({
                                "id": this.project_id+'-project',
                                "text": this.$store.state.project.title,
                                "start_date": project_start,
                                "duration": duration,
                                "progress": 0,
                                "open": true,
                                'type': 'project',
                                'group': 'Project',
                                'action': 'Add',
                                'project_id': this.project_id
                            });
                        }

                        lists.forEach(function(list) {

                            let task_length = list.incomplete_tasks.data.length;
                            let complete_task_length = list.complete_tasks.data.length;

                            var list_start = '',
                                duration   = '';

                            if (!task_length && !complete_task_length) {
                                list_start = list.created_at.date;
                                list_start = new Date(list_start);
                                list_start = pm.Moment(list_start).format('DD-MM-YYYY');
                                duration = 1;
                            }

                            tasks.push({
                                'id': list.id+'-list',
                                'text': list.title,
                                'start_date': list_start,
                                'duration': duration,
                                'progress': '',
                                'parent': self.project_id+'-project',
                                'open': true,
                                'type': 'list',
                                'group': 'List',
                                'new_event': 'Add',
                                'list_id': list.id
                            });

                            list.incomplete_tasks.data.forEach(function(task) {

                                let start = task.start_at.date ? task.start_at.date : task.created_at.date;
                                var end   = task.due_date.date ? task.due_date.date : start;
                                let start_date = new Date(start);
                                let end_date  = new Date(end);
                                end_date  = pm.Moment(end_date, 'DD-MM-YYYY').add(1, 'days');



                                tasks.push({
                                    'id': task.id,
                                    'text': task.title,
                                    'start_date': pm.Moment(start_date).format('DD-MM-YYYY'),
                                    'end_date': end_date._d,
//'duration': self.getDuration(task),
                                    'progress': 0,
                                    'parent': list.id+'-list',
                                    'list_id': task.task_list_id,
                                    'open': true,
                                    'priority': 3,
                                    'type': 'task',
                                    'group': 'Task',
                                    'new_event': ''
                                });
                            });


                            list.complete_tasks.data.forEach(function(task) {
                                let start = task.start_at.date ? task.start_at.date : task.created_at.date;
                                let start_date = new Date(start);

                                tasks.push({
                                    'id': task.id,
                                    'text': task.title,
                                    'start_date': pm.Moment(start_date).format('DD-MM-YYYY'),
                                    'duration': self.getDuration(task),
                                    'progress': 0,
                                    'parent': list.id+'-task',
                                    'list_id': task.task_list_id,
                                    'open': true,
                                    'priority': 3,
                                    'type': 'complete_task',
                                    'group': 'Task',
                                    'new_event': ''
                                });
                            });
                        });

                        return tasks;
                    },

                    getDuration (task) {
                        let start      = task.start_at.date ? task.start_at.date : task.created_at.date;
                        let due        = task.due_date.date ? task.due_date.date : start;
                        let start_date = pm.Moment(new Date(start));
                        let due_date   = pm.Moment(new Date(due));

                        var duration   = pm.Moment.duration(due_date.diff(start_date));
                        var days       = duration.asDays();

                        return parseInt(days) + 1;

                    },

                    filterLinks (lists) {
                        var links = [];
                        lists.forEach(function(list) {
                            list.incomplete_tasks.data.forEach(function(task) {
                                task.gantt_links.data.forEach(function(link) {
                                    links.push({
                                        "id": link.id,
                                        "source": link.source,
                                        "target": link.target,
                                        "type": link.type
                                    });
                                });
                            });
                        });

                        return links;
                    },

                    listFormActivity (status) {
                        this.$store.commit('gantt/changeListFormStatus', status);
                    },

                    taskFormActivity (status) {
                        this.$store.commit('gantt/changeTaskFormStatus', status);
                    },

                    setListId (listId) {
                        this.$store.commit('gantt/setListId', listId);
                    },

                    setNewTask (status) {
                        this.$store.commit('gantt/setNewTask', status);
                    },

                    createList (callback) {
                        var self = this;
                        this.listFormActivity(true);
                    },

                    createTask (list_id) {
                        this.setListId(list_id);
                        this.taskFormActivity(true);
                        this.setNewTask(true);
                    }
                }
            });



            /***/ }),
        /* 372 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                data: function data() {
                    return {
                        abort: false
                    };
                },


                methods: {
                    removeLink: function removeLink(link_id) {
                        var self = this;
                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/gantt/' + link_id + '/delete',
                            type: 'POST',
                            data: {},
                            success: function success(res) {},
                            error: function error(res) {
//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    saveLink: function saveLink(link) {
                        var self = this;
                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/gantt',
                            type: 'POST',
                            data: link,
                            success: function success(res) {},
                            error: function error(res) {
//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    updateList: function updateList(list) {
                        var index = this.getIndex(this.$store.state.gantt.ganttLists, list.list_id, 'id');
                        var updateList = this.$store.state.gantt.ganttLists[index];

                        this.$store.commit('gantt/setUpdateList', updateList);

                        this.listFormActivity(true);
                    },
                    updateGanttTask: function updateGanttTask(task) {
                        var list_index = this.getIndex(this.$store.state.gantt.ganttLists, task.list_id, 'id');
                        var task_index = this.getIndex(this.$store.state.gantt.ganttLists[list_index].incomplete_tasks.data, task.id, 'id');

                        var task = this.$store.state.gantt.ganttLists[list_index].incomplete_tasks.data[task_index];

                        this.$store.commit('gantt/setUpdateTask', task);
                        this.taskFormActivity(true);
                        this.setNewTask(false);
                    },
                    updateTask: function updateTask(task) {
                        var self = this;
                        var due_date = pm.Moment(task.end_date).subtract(1, "days");
                        var request_data = {
                            url: self.base_url + 'pm/v2/projects/' + self.project_id + '/tasks/' + task.id + '/update',
                            type: 'POST',
                            data: {
                                title: task.text,
                                start_at: pm.Moment(task.start_date).format('YYYY-MM-DD'),
                                due_date: pm.Moment(due_date).format('YYYY-MM-DD')
                            },
                            success: function success(res) {
                                pm.NProgress.done();
                            },
                            error: function error(res) {
//Showing error
// res.responseJSON.message.forEach( function( value, index ) {
//     pm.Toastr.error(value);
// });
                            }
                        };

                        self.httpRequest(request_data);
                    },

                    /**
                     * Retrive All task list
                     * @param  {[object]}   args SSR url condition
                     * @param  {Function} callback  [description]
                     * @return {[void]}             [description]
                     */
                    getLists: function getLists(args) {
                        var self = this,
                            pre_define = {
                                condition: {
                                    with: 'incomplete_tasks,complete_tasks',
                                    per_page: 1000, //this.getSettings('list_per_page', 10),
                                    page: this.setCurrentPageNumber()
                                },
                                callback: false
                            };

                        var args = jQuery.extend(true, pre_define, args);
                        var condition = this.generateConditions(args.condition);
                        var request = {
                            url: self.base_url + 'pm/v2/projects/' + self.project_id + '/task-lists?' + condition,
                            success: function success(res) {

                                var tasks = self.filterTasks(res.data, true);
                                var links = self.filterLinks(res.data);

                                self.$store.commit('gantt/setList', res.data);
                                self.$store.commit('gantt/setTasks', tasks);
                                self.$store.commit('gantt/setLinks', links);
                                pm.NProgress.done();

                                if (typeof args.callback === 'function') {
                                    args.callback(self, res);
                                }
                            }
                        };
                        self.httpRequest(request);
                    },
                    generatePassword: function generatePassword() {
                        var length = 15,
                            charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",
                            retVal = "";
                        for (var i = 0, n = charset.length; i < length; ++i) {
                            retVal += charset.charAt(Math.floor(Math.random() * n));
                        }
                        return retVal;
                    },
                    filterTasks: function filterTasks(lists, withProject) {
                        var self = this;
                        var tasks = [];
                        withProject = withProject || false;

                        if (withProject) {
                            var project_start = '',
                                duration = '';

                            if (typeof this.$store.state.project.meta != 'undefined' && this.$store.state.project.meta.data.total_task_lists < 1) {
                                project_start = this.$store.state.project.created_at.date;
                                project_start = new Date(project_start);
                                project_start = pm.Moment(project_start).format('DD-MM-YYYY');
                                duration = 1;
                            }

                            tasks.push({
                                "id": this.project_id + '-project',
                                "text": this.$store.state.project.title,
                                "start_date": project_start,
                                "duration": duration,
                                "progress": 0,
                                "open": true,
                                'type': 'project',
                                'group': 'Project',
                                'action': 'Add',
                                'project_id': this.project_id
                            });
                        }

                        lists.forEach(function (list) {

                            var task_length = list.incomplete_tasks.data.length;
                            var complete_task_length = list.complete_tasks.data.length;

                            var list_start = '',
                                duration = '';

                            if (!task_length && !complete_task_length) {
                                list_start = list.created_at.date;
                                list_start = new Date(list_start);
                                list_start = pm.Moment(list_start).format('DD-MM-YYYY');
                                duration = 1;
                            }

                            tasks.push({
                                'id': list.id + '-list',
                                'text': list.title,
                                'start_date': list_start,
                                'duration': duration,
                                'progress': '',
                                'parent': self.project_id + '-project',
                                'open': true,
                                'type': 'list',
                                'group': 'List',
                                'new_event': 'Add',
                                'list_id': list.id
                            });

                            list.incomplete_tasks.data.forEach(function (task) {

                                var start = task.start_at.date ? task.start_at.date : task.created_at.date;
                                var end = task.due_date.date ? task.due_date.date : start;
                                var start_date = new Date(start);
                                var end_date = new Date(end);
                                end_date = pm.Moment(end_date, 'DD-MM-YYYY').add(1, 'days');

                                tasks.push({
                                    'id': task.id,
                                    'text': task.title,
                                    'start_date': pm.Moment(start_date).format('DD-MM-YYYY'),
                                    'end_date': end_date._d,
//'duration': self.getDuration(task),
                                    'progress': 0,
                                    'parent': list.id + '-list',
                                    'list_id': task.task_list_id,
                                    'open': true,
                                    'priority': 3,
                                    'type': 'task',
                                    'group': 'Task',
                                    'new_event': ''
                                });
                            });

                            list.complete_tasks.data.forEach(function (task) {
                                var start = task.start_at.date ? task.start_at.date : task.created_at.date;
                                var start_date = new Date(start);

                                tasks.push({
                                    'id': task.id,
                                    'text': task.title,
                                    'start_date': pm.Moment(start_date).format('DD-MM-YYYY'),
                                    'duration': self.getDuration(task),
                                    'progress': 0,
                                    'parent': list.id + '-task',
                                    'list_id': task.task_list_id,
                                    'open': true,
                                    'priority': 3,
                                    'type': 'complete_task',
                                    'group': 'Task',
                                    'new_event': ''
                                });
                            });
                        });

                        return tasks;
                    },
                    getDuration: function getDuration(task) {
                        var start = task.start_at.date ? task.start_at.date : task.created_at.date;
                        var due = task.due_date.date ? task.due_date.date : start;
                        var start_date = pm.Moment(new Date(start));
                        var due_date = pm.Moment(new Date(due));

                        var duration = pm.Moment.duration(due_date.diff(start_date));
                        var days = duration.asDays();

                        return parseInt(days) + 1;
                    },
                    filterLinks: function filterLinks(lists) {
                        var links = [];
                        lists.forEach(function (list) {
                            list.incomplete_tasks.data.forEach(function (task) {
                                task.gantt_links.data.forEach(function (link) {
                                    links.push({
                                        "id": link.id,
                                        "source": link.source,
                                        "target": link.target,
                                        "type": link.type
                                    });
                                });
                            });
                        });

                        return links;
                    },
                    listFormActivity: function listFormActivity(status) {
                        this.$store.commit('gantt/changeListFormStatus', status);
                    },
                    taskFormActivity: function taskFormActivity(status) {
                        this.$store.commit('gantt/changeTaskFormStatus', status);
                    },
                    setListId: function setListId(listId) {
                        this.$store.commit('gantt/setListId', listId);
                    },
                    setNewTask: function setNewTask(status) {
                        this.$store.commit('gantt/setNewTask', status);
                    },
                    createList: function createList(callback) {
                        var self = this;
                        this.listFormActivity(true);
                    },
                    createTask: function createTask(list_id) {
                        this.setListId(list_id);
                        this.taskFormActivity(true);
                        this.setNewTask(true);
                    }
                }
            };

            /***/ }),
        /* 373 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _countries = __webpack_require__(374);

            var _countries2 = _interopRequireDefault(_countries);

            var _currency = __webpack_require__(375);

            var _currency2 = _interopRequireDefault(_currency);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            exports.default = {
                data: function data() {
                    return {
                        organization: this.getSettings('invoice', ''),
                        countries: _countries2.default,
                        currency: _currency2.default,
                        currencySymbol: '',
                        isAdmin: PM_Vars.is_admin == '1' ? true : false,
                        can_payment_submit: true
                    };
                },
                created: function created() {
                    this.currencySymbol = this.getCurrencySymbol(this.organization.currency_code);
                },


                methods: {
                    sendPdfMail: function sendPdfMail(args) {
                        var self = this;
                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/invoice/' + args.invoice_id + '/mail/',
                            type: 'POST',
                            data: {},
                            success: function success(res) {
                                if (res === true) {
                                    pm.Toastr.success('E-mail send successfully');

                                    if (typeof args.callback != 'undefined') {
                                        args.callback(res);
                                    }
                                }
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    generatePDF: function generatePDF(invoice) {
                        window.location.href = this.base_url + 'pm-pro/v2/projects/' + invoice.project_id + '/invoice/' + invoice.id + '/pdf?_wpnonce=' + PM_Vars.permission;
                    },
                    getCountryName: function getCountryName(code) {
                        if (!code) {
                            return;
                        }
                        var index = this.getIndex(this.countries, code, 'code');

                        return this.countries[index].name;
                    },
                    getCurrencySymbol: function getCurrencySymbol(code) {
                        code = code || 'USD';
                        var index = this.getIndex(this.currency, code, 'code');

                        return this.currency[index].symbol_native;
                    },
                    showHideInvoiceForm: function showHideInvoiceForm(status, invoice) {
                        var invoice = invoice || false,
                            invoice = invoice.id ? invoice : false;

                        if (invoice) {
                            if (status === 'toggle') {
                                invoice.edit_mode = invoice.edit_mode ? false : true;
                            } else {
                                invoice.edit_mode = status;
                            }
                        } else {
                            this.$store.commit('invoice/showHideInvoiceForm', status);
                        }
                    },
                    saveInvoice: function saveInvoice(args) {
                        var self = this;
                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/invoice',
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
                                self.showHideInvoiceForm(false);
                                self.$store.commit('invoice/newInvoice', res.data);
                                self.$store.commit('invoice/updateMetaAfterNewInvoice');

                                if (typeof args.callback != 'undefined') {
                                    args.callback(res);
                                }
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    saveOrganizationAddress: function saveOrganizationAddress(args) {
                        var self = this;
                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/invoice/address',
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
                                PM_Vars.settings['invoice'] = res.data.value;

                                if (typeof args.callback != 'undefined') {
                                    args.callback(res);
                                }
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    getUserAddress: function getUserAddress(args) {
                        var self = this;
                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/invoice/user-address/user/' + args.user_id,
                            data: {},
                            success: function success(res) {

                                if (typeof args.callback !== 'undefined') {
                                    args.callback(res);
                                }
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    saveUserAddres: function saveUserAddres(args) {
                        var self = this;
                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/invoice/user-address/user/' + args.user_id,
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {

                                if (typeof args.callback !== 'undefined') {
                                    args.callback(res);
                                }
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    getInvoices: function getInvoices(args) {
                        var self = this;
                        var pre_define = {
                            conditions: {
                                per_page: 2,
                                page: 1
                            },
                            callback: false
                        };

                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = self.generateConditions(args.conditions);
                        if (self.project_id) {
                            var url = self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/invoice/?' + conditions;
                        } else {
                            if (!PM_Pro_Vars.project_id) {
                                var url = self.base_url + 'pm-pro/v2/invoices/?' + conditions;
                            } else {
                                var url = self.base_url + 'pm-pro/v2/projects/' + PM_Pro_Vars.project_id + '/invoice/?frontend=1&' + conditions;
                            }
                        }

                        var request = {
                            url: url,
                            success: function success(res) {
                                res.data.map(function (invoice, index) {
                                    self.addInvoiceMeta(invoice);
                                });
                                self.$store.commit('invoice/setInvoices', res.data);
                                self.$store.commit('invoice/setInvoiceMeta', res.meta);

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            }
                        };
                        self.httpRequest(request);
                    },
                    addInvoiceMeta: function addInvoiceMeta(invoice) {
                        invoice.edit_mode = false;
                        invoice.organizationAddressForm = false;
                        invoice.clientAddressForm = false;
//invoice.isPartialActive = false;
                    },
                    getStatus: function getStatus(status) {
                        var assigeen = {
                            0: 'Incomplete',
                            1: 'Complete',
                            3: 'Partial'
                        };

                        return assigeen[status];
                    },
                    updateInvoice: function updateInvoice(args) {

                        var self = this;

// Disable submit button for preventing multiple click
                        this.submit_disabled = true;

// Showing loading option
                        this.show_spinner = true;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/invoice/' + args.invoice_id,
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
                                self.show_spinner = false;
// Display a success toast, with a title
                                pm.Toastr.success(res.message);
                                self.addInvoiceMeta(res.data);
                                self.submit_disabled = false;
                                self.showHideInvoiceForm(false);
                                self.$store.commit('invoice/updateInvoice', res.data);
                                self.$store.commit('invoice/setInvoice', res.data);

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.show_spinner = false;

// Showing error
                                res.data.error.map(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                                self.submit_disabled = false;
                            }
                        };
                        self.httpRequest(request_data);
                    },
                    getInvoice: function getInvoice(args) {
                        var self = this;
                        var pre_define = {
                            conditions: {},
                            callback: false
                        };

                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = self.generateConditions(args.conditions);

                        var request = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/invoice/' + args.invoice_id + '?' + conditions, ///with=comments',
                            success: function success(res) {
                                self.addInvoiceMeta(res.data);
                                self.$store.commit('invoice/setInvoice', res.data);

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            }
                        };
                        self.httpRequest(request);
                    },
                    deleteInvoice: function deleteInvoice(args) {
                        if (!confirm('Are you sure!')) {
                            return;
                        }
                        var self = this;

                        var request = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/invoice/' + args.invoice_id, ///with=comments',
                            type: 'DELETE',
                            success: function success(res) {
                                self.$store.commit('invoice/deleteInvoice', args.invoice_id);

                                if (!self.$store.state.invoice.invoices.length) {
                                    self.$router.push({
                                        name: 'invoice',
                                        params: {
                                            project_id: self.project_id
                                        }
                                    });
                                } else {
                                    self.getInvoices();
                                }

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            }
                        };
                        self.httpRequest(request);
                    },
                    taskLineTotal: function taskLineTotal(task) {
                        task.amount = task.amount || 0;
                        var amount = parseFloat(task.amount);
                        var hour = parseFloat(task.hour) ? parseFloat(task.hour) : 0;

// var tax       = parseFloat(task.tax)/100;
// var taxAmount = amount*hour*tax;
                        var lineTotal = parseFloat(amount * hour);

                        return lineTotal.toFixed(2);
                    },
                    nameLineTotal: function nameLineTotal(task) {
                        task.amount = task.amount || 0;
                        var amount = parseFloat(task.amount);
                        var quantity = parseFloat(task.quantity) ? parseFloat(task.quantity) : 0;

// var tax       = parseFloat(task.tax)/100;
// var taxAmount = amount*quantity*tax;
                        var lineTotal = parseFloat(amount * quantity);

                        return lineTotal.toFixed(2);
                    },
                    lineTax: function lineTax(task, type) {
                        if (type == 'task') {
                            task.amount = task.amount || 0;
                            var amount = parseFloat(task.amount);
                            var hour = parseFloat(task.hour) ? parseFloat(task.hour) : 0;

                            var tax = parseFloat(task.tax) / 100;
                            var taxAmount = amount * hour * tax;

                            return taxAmount;
                        }

                        if (type == 'name') {
                            task.amount = task.amount || 0;
                            var amount = parseFloat(task.amount);
                            var quantity = parseFloat(task.quantity) ? parseFloat(task.quantity) : 0;

                            var tax = parseFloat(task.tax) / 100;
                            var taxAmount = amount * quantity * tax;

                            return taxAmount;
                        }
                    },
                    lineDiscount: function lineDiscount(task, discount, type) {
                        discount = discount || 0;

                        if (type == 'task') {
                            task.amount = task.amount || 0;
                            var amount = parseFloat(task.amount);
                            var hour = parseFloat(task.hour) ? parseFloat(task.hour) : 0;

                            var discount = parseFloat(discount) / 100;
                            var discountAmount = amount * hour * discount;

                            return discountAmount;
                        }

                        if (type == 'name') {
                            task.amount = task.amount || 0;
                            var amount = parseFloat(task.amount);
                            var quantity = parseFloat(task.quantity) ? parseFloat(task.quantity) : 0;

                            var discount = parseFloat(discount) / 100;
                            var discountAmount = amount * quantity * discount;

                            return discountAmount;
                        }
                    },
                    calculateSubTotal: function calculateSubTotal(tasks, names) {
                        var subTotal = 0;

                        tasks.forEach(function (task) {
                            task.amount = task.amount || 0;
                            var amount = parseFloat(task.amount);
                            var hour = parseFloat(task.hour) ? parseFloat(task.hour) : 0;
                            subTotal = subTotal + amount * hour;
                        });

                        names.forEach(function (task) {
                            task.amount = task.amount || 0;
                            var amount = parseFloat(task.amount);
                            var quantity = parseFloat(task.quantity) ? parseFloat(task.quantity) : 0;
                            subTotal = subTotal + amount * quantity;
                        });

                        return parseFloat(subTotal).toFixed(2);
                    },
                    calculateTotalTax: function calculateTotalTax(tasks, names) {
                        var self = this;
                        var taxTotal = 0;

                        tasks.forEach(function (task) {
                            var lineTax = self.lineTax(task, 'task');
                            lineTax = lineTax || 0;
                            taxTotal = taxTotal + parseFloat(lineTax);
                        });

                        names.forEach(function (task) {
                            var lineTax = self.lineTax(task, 'name');
                            lineTax = lineTax || 0;
                            taxTotal = taxTotal + parseFloat(lineTax);
                        });

                        return taxTotal.toFixed(2);
                    },
                    calculateTotalDiscount: function calculateTotalDiscount(tasks, names, discount) {
                        var self = this;
                        var discountTotal = 0;

                        tasks.forEach(function (task) {
                            var lineDiscount = self.lineDiscount(task, discount, 'task');
                            lineDiscount = lineDiscount || 0;
                            discountTotal = discountTotal + parseFloat(lineDiscount);
                        });

                        names.forEach(function (task) {
                            var lineDiscount = self.lineDiscount(task, discount, 'name');
                            lineDiscount = lineDiscount || 0;
                            discountTotal = discountTotal + parseFloat(lineDiscount);
                        });

                        return discountTotal.toFixed(2);
                    },
                    invoiceTotal: function invoiceTotal(tasks, names, discount) {
                        var subTotal = this.calculateSubTotal(tasks, names);
                        var totalTax = this.calculateTotalTax(tasks, names);
                        var totalDiscount = this.calculateTotalDiscount(tasks, names, discount);

                        var total = parseFloat(subTotal) + parseFloat(totalTax) - parseFloat(totalDiscount);

                        return total.toFixed(2);
                    },
                    savePayments: function savePayments(args) {
                        var self = this;

                        var request = {
                            data: args.data,
                            type: 'POST',
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/invoice/' + args.invoice_id + '/payment', ///with=comments',
                            success: function success(res) {

                                if (typeof args.callback === 'function') {
                                    args.callback(res.data);
                                }
                            },
                            error: function error(res) {
                                self.can_submit = true;

// Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };
                        self.httpRequest(request);
                    },
                    totalPaid: function totalPaid(payments) {
                        payments = payments || [];

                        var totalPaid = 0;

                        payments.forEach(function (payment) {
                            payment.amount = payment.amount || 0;
                            totalPaid = totalPaid + parseFloat(payment.amount);
                        });

                        return totalPaid.toFixed(2);
                    },
                    dueAmount: function dueAmount(invoice) {
                        var paid = this.totalPaid(invoice.payments.data);
                        var total = this.invoiceTotal(invoice.entryTasks, invoice.entryNames, invoice.discount);
                        var dueTotal = parseFloat(total) - parseFloat(paid);

                        return dueTotal.toFixed(2);
                    },
                    sendToPaypal: function sendToPaypal(args) {
                        var self = this;
                        var listener_url = PM_Pro_Vars.listener_url,
                            return_url = PM_Pro_Vars.return_url,
                            currentUserMail = PM_Vars.current_user.data.user_email,
                            is_partial = args.invoice.partial,
                            minimum_partial = parseFloat(args.invoice.minimum_partial),
                            paypal_email = this.getSettings('paypal_mail', '', 'invoice'),
                            item_name = args.invoice.title,
                            paymentAmount = parseFloat(args.amount),
                            currency_code = this.getSettings('currency_code', '', 'invoice'),
                            bloginfoName = PM_Pro_Vars.bloginfo_name,
                            sandboxMode = this.getSettings('sand_box_mode', false, 'invoice'),
                            due_amount = this.dueAmount(this.invoice);

                        var request = {
                            data: {
                                amount: paymentAmount
                            },
                            type: 'POST',
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/invoice/' + args.invoice_id + '/payment-validation', ///with=comments',
                            success: function success(res) {
                                if (sandboxMode || sandboxMode == '1') {
                                    var paypalUrl = 'https://www.sandbox.paypal.com/webscr/';
                                } else {
                                    var paypalUrl = 'https://www.paypal.com/webscr/';
                                }

                                var paypal_args = {
                                    'cmd': '_xclick',
                                    'amount': paymentAmount,
                                    'business': paypal_email,
                                    'item_name': item_name,
                                    'item_number': args.invoice.id,
                                    'email': currentUserMail,
                                    'no_shipping': '1',
                                    'no_note': '1',
                                    'currency_code': currency_code,
                                    'charset': 'UTF-8',
                                    'custom': '{' + '"invoice_id":' + args.invoice.id + ',' + '"user_id":' + PM_Vars.current_user.data.ID + ',' + '"project_id":' + args.invoice.project_id + ',' + '"gateway":' + '"' + paypalUrl + '"' + '}',
                                    'rm': '2',
                                    'return': return_url,
                                    'notify_url': listener_url,
                                    'cbt': 'Click here to complete the payment on ' + bloginfoName
                                };
                                self.can_payment_submit = true;
                                var query = self.getQueryParams(paypal_args);
                                var buildUrl = paypalUrl + '?' + query;

                                window.location.href = buildUrl;
                            },
                            error: function error(res) {
                                self.can_submit = true;
                                alert(res.responseJSON.message);
                            }
                        };

                        self.httpRequest(request);

// if ( paymentAmount <= 0 ) {
//     alert( "Please insert your payment amount");
//     return false;
// }

// if ( paymentAmount > due_amount ) {
//     alert("Payment amount should be less than or equal due amount");
//     return false;
// }

// if ( ( is_partial == '1' ) ) {
//     if(
//         due_amount >= minimum_partial
//             &&
//         paymentAmount <  minimum_partial
//     ){
//         alert('Minimum amount greater than ' + minimum_partial);
//         return false;
//     } else if (
//         due_amount < minimum_partial
//             &&
//         paymentAmount < due_amount
//     ) {
//         alert("Payment should be equal to due amount");
//         return false;
//     }

// } else {

//     if ( paymentAmount != due_amount ) {
//         alert( "Payment should equeal due amount", "pm" );
//     }

// }

                    },
                    getDueAmount: function getDueAmount(invoice) {
                        var paidAmount = this.totalPaid(this.invoice.payments.data);
                        var totalAmount = this.invoiceTotal(invoice.entryTasks, invoice.entryNames, invoice.discount);

                        var due = totalAmount - paidAmount;

                        return due.toFixed(2);
                    },
                    capitalizeFirstLetter: function capitalizeFirstLetter(string) {
                        return string.charAt(0).toUpperCase() + string.slice(1);
                    },
                    checkPermission: function checkPermission() {
                        if (!this.is_manager()) {
                            this.$router.push({
                                name: 'pm_overview',
                                params: {
                                    project_id: this.project_id
                                }
                            });
                        }
                    },
                    gateWays: function gateWays() {
                        var mergedGateWays = [];
                        var gateWays = [{
                            'name': 'paypal',
                            'label': 'Paypal',
                            'active': false
                        }];
                        gateWays = pm_apply_filters('pm_invoice_gateways', gateWays);
                        var saved = this.getSettings('gateWays', gateWays, 'invoice');
                        gateWays.forEach(function (w) {
                            var x = saved.findIndex(function (i) {
                                return i.name == w.name;
                            });
                            if (x === -1) {
                                mergedGateWays.push(w);
                            } else {
                                mergedGateWays.push(saved[x]);
                            }
                        });
                        return mergedGateWays;
                    }
                }
            };

            /***/ }),
        /* 374 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = [{ name: 'Afghanistan', code: 'AF' }, { name: 'Åland Islands', code: 'AX' }, { name: 'Albania', code: 'AL' }, { name: 'Algeria', code: 'DZ' }, { name: 'American Samoa', code: 'AS' }, { name: 'AndorrA', code: 'AD' }, { name: 'Angola', code: 'AO' }, { name: 'Anguilla', code: 'AI' }, { name: 'Antarctica', code: 'AQ' }, { name: 'Antigua and Barbuda', code: 'AG' }, { name: 'Argentina', code: 'AR' }, { name: 'Armenia', code: 'AM' }, { name: 'Aruba', code: 'AW' }, { name: 'Australia', code: 'AU' }, { name: 'Austria', code: 'AT' }, { name: 'Azerbaijan', code: 'AZ' }, { name: 'Bahamas', code: 'BS' }, { name: 'Bahrain', code: 'BH' }, { name: 'Bangladesh', code: 'BD' }, { name: 'Barbados', code: 'BB' }, { name: 'Belarus', code: 'BY' }, { name: 'Belgium', code: 'BE' }, { name: 'Belize', code: 'BZ' }, { name: 'Benin', code: 'BJ' }, { name: 'Bermuda', code: 'BM' }, { name: 'Bhutan', code: 'BT' }, { name: 'Bolivia', code: 'BO' }, { name: 'Bosnia and Herzegovina', code: 'BA' }, { name: 'Botswana', code: 'BW' }, { name: 'Bouvet Island', code: 'BV' }, { name: 'Brazil', code: 'BR' }, { name: 'British Indian Ocean Territory', code: 'IO' }, { name: 'Brunei Darussalam', code: 'BN' }, { name: 'Bulgaria', code: 'BG' }, { name: 'Burkina Faso', code: 'BF' }, { name: 'Burundi', code: 'BI' }, { name: 'Cambodia', code: 'KH' }, { name: 'Cameroon', code: 'CM' }, { name: 'Canada', code: 'CA' }, { name: 'Cape Verde', code: 'CV' }, { name: 'Cayman Islands', code: 'KY' }, { name: 'Central African Republic', code: 'CF' }, { name: 'Chad', code: 'TD' }, { name: 'Chile', code: 'CL' }, { name: 'China', code: 'CN' }, { name: 'Christmas Island', code: 'CX' }, { name: 'Cocos (Keeling) Islands', code: 'CC' }, { name: 'Colombia', code: 'CO' }, { name: 'Comoros', code: 'KM' }, { name: 'Congo', code: 'CG' }, { name: 'Congo, The Democratic Republic of the', code: 'CD' }, { name: 'Cook Islands', code: 'CK' }, { name: 'Costa Rica', code: 'CR' }, { name: 'Cote D\'Ivoire', code: 'CI' }, { name: 'Croatia', code: 'HR' }, { name: 'Cuba', code: 'CU' }, { name: 'Cyprus', code: 'CY' }, { name: 'Czech Republic', code: 'CZ' }, { name: 'Denmark', code: 'DK' }, { name: 'Djibouti', code: 'DJ' }, { name: 'Dominica', code: 'DM' }, { name: 'Dominican Republic', code: 'DO' }, { name: 'Ecuador', code: 'EC' }, { name: 'Egypt', code: 'EG' }, { name: 'El Salvador', code: 'SV' }, { name: 'Equatorial Guinea', code: 'GQ' }, { name: 'Eritrea', code: 'ER' }, { name: 'Estonia', code: 'EE' }, { name: 'Ethiopia', code: 'ET' }, { name: 'Falkland Islands (Malvinas)', code: 'FK' }, { name: 'Faroe Islands', code: 'FO' }, { name: 'Fiji', code: 'FJ' }, { name: 'Finland', code: 'FI' }, { name: 'France', code: 'FR' }, { name: 'French Guiana', code: 'GF' }, { name: 'French Polynesia', code: 'PF' }, { name: 'French Southern Territories', code: 'TF' }, { name: 'Gabon', code: 'GA' }, { name: 'Gambia', code: 'GM' }, { name: 'Georgia', code: 'GE' }, { name: 'Germany', code: 'DE' }, { name: 'Ghana', code: 'GH' }, { name: 'Gibraltar', code: 'GI' }, { name: 'Greece', code: 'GR' }, { name: 'Greenland', code: 'GL' }, { name: 'Grenada', code: 'GD' }, { name: 'Guadeloupe', code: 'GP' }, { name: 'Guam', code: 'GU' }, { name: 'Guatemala', code: 'GT' }, { name: 'Guernsey', code: 'GG' }, { name: 'Guinea', code: 'GN' }, { name: 'Guinea-Bissau', code: 'GW' }, { name: 'Guyana', code: 'GY' }, { name: 'Haiti', code: 'HT' }, { name: 'Heard Island and Mcdonald Islands', code: 'HM' }, { name: 'Holy See (Vatican City State)', code: 'VA' }, { name: 'Honduras', code: 'HN' }, { name: 'Hong Kong', code: 'HK' }, { name: 'Hungary', code: 'HU' }, { name: 'Iceland', code: 'IS' }, { name: 'India', code: 'IN' }, { name: 'Indonesia', code: 'ID' }, { name: 'Iran, Islamic Republic Of', code: 'IR' }, { name: 'Iraq', code: 'IQ' }, { name: 'Ireland', code: 'IE' }, { name: 'Isle of Man', code: 'IM' }, { name: 'Israel', code: 'IL' }, { name: 'Italy', code: 'IT' }, { name: 'Jamaica', code: 'JM' }, { name: 'Japan', code: 'JP' }, { name: 'Jersey', code: 'JE' }, { name: 'Jordan', code: 'JO' }, { name: 'Kazakhstan', code: 'KZ' }, { name: 'Kenya', code: 'KE' }, { name: 'Kiribati', code: 'KI' }, { name: 'Korea, Democratic People\'S Republic of', code: 'KP' }, { name: 'Korea, Republic of', code: 'KR' }, { name: 'Kuwait', code: 'KW' }, { name: 'Kyrgyzstan', code: 'KG' }, { name: 'Lao People\'S Democratic Republic', code: 'LA' }, { name: 'Latvia', code: 'LV' }, { name: 'Lebanon', code: 'LB' }, { name: 'Lesotho', code: 'LS' }, { name: 'Liberia', code: 'LR' }, { name: 'Libyan Arab Jamahiriya', code: 'LY' }, { name: 'Liechtenstein', code: 'LI' }, { name: 'Lithuania', code: 'LT' }, { name: 'Luxembourg', code: 'LU' }, { name: 'Macao', code: 'MO' }, { name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK' }, { name: 'Madagascar', code: 'MG' }, { name: 'Malawi', code: 'MW' }, { name: 'Malaysia', code: 'MY' }, { name: 'Maldives', code: 'MV' }, { name: 'Mali', code: 'ML' }, { name: 'Malta', code: 'MT' }, { name: 'Marshall Islands', code: 'MH' }, { name: 'Martinique', code: 'MQ' }, { name: 'Mauritania', code: 'MR' }, { name: 'Mauritius', code: 'MU' }, { name: 'Mayotte', code: 'YT' }, { name: 'Mexico', code: 'MX' }, { name: 'Micronesia, Federated States of', code: 'FM' }, { name: 'Moldova, Republic of', code: 'MD' }, { name: 'Monaco', code: 'MC' }, { name: 'Mongolia', code: 'MN' }, { name: 'Montserrat', code: 'MS' }, { name: 'Morocco', code: 'MA' }, { name: 'Mozambique', code: 'MZ' }, { name: 'Myanmar', code: 'MM' }, { name: 'Namibia', code: 'NA' }, { name: 'Nauru', code: 'NR' }, { name: 'Nepal', code: 'NP' }, { name: 'Netherlands', code: 'NL' }, { name: 'Netherlands Antilles', code: 'AN' }, { name: 'New Caledonia', code: 'NC' }, { name: 'New Zealand', code: 'NZ' }, { name: 'Nicaragua', code: 'NI' }, { name: 'Niger', code: 'NE' }, { name: 'Nigeria', code: 'NG' }, { name: 'Niue', code: 'NU' }, { name: 'Norfolk Island', code: 'NF' }, { name: 'Northern Mariana Islands', code: 'MP' }, { name: 'Norway', code: 'NO' }, { name: 'Oman', code: 'OM' }, { name: 'Pakistan', code: 'PK' }, { name: 'Palau', code: 'PW' }, { name: 'Palestinian Territory, Occupied', code: 'PS' }, { name: 'Panama', code: 'PA' }, { name: 'Papua New Guinea', code: 'PG' }, { name: 'Paraguay', code: 'PY' }, { name: 'Peru', code: 'PE' }, { name: 'Philippines', code: 'PH' }, { name: 'Pitcairn', code: 'PN' }, { name: 'Poland', code: 'PL' }, { name: 'Portugal', code: 'PT' }, { name: 'Puerto Rico', code: 'PR' }, { name: 'Qatar', code: 'QA' }, { name: 'Reunion', code: 'RE' }, { name: 'Romania', code: 'RO' }, { name: 'Russian Federation', code: 'RU' }, { name: 'RWANDA', code: 'RW' }, { name: 'Saint Helena', code: 'SH' }, { name: 'Saint Kitts and Nevis', code: 'KN' }, { name: 'Saint Lucia', code: 'LC' }, { name: 'Saint Pierre and Miquelon', code: 'PM' }, { name: 'Saint Vincent and the Grenadines', code: 'VC' }, { name: 'Samoa', code: 'WS' }, { name: 'San Marino', code: 'SM' }, { name: 'Sao Tome and Principe', code: 'ST' }, { name: 'Saudi Arabia', code: 'SA' }, { name: 'Senegal', code: 'SN' }, { name: 'Serbia and Montenegro', code: 'CS' }, { name: 'Seychelles', code: 'SC' }, { name: 'Sierra Leone', code: 'SL' }, { name: 'Singapore', code: 'SG' }, { name: 'Slovakia', code: 'SK' }, { name: 'Slovenia', code: 'SI' }, { name: 'Solomon Islands', code: 'SB' }, { name: 'Somalia', code: 'SO' }, { name: 'South Africa', code: 'ZA' }, { name: 'South Georgia and the South Sandwich Islands', code: 'GS' }, { name: 'Spain', code: 'ES' }, { name: 'Sri Lanka', code: 'LK' }, { name: 'Sudan', code: 'SD' }, { name: 'Suriname', code: 'SR' }, { name: 'Svalbard and Jan Mayen', code: 'SJ' }, { name: 'Swaziland', code: 'SZ' }, { name: 'Sweden', code: 'SE' }, { name: 'Switzerland', code: 'CH' }, { name: 'Syrian Arab Republic', code: 'SY' }, { name: 'Taiwan, Province of China', code: 'TW' }, { name: 'Tajikistan', code: 'TJ' }, { name: 'Tanzania, United Republic of', code: 'TZ' }, { name: 'Thailand', code: 'TH' }, { name: 'Timor-Leste', code: 'TL' }, { name: 'Togo', code: 'TG' }, { name: 'Tokelau', code: 'TK' }, { name: 'Tonga', code: 'TO' }, { name: 'Trinidad and Tobago', code: 'TT' }, { name: 'Tunisia', code: 'TN' }, { name: 'Turkey', code: 'TR' }, { name: 'Turkmenistan', code: 'TM' }, { name: 'Turks and Caicos Islands', code: 'TC' }, { name: 'Tuvalu', code: 'TV' }, { name: 'Uganda', code: 'UG' }, { name: 'Ukraine', code: 'UA' }, { name: 'United Arab Emirates', code: 'AE' }, { name: 'United Kingdom', code: 'GB' }, { name: 'United States', code: 'US' }, { name: 'United States Minor Outlying Islands', code: 'UM' }, { name: 'Uruguay', code: 'UY' }, { name: 'Uzbekistan', code: 'UZ' }, { name: 'Vanuatu', code: 'VU' }, { name: 'Venezuela', code: 'VE' }, { name: 'Viet Nam', code: 'VN' }, { name: 'Virgin Islands, British', code: 'VG' }, { name: 'Virgin Islands, U.S.', code: 'VI' }, { name: 'Wallis and Futuna', code: 'WF' }, { name: 'Western Sahara', code: 'EH' }, { name: 'Yemen', code: 'YE' }, { name: 'Zambia', code: 'ZM' }, { name: 'Zimbabwe', code: 'ZW' }];

            /***/ }),
        /* 375 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                "USD": {
                    "symbol": "$",
                    "name": "US Dollar",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "USD",
                    "name_plural": "US dollars"
                },
                "CAD": {
                    "symbol": "CA$",
                    "name": "Canadian Dollar",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "CAD",
                    "name_plural": "Canadian dollars"
                },
                "EUR": {
                    "symbol": "€",
                    "name": "Euro",
                    "symbol_native": "€",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "EUR",
                    "name_plural": "euros"
                },
                "AED": {
                    "symbol": "AED",
                    "name": "United Arab Emirates Dirham",
                    "symbol_native": "د.إ.‏",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "AED",
                    "name_plural": "UAE dirhams"
                },
                "AFN": {
                    "symbol": "Af",
                    "name": "Afghan Afghani",
                    "symbol_native": "؋",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "AFN",
                    "name_plural": "Afghan Afghanis"
                },
                "ALL": {
                    "symbol": "ALL",
                    "name": "Albanian Lek",
                    "symbol_native": "Lek",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "ALL",
                    "name_plural": "Albanian lekë"
                },
                "AMD": {
                    "symbol": "AMD",
                    "name": "Armenian Dram",
                    "symbol_native": "դր.",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "AMD",
                    "name_plural": "Armenian drams"
                },
                "ARS": {
                    "symbol": "AR$",
                    "name": "Argentine Peso",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "ARS",
                    "name_plural": "Argentine pesos"
                },
                "AUD": {
                    "symbol": "AU$",
                    "name": "Australian Dollar",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "AUD",
                    "name_plural": "Australian dollars"
                },
                "AZN": {
                    "symbol": "man.",
                    "name": "Azerbaijani Manat",
                    "symbol_native": "ман.",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "AZN",
                    "name_plural": "Azerbaijani manats"
                },
                "BAM": {
                    "symbol": "KM",
                    "name": "Bosnia-Herzegovina Convertible Mark",
                    "symbol_native": "KM",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "BAM",
                    "name_plural": "Bosnia-Herzegovina convertible marks"
                },
                "BDT": {
                    "symbol": "Tk",
                    "name": "Bangladeshi Taka",
                    "symbol_native": "৳",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "BDT",
                    "name_plural": "Bangladeshi takas"
                },
                "BGN": {
                    "symbol": "BGN",
                    "name": "Bulgarian Lev",
                    "symbol_native": "лв.",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "BGN",
                    "name_plural": "Bulgarian leva"
                },
                "BHD": {
                    "symbol": "BD",
                    "name": "Bahraini Dinar",
                    "symbol_native": "د.ب.‏",
                    "decimal_digits": 3,
                    "rounding": 0,
                    "code": "BHD",
                    "name_plural": "Bahraini dinars"
                },
                "BIF": {
                    "symbol": "FBu",
                    "name": "Burundian Franc",
                    "symbol_native": "FBu",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "BIF",
                    "name_plural": "Burundian francs"
                },
                "BND": {
                    "symbol": "BN$",
                    "name": "Brunei Dollar",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "BND",
                    "name_plural": "Brunei dollars"
                },
                "BOB": {
                    "symbol": "Bs",
                    "name": "Bolivian Boliviano",
                    "symbol_native": "Bs",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "BOB",
                    "name_plural": "Bolivian bolivianos"
                },
                "BRL": {
                    "symbol": "R$",
                    "name": "Brazilian Real",
                    "symbol_native": "R$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "BRL",
                    "name_plural": "Brazilian reals"
                },
                "BWP": {
                    "symbol": "BWP",
                    "name": "Botswanan Pula",
                    "symbol_native": "P",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "BWP",
                    "name_plural": "Botswanan pulas"
                },
                "BYR": {
                    "symbol": "BYR",
                    "name": "Belarusian Ruble",
                    "symbol_native": "BYR",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "BYR",
                    "name_plural": "Belarusian rubles"
                },
                "BZD": {
                    "symbol": "BZ$",
                    "name": "Belize Dollar",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "BZD",
                    "name_plural": "Belize dollars"
                },
                "CDF": {
                    "symbol": "CDF",
                    "name": "Congolese Franc",
                    "symbol_native": "FrCD",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "CDF",
                    "name_plural": "Congolese francs"
                },
                "CHF": {
                    "symbol": "CHF",
                    "name": "Swiss Franc",
                    "symbol_native": "CHF",
                    "decimal_digits": 2,
                    "rounding": 0.05,
                    "code": "CHF",
                    "name_plural": "Swiss francs"
                },
                "CLP": {
                    "symbol": "CL$",
                    "name": "Chilean Peso",
                    "symbol_native": "$",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "CLP",
                    "name_plural": "Chilean pesos"
                },
                "CNY": {
                    "symbol": "CN¥",
                    "name": "Chinese Yuan",
                    "symbol_native": "CN¥",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "CNY",
                    "name_plural": "Chinese yuan"
                },
                "COP": {
                    "symbol": "CO$",
                    "name": "Colombian Peso",
                    "symbol_native": "$",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "COP",
                    "name_plural": "Colombian pesos"
                },
                "CRC": {
                    "symbol": "₡",
                    "name": "Costa Rican Colón",
                    "symbol_native": "₡",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "CRC",
                    "name_plural": "Costa Rican colóns"
                },
                "CVE": {
                    "symbol": "CV$",
                    "name": "Cape Verdean Escudo",
                    "symbol_native": "CV$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "CVE",
                    "name_plural": "Cape Verdean escudos"
                },
                "CZK": {
                    "symbol": "Kč",
                    "name": "Czech Republic Koruna",
                    "symbol_native": "Kč",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "CZK",
                    "name_plural": "Czech Republic korunas"
                },
                "DJF": {
                    "symbol": "Fdj",
                    "name": "Djiboutian Franc",
                    "symbol_native": "Fdj",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "DJF",
                    "name_plural": "Djiboutian francs"
                },
                "DKK": {
                    "symbol": "Dkr",
                    "name": "Danish Krone",
                    "symbol_native": "kr",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "DKK",
                    "name_plural": "Danish kroner"
                },
                "DOP": {
                    "symbol": "RD$",
                    "name": "Dominican Peso",
                    "symbol_native": "RD$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "DOP",
                    "name_plural": "Dominican pesos"
                },
                "DZD": {
                    "symbol": "DA",
                    "name": "Algerian Dinar",
                    "symbol_native": "د.ج.‏",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "DZD",
                    "name_plural": "Algerian dinars"
                },
                "EEK": {
                    "symbol": "Ekr",
                    "name": "Estonian Kroon",
                    "symbol_native": "kr",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "EEK",
                    "name_plural": "Estonian kroons"
                },
                "EGP": {
                    "symbol": "EGP",
                    "name": "Egyptian Pound",
                    "symbol_native": "ج.م.‏",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "EGP",
                    "name_plural": "Egyptian pounds"
                },
                "ERN": {
                    "symbol": "Nfk",
                    "name": "Eritrean Nakfa",
                    "symbol_native": "Nfk",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "ERN",
                    "name_plural": "Eritrean nakfas"
                },
                "ETB": {
                    "symbol": "Br",
                    "name": "Ethiopian Birr",
                    "symbol_native": "Br",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "ETB",
                    "name_plural": "Ethiopian birrs"
                },
                "GBP": {
                    "symbol": "£",
                    "name": "British Pound Sterling",
                    "symbol_native": "£",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "GBP",
                    "name_plural": "British pounds sterling"
                },
                "GEL": {
                    "symbol": "GEL",
                    "name": "Georgian Lari",
                    "symbol_native": "GEL",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "GEL",
                    "name_plural": "Georgian laris"
                },
                "GHS": {
                    "symbol": "GH₵",
                    "name": "Ghanaian Cedi",
                    "symbol_native": "GH₵",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "GHS",
                    "name_plural": "Ghanaian cedis"
                },
                "GNF": {
                    "symbol": "FG",
                    "name": "Guinean Franc",
                    "symbol_native": "FG",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "GNF",
                    "name_plural": "Guinean francs"
                },
                "GTQ": {
                    "symbol": "GTQ",
                    "name": "Guatemalan Quetzal",
                    "symbol_native": "Q",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "GTQ",
                    "name_plural": "Guatemalan quetzals"
                },
                "HKD": {
                    "symbol": "HK$",
                    "name": "Hong Kong Dollar",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "HKD",
                    "name_plural": "Hong Kong dollars"
                },
                "HNL": {
                    "symbol": "HNL",
                    "name": "Honduran Lempira",
                    "symbol_native": "L",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "HNL",
                    "name_plural": "Honduran lempiras"
                },
                "HRK": {
                    "symbol": "kn",
                    "name": "Croatian Kuna",
                    "symbol_native": "kn",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "HRK",
                    "name_plural": "Croatian kunas"
                },
                "HUF": {
                    "symbol": "Ft",
                    "name": "Hungarian Forint",
                    "symbol_native": "Ft",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "HUF",
                    "name_plural": "Hungarian forints"
                },
                "IDR": {
                    "symbol": "Rp",
                    "name": "Indonesian Rupiah",
                    "symbol_native": "Rp",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "IDR",
                    "name_plural": "Indonesian rupiahs"
                },
                "ILS": {
                    "symbol": "₪",
                    "name": "Israeli New Sheqel",
                    "symbol_native": "₪",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "ILS",
                    "name_plural": "Israeli new sheqels"
                },
                "INR": {
                    "symbol": "Rs",
                    "name": "Indian Rupee",
                    "symbol_native": "টকা",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "INR",
                    "name_plural": "Indian rupees"
                },
                "IQD": {
                    "symbol": "IQD",
                    "name": "Iraqi Dinar",
                    "symbol_native": "د.ع.‏",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "IQD",
                    "name_plural": "Iraqi dinars"
                },
                "IRR": {
                    "symbol": "IRR",
                    "name": "Iranian Rial",
                    "symbol_native": "﷼",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "IRR",
                    "name_plural": "Iranian rials"
                },
                "ISK": {
                    "symbol": "Ikr",
                    "name": "Icelandic Króna",
                    "symbol_native": "kr",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "ISK",
                    "name_plural": "Icelandic krónur"
                },
                "JMD": {
                    "symbol": "J$",
                    "name": "Jamaican Dollar",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "JMD",
                    "name_plural": "Jamaican dollars"
                },
                "JOD": {
                    "symbol": "JD",
                    "name": "Jordanian Dinar",
                    "symbol_native": "د.أ.‏",
                    "decimal_digits": 3,
                    "rounding": 0,
                    "code": "JOD",
                    "name_plural": "Jordanian dinars"
                },
                "JPY": {
                    "symbol": "¥",
                    "name": "Japanese Yen",
                    "symbol_native": "￥",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "JPY",
                    "name_plural": "Japanese yen"
                },
                "KES": {
                    "symbol": "Ksh",
                    "name": "Kenyan Shilling",
                    "symbol_native": "Ksh",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "KES",
                    "name_plural": "Kenyan shillings"
                },
                "KHR": {
                    "symbol": "KHR",
                    "name": "Cambodian Riel",
                    "symbol_native": "៛",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "KHR",
                    "name_plural": "Cambodian riels"
                },
                "KMF": {
                    "symbol": "CF",
                    "name": "Comorian Franc",
                    "symbol_native": "FC",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "KMF",
                    "name_plural": "Comorian francs"
                },
                "KRW": {
                    "symbol": "₩",
                    "name": "South Korean Won",
                    "symbol_native": "₩",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "KRW",
                    "name_plural": "South Korean won"
                },
                "KWD": {
                    "symbol": "KD",
                    "name": "Kuwaiti Dinar",
                    "symbol_native": "د.ك.‏",
                    "decimal_digits": 3,
                    "rounding": 0,
                    "code": "KWD",
                    "name_plural": "Kuwaiti dinars"
                },
                "KZT": {
                    "symbol": "KZT",
                    "name": "Kazakhstani Tenge",
                    "symbol_native": "тңг.",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "KZT",
                    "name_plural": "Kazakhstani tenges"
                },
                "LBP": {
                    "symbol": "LB£",
                    "name": "Lebanese Pound",
                    "symbol_native": "ل.ل.‏",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "LBP",
                    "name_plural": "Lebanese pounds"
                },
                "LKR": {
                    "symbol": "SLRs",
                    "name": "Sri Lankan Rupee",
                    "symbol_native": "SL Re",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "LKR",
                    "name_plural": "Sri Lankan rupees"
                },
                "LTL": {
                    "symbol": "Lt",
                    "name": "Lithuanian Litas",
                    "symbol_native": "Lt",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "LTL",
                    "name_plural": "Lithuanian litai"
                },
                "LVL": {
                    "symbol": "Ls",
                    "name": "Latvian Lats",
                    "symbol_native": "Ls",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "LVL",
                    "name_plural": "Latvian lati"
                },
                "LYD": {
                    "symbol": "LD",
                    "name": "Libyan Dinar",
                    "symbol_native": "د.ل.‏",
                    "decimal_digits": 3,
                    "rounding": 0,
                    "code": "LYD",
                    "name_plural": "Libyan dinars"
                },
                "MAD": {
                    "symbol": "MAD",
                    "name": "Moroccan Dirham",
                    "symbol_native": "د.م.‏",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "MAD",
                    "name_plural": "Moroccan dirhams"
                },
                "MDL": {
                    "symbol": "MDL",
                    "name": "Moldovan Leu",
                    "symbol_native": "MDL",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "MDL",
                    "name_plural": "Moldovan lei"
                },
                "MGA": {
                    "symbol": "MGA",
                    "name": "Malagasy Ariary",
                    "symbol_native": "MGA",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "MGA",
                    "name_plural": "Malagasy Ariaries"
                },
                "MKD": {
                    "symbol": "MKD",
                    "name": "Macedonian Denar",
                    "symbol_native": "MKD",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "MKD",
                    "name_plural": "Macedonian denari"
                },
                "MMK": {
                    "symbol": "MMK",
                    "name": "Myanma Kyat",
                    "symbol_native": "K",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "MMK",
                    "name_plural": "Myanma kyats"
                },
                "MOP": {
                    "symbol": "MOP$",
                    "name": "Macanese Pataca",
                    "symbol_native": "MOP$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "MOP",
                    "name_plural": "Macanese patacas"
                },
                "MUR": {
                    "symbol": "MURs",
                    "name": "Mauritian Rupee",
                    "symbol_native": "MURs",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "MUR",
                    "name_plural": "Mauritian rupees"
                },
                "MXN": {
                    "symbol": "MX$",
                    "name": "Mexican Peso",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "MXN",
                    "name_plural": "Mexican pesos"
                },
                "MYR": {
                    "symbol": "RM",
                    "name": "Malaysian Ringgit",
                    "symbol_native": "RM",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "MYR",
                    "name_plural": "Malaysian ringgits"
                },
                "MZN": {
                    "symbol": "MTn",
                    "name": "Mozambican Metical",
                    "symbol_native": "MTn",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "MZN",
                    "name_plural": "Mozambican meticals"
                },
                "NAD": {
                    "symbol": "N$",
                    "name": "Namibian Dollar",
                    "symbol_native": "N$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "NAD",
                    "name_plural": "Namibian dollars"
                },
                "NGN": {
                    "symbol": "₦",
                    "name": "Nigerian Naira",
                    "symbol_native": "₦",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "NGN",
                    "name_plural": "Nigerian nairas"
                },
                "NIO": {
                    "symbol": "C$",
                    "name": "Nicaraguan Córdoba",
                    "symbol_native": "C$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "NIO",
                    "name_plural": "Nicaraguan córdobas"
                },
                "NOK": {
                    "symbol": "Nkr",
                    "name": "Norwegian Krone",
                    "symbol_native": "kr",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "NOK",
                    "name_plural": "Norwegian kroner"
                },
                "NPR": {
                    "symbol": "NPRs",
                    "name": "Nepalese Rupee",
                    "symbol_native": "नेरू",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "NPR",
                    "name_plural": "Nepalese rupees"
                },
                "NZD": {
                    "symbol": "NZ$",
                    "name": "New Zealand Dollar",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "NZD",
                    "name_plural": "New Zealand dollars"
                },
                "OMR": {
                    "symbol": "OMR",
                    "name": "Omani Rial",
                    "symbol_native": "ر.ع.‏",
                    "decimal_digits": 3,
                    "rounding": 0,
                    "code": "OMR",
                    "name_plural": "Omani rials"
                },
                "PAB": {
                    "symbol": "B/.",
                    "name": "Panamanian Balboa",
                    "symbol_native": "B/.",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "PAB",
                    "name_plural": "Panamanian balboas"
                },
                "PEN": {
                    "symbol": "S/.",
                    "name": "Peruvian Nuevo Sol",
                    "symbol_native": "S/.",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "PEN",
                    "name_plural": "Peruvian nuevos soles"
                },
                "PHP": {
                    "symbol": "₱",
                    "name": "Philippine Peso",
                    "symbol_native": "₱",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "PHP",
                    "name_plural": "Philippine pesos"
                },
                "PKR": {
                    "symbol": "PKRs",
                    "name": "Pakistani Rupee",
                    "symbol_native": "₨",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "PKR",
                    "name_plural": "Pakistani rupees"
                },
                "PLN": {
                    "symbol": "zł",
                    "name": "Polish Zloty",
                    "symbol_native": "zł",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "PLN",
                    "name_plural": "Polish zlotys"
                },
                "PYG": {
                    "symbol": "₲",
                    "name": "Paraguayan Guarani",
                    "symbol_native": "₲",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "PYG",
                    "name_plural": "Paraguayan guaranis"
                },
                "QAR": {
                    "symbol": "QR",
                    "name": "Qatari Rial",
                    "symbol_native": "ر.ق.‏",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "QAR",
                    "name_plural": "Qatari rials"
                },
                "RON": {
                    "symbol": "RON",
                    "name": "Romanian Leu",
                    "symbol_native": "RON",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "RON",
                    "name_plural": "Romanian lei"
                },
                "RSD": {
                    "symbol": "din.",
                    "name": "Serbian Dinar",
                    "symbol_native": "дин.",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "RSD",
                    "name_plural": "Serbian dinars"
                },
                "RUB": {
                    "symbol": "RUB",
                    "name": "Russian Ruble",
                    "symbol_native": "руб.",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "RUB",
                    "name_plural": "Russian rubles"
                },
                "RWF": {
                    "symbol": "RWF",
                    "name": "Rwandan Franc",
                    "symbol_native": "FR",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "RWF",
                    "name_plural": "Rwandan francs"
                },
                "SAR": {
                    "symbol": "SR",
                    "name": "Saudi Riyal",
                    "symbol_native": "ر.س.‏",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "SAR",
                    "name_plural": "Saudi riyals"
                },
                "SDG": {
                    "symbol": "SDG",
                    "name": "Sudanese Pound",
                    "symbol_native": "SDG",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "SDG",
                    "name_plural": "Sudanese pounds"
                },
                "SEK": {
                    "symbol": "Skr",
                    "name": "Swedish Krona",
                    "symbol_native": "kr",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "SEK",
                    "name_plural": "Swedish kronor"
                },
                "SGD": {
                    "symbol": "S$",
                    "name": "Singapore Dollar",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "SGD",
                    "name_plural": "Singapore dollars"
                },
                "SOS": {
                    "symbol": "Ssh",
                    "name": "Somali Shilling",
                    "symbol_native": "Ssh",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "SOS",
                    "name_plural": "Somali shillings"
                },
                "SYP": {
                    "symbol": "SY£",
                    "name": "Syrian Pound",
                    "symbol_native": "ل.س.‏",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "SYP",
                    "name_plural": "Syrian pounds"
                },
                "THB": {
                    "symbol": "฿",
                    "name": "Thai Baht",
                    "symbol_native": "฿",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "THB",
                    "name_plural": "Thai baht"
                },
                "TND": {
                    "symbol": "DT",
                    "name": "Tunisian Dinar",
                    "symbol_native": "د.ت.‏",
                    "decimal_digits": 3,
                    "rounding": 0,
                    "code": "TND",
                    "name_plural": "Tunisian dinars"
                },
                "TOP": {
                    "symbol": "T$",
                    "name": "Tongan Paʻanga",
                    "symbol_native": "T$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "TOP",
                    "name_plural": "Tongan paʻanga"
                },
                "TRY": {
                    "symbol": "TL",
                    "name": "Turkish Lira",
                    "symbol_native": "TL",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "TRY",
                    "name_plural": "Turkish Lira"
                },
                "TTD": {
                    "symbol": "TT$",
                    "name": "Trinidad and Tobago Dollar",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "TTD",
                    "name_plural": "Trinidad and Tobago dollars"
                },
                "TWD": {
                    "symbol": "NT$",
                    "name": "New Taiwan Dollar",
                    "symbol_native": "NT$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "TWD",
                    "name_plural": "New Taiwan dollars"
                },
                "TZS": {
                    "symbol": "TSh",
                    "name": "Tanzanian Shilling",
                    "symbol_native": "TSh",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "TZS",
                    "name_plural": "Tanzanian shillings"
                },
                "UAH": {
                    "symbol": "₴",
                    "name": "Ukrainian Hryvnia",
                    "symbol_native": "₴",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "UAH",
                    "name_plural": "Ukrainian hryvnias"
                },
                "UGX": {
                    "symbol": "USh",
                    "name": "Ugandan Shilling",
                    "symbol_native": "USh",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "UGX",
                    "name_plural": "Ugandan shillings"
                },
                "UYU": {
                    "symbol": "$U",
                    "name": "Uruguayan Peso",
                    "symbol_native": "$",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "UYU",
                    "name_plural": "Uruguayan pesos"
                },
                "UZS": {
                    "symbol": "UZS",
                    "name": "Uzbekistan Som",
                    "symbol_native": "UZS",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "UZS",
                    "name_plural": "Uzbekistan som"
                },
                "VEF": {
                    "symbol": "Bs.F.",
                    "name": "Venezuelan Bolívar",
                    "symbol_native": "Bs.F.",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "VEF",
                    "name_plural": "Venezuelan bolívars"
                },
                "VND": {
                    "symbol": "₫",
                    "name": "Vietnamese Dong",
                    "symbol_native": "₫",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "VND",
                    "name_plural": "Vietnamese dong"
                },
                "XAF": {
                    "symbol": "FCFA",
                    "name": "CFA Franc BEAC",
                    "symbol_native": "FCFA",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "XAF",
                    "name_plural": "CFA francs BEAC"
                },
                "XOF": {
                    "symbol": "CFA",
                    "name": "CFA Franc BCEAO",
                    "symbol_native": "CFA",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "XOF",
                    "name_plural": "CFA francs BCEAO"
                },
                "YER": {
                    "symbol": "YR",
                    "name": "Yemeni Rial",
                    "symbol_native": "ر.ي.‏",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "YER",
                    "name_plural": "Yemeni rials"
                },
                "ZAR": {
                    "symbol": "R",
                    "name": "South African Rand",
                    "symbol_native": "R",
                    "decimal_digits": 2,
                    "rounding": 0,
                    "code": "ZAR",
                    "name_plural": "South African rand"
                },
                "ZMK": {
                    "symbol": "ZK",
                    "name": "Zambian Kwacha",
                    "symbol_native": "ZK",
                    "decimal_digits": 0,
                    "rounding": 0,
                    "code": "ZMK",
                    "name_plural": "Zambian kwachas"
                }
            };

            /***/ }),
        /* 376 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                data: function data() {
                    return {
                        abort: false,
                        formSubmit: false,
                        sortableRequestStatus: true,
                        sortableData: ''
                    };
                },


                methods: {
                    removeTaskFromBoard: function removeTaskFromBoard(board_id, task_id) {
                        if (!confirm(__("Are you sure?", 'pm-pro'))) {
                            return;
                        }

                        var self = this;
                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/kanboard/' + board_id + '/tasks/' + task_id + '/delete',
                            type: 'POST',
                            data: {},
                            success: function success(res) {
                                self.$store.commit('kanboard/deleteTask', {
                                    task_id: task_id,
                                    board_id: board_id
                                });
                            },
                            error: function error(res) {
//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    selfCancelTaskForm: function selfCancelTaskForm(board) {
                        board.task_title = '';
                        this.newList = '';
                        this.taskAssigns = '';
                        this.endDate = '';

                        this.showHideTaskForm(board);
                    },
                    loadMore: function loadMore(board_id) {
                        var self = this;
                        var boards = this.$store.state.kanboard.boards;
                        var index = this.getIndex(boards, board_id, 'id');
                        var page = boards[index].task.meta.pagination.current_page;

                        var args = {
                            conditions: {
                                page: parseInt(page) + 1
                            },
                            project_id: this.project_id,
                            board_id: board_id,

                            callback: function callback(res) {
                                if (res.data.length) {
                                    self.$store.commit('kanboard/setLoadMoreData', {
                                        board_id: board_id,
                                        res: res
                                    });
                                }
                            }
                        };

                        this.getBoard(args);
                    },
                    updateTaskOrder: function updateTaskOrder(args, callback) {
                        var self = this;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/kanboard/task-order',
                            type: 'POST',
                            data: args,
                            success: function success(res) {

                                if (args.is_move == 'yes') {
                                    self.$store.commit('kanboard/updateCount', {
                                        board_id: args.sender_section_id,
                                        number: 1,
                                        status: 'addition'
                                    });

                                    self.$store.commit('kanboard/updateTask', {
                                        dropSectionId: args.section_id,
                                        senderSectionId: args.sender_section_id,
                                        task: res.data.drag_task.data,
                                        dragabel_task_id: args.dragabel_task_id,
                                        receive_task_index: args.receive_task_index
                                    });
                                }

                                if (typeof callback != 'undefined') {
                                    callback(res);
                                }
                            },
                            error: function error(res) {
//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    updateBoardOrder: function updateBoardOrder(args, callback) {

                        var self = this;
                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + self.project_id + '/kanboard/board-order',
                            type: 'POST',
                            data: {
                                board_orders: args
                            },
                            success: function success(res) {

                                self.$store.commit('kanboard/updateBoard', args);

                                if (typeof callback == 'function') {
                                    callback(true, res);
                                }
                            },
                            error: function error(res) {
//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                                if (typeof callback == 'function') {
                                    callback(false, res);
                                }
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    addSearchableTask: function addSearchableTask(args) {
                        var self = this;

// self.$store.commit('kanboard/setSearchableTask',
//     {
//         task: args.task,
//         board: args.board
//     }
// );

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + args.data.project_id + '/kanboard/' + args.data.board_id + '/task/' + args.data.task_id,
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
                                if (res.success) {
                                    self.showHideTaskSearch(args.board);

                                    self.$store.commit('kanboard/setSearchableTask', {
                                        task: args.task,
                                        board: args.board
                                    });

// Display a success toast, with a title
//pm.Toastr.success(res.message);

                                    if (typeof args.callback === 'function') {
                                        args.callback(res);
                                    }
                                } else {
                                    pm.Toastr.error(__('This task already included in others column.', 'pm-pro'));
                                }
                            },
                            error: function error(res) {
//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    newTask: function newTask(args) {
                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        if (self.formSubmit) {
                            return;
                        };
                        self.formSubmit = true;

                        var request_data = {
                            url: self.base_url + 'pm/v2/projects/' + self.project_id + '/tasks',
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
                                self.$store.commit('kanboard/setNewTask', {
                                    board_id: args.data.kan_board_id,
                                    task: res.data
                                });

                                self.selfCancelTaskForm(args.board);
// Display a success toast, with a title
//pm.Toastr.success(res.message);
                                self.formSubmit = false;
                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            },
                            error: function error(res) {

//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    showHideAction: function showHideAction(board, status) {
                        status = status || 'toggle';
                        if (!this.is_manager()) {
                            return;
                        }
                        if (status === 'toggle') {
                            status = board.action ? false : true;
                        }

                        if (status) {
                            this.$store.commit('kanboard/showHideTaskSearch', {
                                board_id: board.id,
                                status: false
                            });
                        }

                        this.$store.commit('kanboard/showHideAction', {
                            board_id: board.id,
                            status: status
                        });
                    },
                    showHideTaskSearch: function showHideTaskSearch(board, status) {
                        var self = this;
                        status = status || 'toggle';
                        if (status === 'toggle') {
                            status = board.searchTask ? false : true;
                        }

                        if (status === true) {
                            this.$store.commit('kanboard/showHideAction', {
                                board_id: board.id,
                                status: false
                            });
                        }

                        this.$store.commit('kanboard/showHideTaskSearch', {
                            board_id: board.id,
                            status: status
                        });
                    },
                    showHideBoardTitleUpdate: function showHideBoardTitleUpdate(board, status) {
                        status = status || 'toggle';
                        if (!this.is_manager()) {
                            return;
                        }

                        if (status === 'toggle') {
                            status = board.isUpdateMode ? false : true;
                        }
                        this.$store.commit('kanboard/showHideBoardTitleUpdate', {
                            board_id: board.id,
                            status: status
                        });
                    },
                    showHideTaskForm: function showHideTaskForm(board, status) {
                        status = status || 'toggle';
                        if (status === 'toggle') {
                            status = board.newTaskForm ? false : true;
                        }

                        this.$store.commit('kanboard/showHideTaskForm', {
                            board_id: board.id,
                            status: status
                        });
                    },
                    showListsDropDown: function showListsDropDown(board, status) {
                        status = status || 'toggle';
                        if (status === 'toggle') {
                            status = board.is_active_lists_drop_dwon ? false : true;
                        }

                        if (status === true) {
                            this.$store.commit('kanboard/showUsersDropDown', {
                                board_id: board.id,
                                status: false
                            });
                            this.$store.commit('kanboard/showTaskEndField', {
                                board_id: board.id,
                                status: false
                            });
                        }

                        this.$store.commit('kanboard/showListsDropDown', {
                            board_id: board.id,
                            status: status
                        });

                        pm.Vue.nextTick(function () {
                            jQuery('.cpm-todo-lists-drop-down-wrap').find('.multiselect__input').focus();
                        });
                    },
                    showUserDropDown: function showUserDropDown(board, status) {
                        status = status || 'toggle';
                        if (status === 'toggle') {
                            status = board.is_active_assignUser_dropDown ? false : true;
                        }

                        if (status === true) {
                            this.$store.commit('kanboard/showTaskEndField', {
                                board_id: board.id,
                                status: false
                            });

                            this.$store.commit('kanboard/showListsDropDown', {
                                board_id: board.id,
                                status: false
                            });
                        }

                        this.$store.commit('kanboard/showUsersDropDown', {
                            board_id: board.id,
                            status: status
                        });
                    },
                    showTaskEndField: function showTaskEndField(board, status) {
                        status = status || 'toggle';
                        if (status === 'toggle') {
                            status = board.is_enable_due_date ? false : true;
                        }

                        if (status === true) {
                            this.$store.commit('kanboard/showUsersDropDown', {
                                board_id: board.id,
                                status: false
                            });
                            this.$store.commit('kanboard/showListsDropDown', {
                                board_id: board.id,
                                status: false
                            });
                        }

                        this.$store.commit('kanboard/showTaskEndField', {
                            board_id: board.id,
                            status: status
                        });

                        pm.Vue.nextTick(function () {
                            jQuery('.cpm-inline-task-end-date-wrap').find('input[type="text"]').focus();
                        });
                    },
                    getLists: function getLists() {
                        var self = this;
                        var request = {
                            url: self.base_url + 'pm/v2/projects/' + self.project_id + '/task-lists/?with=incomplete_tasks&per_page=2000',
                            success: function success(res) {
                                self.$store.commit('kanboard/setLists', res.data);
                            }
                        };

                        self.httpRequest(request);
                    },
                    newBoard: function newBoard(args) {
                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + args.data.project_id + '/kanboard/',
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
                                self.addBoardMeta(res.data);
                                self.$store.commit('kanboard/afterCreateNewBoard', res.data);

// Display a success toast, with a title
                                pm.Toastr.success(res.message);

                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            },
                            error: function error(res) {

//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    addBoardMeta: function addBoardMeta(board) {
                        board.task = {
                            data: []
                        };
                        board.newTaskForm = false;
                        board.is_active_lists_drop_dwon = false;
                        board.is_active_assignUser_dropDown = false;
                        board.is_enable_due_date = false;
                        board.users = [];
                        board.endDate = '';
                        board.list = {}, board.task_title = '';
                        board.action = false;
                        board.searchTask = false;
                        board.isUpdateMode = false;
                        board.taskLoading = false;
                    },
                    getKanboard: function getKanboard(args) {
                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + args.data.project_id + '/kanboard',
                            data: args.data,
                            success: function success(res) {
                                res.data.forEach(function (board) {
                                    self.addBoardMeta(board);
                                });

                                self.$store.commit('kanboard/setBoard', res.data);

                                if (args.data.search != 'active') {
                                    res.data.forEach(function (board) {
                                        var args = {
                                            board_id: board.id,
                                            project_id: board.project_id,
                                            callback: function callback(res) {
                                                self.$store.commit('kanboard/setBoardable', {
                                                    board_id: args.board_id,
                                                    tasks: res
                                                });
                                            }
                                        };

                                        self.getBoard(args);
                                    });
                                }

                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            },
                            error: function error(res) {

//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    getBoard: function getBoard(args) {
                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var conditions = self.generateConditions(args.conditions);

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + args.project_id + '/kanboard/' + args.board_id + '/?' + conditions,
                            data: args.data,
                            success: function success(res) {

                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            },
                            error: function error(res) {

//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    deleteBoard: function deleteBoard(args) {
                        if (!confirm(__("Are you sure?", 'pm-pro'))) {
                            return;
                        }
                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/projects/' + args.data.project_id + '/kanboard/' + args.data.board_id + '/delete',
                            data: args.data,
                            type: 'POST',
                            success: function success(res) {

                                self.$store.commit('kanboard/afterDeleteBoard', args.data.board_id);
// Display a success toast, with a title
//pm.Toastr.success(res.message);

                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            },
                            error: function error(res) {

//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },


                    searchTask: function searchTask(args) {
                        var self = this,
                            timeout = 2000,
                            timer;

                        clearTimeout(timer);

                        timer = setTimeout(function () {
                            if (self.abort) {
                                self.abort.abort();
                            }

                            var conditions = self.generateConditions(args.conditions);

                            var requestData = {
                                url: self.base_url + 'pm/v2/projects/' + args.project_id + '/tasks/?' + conditions,
                                data: {},

                                success: function success(res) {
                                    self.$store.commit('kanboard/setSearchTasks', res.data);
                                    if (typeof args.callback != 'undefined') {
                                        args.callback(res);
                                    }
                                }
                            };

                            self.abort = self.httpRequest(requestData);
                        }, timeout);
                    },

                    updateBoard: function updateBoard(args) {
                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var requestData = {
                            url: self.base_url + 'pm-pro/v2/projects/' + args.project_id + '/kanboard/' + args.board_id + '/update',
                            data: args.data,
                            type: 'POST',
                            success: function success(res) {

                                self.$store.commit('kanboard/afterUpdateBoard', {
                                    board_id: args.board_id,
                                    res: res.data
                                });

                                self.showHideBoardTitleUpdate(args.board, false);

                                if (typeof callback != 'undefined') {
                                    callback(res);
                                }
                            }
                        };

                        self.httpRequest(requestData);
                    }
                }
            };

            /***/ }),
        /* 377 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {

                methods: {}
            };

            /***/ }),
        /* 378 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony default export */ __webpack_exports__["default"] = ({

                data () {
                    return {

                    }
                },

                methods: {

                    canEditSprint (sprint) {

                        let user = PM_Vars.current_user;

// it also check manage capability
                        if ( pmHasManageCapability() ) {
                            return true;
                        }

                        let creatorId = sprint.creator.data.id ? sprint.creator.data.id : sprint.creator.data.ID;

                        if ( parseInt(creatorId) === parseInt(user.ID) ){
                            return true;
                        }

                        return false;
                    },

                    dateValue( date ) {
                        if( this.is_object( date ) ) {
                            return date.date;
                        }

                        return date;
                    },

                    canEditTask ( task ) {
                        let user = PM_Vars.current_user;
                        let pIndex = this.getIndex( this.sprint.projects.data, task.project_id, 'project_id' );

                        if ( pIndex === false ) {
                            return false;
                        }

                        let project = this.sprint.projects.data[pIndex];

// it also check manage capability
                        if ( pmIsManager( project ) ) {
                            return true;
                        }

                        let creatorId = task.creator.data.id ? task.creator.data.id : task.creator.data.ID;

                        if ( parseInt(creatorId) === parseInt(user.ID) ){
                            return true;
                        }

                        return false;
                    },

                    refresh( data, callback ) {
                        var self = this;
                        var request_data = {
                            url: `${self.base_url}pm-pro/v2/sprints/refresh`,
                            data: data,
                            type: 'GET',
                            success (res) {

                                if ( data.sprint_id ) {
                                    let sprints = self.$store.state.sprint.sprints;
                                    let index = self.getIndex( sprints, data.sprint_id, 'id' );
                                    let tasks = sprints[index].tasks;

                                    res.data.sprint.data['tasks'] = tasks;

                                    self.$store.commit( 'sprint/updateSprint', res.data.sprint.data );
                                }

                                if ( data.task_id ) {
                                    self.$store.commit( 'sprint/updateSprintTask', {
                                        task: res.data.task.data,
                                        sprint_id: data.sprint_id,
                                    });
                                }

                                if ( data.sub_task_id ) {
                                    self.$store.commit( 'sprint/updateSubTask', res.data.subtask.data );
                                }

                                if ( typeof callback != 'undefined' ) {
                                    callback(res);
                                }
                            },

                            error (res) {

                            }
                        }

                        self.httpRequest(request_data);
                    },

                    updateSubTasks (subTasks) {
                        let self = this;
                        let newSubTasks = [];
                        let storeSubTasks = self.$store.state.sprint.subTasks;

                        storeSubTasks.forEach(( subTask ) => {
                            let index = self.getIndex( subTasks, subTask.id, 'id' );

                            if(index !== false) {
                                newSubTasks.push(subTasks[index]);
                                subTasks.splice( index, 1 );

                            } else {
                                newSubTasks.push(subTask);
                            }
                        });

                        newSubTasks = [ ...newSubTasks, ...subTasks ];

                        self.$store.commit( 'sprint/setSubTasks', newSubTasks );
                    },

                    getSprint ( args, callback ) {
                        var self = this;
                        var request_data = {
                            url: `${self.base_url}pm-pro/v2/sprints/${args.sprintId}`,
                            data: {
                                with: args.with //'incomplete_tasks, complete_tasks, projects'
                            },
                            type: 'GET',
                            success (res) {

                                self.formatSprint(res.data);

                                if ( typeof callback != 'undefined' ) {
                                    callback(res);
                                }
                            },

                            error (res) {

                            }
                        }

                        self.httpRequest(request_data);
                    },

                    formatSprint (sprint) {
                        pm.Vue.set( sprint, 'isOpen', false );
                        pm.Vue.set( sprint, 'tasks', [] );

                    },
                    /**
                     * Mark task done and undone
                     *
                     * @param  int  task_id
                     * @param  Boolean is_checked
                     * @param  int  task_index
                     *
                     * @return void
                     */
                    sprintTaskDoneUndone ( args, callback ) {
                        var self = this;

                        var request_data = {
                            url: self.base_url + 'pm/v2/projects/'+args.project_id+'/tasks/'+args.task_id +'/change-status',
                            type: 'POST',
                            data: args,
                            success ( res ) {

                                if( typeof callback === 'function' ) {
                                    callback(res);
                                }

                            },
                        }
                        self.httpRequest( request_data );
                    },

                    removeFromSprint (sprintId, taskId) {
                        if( !confirm( __( 'Are your sure!', 'pm-pro' ) ) ) {
                            return;
                        }

                        var self = this;



                        var request_data = {
                            url: `${self.base_url}pm-pro/v2/sprints/${sprintId}/tasks/${taskId}/delete`,
                            type: 'POST',
                            success ( res ) {
                                self.$store.commit( 'sprint/afterDeleteTask', {
                                    taskId: taskId,
                                    sprintId: sprintId,
                                });

                                self.refresh({
                                    sprint_id: sprintId,
                                });
                            }
                        }

                        self.httpRequest( request_data );
                    },

                    permanentlyDelete (sprintId, taskId, projectId) {
                        if( !confirm( __( 'Are your sure!', 'pm-pro' ) ) ) {
                            return;
                        }

                        var self = this;

                        var request_data = {
                            url: `${self.base_url}pm/v2/projects/${projectId}/tasks/${taskId}/delete`,
                            type: 'POST',
                            success ( res ) {

                                self.$store.commit( 'sprint/afterDeleteTask', {
                                    taskId: taskId,
                                    sprintId: sprintId,
                                });

                                self.refresh({
                                    sprint_id: sprintId,
                                });
                            }
                        }

                        self.httpRequest( request_data );
                    },

                    getSprintTask( sprintId, taskId ) {
                        let self = this;

                        var request_data = {
                            url: `${self.base_url}pm-pro/v2/sprints/${projectId}/tasks/${taskId}`,
                            type: 'POST',
                            data: {
                                with: 'sub_task'
                            },
                            success ( res ) {


                            }
                        }

                        self.httpRequest( request_data );
                    },

                    isCompletedTab () {

                        if (
                            this.$route.name == 'completed_sprint'
                            ||
                            this.$route.name == 'completed_sprint_pagination'
                        ) {
                            return true;
                        }

                        return false;
                    }
                }
            });



            /***/ }),
        /* 379 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                data: function data() {
                    return {};
                },
                created: function created() {},


                methods: {}
            };

            /***/ }),
        /* 380 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                data: function data() {
                    return {};
                },
                created: function created() {},

                computed: {
                    canCraeteTask: function canCraeteTask() {
                        return this.user_can('create_task');
                    }
                },
                methods: {
                    canCraeteSubTask: function canCraeteSubTask(task) {
                        if (this.isArchivedTaskList(task)) {
                            return false;
                        }

                        var user = PM_Vars.current_user;

                        if (this.is_manager()) {
                            return true;
                        }

//if ( this.user_can( 'create_task' ) ) {
                        if (task.creator.data.id == user.ID) {
                            return true;
                        }
                        if (this.is_user_assigneed(task, user.ID)) {
                            return true;
                        }
//}

                        return false;
                    },
                    canEditSubTask: function canEditSubTask(subtask) {
                        if (this.isArchivedTaskList(this.actionData.task)) {
                            return false;
                        }
                        var user = PM_Vars.current_user;
                        if (this.is_manager()) {
                            return true;
                        }

                        if (subtask.creator.data.id == user.ID) {
                            return true;
                        }

                        return false;
                    },
                    isArchivedTaskList: function isArchivedTaskList(task) {
                        if (typeof task.task_list !== 'undefined') {
                            if (task.task_list.data.status === 'archived') {
                                return true;
                            }
                        }
                        return false;
                    },
                    is_user_assigneed: function is_user_assigneed(task, user_id) {
                        return task.assignees.data.findIndex(function (user) {
                            return user.id == user_id;
                        }) !== -1;
                    },
                    showHideSubTaskForm: function showHideSubTaskForm(task, status, subTasks) {
                        status = status || 'toggle';
                        subTasks = subTasks || {};
                        if (typeof subTasks.edit_mode != 'undefined') {
                            subTasks.edit_mode = subTasks.edit_mode ? false : true;
                        }

                        var isListSingleTask = this.$store.state.projectTaskLists.is_single_task;

                        if (!isListSingleTask && (this.$route.name == 'task_lists' || this.$route.name == 'single_list')) {
                            this.$store.commit('subTasks/formVisibility', { task: task, status: status });
                        }
                    },
                    selfShowHideSubTaskForm: function selfShowHideSubTaskForm(task, status, subTasks) {

                        var taskId = this.$route.params.task_id ? true : false;
                        status = status || 'toggle';
                        subTasks = subTasks || {};

                        this.localSubTaskFrom.status = this.localSubTaskFrom.status ? false : true;
                        this.showHideSubTaskForm(task, status, subTasks);
                    },
                    hasPermission: function hasPermission(task) {
                        return true;
                        var get_current_user_id = PM_Vars.current_user.ID,
                            in_task = task.assignees.data.indexOf(get_current_user_id);

                        if (in_task != '-1') {
                            return true;
                        }

                        return false;
                    },
                    getListsTask: function getListsTask(actionData) {
                        if (typeof actionData.list == 'undefined') {
                            return false;
                        }
                        if (typeof actionData.task == 'undefined') {
                            return false;
                        }
                        var lists = this.$store.state.projectTaskLists.lists;
                        if (lists.length) {
                            var list_index = this.getIndex(lists, actionData.list.id, 'id');
                            var list = lists[list_index];

                            if (actionData.task.status) {
                                if (typeof lists[list_index].complete_tasks == 'undefined') {
                                    return [];
                                }
                                var task_index = this.getIndex(lists[list_index].complete_tasks.data, actionData.task.id, 'id');
                                var task = lists[list_index].complete_tasks.data[task_index];
                            } else {
                                if (typeof lists[list_index].incomplete_tasks == 'undefined') {
                                    return [];
                                }
                                var task_index = this.getIndex(lists[list_index].incomplete_tasks.data, actionData.task.id, 'id');
                                var task = lists[list_index].incomplete_tasks.data[task_index];
                            }

                            return task;
                        }

                        return actionData.task;
                    },


                    /**
                     * Retrive All task list
                     * @param  {[object]}   args SSR url condition
                     * @param  {Function} callback  [description]
                     * @return {[void]}             [description]
                     */
                    getSubTasks: function getSubTasks(args) {
                        var self = this,
                            pre_define = {
                                data: {
                                    project_id: this.project_id
                                },
                                condition: {
                                    per_page: 1000,
                                    page: 1
                                },
                                callback: false
                            };

                        var args = jQuery.extend(true, pre_define, args);
                        var condition = this.generateConditions(args.condition);
                        var request = {
                            url: self.base_url + 'pm-pro/v2/tasks/' + args.task.id + '/sub-tasks',
                            data: args.data,
                            success: function success(res) {
                                res.data.map(function (list, index) {
                                    self.addSubTaskMeta(list);
                                });

//self.$store.commit('subTasks/setSubTasks', {task: args.task, subTasks: res.data });

                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            }
                        };
                        self.httpRequest(request);
                    },


                    /**
                     * Insert  task
                     *
                     * @return void
                     */
                    addSubTask: function addSubTask(args) {
                        var self = this,
                            pre_define = {
                                data: {
                                    project_id: self.project_id
                                },
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/tasks/' + args.data.task_id + '/sub-tasks/',
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
                                self.addSubTaskMeta(res.data);
// self.$store.commit( 'subTasks/afterNewSubTask',
//     {
//         task: self.task,
//         subTask: res.data
//     }
// );

// Display a success toast, with a title
                                pm.Toastr.success(res.message);
//self.selfShowHideSubTaskForm(self.task, false);
                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                            },
                            error: function error(res) {
// Showing error
                                if (res.status == 500) {
                                    res.responseJSON.message.map(function (value, index) {
                                        pm.Toastr.error(value);
                                    });
                                }
                                if (res.status == 400) {
                                    var params = res.responseJSON.data.params;
                                    for (var obj in params) {
                                        pm.Toastr.error(params[obj][0]);
                                    }
                                }

                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                            }
                        };

                        self.httpRequest(request_data);
                    },


                    /**
                     * Update Task using Task object
                     * @param  {Object} task Task Object
                     * @return {void}      Update a task
                     */
                    updateSubTask: function updateSubTask(args) {
                        var self = this,
                            pre_define = {
                                data: {
                                    project_id: self.project_id
                                },
                                callback: false
                            };
                        var args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/tasks/' + args.data.task_id + '/sub-tasks/' + args.data.sub_task_id + '/update',
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
                                self.addSubTaskMeta(res.data);
                                pm.Toastr.success(res.message);
                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            },
                            error: function error(res) {
// Showing error
                                if (res.status == 500) {
                                    res.responseJSON.message.map(function (value, index) {
                                        pm.Toastr.error(value);
                                    });
                                }
                                if (res.status == 400) {
                                    var params = res.responseJSON.data.params;
                                    for (var obj in params) {
                                        pm.Toastr.error(params[obj][0]);
                                    }
                                }

                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    addSubTaskMeta: function addSubTaskMeta(subTask) {
                        subTask.edit_mode = false;
                        subTask.show_spinner = false;
                    },


                    /**
                     * Mark task done and undone
                     *
                     * @param  int  task_id
                     * @param  Boolean is_checked
                     * @param  int  task_index
                     *
                     * @return void
                     */
                    subTaskDoneUndone: function subTaskDoneUndone(args) {
                        var self = this,
                            pre_define = {
                                data: {
                                    project_id: self.project_id
                                },
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/tasks/' + args.data.parent_id + '/sub-tasks/' + args.data.sub_task_id + '/update',
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {
                                self.addSubTaskMeta(res.data);
//self.$store.commit( 'subTasks/afterDoneUndoneSubTask', res.data);
                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            }
                        };
                        self.httpRequest(request_data);
                    },
                    deleteSubTask: function deleteSubTask(args) {
                        if (!confirm(__('Are you sure!', 'pm-pro'))) {
                            return;
                        }

                        var self = this,
                            pre_define = {
                                data: {
                                    project_id: this.project_id
                                },
                                callback: false
                            };
                        var args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/tasks/' + args.task_id + '/sub-tasks/' + args.sub_task_id + '/delete',
                            data: args.data,
                            type: 'POST',
                            success: function success(res) {
                                self.$store.commit('subTasks/afterDeleteSubTask', {
                                    sub_task_id: args.sub_task_id,
                                    task_id: args.task_id,
                                    list_id: args.list_id
                                });

                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            }
                        };

                        this.httpRequest(request_data);
                    },
                    subtaskOrder: function subtaskOrder(receive, callback) {
                        var self = this;

                        var request_data = {
                            url: self.base_url + 'pm-pro/v2/sub-tasks/sorting',
                            type: 'POST',
                            data: receive,
                            success: function success(res) {
                                pm.Toastr.success(res.message);
                                if (typeof callback === 'function') {
                                    callback.call(self, res);
                                }
                            },
                            error: function error(res) {}
                        };
                        self.httpRequest(request_data);
                    }
                }
            };

            /***/ }),
        /* 381 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                data: function data() {
                    return {
                        'content': true
                    };
                },

                computed: {
                    isArchivedTaskListComputed: function isArchivedTaskListComputed() {
                        return this.isArchivedTaskList(this.actionData.task);
                    }
                },
                created: function created() {
                    var self = this;
                    window.stop_watch = function (param) {
                        var args = JSON.parse(jQuery(param).attr('time'));

                        jQuery('#timer_id_' + args.task_id).trigger('click');

                        setTimeout(function () {
                            self.timeStart(window.currentRunningTask);
                        }, 1000);
                    };
                },


                methods: {
                    showCustomLogForm: function showCustomLogForm(list_id, task_id, actionData, status) {
                        status = status || 'toggle';

                        var form = actionData.task.custom_time_form;

                        if (status == 'toggle') {
                            actionData.task.custom_time_form = form ? false : true;
                        } else {
                            actionData.task.custom_time_form = status;
                        }
                    },
                    isArchivedTaskList: function isArchivedTaskList(task) {
                        if (typeof task.task_list !== 'undefined') {
                            if (task.task_list.data.status === 'archived') {
                                return true;
                            }
                        }
                        return false;
                    },
                    getListsTask: function getListsTask(actionData) {
                        if (typeof actionData.list === 'undefined') {
                            return;
                        }
                        var lists = this.$store.state.projectTaskLists.lists;

                        if (lists.length) {
                            var list_index = this.getIndex(lists, actionData.list.id, 'id');
                            var list = lists[list_index];

                            if (actionData.task.status) {
                                if (typeof lists[list_index].complete_tasks == 'undefined') {
                                    return [];
                                }
                                var task_index = this.getIndex(lists[list_index].complete_tasks.data, actionData.task.id, 'id');
                                var task = lists[list_index].complete_tasks.data[task_index];
                            } else {
                                if (typeof lists[list_index].incomplete_tasks == 'undefined') {
                                    return [];
                                }
                                var task_index = this.getIndex(lists[list_index].incomplete_tasks.data, actionData.task.id, 'id');
                                var task = lists[list_index].incomplete_tasks.data[task_index];
                            }

                            return task;
                        }

                        return actionData.task;
                    },
                    timeStart: function timeStart(args) {
                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + '/pm-pro/v2/time/',
                            type: 'POST',
                            data: args.data,
                            success: function success(res) {

// Display a success toast, with a title
//pm.Toastr.success(res.message);

                                if (typeof args.callback === 'function') {
                                    args.callback(res, false);
                                }
                            },
                            error: function error(res) {
//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.options = {
                                        "closeButton": true,
                                        "timeOut": 0,
                                        "tapToDismiss": false
                                    };
                                    pm.Toastr.warning(value);
                                    args.callback(res, true);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    timeStop: function timeStop(args) {
                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + '/pm-pro/v2/time/update',
                            type: 'POST',
                            data: args.data,

                            success: function success(res) {

// Display a success toast, with a title
//pm.Toastr.success(res.message);


                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }

                                pmBus.$emit('pm_after_stop_time');
                            },
                            error: function error(res) {

//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    deleteTimeLog: function deleteTimeLog(args) {
                        if (args.run_status == 1) {
// Display a success toast, with a title
                            pm.Toastr.error('Please stop your time tracker');
                            return;
                        }
                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + '/pm-pro/v2/time/' + args.data.time_id + '/delete',
                            type: 'POST',
                            data: args.data,

                            success: function success(res) {

// self.$store.commit('timeTracker/afterDeletedTime',
//     {
//         time_id: args.data.time_id,
//         task_id: args.data.task_id,
//         list_id: args.data.list_id,
//         res: res.data
//     }
// );

// Display a success toast, with a title
                                pm.Toastr.success(res.message);

                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            },
                            error: function error(res) {

//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    newCustomTime: function newCustomTime(args) {
                        if (args.run_status == 1) {
// Display a success toast, with a title
                            pm.Toastr.error(this.__('Please stop your time tracker', 'pm-pro'));
                            return;
                        }

                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + '/pm-pro/v2/custom-time/',
                            type: 'POST',
                            data: args.data,

                            success: function success(res) {

// self.$store.commit('timeTracker/afterStartTime',
//     {
//         time_id: args.data.time_id,
//         task_id: args.data.task_id,
//         list_id: args.data.list_id,
//         res: res.data
//     }
// );

// Display a success toast, with a title
                                pm.Toastr.success(res.message);

                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }

                                pmBus.$emit('pm_after_add_custom_time', res);
                            },
                            error: function error(res) {
                                args.callback(res, false);
//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    getOthersTimeLog: function getOthersTimeLog(args) {
                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + '/pm-pro/v2/others-time/',
                            type: 'GET',
                            data: args.data,

                            success: function success(res) {

                                self.$store.commit('timeTracker/setOthersLog', res);

// Display a success toast, with a title
//pm.Toastr.success(res.message);

                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            },
                            error: function error(res) {

//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },
                    deleteOthersTimeLog: function deleteOthersTimeLog(args) {

                        var self = this,
                            pre_define = {
                                data: {},
                                callback: false
                            },
                            args = jQuery.extend(true, pre_define, args);

                        var request_data = {
                            url: self.base_url + '/pm-pro/v2/time/' + args.data.time_id + '/delete',
                            type: 'POST',
                            data: args.data,

                            success: function success(res) {

                                self.$store.commit('timeTracker/afterDeletedOtherTime', {
                                    time_id: args.data.time_id,
                                    user_id: args.user_id,
                                    res: res
                                });

// Display a success toast, with a title
                                pm.Toastr.success(res.message);

                                if (typeof args.callback === 'function') {
                                    args.callback(res);
                                }
                            },
                            error: function error(res) {

//Showing error
                                res.responseJSON.message.forEach(function (value, index) {
                                    pm.Toastr.error(value);
                                });
                            }
                        };

                        self.httpRequest(request_data);
                    },


                    /**
                     * Check if user can add time log
                     *
                     * Only assignable person can add time log and if status is not complete
                     *
                     * @param object actionData
                     *
                     * @return boolean True if can add time, else false
                     */
                    canAddTime: function canAddTime(actionData) {
                        if (actionData.task.status == '1') return false;

                        var curren_user_id = parseInt(this.current_user.ID);

                        var assigned_user_ids = actionData.task.assignees.data.map(function (user) {
                            return parseInt(user.id);
                        });

                        return assigned_user_ids.includes(curren_user_id);
                    },
                    canDeleteTime: function canDeleteTime(time) {
                        if (this.isArchivedTaskListComputed) return false;
                        if (this.actionData.task.status == '1') return false;

                        return parseInt(time.created_by) == this.current_user.ID;
                    },
                    getUsers: function getUsers(callback) {
                        var hasUsers = this.$store.state.timeTracker.users;

                        if (hasUsers.length) {
                            return;
                        }

                        var self = this;
                        self.fetchReport = false;
                        var args = {
                            url: self.base_url + '/pm/v2/user-all-projects',
                            success: function success(res) {
                                self.$store.commit('timeTracker/setUsers', res);
                                if (typeof callback != 'undefined') {
                                    callback(res);
                                }
                            }
                        };
                        self.httpRequest(args);
                    },
                    getReportResults: function getReportResults(args) {
                        var self = this,
                            pre_define = {
                                conditions: {},
                                callback: false
                            };

                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = this.generateConditions(args.conditions);

                        var request = {
                            type: 'GET',
                            url: args.url + conditions,
                            success: function success(res) {
                                self.$store.commit('timeTracker/setReports', res);

                                if (typeof args.callback != 'undefined') {
                                    args.callback(res);
                                }
                                pm.NProgress.done();
                            }
                        };

                        this.httpRequest(request);
                    },
                    getTimeNumericValue: function getTimeNumericValue(time) {
                        var minute = 0.5 * time.minute / 30;
                        var count = time.hour + minute;

                        return count.toFixed(2);
                    }
                }
            };

            /***/ }),
        /* 382 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _values = __webpack_require__(383);

            var _values2 = _interopRequireDefault(_values);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            exports.default = {
                data: function data() {
                    return {};
                },

                methods: {
                    getWoocommerceProducts: function getWoocommerceProducts(args) {
                        var self = this,
                            pre_define = {
                                conditions: {},
                                callback: false
                            };

                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = self.generateConditions(args.conditions);

                        var request = {
                            type: 'GET',
                            data: args.data,
                            url: self.base_url + 'pm-pro/v2/woo-project/products?' + conditions,
                            success: function success(res) {
                                self.$store.commit('wooProject/addProducts', res.data);
                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                                pm.NProgress.done();
                            }
                        };

                        return this.httpRequest(request);
                    },
                    searchProjectByKey: function searchProjectByKey(args) {
                        var self = this,
                            pre_define = {
                                conditions: {},
                                callback: false
                            };

                        var args = jQuery.extend(true, pre_define, args);
                        var conditions = self.generateConditions(args.conditions);

                        var request = {
                            type: 'GET',
                            data: args.data,
                            url: self.base_url + 'pm-pro/v2/woo-project/project?' + conditions,
                            success: function success(res) {
                                self.$store.commit('wooProject/addProject', res.data);
                                if (typeof args.callback === 'function') {
                                    args.callback.call(self, res);
                                }
                                pm.NProgress.done();
                            }
                        };

                        return this.httpRequest(request);
                    },
                    getProducts: function getProducts() {
                        var ids = [];
                        this.options.forEach(function (option) {

                            if (typeof option.product_ids == 'undefined') {
                                option.product_ids = {};
                            }
                            if (option.product_ids == '') {
                                option.product_ids = {};
                            }
                            ids = ids.concat((0, _values2.default)(option.product_ids));
                        });

                        if (!ids.length) {
                            this.productLoaded = true;
                            return;
                        }

                        var args = {
                            data: {
                                id: ids
                            },
                            callback: function callback(res) {
                                this.productLoaded = true;
                            }
                        };
                        this.getWoocommerceProducts(args);
                    },
                    getProjects: function getProjects() {
                        var ids = [];
                        this.options.forEach(function (option) {
                            if (option.project_id) {
                                ids.push(parseInt(option.project_id));
                            }
                        });
                        if (!ids.length) {
                            this.projectLoaded = true;
                            return;
                        }

                        var args = {
                            data: {
                                id: ids
                            },
                            callback: function callback(res) {
                                this.projectLoaded = true;
                            }
                        };

                        this.searchProjectByKey(args);
                    },
                    getSelectedUser: function getSelectedUser() {
                        var self = this;
                        var user_id = [];
                        this.options.forEach(function (option) {
                            if (option.assignees) {
                                option.assignees.forEach(function (item) {
                                    if (item.user_id) {
                                        user_id.push(item.user_id);
                                    }
                                });
                            }
                        });
                        var args = {
                            data: {
                                id: user_id
                            },
                            callback: function callback(res) {
                                this.$store.commit('wooProject/addUser', res.data);
                                this.userLoaded = true;
                            }
                        };
                        self.getUsers(args);
                    }
                }
            };

            /***/ }),
        /* 383 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = { "default": __webpack_require__(384), __esModule: true };

            /***/ }),
        /* 384 */
        /***/ (function(module, exports, __webpack_require__) {

            __webpack_require__(385);
            module.exports = __webpack_require__(5).Object.values;


            /***/ }),
        /* 385 */
        /***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
            var $export = __webpack_require__(9);
            var $values = __webpack_require__(386)(false);

            $export($export.S, 'Object', {
                values: function values(it) {
                    return $values(it);
                }
            });


            /***/ }),
        /* 386 */
        /***/ (function(module, exports, __webpack_require__) {

            var DESCRIPTORS = __webpack_require__(10);
            var getKeys = __webpack_require__(24);
            var toIObject = __webpack_require__(25);
            var isEnum = __webpack_require__(54).f;
            module.exports = function (isEntries) {
                return function (it) {
                    var O = toIObject(it);
                    var keys = getKeys(O);
                    var length = keys.length;
                    var i = 0;
                    var result = [];
                    var key;
                    while (length > i) {
                        key = keys[i++];
                        if (!DESCRIPTORS || isEnum.call(O, key)) {
                            result.push(isEntries ? [key, O[key]] : O[key]);
                        }
                    }
                    return result;
                };
            };


            /***/ }),
        /* 387 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div")
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-24fef4ce", esExports)
                }
            }

            /***/ }),
        /* 388 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_files_vue__ = __webpack_require__(117);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2ccb1bca_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_files_vue__ = __webpack_require__(432);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(389)
                __webpack_require__(391)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_files_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2ccb1bca_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_files_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/files.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-2ccb1bca", Component.options)
                } else {
                    hotAPI.reload("data-v-2ccb1bca", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 389 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(390);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("a1c1710e", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2ccb1bca\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./files.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2ccb1bca\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./files.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 390 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-pro-file-container .pm-uplaod-btn-list {\n  margin-bottom: 10px;\n}\n.pm-pro-file-container .pm-previous-back {\n  margin-bottom: 10px;\n}\n", ""]);

// exports


            /***/ }),
        /* 391 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(392);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("e8ac8de2", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2ccb1bca\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=1!./files.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2ccb1bca\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=1!./files.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 392 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


            /***/ }),
        /* 393 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_folder_create_form_vue__ = __webpack_require__(118);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4b151d5a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_folder_create_form_vue__ = __webpack_require__(394);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_folder_create_form_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4b151d5a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_folder_create_form_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/folder-create-form.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-4b151d5a", Component.options)
                } else {
                    hotAPI.reload("data-v-4b151d5a", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 394 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", [
                    _c("div", { staticClass: "modal-mask modal-transition" }, [
                        _c("div", { staticClass: "modal-wrapper" }, [
                            _c(
                                "div",
                                { staticClass: "modal-container", staticStyle: { width: "400px" } },
                                [
                                    _c("div", { staticClass: "modal-header" }, [
                                        _c("span", { staticClass: "pm-right close-vue-modal" }, [
                                            _c(
                                                "a",
                                                {
                                                    staticClass: "#",
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.showHideFolder()
                                                        }
                                                    }
                                                },
                                                [_vm._v("X")]
                                            )
                                        ]),
                                        _vm._v(" "),
                                        _c("h3", { attrs: { slot: "header" }, slot: "header" }, [
                                            _vm._v(" " + _vm._s(_vm.__("Create a folder", "pm-pro")) + " ")
                                        ])
                                    ]),
                                    _vm._v(" "),
                                    _c(
                                        "form",
                                        {
                                            attrs: { lpformnum: "1" },
                                            on: {
                                                submit: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.selfFolderCreate()
                                                }
                                            }
                                        },
                                        [
                                            _c("div", { staticClass: "modal-body col-md-12" }, [
                                                _c(
                                                    "div",
                                                    { staticClass: "folder-image pm-col-6 text-center" },
                                                    [
                                                        _c("img", {
                                                            attrs: {
                                                                src:
                                                                    _vm.base_dir_url + "views/assets/images/folder.png"
                                                            }
                                                        }),
                                                        _vm._v(" "),
                                                        _c("div", [_vm._v(_vm._s(_vm.folderName))])
                                                    ]
                                                ),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "folder-name" }, [
                                                    _c("input", {
                                                        directives: [
                                                            {
                                                                name: "model",
                                                                rawName: "v-model",
                                                                value: _vm.folderName,
                                                                expression: "folderName"
                                                            }
                                                        ],
                                                        staticClass: "folder-name-input",
                                                        attrs: { type: "text", required: "" },
                                                        domProps: { value: _vm.folderName },
                                                        on: {
                                                            input: function($event) {
                                                                if ($event.target.composing) {
                                                                    return
                                                                }
                                                                _vm.folderName = $event.target.value
                                                            }
                                                        }
                                                    }),
                                                    _vm._v(" "),
                                                    _vm.user_can("view_private_file")
                                                        ? _c("div", { staticClass: "pm-privacy" }, [
                                                            _c("label", [
                                                                _c("input", {
                                                                    directives: [
                                                                        {
                                                                            name: "model",
                                                                            rawName: "v-model",
                                                                            value: _vm.private,
                                                                            expression: "private"
                                                                        }
                                                                    ],
                                                                    attrs: {
                                                                        type: "checkbox",
                                                                        "false-value": "0",
                                                                        "true-value": "1"
                                                                    },
                                                                    domProps: {
                                                                        checked: Array.isArray(_vm.private)
                                                                            ? _vm._i(_vm.private, null) > -1
                                                                            : _vm._q(_vm.private, "1")
                                                                    },
                                                                    on: {
                                                                        change: function($event) {
                                                                            var $$a = _vm.private,
                                                                                $$el = $event.target,
                                                                                $$c = $$el.checked ? "1" : "0"
                                                                            if (Array.isArray($$a)) {
                                                                                var $$v = null,
                                                                                    $$i = _vm._i($$a, $$v)
                                                                                if ($$el.checked) {
                                                                                    $$i < 0 &&
                                                                                    (_vm.private = $$a.concat([$$v]))
                                                                                } else {
                                                                                    $$i > -1 &&
                                                                                    (_vm.private = $$a
                                                                                        .slice(0, $$i)
                                                                                        .concat($$a.slice($$i + 1)))
                                                                                }
                                                                            } else {
                                                                                _vm.private = $$c
                                                                            }
                                                                        }
                                                                    }
                                                                }),
                                                                _vm._v(
                                                                    " \n\t\t                        \t" +
                                                                    _vm._s(_vm.__("Make this private.", "pm-pro")) +
                                                                    " \n\t\t                        "
                                                                )
                                                            ])
                                                        ])
                                                        : _vm._e()
                                                ]),
                                                _vm._v(" "),
                                                _c("br", { attrs: { clear: "all" } }),
                                                _vm._v(" "),
                                                _c("div", { staticClass: "clearfix" })
                                            ]),
                                            _vm._v(" "),
                                            _c("div", { staticClass: "modal-footer" }, [
                                                _c("input", {
                                                    staticClass: "button button-primary",
                                                    attrs: {
                                                        type: "submit",
                                                        disabled: !_vm.folderName,
                                                        name: "submit"
                                                    },
                                                    domProps: { value: _vm.create_a_folder }
                                                })
                                            ])
                                        ]
                                    )
                                ]
                            )
                        ])
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-4b151d5a", esExports)
                }
            }

            /***/ }),
        /* 395 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_file_lists_vue__ = __webpack_require__(119);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_11e6db41_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_file_lists_vue__ = __webpack_require__(423);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(396)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_file_lists_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_11e6db41_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_file_lists_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/file-lists.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-11e6db41", Component.options)
                } else {
                    hotAPI.reload("data-v-11e6db41", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 396 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(397);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("89b0ed76", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-11e6db41\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./file-lists.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-11e6db41\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./file-lists.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 397 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.doc-content {\n    padding: 20px 20px 0px;\n    text-align: center;\n    font-weight: normal;\n    height: 205px;\n    background: #FAFEF0;\n    text-align: left;\n    cursor: pointer;\n    overflow: hidden;\n}\n.item-title {\n    font-weight: bold;\n}\n.online-docx-image-content{\n    opacity: 0.1 !important;\n\n    position: absolute;\n    width: 18%;\n    height: 200px;\n    background-repeat: no-repeat;\n    background-position: 50% 30%;\n    -ms-background-size: cover;\n    -o-background-size: cover;\n    -moz-background-size: cover;\n    -webkit-background-size: cover;\n    background-size: 150px;\n}\n.footer-section {\n    margin-top: 10px;\n}\n", ""]);

// exports


            /***/ }),
        /* 398 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_move_file_vue__ = __webpack_require__(120);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4b27b94b_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_move_file_vue__ = __webpack_require__(422);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(399)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_move_file_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4b27b94b_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_move_file_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/move-file.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-4b27b94b", Component.options)
                } else {
                    hotAPI.reload("data-v-4b27b94b", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 399 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(400);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("172fb9bc", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-4b27b94b\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./move-file.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-4b27b94b\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./move-file.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 400 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-move-file-wrap .pm-file-title {\n  margin-bottom: 10px;\n}\n.pm-move-file-wrap .pm-right {\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n}\n.pm-move-file-wrap .pm-right .pm-spinner {\n  margin-right: 10px;\n}\n.pm-move-file-wrap .popup-container {\n  max-width: 390px !important;\n  margin-left: auto !important;\n  margin-right: auto !important;\n  background: #fff !important;\n  border-top-right-radius: 0 !important;\n  height: 200px !important;\n  top: 20vh !important;\n  position: relative !important;\n}\n", ""]);

// exports


            /***/ }),
        /* 401 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = __webpack_require__(402);


            /***/ }),
        /* 402 */
        /***/ (function(module, exports, __webpack_require__) {

            /**
             * Copyright (c) 2014-present, Facebook, Inc.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
            var g = (function() { return this })() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
            var hadRuntime = g.regeneratorRuntime &&
                Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
            var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
            g.regeneratorRuntime = undefined;

            module.exports = __webpack_require__(403);

            if (hadRuntime) {
// Restore the original runtime.
                g.regeneratorRuntime = oldRuntime;
            } else {
// Remove the global property added by runtime.js.
                try {
                    delete g.regeneratorRuntime;
                } catch(e) {
                    g.regeneratorRuntime = undefined;
                }
            }


            /***/ }),
        /* 403 */
        /***/ (function(module, exports) {

            /**
             * Copyright (c) 2014-present, Facebook, Inc.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             */

            !(function(global) {
                "use strict";

                var Op = Object.prototype;
                var hasOwn = Op.hasOwnProperty;
                var undefined; // More compressible than void 0.
                var $Symbol = typeof Symbol === "function" ? Symbol : {};
                var iteratorSymbol = $Symbol.iterator || "@@iterator";
                var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
                var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

                var inModule = typeof module === "object";
                var runtime = global.regeneratorRuntime;
                if (runtime) {
                    if (inModule) {
// If regeneratorRuntime is defined globally and we're in a module,
// make the exports object identical to regeneratorRuntime.
                        module.exports = runtime;
                    }
// Don't bother evaluating the rest of this file if the runtime was
// already defined globally.
                    return;
                }

// Define the runtime globally (as expected by generated code) as either
// module.exports (if we're in a module) or a new, empty object.
                runtime = global.regeneratorRuntime = inModule ? module.exports : {};

                function wrap(innerFn, outerFn, self, tryLocsList) {
// If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
                    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
                    var generator = Object.create(protoGenerator.prototype);
                    var context = new Context(tryLocsList || []);

// The ._invoke method unifies the implementations of the .next,
// .throw, and .return methods.
                    generator._invoke = makeInvokeMethod(innerFn, self, context);

                    return generator;
                }
                runtime.wrap = wrap;

// Try/catch helper to minimize deoptimizations. Returns a completion
// record like context.tryEntries[i].completion. This interface could
// have been (and was previously) designed to take a closure to be
// invoked without arguments, but in all the cases we care about we
// already have an existing method we want to call, so there's no need
// to create a new function object. We can even get away with assuming
// the method takes exactly one argument, since that happens to be true
// in every case, so we don't have to touch the arguments object. The
// only additional allocation required is the completion record, which
// has a stable shape and so hopefully should be cheap to allocate.
                function tryCatch(fn, obj, arg) {
                    try {
                        return { type: "normal", arg: fn.call(obj, arg) };
                    } catch (err) {
                        return { type: "throw", arg: err };
                    }
                }

                var GenStateSuspendedStart = "suspendedStart";
                var GenStateSuspendedYield = "suspendedYield";
                var GenStateExecuting = "executing";
                var GenStateCompleted = "completed";

// Returning this object from the innerFn has the same effect as
// breaking out of the dispatch switch statement.
                var ContinueSentinel = {};

// Dummy constructor functions that we use as the .constructor and
// .constructor.prototype properties for functions that return Generator
// objects. For full spec compliance, you may wish to configure your
// minifier not to mangle the names of these two functions.
                function Generator() {}
                function GeneratorFunction() {}
                function GeneratorFunctionPrototype() {}

// This is a polyfill for %IteratorPrototype% for environments that
// don't natively support it.
                var IteratorPrototype = {};
                IteratorPrototype[iteratorSymbol] = function () {
                    return this;
                };

                var getProto = Object.getPrototypeOf;
                var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
                if (NativeIteratorPrototype &&
                    NativeIteratorPrototype !== Op &&
                    hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
// This environment has a native %IteratorPrototype%; use it instead
// of the polyfill.
                    IteratorPrototype = NativeIteratorPrototype;
                }

                var Gp = GeneratorFunctionPrototype.prototype =
                    Generator.prototype = Object.create(IteratorPrototype);
                GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
                GeneratorFunctionPrototype.constructor = GeneratorFunction;
                GeneratorFunctionPrototype[toStringTagSymbol] =
                    GeneratorFunction.displayName = "GeneratorFunction";

// Helper for defining the .next, .throw, and .return methods of the
// Iterator interface in terms of a single ._invoke method.
                function defineIteratorMethods(prototype) {
                    ["next", "throw", "return"].forEach(function(method) {
                        prototype[method] = function(arg) {
                            return this._invoke(method, arg);
                        };
                    });
                }

                runtime.isGeneratorFunction = function(genFun) {
                    var ctor = typeof genFun === "function" && genFun.constructor;
                    return ctor
                        ? ctor === GeneratorFunction ||
                        // For the native GeneratorFunction constructor, the best we can
                        // do is to check its .name property.
                        (ctor.displayName || ctor.name) === "GeneratorFunction"
                        : false;
                };

                runtime.mark = function(genFun) {
                    if (Object.setPrototypeOf) {
                        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
                    } else {
                        genFun.__proto__ = GeneratorFunctionPrototype;
                        if (!(toStringTagSymbol in genFun)) {
                            genFun[toStringTagSymbol] = "GeneratorFunction";
                        }
                    }
                    genFun.prototype = Object.create(Gp);
                    return genFun;
                };

// Within the body of any async function, `await x` is transformed to
// `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
// `hasOwn.call(value, "__await")` to determine if the yielded value is
// meant to be awaited.
                runtime.awrap = function(arg) {
                    return { __await: arg };
                };

                function AsyncIterator(generator) {
                    function invoke(method, arg, resolve, reject) {
                        var record = tryCatch(generator[method], generator, arg);
                        if (record.type === "throw") {
                            reject(record.arg);
                        } else {
                            var result = record.arg;
                            var value = result.value;
                            if (value &&
                                typeof value === "object" &&
                                hasOwn.call(value, "__await")) {
                                return Promise.resolve(value.__await).then(function(value) {
                                    invoke("next", value, resolve, reject);
                                }, function(err) {
                                    invoke("throw", err, resolve, reject);
                                });
                            }

                            return Promise.resolve(value).then(function(unwrapped) {
// When a yielded Promise is resolved, its final value becomes
// the .value of the Promise<{value,done}> result for the
// current iteration. If the Promise is rejected, however, the
// result for this iteration will be rejected with the same
// reason. Note that rejections of yielded Promises are not
// thrown back into the generator function, as is the case
// when an awaited Promise is rejected. This difference in
// behavior between yield and await is important, because it
// allows the consumer to decide what to do with the yielded
// rejection (swallow it and continue, manually .throw it back
// into the generator, abandon iteration, whatever). With
// await, by contrast, there is no opportunity to examine the
// rejection reason outside the generator function, so the
// only option is to throw it from the await expression, and
// let the generator function handle the exception.
                                result.value = unwrapped;
                                resolve(result);
                            }, reject);
                        }
                    }

                    var previousPromise;

                    function enqueue(method, arg) {
                        function callInvokeWithMethodAndArg() {
                            return new Promise(function(resolve, reject) {
                                invoke(method, arg, resolve, reject);
                            });
                        }

                        return previousPromise =
// If enqueue has been called before, then we want to wait until
// all previous Promises have been resolved before calling invoke,
// so that results are always delivered in the correct order. If
// enqueue has not been called before, then it is important to
// call invoke immediately, without waiting on a callback to fire,
// so that the async generator function has the opportunity to do
// any necessary setup in a predictable way. This predictability
// is why the Promise constructor synchronously invokes its
// executor callback, and why async functions synchronously
// execute code before the first await. Since we implement simple
// async functions in terms of async generators, it is especially
// important to get this right, even though it requires care.
                            previousPromise ? previousPromise.then(
                                callInvokeWithMethodAndArg,
// Avoid propagating failures to Promises returned by later
// invocations of the iterator.
                                callInvokeWithMethodAndArg
                            ) : callInvokeWithMethodAndArg();
                    }

// Define the unified helper method that is used to implement .next,
// .throw, and .return (see defineIteratorMethods).
                    this._invoke = enqueue;
                }

                defineIteratorMethods(AsyncIterator.prototype);
                AsyncIterator.prototype[asyncIteratorSymbol] = function () {
                    return this;
                };
                runtime.AsyncIterator = AsyncIterator;

// Note that simple async functions are implemented on top of
// AsyncIterator objects; they just return a Promise for the value of
// the final result produced by the iterator.
                runtime.async = function(innerFn, outerFn, self, tryLocsList) {
                    var iter = new AsyncIterator(
                        wrap(innerFn, outerFn, self, tryLocsList)
                    );

                    return runtime.isGeneratorFunction(outerFn)
                        ? iter // If outerFn is a generator, return the full iterator.
                        : iter.next().then(function(result) {
                            return result.done ? result.value : iter.next();
                        });
                };

                function makeInvokeMethod(innerFn, self, context) {
                    var state = GenStateSuspendedStart;

                    return function invoke(method, arg) {
                        if (state === GenStateExecuting) {
                            throw new Error("Generator is already running");
                        }

                        if (state === GenStateCompleted) {
                            if (method === "throw") {
                                throw arg;
                            }

// Be forgiving, per 25.3.3.3.3 of the spec:
// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                            return doneResult();
                        }

                        context.method = method;
                        context.arg = arg;

                        while (true) {
                            var delegate = context.delegate;
                            if (delegate) {
                                var delegateResult = maybeInvokeDelegate(delegate, context);
                                if (delegateResult) {
                                    if (delegateResult === ContinueSentinel) continue;
                                    return delegateResult;
                                }
                            }

                            if (context.method === "next") {
// Setting context._sent for legacy support of Babel's
// function.sent implementation.
                                context.sent = context._sent = context.arg;

                            } else if (context.method === "throw") {
                                if (state === GenStateSuspendedStart) {
                                    state = GenStateCompleted;
                                    throw context.arg;
                                }

                                context.dispatchException(context.arg);

                            } else if (context.method === "return") {
                                context.abrupt("return", context.arg);
                            }

                            state = GenStateExecuting;

                            var record = tryCatch(innerFn, self, context);
                            if (record.type === "normal") {
// If an exception is thrown from innerFn, we leave state ===
// GenStateExecuting and loop back for another invocation.
                                state = context.done
                                    ? GenStateCompleted
                                    : GenStateSuspendedYield;

                                if (record.arg === ContinueSentinel) {
                                    continue;
                                }

                                return {
                                    value: record.arg,
                                    done: context.done
                                };

                            } else if (record.type === "throw") {
                                state = GenStateCompleted;
// Dispatch the exception by looping back around to the
// context.dispatchException(context.arg) call above.
                                context.method = "throw";
                                context.arg = record.arg;
                            }
                        }
                    };
                }

// Call delegate.iterator[context.method](context.arg) and handle the
// result, either by returning a { value, done } result from the
// delegate iterator, or by modifying context.method and context.arg,
// setting context.delegate to null, and returning the ContinueSentinel.
                function maybeInvokeDelegate(delegate, context) {
                    var method = delegate.iterator[context.method];
                    if (method === undefined) {
// A .throw or .return when the delegate iterator has no .throw
// method always terminates the yield* loop.
                        context.delegate = null;

                        if (context.method === "throw") {
                            if (delegate.iterator.return) {
// If the delegate iterator has a return method, give it a
// chance to clean up.
                                context.method = "return";
                                context.arg = undefined;
                                maybeInvokeDelegate(delegate, context);

                                if (context.method === "throw") {
// If maybeInvokeDelegate(context) changed context.method from
// "return" to "throw", let that override the TypeError below.
                                    return ContinueSentinel;
                                }
                            }

                            context.method = "throw";
                            context.arg = new TypeError(
                                "The iterator does not provide a 'throw' method");
                        }

                        return ContinueSentinel;
                    }

                    var record = tryCatch(method, delegate.iterator, context.arg);

                    if (record.type === "throw") {
                        context.method = "throw";
                        context.arg = record.arg;
                        context.delegate = null;
                        return ContinueSentinel;
                    }

                    var info = record.arg;

                    if (! info) {
                        context.method = "throw";
                        context.arg = new TypeError("iterator result is not an object");
                        context.delegate = null;
                        return ContinueSentinel;
                    }

                    if (info.done) {
// Assign the result of the finished delegate to the temporary
// variable specified by delegate.resultName (see delegateYield).
                        context[delegate.resultName] = info.value;

// Resume execution at the desired location (see delegateYield).
                        context.next = delegate.nextLoc;

// If context.method was "throw" but the delegate handled the
// exception, let the outer generator proceed normally. If
// context.method was "next", forget context.arg since it has been
// "consumed" by the delegate iterator. If context.method was
// "return", allow the original .return call to continue in the
// outer generator.
                        if (context.method !== "return") {
                            context.method = "next";
                            context.arg = undefined;
                        }

                    } else {
                        // Re-yield the result returned by the delegate method.
                        return info;
                    }

// The delegate iterator is finished, so forget it and continue with
// the outer generator.
                    context.delegate = null;
                    return ContinueSentinel;
                }

// Define Generator.prototype.{next,throw,return} in terms of the
// unified ._invoke helper method.
                defineIteratorMethods(Gp);

                Gp[toStringTagSymbol] = "Generator";

// A Generator should always return itself as the iterator object when the
// @@iterator function is called on it. Some browsers' implementations of the
// iterator prototype chain incorrectly implement this, causing the Generator
// object to not be returned from this call. This ensures that doesn't happen.
// See https://github.com/facebook/regenerator/issues/274 for more details.
                Gp[iteratorSymbol] = function() {
                    return this;
                };

                Gp.toString = function() {
                    return "[object Generator]";
                };

                function pushTryEntry(locs) {
                    var entry = { tryLoc: locs[0] };

                    if (1 in locs) {
                        entry.catchLoc = locs[1];
                    }

                    if (2 in locs) {
                        entry.finallyLoc = locs[2];
                        entry.afterLoc = locs[3];
                    }

                    this.tryEntries.push(entry);
                }

                function resetTryEntry(entry) {
                    var record = entry.completion || {};
                    record.type = "normal";
                    delete record.arg;
                    entry.completion = record;
                }

                function Context(tryLocsList) {
// The root entry object (effectively a try statement without a catch
// or a finally block) gives us a place to store values thrown from
// locations where there is no enclosing try statement.
                    this.tryEntries = [{ tryLoc: "root" }];
                    tryLocsList.forEach(pushTryEntry, this);
                    this.reset(true);
                }

                runtime.keys = function(object) {
                    var keys = [];
                    for (var key in object) {
                        keys.push(key);
                    }
                    keys.reverse();

// Rather than returning an object with a next method, we keep
// things simple and return the next function itself.
                    return function next() {
                        while (keys.length) {
                            var key = keys.pop();
                            if (key in object) {
                                next.value = key;
                                next.done = false;
                                return next;
                            }
                        }

// To avoid creating an additional object, we just hang the .value
// and .done properties off the next function object itself. This
// also ensures that the minifier will not anonymize the function.
                        next.done = true;
                        return next;
                    };
                };

                function values(iterable) {
                    if (iterable) {
                        var iteratorMethod = iterable[iteratorSymbol];
                        if (iteratorMethod) {
                            return iteratorMethod.call(iterable);
                        }

                        if (typeof iterable.next === "function") {
                            return iterable;
                        }

                        if (!isNaN(iterable.length)) {
                            var i = -1, next = function next() {
                                while (++i < iterable.length) {
                                    if (hasOwn.call(iterable, i)) {
                                        next.value = iterable[i];
                                        next.done = false;
                                        return next;
                                    }
                                }

                                next.value = undefined;
                                next.done = true;

                                return next;
                            };

                            return next.next = next;
                        }
                    }

// Return an iterator with no values.
                    return { next: doneResult };
                }
                runtime.values = values;

                function doneResult() {
                    return { value: undefined, done: true };
                }

                Context.prototype = {
                    constructor: Context,

                    reset: function(skipTempReset) {
                        this.prev = 0;
                        this.next = 0;
// Resetting context._sent for legacy support of Babel's
// function.sent implementation.
                        this.sent = this._sent = undefined;
                        this.done = false;
                        this.delegate = null;

                        this.method = "next";
                        this.arg = undefined;

                        this.tryEntries.forEach(resetTryEntry);

                        if (!skipTempReset) {
                            for (var name in this) {
// Not sure about the optimal order of these conditions:
                                if (name.charAt(0) === "t" &&
                                    hasOwn.call(this, name) &&
                                    !isNaN(+name.slice(1))) {
                                    this[name] = undefined;
                                }
                            }
                        }
                    },

                    stop: function() {
                        this.done = true;

                        var rootEntry = this.tryEntries[0];
                        var rootRecord = rootEntry.completion;
                        if (rootRecord.type === "throw") {
                            throw rootRecord.arg;
                        }

                        return this.rval;
                    },

                    dispatchException: function(exception) {
                        if (this.done) {
                            throw exception;
                        }

                        var context = this;
                        function handle(loc, caught) {
                            record.type = "throw";
                            record.arg = exception;
                            context.next = loc;

                            if (caught) {
// If the dispatched exception was caught by a catch block,
// then let that catch block handle the exception normally.
                                context.method = "next";
                                context.arg = undefined;
                            }

                            return !! caught;
                        }

                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var entry = this.tryEntries[i];
                            var record = entry.completion;

                            if (entry.tryLoc === "root") {
// Exception thrown outside of any try block that could handle
// it, so set the completion value of the entire function to
// throw the exception.
                                return handle("end");
                            }

                            if (entry.tryLoc <= this.prev) {
                                var hasCatch = hasOwn.call(entry, "catchLoc");
                                var hasFinally = hasOwn.call(entry, "finallyLoc");

                                if (hasCatch && hasFinally) {
                                    if (this.prev < entry.catchLoc) {
                                        return handle(entry.catchLoc, true);
                                    } else if (this.prev < entry.finallyLoc) {
                                        return handle(entry.finallyLoc);
                                    }

                                } else if (hasCatch) {
                                    if (this.prev < entry.catchLoc) {
                                        return handle(entry.catchLoc, true);
                                    }

                                } else if (hasFinally) {
                                    if (this.prev < entry.finallyLoc) {
                                        return handle(entry.finallyLoc);
                                    }

                                } else {
                                    throw new Error("try statement without catch or finally");
                                }
                            }
                        }
                    },

                    abrupt: function(type, arg) {
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var entry = this.tryEntries[i];
                            if (entry.tryLoc <= this.prev &&
                                hasOwn.call(entry, "finallyLoc") &&
                                this.prev < entry.finallyLoc) {
                                var finallyEntry = entry;
                                break;
                            }
                        }

                        if (finallyEntry &&
                            (type === "break" ||
                                type === "continue") &&
                            finallyEntry.tryLoc <= arg &&
                            arg <= finallyEntry.finallyLoc) {
// Ignore the finally entry if control is not jumping to a
// location outside the try/catch block.
                            finallyEntry = null;
                        }

                        var record = finallyEntry ? finallyEntry.completion : {};
                        record.type = type;
                        record.arg = arg;

                        if (finallyEntry) {
                            this.method = "next";
                            this.next = finallyEntry.finallyLoc;
                            return ContinueSentinel;
                        }

                        return this.complete(record);
                    },

                    complete: function(record, afterLoc) {
                        if (record.type === "throw") {
                            throw record.arg;
                        }

                        if (record.type === "break" ||
                            record.type === "continue") {
                            this.next = record.arg;
                        } else if (record.type === "return") {
                            this.rval = this.arg = record.arg;
                            this.method = "return";
                            this.next = "end";
                        } else if (record.type === "normal" && afterLoc) {
                            this.next = afterLoc;
                        }

                        return ContinueSentinel;
                    },

                    finish: function(finallyLoc) {
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var entry = this.tryEntries[i];
                            if (entry.finallyLoc === finallyLoc) {
                                this.complete(entry.completion, entry.afterLoc);
                                resetTryEntry(entry);
                                return ContinueSentinel;
                            }
                        }
                    },

                    "catch": function(tryLoc) {
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var entry = this.tryEntries[i];
                            if (entry.tryLoc === tryLoc) {
                                var record = entry.completion;
                                if (record.type === "throw") {
                                    var thrown = record.arg;
                                    resetTryEntry(entry);
                                }
                                return thrown;
                            }
                        }

// The context.catch method must only be called with a location
// argument that corresponds to a known catch block.
                        throw new Error("illegal catch attempt");
                    },

                    delegateYield: function(iterable, resultName, nextLoc) {
                        this.delegate = {
                            iterator: values(iterable),
                            resultName: resultName,
                            nextLoc: nextLoc
                        };

                        if (this.method === "next") {
// Deliberately forget the last sent value so that we don't
// accidentally pass it on to the delegate.
                            this.arg = undefined;
                        }

                        return ContinueSentinel;
                    }
                };
            })(
// In sloppy mode, unbound `this` refers to the global object, fallback to
// Function constructor if we're in global strict mode. That is sadly a form
// of indirect eval which violates Content Security Policy.
                (function() { return this })() || Function("return this")()
            );


            /***/ }),
        /* 404 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            exports.__esModule = true;

            var _promise = __webpack_require__(405);

            var _promise2 = _interopRequireDefault(_promise);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            exports.default = function (fn) {
                return function () {
                    var gen = fn.apply(this, arguments);
                    return new _promise2.default(function (resolve, reject) {
                        function step(key, arg) {
                            try {
                                var info = gen[key](arg);
                                var value = info.value;
                            } catch (error) {
                                reject(error);
                                return;
                            }

                            if (info.done) {
                                resolve(value);
                            } else {
                                return _promise2.default.resolve(value).then(function (value) {
                                    step("next", value);
                                }, function (err) {
                                    step("throw", err);
                                });
                            }
                        }

                        return step("next");
                    });
                };
            };

            /***/ }),
        /* 405 */
        /***/ (function(module, exports, __webpack_require__) {

            module.exports = { "default": __webpack_require__(406), __esModule: true };

            /***/ }),
        /* 406 */
        /***/ (function(module, exports, __webpack_require__) {

            __webpack_require__(407);
            __webpack_require__(71);
            __webpack_require__(408);
            __webpack_require__(412);
            __webpack_require__(420);
            __webpack_require__(421);
            module.exports = __webpack_require__(5).Promise;


            /***/ }),
        /* 407 */
        /***/ (function(module, exports) {



            /***/ }),
        /* 408 */
        /***/ (function(module, exports, __webpack_require__) {

            __webpack_require__(409);
            var global = __webpack_require__(6);
            var hide = __webpack_require__(13);
            var Iterators = __webpack_require__(18);
            var TO_STRING_TAG = __webpack_require__(7)('toStringTag');

            var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
                'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
                'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
                'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
                'TextTrackList,TouchList').split(',');

            for (var i = 0; i < DOMIterables.length; i++) {
                var NAME = DOMIterables[i];
                var Collection = global[NAME];
                var proto = Collection && Collection.prototype;
                if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
                Iterators[NAME] = Iterators.Array;
            }


            /***/ }),
        /* 409 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";

            var addToUnscopables = __webpack_require__(410);
            var step = __webpack_require__(411);
            var Iterators = __webpack_require__(18);
            var toIObject = __webpack_require__(25);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
            module.exports = __webpack_require__(72)(Array, 'Array', function (iterated, kind) {
                this._t = toIObject(iterated); // target
                this._i = 0;                   // next index
                this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
            }, function () {
                var O = this._t;
                var kind = this._k;
                var index = this._i++;
                if (!O || index >= O.length) {
                    this._t = undefined;
                    return step(1);
                }
                if (kind == 'keys') return step(0, index);
                if (kind == 'values') return step(0, O[index]);
                return step(0, [index, O[index]]);
            }, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
            Iterators.Arguments = Iterators.Array;

            addToUnscopables('keys');
            addToUnscopables('values');
            addToUnscopables('entries');


            /***/ }),
        /* 410 */
        /***/ (function(module, exports) {

            module.exports = function () { /* empty */ };


            /***/ }),
        /* 411 */
        /***/ (function(module, exports) {

            module.exports = function (done, value) {
                return { value: value, done: !!done };
            };


            /***/ }),
        /* 412 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";

            var LIBRARY = __webpack_require__(36);
            var global = __webpack_require__(6);
            var ctx = __webpack_require__(15);
            var classof = __webpack_require__(77);
            var $export = __webpack_require__(9);
            var isObject = __webpack_require__(16);
            var aFunction = __webpack_require__(21);
            var anInstance = __webpack_require__(413);
            var forOf = __webpack_require__(414);
            var speciesConstructor = __webpack_require__(121);
            var task = __webpack_require__(122).set;
            var microtask = __webpack_require__(416)();
            var newPromiseCapabilityModule = __webpack_require__(48);
            var perform = __webpack_require__(123);
            var userAgent = __webpack_require__(417);
            var promiseResolve = __webpack_require__(124);
            var PROMISE = 'Promise';
            var TypeError = global.TypeError;
            var process = global.process;
            var versions = process && process.versions;
            var v8 = versions && versions.v8 || '';
            var $Promise = global[PROMISE];
            var isNode = classof(process) == 'process';
            var empty = function () { /* empty */ };
            var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
            var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

            var USE_NATIVE = !!function () {
                try {
// correct subclassing with @@species support
                    var promise = $Promise.resolve(1);
                    var FakePromise = (promise.constructor = {})[__webpack_require__(7)('species')] = function (exec) {
                        exec(empty, empty);
                    };
// unhandled rejections tracking support, NodeJS Promise without it fails @@species test
                    return (isNode || typeof PromiseRejectionEvent == 'function')
                        && promise.then(empty) instanceof FakePromise
                        // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
                        // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
                        // we can't detect it synchronously, so just check versions
                        && v8.indexOf('6.6') !== 0
                        && userAgent.indexOf('Chrome/66') === -1;
                } catch (e) { /* empty */ }
            }();

// helpers
            var isThenable = function (it) {
                var then;
                return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
            };
            var notify = function (promise, isReject) {
                if (promise._n) return;
                promise._n = true;
                var chain = promise._c;
                microtask(function () {
                    var value = promise._v;
                    var ok = promise._s == 1;
                    var i = 0;
                    var run = function (reaction) {
                        var handler = ok ? reaction.ok : reaction.fail;
                        var resolve = reaction.resolve;
                        var reject = reaction.reject;
                        var domain = reaction.domain;
                        var result, then, exited;
                        try {
                            if (handler) {
                                if (!ok) {
                                    if (promise._h == 2) onHandleUnhandled(promise);
                                    promise._h = 1;
                                }
                                if (handler === true) result = value;
                                else {
                                    if (domain) domain.enter();
                                    result = handler(value); // may throw
                                    if (domain) {
                                        domain.exit();
                                        exited = true;
                                    }
                                }
                                if (result === reaction.promise) {
                                    reject(TypeError('Promise-chain cycle'));
                                } else if (then = isThenable(result)) {
                                    then.call(result, resolve, reject);
                                } else resolve(result);
                            } else reject(value);
                        } catch (e) {
                            if (domain && !exited) domain.exit();
                            reject(e);
                        }
                    };
                    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
                    promise._c = [];
                    promise._n = false;
                    if (isReject && !promise._h) onUnhandled(promise);
                });
            };
            var onUnhandled = function (promise) {
                task.call(global, function () {
                    var value = promise._v;
                    var unhandled = isUnhandled(promise);
                    var result, handler, console;
                    if (unhandled) {
                        result = perform(function () {
                            if (isNode) {
                                process.emit('unhandledRejection', value, promise);
                            } else if (handler = global.onunhandledrejection) {
                                handler({ promise: promise, reason: value });
                            } else if ((console = global.console) && console.error) {
                                console.error('Unhandled promise rejection', value);
                            }
                        });
// Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
                        promise._h = isNode || isUnhandled(promise) ? 2 : 1;
                    } promise._a = undefined;
                    if (unhandled && result.e) throw result.v;
                });
            };
            var isUnhandled = function (promise) {
                return promise._h !== 1 && (promise._a || promise._c).length === 0;
            };
            var onHandleUnhandled = function (promise) {
                task.call(global, function () {
                    var handler;
                    if (isNode) {
                        process.emit('rejectionHandled', promise);
                    } else if (handler = global.onrejectionhandled) {
                        handler({ promise: promise, reason: promise._v });
                    }
                });
            };
            var $reject = function (value) {
                var promise = this;
                if (promise._d) return;
                promise._d = true;
                promise = promise._w || promise; // unwrap
                promise._v = value;
                promise._s = 2;
                if (!promise._a) promise._a = promise._c.slice();
                notify(promise, true);
            };
            var $resolve = function (value) {
                var promise = this;
                var then;
                if (promise._d) return;
                promise._d = true;
                promise = promise._w || promise; // unwrap
                try {
                    if (promise === value) throw TypeError("Promise can't be resolved itself");
                    if (then = isThenable(value)) {
                        microtask(function () {
                            var wrapper = { _w: promise, _d: false }; // wrap
                            try {
                                then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
                            } catch (e) {
                                $reject.call(wrapper, e);
                            }
                        });
                    } else {
                        promise._v = value;
                        promise._s = 1;
                        notify(promise, false);
                    }
                } catch (e) {
                    $reject.call({ _w: promise, _d: false }, e); // wrap
                }
            };

// constructor polyfill
            if (!USE_NATIVE) {
// 25.4.3.1 Promise(executor)
                $Promise = function Promise(executor) {
                    anInstance(this, $Promise, PROMISE, '_h');
                    aFunction(executor);
                    Internal.call(this);
                    try {
                        executor(ctx($resolve, this, 1), ctx($reject, this, 1));
                    } catch (err) {
                        $reject.call(this, err);
                    }
                };
// eslint-disable-next-line no-unused-vars
                Internal = function Promise(executor) {
                    this._c = [];             // <- awaiting reactions
                    this._a = undefined;      // <- checked in isUnhandled reactions
                    this._s = 0;              // <- state
                    this._d = false;          // <- done
                    this._v = undefined;      // <- value
                    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
                    this._n = false;          // <- notify
                };
                Internal.prototype = __webpack_require__(418)($Promise.prototype, {
// 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
                    then: function then(onFulfilled, onRejected) {
                        var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
                        reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
                        reaction.fail = typeof onRejected == 'function' && onRejected;
                        reaction.domain = isNode ? process.domain : undefined;
                        this._c.push(reaction);
                        if (this._a) this._a.push(reaction);
                        if (this._s) notify(this, false);
                        return reaction.promise;
                    },
// 25.4.5.1 Promise.prototype.catch(onRejected)
                    'catch': function (onRejected) {
                        return this.then(undefined, onRejected);
                    }
                });
                OwnPromiseCapability = function () {
                    var promise = new Internal();
                    this.promise = promise;
                    this.resolve = ctx($resolve, promise, 1);
                    this.reject = ctx($reject, promise, 1);
                };
                newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
                    return C === $Promise || C === Wrapper
                        ? new OwnPromiseCapability(C)
                        : newGenericPromiseCapability(C);
                };
            }

            $export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
            __webpack_require__(43)($Promise, PROMISE);
            __webpack_require__(419)(PROMISE);
            Wrapper = __webpack_require__(5)[PROMISE];

// statics
            $export($export.S + $export.F * !USE_NATIVE, PROMISE, {
// 25.4.4.5 Promise.reject(r)
                reject: function reject(r) {
                    var capability = newPromiseCapability(this);
                    var $$reject = capability.reject;
                    $$reject(r);
                    return capability.promise;
                }
            });
            $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
// 25.4.4.6 Promise.resolve(x)
                resolve: function resolve(x) {
                    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
                }
            });
            $export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(78)(function (iter) {
                $Promise.all(iter)['catch'](empty);
            })), PROMISE, {
// 25.4.4.1 Promise.all(iterable)
                all: function all(iterable) {
                    var C = this;
                    var capability = newPromiseCapability(C);
                    var resolve = capability.resolve;
                    var reject = capability.reject;
                    var result = perform(function () {
                        var values = [];
                        var index = 0;
                        var remaining = 1;
                        forOf(iterable, false, function (promise) {
                            var $index = index++;
                            var alreadyCalled = false;
                            values.push(undefined);
                            remaining++;
                            C.resolve(promise).then(function (value) {
                                if (alreadyCalled) return;
                                alreadyCalled = true;
                                values[$index] = value;
                                --remaining || resolve(values);
                            }, reject);
                        });
                        --remaining || resolve(values);
                    });
                    if (result.e) reject(result.v);
                    return capability.promise;
                },
// 25.4.4.4 Promise.race(iterable)
                race: function race(iterable) {
                    var C = this;
                    var capability = newPromiseCapability(C);
                    var reject = capability.reject;
                    var result = perform(function () {
                        forOf(iterable, false, function (promise) {
                            C.resolve(promise).then(capability.resolve, reject);
                        });
                    });
                    if (result.e) reject(result.v);
                    return capability.promise;
                }
            });


            /***/ }),
        /* 413 */
        /***/ (function(module, exports) {

            module.exports = function (it, Constructor, name, forbiddenField) {
                if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
                    throw TypeError(name + ': incorrect invocation!');
                } return it;
            };


            /***/ }),
        /* 414 */
        /***/ (function(module, exports, __webpack_require__) {

            var ctx = __webpack_require__(15);
            var call = __webpack_require__(74);
            var isArrayIter = __webpack_require__(75);
            var anObject = __webpack_require__(11);
            var toLength = __webpack_require__(33);
            var getIterFn = __webpack_require__(76);
            var BREAK = {};
            var RETURN = {};
            var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
                var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
                var f = ctx(fn, that, entries ? 2 : 1);
                var index = 0;
                var length, step, iterator, result;
                if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
// fast case for arrays with default iterator
                if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
                    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
                    if (result === BREAK || result === RETURN) return result;
                } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
                    result = call(iterator, f, step.value, entries);
                    if (result === BREAK || result === RETURN) return result;
                }
            };
            exports.BREAK = BREAK;
            exports.RETURN = RETURN;


            /***/ }),
        /* 415 */
        /***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
            module.exports = function (fn, args, that) {
                var un = that === undefined;
                switch (args.length) {
                    case 0: return un ? fn()
                        : fn.call(that);
                    case 1: return un ? fn(args[0])
                        : fn.call(that, args[0]);
                    case 2: return un ? fn(args[0], args[1])
                        : fn.call(that, args[0], args[1]);
                    case 3: return un ? fn(args[0], args[1], args[2])
                        : fn.call(that, args[0], args[1], args[2]);
                    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                        : fn.call(that, args[0], args[1], args[2], args[3]);
                } return fn.apply(that, args);
            };


            /***/ }),
        /* 416 */
        /***/ (function(module, exports, __webpack_require__) {

            var global = __webpack_require__(6);
            var macrotask = __webpack_require__(122).set;
            var Observer = global.MutationObserver || global.WebKitMutationObserver;
            var process = global.process;
            var Promise = global.Promise;
            var isNode = __webpack_require__(26)(process) == 'process';

            module.exports = function () {
                var head, last, notify;

                var flush = function () {
                    var parent, fn;
                    if (isNode && (parent = process.domain)) parent.exit();
                    while (head) {
                        fn = head.fn;
                        head = head.next;
                        try {
                            fn();
                        } catch (e) {
                            if (head) notify();
                            else last = undefined;
                            throw e;
                        }
                    } last = undefined;
                    if (parent) parent.enter();
                };

// Node.js
                if (isNode) {
                    notify = function () {
                        process.nextTick(flush);
                    };
// browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
                } else if (Observer && !(global.navigator && global.navigator.standalone)) {
                    var toggle = true;
                    var node = document.createTextNode('');
                    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
                    notify = function () {
                        node.data = toggle = !toggle;
                    };
// environments with maybe non-completely correct, but existent Promise
                } else if (Promise && Promise.resolve) {
// Promise.resolve without an argument throws an error in LG WebOS 2
                    var promise = Promise.resolve(undefined);
                    notify = function () {
                        promise.then(flush);
                    };
// for other environments - macrotask based on:
// - setImmediate
// - MessageChannel
// - window.postMessag
// - onreadystatechange
// - setTimeout
                } else {
                    notify = function () {
// strange IE + webpack dev server bug - use .call(global)
                        macrotask.call(global, flush);
                    };
                }

                return function (fn) {
                    var task = { fn: fn, next: undefined };
                    if (last) last.next = task;
                    if (!head) {
                        head = task;
                        notify();
                    } last = task;
                };
            };


            /***/ }),
        /* 417 */
        /***/ (function(module, exports, __webpack_require__) {

            var global = __webpack_require__(6);
            var navigator = global.navigator;

            module.exports = navigator && navigator.userAgent || '';


            /***/ }),
        /* 418 */
        /***/ (function(module, exports, __webpack_require__) {

            var hide = __webpack_require__(13);
            module.exports = function (target, src, safe) {
                for (var key in src) {
                    if (safe && target[key]) target[key] = src[key];
                    else hide(target, key, src[key]);
                } return target;
            };


            /***/ }),
        /* 419 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";

            var global = __webpack_require__(6);
            var core = __webpack_require__(5);
            var dP = __webpack_require__(14);
            var DESCRIPTORS = __webpack_require__(10);
            var SPECIES = __webpack_require__(7)('species');

            module.exports = function (KEY) {
                var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
                if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
                    configurable: true,
                    get: function () { return this; }
                });
            };


            /***/ }),
        /* 420 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";
// https://github.com/tc39/proposal-promise-finally

            var $export = __webpack_require__(9);
            var core = __webpack_require__(5);
            var global = __webpack_require__(6);
            var speciesConstructor = __webpack_require__(121);
            var promiseResolve = __webpack_require__(124);

            $export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
                    var C = speciesConstructor(this, core.Promise || global.Promise);
                    var isFunction = typeof onFinally == 'function';
                    return this.then(
                        isFunction ? function (x) {
                            return promiseResolve(C, onFinally()).then(function () { return x; });
                        } : onFinally,
                        isFunction ? function (e) {
                            return promiseResolve(C, onFinally()).then(function () { throw e; });
                        } : onFinally
                    );
                } });


            /***/ }),
        /* 421 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";

// https://github.com/tc39/proposal-promise-try
            var $export = __webpack_require__(9);
            var newPromiseCapability = __webpack_require__(48);
            var perform = __webpack_require__(123);

            $export($export.S, 'Promise', { 'try': function (callbackfn) {
                    var promiseCapability = newPromiseCapability.f(this);
                    var result = perform(callbackfn);
                    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
                    return promiseCapability.promise;
                } });


            /***/ }),
        /* 422 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm-move-file-wrap" }, [
                    _c("div", { staticClass: "popup-mask" }, [
                        _c("div", { staticClass: "popup-container" }, [
                            _c("span", { staticClass: "close-modal" }, [
                                _c(
                                    "a",
                                    {
                                        attrs: { href: "#" },
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                                return _vm.closeModal()
                                            }
                                        }
                                    },
                                    [_c("span", { staticClass: "dashicons dashicons-no" })]
                                )
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "popup-body" }, [
                                _c(
                                    "form",
                                    {
                                        attrs: { action: "", method: "post" },
                                        on: {
                                            submit: function($event) {
                                                $event.preventDefault()
                                                return _vm.move()
                                            }
                                        }
                                    },
                                    [
                                        _c("div", { staticClass: "pm-file-title" }, [
                                            _c("strong", [
                                                _vm._v(_vm._s(_vm.__("File: ", "wedevs-project-manager")))
                                            ]),
                                            _vm._v(_vm._s("test"))
                                        ]),
                                        _vm._v(" "),
                                        _c(
                                            "div",
                                            [
                                                _c("multiselect", {
                                                    ref: "assingTask",
                                                    attrs: {
                                                        id: "assingTask",
                                                        options: _vm.dropitems,
                                                        multiple: false,
                                                        "close-on-select": true,
                                                        "clear-on-select": true,
                                                        loading: _vm.isLoading,
                                                        "show-labels": true,
                                                        searchable: true,
                                                        placeholder: _vm.__(
                                                            "Search Folders",
                                                            "wedevs-project-manager"
                                                        ),
                                                        "select-label": "",
                                                        "selected-label": "selected",
                                                        "deselect-label": "",
                                                        label: "title",
                                                        "track-by": "id",
                                                        "allow-empty": true
                                                    },
                                                    on: {
                                                        "search-change": function($event) {
                                                            return _vm.asyncFind($event)
                                                        }
                                                    },
                                                    model: {
                                                        value: _vm.folder,
                                                        callback: function($$v) {
                                                            _vm.folder = $$v
                                                        },
                                                        expression: "folder"
                                                    }
                                                })
                                            ],
                                            1
                                        ),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "pm-right" }, [
                                            _vm.spinner
                                                ? _c("span", { staticClass: "pm-spinner" })
                                                : _vm._e(),
                                            _vm._v(" "),
                                            _c("input", {
                                                staticClass: "button button-primary",
                                                attrs: { type: "submit" },
                                                domProps: {
                                                    value: _vm.__("Move File", "wedevs-project-manager")
                                                }
                                            })
                                        ])
                                    ]
                                )
                            ])
                        ])
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-4b27b94b", esExports)
                }
            }

            /***/ }),
        /* 423 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    [
                        _c(
                            "ul",
                            { staticClass: "pm-folders-list" },
                            [
                                _vm._l(_vm.files, function(file) {
                                    return _c(
                                        "li",
                                        { key: file.id, staticClass: "folder pm-file-li" },
                                        [
                                            file.file_type == "folder"
                                                ? _c("div", { staticClass: "ff-content" }, [
                                                    _c(
                                                        "div",
                                                        {
                                                            staticClass: "image-content",
                                                            on: {
                                                                dblclick: function($event) {
                                                                    $event.preventDefault()
                                                                    return _vm.checkInFolder(file)
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _c("img", {
                                                                attrs: {
                                                                    src:
                                                                        _vm.base_dir_url +
                                                                        "views/assets/images/folder.png"
                                                                }
                                                            }),
                                                            _vm._v(" "),
                                                            !file.editMode
                                                                ? _c(
                                                                    "div",
                                                                    {
                                                                        staticClass: "view",
                                                                        on: {
                                                                            click: function($event) {
                                                                                $event.preventDefault()
                                                                                return _vm.dirFieldShowHide(file)
                                                                            }
                                                                        }
                                                                    },
                                                                    [_vm._v(_vm._s(file.title.slice(0, 20)))]
                                                                )
                                                                : _vm._e(),
                                                            _vm._v(" "),
                                                            file.editMode && _vm.can_edit_file(file)
                                                                ? _c("div", [
                                                                    _c("input", {
                                                                        directives: [
                                                                            {
                                                                                name: "model",
                                                                                rawName: "v-model",
                                                                                value: file.title,
                                                                                expression: "file.title"
                                                                            }
                                                                        ],
                                                                        ref: "inputFolderName",
                                                                        refInFor: true,
                                                                        attrs: { type: "text" },
                                                                        domProps: { value: file.title },
                                                                        on: {
                                                                            blur: function($event) {
                                                                                return _vm.updateFolderName(file)
                                                                            },
                                                                            keyup: function($event) {
                                                                                if (
                                                                                    !$event.type.indexOf("key") &&
                                                                                    _vm._k(
                                                                                        $event.keyCode,
                                                                                        "enter",
                                                                                        13,
                                                                                        $event.key,
                                                                                        "Enter"
                                                                                    )
                                                                                ) {
                                                                                    return null
                                                                                }
                                                                                return _vm.updateFolderName(file)
                                                                            },
                                                                            input: function($event) {
                                                                                if ($event.target.composing) {
                                                                                    return
                                                                                }
                                                                                _vm.$set(
                                                                                    file,
                                                                                    "title",
                                                                                    $event.target.value
                                                                                )
                                                                            }
                                                                        }
                                                                    })
                                                                ])
                                                                : _vm._e()
                                                        ]
                                                    ),
                                                    _vm._v(" "),
                                                    _vm.can_edit_file(file)
                                                        ? _c("div", { staticClass: "footer-section" }, [
                                                            file.private === "1" &&
                                                            _vm.user_can("view_private_file")
                                                                ? _c(
                                                                    "a",
                                                                    {
                                                                        attrs: { href: "#" },
                                                                        on: {
                                                                            click: function($event) {
                                                                                $event.preventDefault()
                                                                                return _vm.updatePrivacy(file, false)
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _c("span", {
                                                                            staticClass: "dashicons dashicons-lock"
                                                                        })
                                                                    ]
                                                                )
                                                                : _vm._e(),
                                                            _vm._v(" "),
                                                            file.private === "0" &&
                                                            _vm.user_can("view_private_file")
                                                                ? _c(
                                                                    "a",
                                                                    {
                                                                        attrs: { href: "#" },
                                                                        on: {
                                                                            click: function($event) {
                                                                                $event.preventDefault()
                                                                                return _vm.updatePrivacy(file, true)
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _c("span", {
                                                                            staticClass: "dashicons dashicons-unlock"
                                                                        })
                                                                    ]
                                                                )
                                                                : _vm._e(),
                                                            _vm._v(" "),
                                                            _c(
                                                                "a",
                                                                {
                                                                    attrs: { href: "#" },
                                                                    on: {
                                                                        click: function($event) {
                                                                            $event.preventDefault()
                                                                            return _vm.selfDeleteFolder(file, true)
                                                                        }
                                                                    }
                                                                },
                                                                [
                                                                    _c("span", {
                                                                        staticClass: "dashicons dashicons-trash"
                                                                    })
                                                                ]
                                                            ),
                                                            _vm._v(" "),
                                                            _vm.checkFolderlength(_vm.files)
                                                                ? _c(
                                                                    "a",
                                                                    {
                                                                        staticClass: "li-a",
                                                                        attrs: { href: "#" },
                                                                        on: {
                                                                            click: function($event) {
                                                                                $event.preventDefault()
                                                                                return _vm.move(file, _vm.files)
                                                                            }
                                                                        }
                                                                    },
                                                                    [_c("span", { staticClass: "icon-pm-move" })]
                                                                )
                                                                : _vm._e()
                                                        ])
                                                        : _vm._e()
                                                ])
                                                : _vm._e(),
                                            _vm._v(" "),
                                            file.file_type == "file" || file.file_type == "discussion_board"
                                                ? _c("div", { staticClass: "ff-content" }, [
                                                    _c("div", [
                                                        _c(
                                                            "div",
                                                            { staticClass: "image-content" },
                                                            [
                                                                _c(
                                                                    "router-link",
                                                                    {
                                                                        attrs: {
                                                                            to: {
                                                                                name: "singleFile",
                                                                                params: {
                                                                                    folder_id: file.parent,
                                                                                    fileId: file.id
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _c("img", {
                                                                            attrs: { src: file.thumb, alt: file.title }
                                                                        })
                                                                    ]
                                                                ),
                                                                _vm._v(" "),
                                                                _c("div", { staticClass: "item-title" }, [
                                                                    _vm._v(_vm._s(file.title.slice(0, 20)))
                                                                ]),
                                                                _vm._v(" "),
                                                                _c("span", { staticClass: "text" }, [
                                                                    _vm._v(
                                                                        "\n                                " +
                                                                        _vm._s(_vm.__("Attached to", "pm-pro")) +
                                                                        "\n                                "
                                                                    ),
                                                                    _c(
                                                                        "a",
                                                                        { attrs: { href: _vm.contentURL(file) } },
                                                                        [_vm._v(_vm._s(_vm.attachTo(file)))]
                                                                    ),
                                                                    _vm._v(
                                                                        "\n                                " +
                                                                        _vm._s(_vm.__("by", "pm-pro")) +
                                                                        "\n                                "
                                                                    ),
                                                                    _vm._v(" "),
                                                                    _c(
                                                                        "a",
                                                                        {
                                                                            attrs: {
                                                                                href: _vm.myTaskRedirect(
                                                                                    file.creator.data.id
                                                                                ),
                                                                                title: "admin"
                                                                            }
                                                                        },
                                                                        [
                                                                            _vm._v(
                                                                                "\n                                   " +
                                                                                _vm._s(file.creator.data.display_name) +
                                                                                "\n                                "
                                                                            )
                                                                        ]
                                                                    )
                                                                ])
                                                            ],
                                                            1
                                                        ),
                                                        _vm._v(" "),
                                                        _c(
                                                            "div",
                                                            { staticClass: "footer-section" },
                                                            [
                                                                _c("a", { attrs: { href: file.url } }, [
                                                                    _c("span", {
                                                                        staticClass: "dashicons dashicons-download"
                                                                    })
                                                                ]),
                                                                _vm._v(" "),
                                                                _c("a", { attrs: { href: _vm.contentURL(file) } }, [
                                                                    _c("span", {
                                                                        staticClass: "dashicons dashicons-admin-links"
                                                                    })
                                                                ]),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "router-link",
                                                                    {
                                                                        staticClass: "pm-comments-count",
                                                                        attrs: {
                                                                            to: {
                                                                                name: "singleFile",
                                                                                params: {
                                                                                    folder_id: file.parent,
                                                                                    fileId: file.id
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _c(
                                                                            "span",
                                                                            {
                                                                                staticClass:
                                                                                    "pm-btn pm-btn-blue pm-comment-count"
                                                                            },
                                                                            [_vm._v(_vm._s(file.comment_count))]
                                                                        )
                                                                    ]
                                                                ),
                                                                _vm._v(" "),
                                                                _c(
                                                                    "a",
                                                                    {
                                                                        staticClass: "li-a",
                                                                        attrs: { href: "#" },
                                                                        on: {
                                                                            click: function($event) {
                                                                                $event.preventDefault()
                                                                                return _vm.move(file, _vm.files)
                                                                            }
                                                                        }
                                                                    },
                                                                    [_c("span", { staticClass: "icon-pm-move" })]
                                                                )
                                                            ],
                                                            1
                                                        )
                                                    ])
                                                ])
                                                : _vm._e(),
                                            _vm._v(" "),
                                            file.file_type == "pro_file"
                                                ? _c("div", { staticClass: "ff-content" }, [
                                                    _c("div", [
                                                        _c(
                                                            "div",
                                                            { staticClass: "image-content" },
                                                            [
                                                                _c(
                                                                    "router-link",
                                                                    {
                                                                        attrs: {
                                                                            to: {
                                                                                name: "singleFile",
                                                                                params: {
                                                                                    folder_id: file.parent,
                                                                                    fileId: file.id
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _c("img", {
                                                                            attrs: { src: file.thumb, alt: file.name }
                                                                        })
                                                                    ]
                                                                ),
                                                                _vm._v(" "),
                                                                _c("div", { staticClass: "item-title" }, [
                                                                    _vm._v(_vm._s(file.name.slice(0, 25)))
                                                                ])
                                                            ],
                                                            1
                                                        ),
                                                        _vm._v(" "),
                                                        _c("div", { staticClass: "footer-section" }, [
                                                            _c(
                                                                "a",
                                                                {
                                                                    attrs: {
                                                                        href: _vm.getDownloadUrl(file.attachment_id)
                                                                    }
                                                                },
                                                                [
                                                                    _c("span", {
                                                                        staticClass: "dashicons dashicons-download"
                                                                    })
                                                                ]
                                                            ),
                                                            _vm._v(" "),
                                                            _vm.can_edit_file(file)
                                                                ? _c("span", [
                                                                    file.private === "1" &&
                                                                    _vm.user_can("view_private_file")
                                                                        ? _c(
                                                                            "a",
                                                                            {
                                                                                attrs: { href: "#" },
                                                                                on: {
                                                                                    click: function($event) {
                                                                                        $event.preventDefault()
                                                                                        return _vm.updatePrivacy(
                                                                                            file,
                                                                                            false
                                                                                        )
                                                                                    }
                                                                                }
                                                                            },
                                                                            [
                                                                                _c("span", {
                                                                                    staticClass:
                                                                                        "dashicons dashicons-lock"
                                                                                })
                                                                            ]
                                                                        )
                                                                        : _vm._e(),
                                                                    _vm._v(" "),
                                                                    file.private === "0" &&
                                                                    _vm.user_can("view_private_file")
                                                                        ? _c(
                                                                            "a",
                                                                            {
                                                                                attrs: { href: "#" },
                                                                                on: {
                                                                                    click: function($event) {
                                                                                        $event.preventDefault()
                                                                                        return _vm.updatePrivacy(file, true)
                                                                                    }
                                                                                }
                                                                            },
                                                                            [
                                                                                _c("span", {
                                                                                    staticClass:
                                                                                        "dashicons dashicons-unlock"
                                                                                })
                                                                            ]
                                                                        )
                                                                        : _vm._e(),
                                                                    _vm._v(" "),
                                                                    _c(
                                                                        "a",
                                                                        {
                                                                            attrs: { href: "#" },
                                                                            on: {
                                                                                click: function($event) {
                                                                                    $event.preventDefault()
                                                                                    return _vm.selfDeleteFolder(file, true)
                                                                                }
                                                                            }
                                                                        },
                                                                        [
                                                                            _c("span", {
                                                                                staticClass: "dashicons dashicons-trash"
                                                                            })
                                                                        ]
                                                                    ),
                                                                    _vm._v(" "),
                                                                    _c(
                                                                        "a",
                                                                        {
                                                                            staticClass: "li-a",
                                                                            attrs: { href: "#" },
                                                                            on: {
                                                                                click: function($event) {
                                                                                    $event.preventDefault()
                                                                                    return _vm.move(file, _vm.files)
                                                                                }
                                                                            }
                                                                        },
                                                                        [_c("span", { staticClass: "icon-pm-move" })]
                                                                    )
                                                                ])
                                                                : _vm._e()
                                                        ])
                                                    ])
                                                ])
                                                : _vm._e(),
                                            _vm._v(" "),
                                            file.file_type == "doc"
                                                ? _c("div", { staticClass: "ff-content" }, [
                                                    _c("div", { staticClass: "cpm-doc-view" }, [
                                                        _c("div", { staticClass: "doc-content" }, [
                                                            _c(
                                                                "div",
                                                                { staticClass: "item-title" },
                                                                [
                                                                    _c(
                                                                        "router-link",
                                                                        {
                                                                            attrs: {
                                                                                to: {
                                                                                    name: "singleDoc",
                                                                                    params: {
                                                                                        folder_id: file.parent,
                                                                                        docId: file.id
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        [
                                                                            _vm._v(
                                                                                "\n                                    " +
                                                                                _vm._s(file.title.slice(0, 20)) +
                                                                                "\n                                "
                                                                            )
                                                                        ]
                                                                    )
                                                                ],
                                                                1
                                                            ),
                                                            _vm._v(" "),
                                                            _c("small", [
                                                                _vm._v(_vm._s(_vm.__("by", "pm-pro")) + " "),
                                                                _c("strong", [
                                                                    _vm._v(_vm._s(file.creator.data.display_name))
                                                                ])
                                                            ]),
                                                            _vm._v(" "),
                                                            _c("hr"),
                                                            _vm._v(" "),
                                                            _c("div", {
                                                                staticClass: "file-content",
                                                                domProps: { innerHTML: _vm._s(file.description) }
                                                            })
                                                        ]),
                                                        _vm._v(" "),
                                                        _c(
                                                            "div",
                                                            { staticClass: "footer-section" },
                                                            [
                                                                _c(
                                                                    "router-link",
                                                                    {
                                                                        attrs: {
                                                                            to: {
                                                                                name: "singleDoc",
                                                                                params: {
                                                                                    folder_id: file.parent,
                                                                                    docId: file.id
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _c("span", {
                                                                            staticClass:
                                                                                "dashicons dashicons-media-document"
                                                                        })
                                                                    ]
                                                                ),
                                                                _vm._v(" "),
                                                                _vm.can_edit_file(file)
                                                                    ? _c("span", [
                                                                        file.private === "1" &&
                                                                        _vm.user_can("view_private_file")
                                                                            ? _c(
                                                                                "a",
                                                                                {
                                                                                    attrs: { href: "#" },
                                                                                    on: {
                                                                                        click: function($event) {
                                                                                            $event.preventDefault()
                                                                                            return _vm.updatePrivacy(
                                                                                                file,
                                                                                                false
                                                                                            )
                                                                                        }
                                                                                    }
                                                                                },
                                                                                [
                                                                                    _c("span", {
                                                                                        staticClass:
                                                                                            "dashicons dashicons-lock"
                                                                                    })
                                                                                ]
                                                                            )
                                                                            : _vm._e(),
                                                                        _vm._v(" "),
                                                                        file.private === "0" &&
                                                                        _vm.user_can("view_private_file")
                                                                            ? _c(
                                                                                "a",
                                                                                {
                                                                                    attrs: { href: "#" },
                                                                                    on: {
                                                                                        click: function($event) {
                                                                                            $event.preventDefault()
                                                                                            return _vm.updatePrivacy(
                                                                                                file,
                                                                                                true
                                                                                            )
                                                                                        }
                                                                                    }
                                                                                },
                                                                                [
                                                                                    _c("span", {
                                                                                        staticClass:
                                                                                            "dashicons dashicons-unlock"
                                                                                    })
                                                                                ]
                                                                            )
                                                                            : _vm._e(),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "a",
                                                                            {
                                                                                attrs: { href: "#" },
                                                                                on: {
                                                                                    click: function($event) {
                                                                                        $event.preventDefault()
                                                                                        return _vm.selfDeleteFolder(
                                                                                            file,
                                                                                            true
                                                                                        )
                                                                                    }
                                                                                }
                                                                            },
                                                                            [
                                                                                _c("span", {
                                                                                    staticClass: "dashicons dashicons-trash"
                                                                                })
                                                                            ]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "a",
                                                                            {
                                                                                staticClass: "li-a",
                                                                                attrs: { href: "#" },
                                                                                on: {
                                                                                    click: function($event) {
                                                                                        $event.preventDefault()
                                                                                        return _vm.move(file, _vm.files)
                                                                                    }
                                                                                }
                                                                            },
                                                                            [
                                                                                _c("span", {
                                                                                    staticClass: "icon-pm-move"
                                                                                })
                                                                            ]
                                                                        )
                                                                    ])
                                                                    : _vm._e()
                                                            ],
                                                            1
                                                        )
                                                    ])
                                                ])
                                                : _vm._e(),
                                            _vm._v(" "),
                                            file.file_type == "link"
                                                ? _c("div", { staticClass: "ff-content" }, [
                                                    _c("div", { staticClass: "cpm-doc-view" }, [
                                                        _c(
                                                            "div",
                                                            { staticClass: "doc-content" },
                                                            [
                                                                _c(
                                                                    "router-link",
                                                                    {
                                                                        attrs: {
                                                                            to: {
                                                                                name: "singleLink",
                                                                                params: {
                                                                                    folder_id: file.parent,
                                                                                    linkId: file.id
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _c("div", { staticClass: "item-title" }, [
                                                                            _c("div", {
                                                                                staticClass: "online-docx-image-content",
                                                                                style:
                                                                                    "background-image: url(" +
                                                                                    _vm.getMimeTypeImageFromLink(file.url) +
                                                                                    ") !important"
                                                                            }),
                                                                            _vm._v(
                                                                                "\n\n\n                                    " +
                                                                                _vm._s(file.title) +
                                                                                "\n\n                                "
                                                                            )
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("small", [
                                                                            _vm._v(_vm._s(_vm.__("by", "pm-pro")) + " "),
                                                                            _c("strong", [
                                                                                _vm._v(
                                                                                    _vm._s(file.creator.data.display_name)
                                                                                )
                                                                            ])
                                                                        ]),
                                                                        _vm._v(" "),
                                                                        _c("hr"),
                                                                        _vm._v(" "),
                                                                        _c("div", {
                                                                            staticClass: "file-content",
                                                                            domProps: {
                                                                                innerHTML: _vm._s(file.description)
                                                                            }
                                                                        })
                                                                    ]
                                                                )
                                                            ],
                                                            1
                                                        ),
                                                        _vm._v(" "),
                                                        _c(
                                                            "div",
                                                            { staticClass: "footer-section" },
                                                            [
                                                                _c(
                                                                    "router-link",
                                                                    {
                                                                        attrs: {
                                                                            to: {
                                                                                name: "singleLink",
                                                                                params: {
                                                                                    folder_id: file.parent,
                                                                                    linkId: file.id
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    [
                                                                        _c("span", {
                                                                            staticClass:
                                                                                "dashicons dashicons-media-document"
                                                                        })
                                                                    ]
                                                                ),
                                                                _vm._v(" "),
                                                                _vm.can_edit_file(file)
                                                                    ? _c("span", [
                                                                        file.private === "1" &&
                                                                        _vm.user_can("view_private_file")
                                                                            ? _c(
                                                                                "a",
                                                                                {
                                                                                    attrs: { href: "#" },
                                                                                    on: {
                                                                                        click: function($event) {
                                                                                            $event.preventDefault()
                                                                                            return _vm.updatePrivacy(
                                                                                                file,
                                                                                                false
                                                                                            )
                                                                                        }
                                                                                    }
                                                                                },
                                                                                [
                                                                                    _c("span", {
                                                                                        staticClass:
                                                                                            "dashicons dashicons-lock"
                                                                                    })
                                                                                ]
                                                                            )
                                                                            : _vm._e(),
                                                                        _vm._v(" "),
                                                                        file.private === "0" &&
                                                                        _vm.user_can("view_private_file")
                                                                            ? _c(
                                                                                "a",
                                                                                {
                                                                                    attrs: { href: "#" },
                                                                                    on: {
                                                                                        click: function($event) {
                                                                                            $event.preventDefault()
                                                                                            return _vm.updatePrivacy(
                                                                                                file,
                                                                                                true
                                                                                            )
                                                                                        }
                                                                                    }
                                                                                },
                                                                                [
                                                                                    _c("span", {
                                                                                        staticClass:
                                                                                            "dashicons dashicons-unlock"
                                                                                    })
                                                                                ]
                                                                            )
                                                                            : _vm._e(),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "a",
                                                                            {
                                                                                attrs: { href: "#" },
                                                                                on: {
                                                                                    click: function($event) {
                                                                                        $event.preventDefault()
                                                                                        return _vm.selfDeleteFolder(
                                                                                            file,
                                                                                            true
                                                                                        )
                                                                                    }
                                                                                }
                                                                            },
                                                                            [
                                                                                _c("span", {
                                                                                    staticClass: "dashicons dashicons-trash"
                                                                                })
                                                                            ]
                                                                        ),
                                                                        _vm._v(" "),
                                                                        _c(
                                                                            "a",
                                                                            {
                                                                                staticClass: "li-a",
                                                                                attrs: { href: "#" },
                                                                                on: {
                                                                                    click: function($event) {
                                                                                        $event.preventDefault()
                                                                                        return _vm.move(file, _vm.files)
                                                                                    }
                                                                                }
                                                                            },
                                                                            [
                                                                                _c("span", {
                                                                                    staticClass: "icon-pm-move"
                                                                                })
                                                                            ]
                                                                        )
                                                                    ])
                                                                    : _vm._e()
                                                            ],
                                                            1
                                                        )
                                                    ])
                                                ])
                                                : _vm._e()
                                        ]
                                    )
                                }),
                                _vm._v(" "),
                                !_vm.files.length
                                    ? _c("li", [
                                        _vm._v(
                                            "\n                " +
                                            _vm._s(_vm.__("No results found!", "pm-pro")) +
                                            "\n            "
                                        )
                                    ])
                                    : _vm._e()
                            ],
                            2
                        ),
                        _vm._v(" "),
                        _c("router-view"),
                        _vm._v(" "),
                        _vm.moveFileItems.popupModal
                            ? _c(
                                "div",
                                [_c("move-file", { attrs: { items: _vm.moveFileItems } })],
                                1
                            )
                            : _vm._e()
                    ],
                    1
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-11e6db41", esExports)
                }
            }

            /***/ }),
        /* 424 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_file_upload_form_vue__ = __webpack_require__(125);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2596fc3c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_file_upload_form_vue__ = __webpack_require__(431);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(425)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_file_upload_form_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2596fc3c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_file_upload_form_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/file-upload-form.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-2596fc3c", Component.options)
                } else {
                    hotAPI.reload("data-v-2596fc3c", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 425 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(426);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("316b87e4", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2596fc3c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./file-upload-form.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2596fc3c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./file-upload-form.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 426 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.cpm-privacy {\n\tmargin-bottom: 15px;\n}\n.pm-attachment-area {\n\tpadding: 0;\n\tborder: none;\n}\n.pm-upload-img {\n\tdisplay: block;\n}\n.pm-upload-filelist:after {\n\tdisplay: block;\n\tcontent: \"\";\n\tclear: both;\n}\n", ""]);

// exports


            /***/ }),
        /* 427 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_uploader_vue__ = __webpack_require__(126);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_94778c2a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_uploader_vue__ = __webpack_require__(430);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(428)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_uploader_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_94778c2a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_uploader_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-files/uploader.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-94778c2a", Component.options)
                } else {
                    hotAPI.reload("data-v-94778c2a", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 428 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(429);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("59c32b5c", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-94778c2a\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./uploader.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-94778c2a\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./uploader.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 429 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-uploaded-file {\n    height: 100px;\n    width: auto;\n}\n", ""]);

// exports


            /***/ }),
        /* 430 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm-attachment-area" }, [
                    _c("div", { attrs: { id: "pm-upload-container" } }, [
                        _c(
                            "div",
                            { staticClass: "pm-upload-filelist" },
                            _vm._l(_vm.files, function(file) {
                                return _c("div", { key: file.id, staticClass: "pm-uploaded-item" }, [
                                    _c(
                                        "a",
                                        {
                                            staticClass: "pm-uploaded-img",
                                            attrs: { href: file.url, target: "_blank" }
                                        },
                                        [
                                            file.absoluteUrl
                                                ? _c("img", {
                                                    staticClass: "pm-uploaded-file",
                                                    attrs: {
                                                        src: file.absoluteUrl,
                                                        alt: file.name,
                                                        title: file.name
                                                    }
                                                })
                                                : _vm._e(),
                                            _vm._v(" "),
                                            !file.absoluteUrl
                                                ? _c("img", {
                                                    staticClass: "pm-uploaded-file",
                                                    attrs: {
                                                        src: file.thumb,
                                                        alt: file.name,
                                                        title: file.name
                                                    }
                                                })
                                                : _vm._e()
                                        ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                        "a",
                                        {
                                            staticClass: "button",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.deletefile(file.id)
                                                }
                                            }
                                        },
                                        [_vm._v(_vm._s(_vm.__("Delete File", "pm-pro")))]
                                    )
                                ])
                            }),
                            0
                        ),
                        _vm._v(" "),
                        _c(
                            "a",
                            {
                                directives: [{ name: "pm-uploader", rawName: "v-pm-uploader" }],
                                staticClass: "button button-secondary",
                                attrs: { href: "#", id: "pm-upload-pickfiles" }
                            },
                            [
                                _vm._v(
                                    "\n            " +
                                    _vm._s(_vm.__("Attach a File", "pm-pro")) +
                                    "\n        "
                                )
                            ]
                        )
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-94778c2a", esExports)
                }
            }

            /***/ }),
        /* 431 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "metabox-holder" }, [
                    _c("div", { staticClass: "postbox" }, [
                        _c("h2", { staticClass: "hndle" }, [
                            _vm._v(_vm._s(_vm.__("File uploads", "pm-pro")))
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "inside" }, [
                            _c(
                                "form",
                                {
                                    on: {
                                        submit: function($event) {
                                            $event.preventDefault()
                                            return _vm.selfUploadFile()
                                        }
                                    }
                                },
                                [
                                    _c("file-uploader", {
                                        attrs: { files: _vm.files, delete: _vm.deleted_files }
                                    }),
                                    _vm._v(" "),
                                    _vm.user_can("view_private_file")
                                        ? _c("div", { staticClass: "cpm-privacy" }, [
                                            _c("label", [
                                                _c("input", {
                                                    directives: [
                                                        {
                                                            name: "model",
                                                            rawName: "v-model",
                                                            value: _vm.private,
                                                            expression: "private"
                                                        }
                                                    ],
                                                    attrs: {
                                                        type: "checkbox",
                                                        name: "privacy",
                                                        value: "yes"
                                                    },
                                                    domProps: {
                                                        checked: Array.isArray(_vm.private)
                                                            ? _vm._i(_vm.private, "yes") > -1
                                                            : _vm.private
                                                    },
                                                    on: {
                                                        change: function($event) {
                                                            var $$a = _vm.private,
                                                                $$el = $event.target,
                                                                $$c = $$el.checked ? true : false
                                                            if (Array.isArray($$a)) {
                                                                var $$v = "yes",
                                                                    $$i = _vm._i($$a, $$v)
                                                                if ($$el.checked) {
                                                                    $$i < 0 && (_vm.private = $$a.concat([$$v]))
                                                                } else {
                                                                    $$i > -1 &&
                                                                    (_vm.private = $$a
                                                                        .slice(0, $$i)
                                                                        .concat($$a.slice($$i + 1)))
                                                                }
                                                            } else {
                                                                _vm.private = $$c
                                                            }
                                                        }
                                                    }
                                                }),
                                                _vm._v(
                                                    "\n\t\t\t\t\t" +
                                                    _vm._s(_vm.__("Make this private.", "pm-pro")) +
                                                    "\n\t\t\t\t"
                                                )
                                            ])
                                        ])
                                        : _vm._e(),
                                    _vm._v(" "),
                                    _c("input", {
                                        staticClass: "button button-primary pm-file-submit-button",
                                        attrs: { type: "submit", disabled: !_vm.files.length },
                                        domProps: { value: _vm.file_submit }
                                    }),
                                    _vm._v(" "),
                                    _c(
                                        "a",
                                        {
                                            staticClass: "button button-secondary",
                                            attrs: { href: "#" },
                                            on: {
                                                click: function($event) {
                                                    $event.preventDefault()
                                                    return _vm.showHideFile()
                                                }
                                            }
                                        },
                                        [_vm._v(_vm._s(_vm.__("Cancel", "pm-pro")))]
                                    )
                                ],
                                1
                            )
                        ])
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-2596fc3c", esExports)
                }
            }

            /***/ }),
        /* 432 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    { staticClass: "pm-pro-file-container" },
                    [
                        _vm.user_can("create_file")
                            ? _c("div", { staticClass: "pm-uplaod-btn-list pm-right" }, [
                                _c(
                                    "a",
                                    {
                                        staticClass: "button button-primary",
                                        attrs: { href: "#" },
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                                return _vm.showHideFolder()
                                            }
                                        }
                                    },
                                    [
                                        _c("span", { staticClass: "dashicons dashicons-plus-alt" }),
                                        _vm._v(
                                            "\n            \t" +
                                            _vm._s(_vm.__("Create a folder", "pm-pro")) +
                                            "\n            "
                                        )
                                    ]
                                ),
                                _vm._v(" "),
                                _c(
                                    "a",
                                    {
                                        staticClass: "button button-primary",
                                        attrs: { href: "#" },
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                                return _vm.showHideFile()
                                            }
                                        }
                                    },
                                    [
                                        _c("span", { staticClass: "dashicons dashicons-plus-alt" }),
                                        _vm._v(
                                            "\n            \t" +
                                            _vm._s(_vm.__("Upload a file", "pm-pro")) +
                                            "\n            "
                                        )
                                    ]
                                ),
                                _vm._v(" "),
                                _c(
                                    "a",
                                    {
                                        staticClass: "button button-primary",
                                        attrs: { href: "#" },
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                                return _vm.showHideDoc()
                                            }
                                        }
                                    },
                                    [
                                        _c("span", { staticClass: "dashicons dashicons-plus-alt" }),
                                        _vm._v(
                                            "\n            \t" +
                                            _vm._s(_vm.__("Create a doc", "pm-pro")) +
                                            "\n            "
                                        )
                                    ]
                                ),
                                _vm._v(" "),
                                _c(
                                    "a",
                                    {
                                        staticClass: "button button-primary",
                                        attrs: { href: "#" },
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                                return _vm.showHideLink()
                                            }
                                        }
                                    },
                                    [
                                        _c("span", { staticClass: "dashicons dashicons-plus-alt" }),
                                        _vm._v(
                                            "\n            \t" +
                                            _vm._s(_vm.__("Link to Docs", "pm-pro")) +
                                            "\n            "
                                        )
                                    ]
                                )
                            ])
                            : _vm._e(),
                        _vm._v(" "),
                        _c("div", { staticClass: "clearfix" }),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-previous-back" }, [
                            _c(
                                "ul",
                                { staticClass: "breadcrumb" },
                                [
                                    _c(
                                        "li",
                                        [
                                            _c(
                                                "router-link",
                                                {
                                                    attrs: {
                                                        to: {
                                                            name: "pm_files",
                                                            params: {
                                                                project_id: _vm.project_id
                                                            }
                                                        }
                                                    }
                                                },
                                                [
                                                    _c("span", {
                                                        staticClass: "dashicons dashicons-admin-home"
                                                    })
                                                ]
                                            )
                                        ],
                                        1
                                    ),
                                    _vm._v(" "),
                                    _vm._l(_vm.parentId, function(bread, key) {
                                        return _c(
                                            "li",
                                            { key: key },
                                            [
                                                _c(
                                                    "router-link",
                                                    {
                                                        attrs: {
                                                            to: {
                                                                name: "pro_file_lists",
                                                                params: {
                                                                    project_id: _vm.project_id,
                                                                    folder_id: bread.parent
                                                                }
                                                            }
                                                        }
                                                    },
                                                    [
                                                        _vm._v(
                                                            "\n                         " +
                                                            _vm._s(bread.title) +
                                                            "\n                    "
                                                        )
                                                    ]
                                                )
                                            ],
                                            1
                                        )
                                    }),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "clearfix" })
                                ],
                                2
                            )
                        ]),
                        _vm._v(" "),
                        _vm.user_can("create_file")
                            ? _c(
                                "div",
                                { staticClass: "file-from-wrapper" },
                                [
                                    _c(
                                        "transition",
                                        { attrs: { name: "slide" } },
                                        [
                                            _vm.isLink
                                                ? _c("link-create-form", { attrs: { link: {} } })
                                                : _vm._e()
                                        ],
                                        1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                        "transition",
                                        { attrs: { name: "slide" } },
                                        [
                                            _vm.isDoc
                                                ? _c("doc-create-form", { attrs: { doc: {} } })
                                                : _vm._e()
                                        ],
                                        1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                        "transition",
                                        { attrs: { name: "slide" } },
                                        [_vm.isFile ? _c("file-upload-form") : _vm._e()],
                                        1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                        "transition",
                                        { attrs: { name: "modal" } },
                                        [_vm.isFolder ? _c("create-folder-form") : _vm._e()],
                                        1
                                    )
                                ],
                                1
                            )
                            : _vm._e(),
                        _vm._v(" "),
                        _c("file-lists")
                    ],
                    1
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-2ccb1bca", esExports)
                }
            }

            /***/ }),
        /* 433 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _tabMenu = __webpack_require__(434);

            var _tabMenu2 = _interopRequireDefault(_tabMenu);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevs_PM_Components.push({
                hook: 'pm-header-menu',
                component: 'settings-tab-menu',
                property: _tabMenu2.default
            }); // const tabMenu = resolve => {
//     require.ensure(['./tab-menu.vue'], () => {
            //         resolve(require('./tab-menu.vue'));
            //     });
// }

            /***/ }),
        /* 434 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_tab_menu_vue__ = __webpack_require__(127);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a1df78a4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_tab_menu_vue__ = __webpack_require__(435);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_tab_menu_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a1df78a4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_tab_menu_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/project-settings/tab-menu.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-a1df78a4", Component.options)
                } else {
                    hotAPI.reload("data-v-a1df78a4", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 435 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _vm.is_manager()
                    ? _c(
                        "div",
                        { staticClass: "menu-item" },
                        [
                            _c(
                                "router-link",
                                {
                                    class: _vm.setActiveMenu("pm_pro_settings"),
                                    attrs: {
                                        to: {
                                            name: "pm_pro_settings",
                                            param: {
                                                project_id: _vm.projectId
                                            }
                                        }
                                    }
                                },
                                [
                                    _c("span", { staticClass: "logo icon-pm-settings" }),
                                    _vm._v(" "),
                                    _c("span", [_vm._v(_vm._s(_vm.__("Settings", "pm-pro")))])
                                ]
                            )
                        ],
                        1
                    )
                    : _vm._e()
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-a1df78a4", esExports)
                }
            }

            /***/ }),
        /* 436 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _settings = __webpack_require__(437);

            var _settings2 = _interopRequireDefault(_settings);

            var _pageTabMenu = __webpack_require__(439);

            var _pageTabMenu2 = _interopRequireDefault(_pageTabMenu);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevs_PM_Components.push({
                hook: 'pm_after_settings',
                component: 'pm-pro-settings',
                property: _settings2.default
            }); // const Settings = resolve => {
//     require.ensure(['./settings.vue'], () => {
            //         resolve(require('./settings.vue'));
            //     });
// }

            weDevs_PM_Components.push({
                hook: 'pm-settings-tab',
                component: 'pm-pro-page-settings-tab',
                property: _pageTabMenu2.default
            });

            /***/ }),
        /* 437 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_settings_vue__ = __webpack_require__(128);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_bc0e5824_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_settings_vue__ = __webpack_require__(438);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_settings_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_bc0e5824_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_settings_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/settings/settings.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-bc0e5824", Component.options)
                } else {
                    hotAPI.reload("data-v-bc0e5824", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 438 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("table", { staticClass: "form-table" }, [
                    _c("tbody", [
                        _c("tr", [
                            _c("th", { attrs: { scope: "row" } }, [
                                _c("label", { attrs: { for: "pm_general[start_date]" } }, [
                                    _vm._v(_vm._s(_vm.__("Task start date", "pm-pro")))
                                ])
                            ]),
                            _vm._v(" "),
                            _c("td", [
                                _c("fieldset", [
                                    _c("label", [
                                        _c("input", {
                                            directives: [
                                                {
                                                    name: "model",
                                                    rawName: "v-model",
                                                    value: _vm.task_start_field,
                                                    expression: "task_start_field"
                                                }
                                            ],
                                            staticClass: "checkbox",
                                            attrs: { type: "checkbox" },
                                            domProps: {
                                                checked: Array.isArray(_vm.task_start_field)
                                                    ? _vm._i(_vm.task_start_field, null) > -1
                                                    : _vm.task_start_field
                                            },
                                            on: {
                                                change: function($event) {
                                                    var $$a = _vm.task_start_field,
                                                        $$el = $event.target,
                                                        $$c = $$el.checked ? true : false
                                                    if (Array.isArray($$a)) {
                                                        var $$v = null,
                                                            $$i = _vm._i($$a, $$v)
                                                        if ($$el.checked) {
                                                            $$i < 0 && (_vm.task_start_field = $$a.concat([$$v]))
                                                        } else {
                                                            $$i > -1 &&
                                                            (_vm.task_start_field = $$a
                                                                .slice(0, $$i)
                                                                .concat($$a.slice($$i + 1)))
                                                        }
                                                    } else {
                                                        _vm.task_start_field = $$c
                                                    }
                                                }
                                            }
                                        }),
                                        _vm._v(
                                            "\n                        " +
                                            _vm._s(_vm.__("Enable task start date field", "pm-pro")) +
                                            "\n                    "
                                        )
                                    ]),
                                    _vm._v(" "),
                                    _c("p", { staticClass: "description" })
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("tr", [
                            _c("th", { attrs: { scope: "row" } }, [
                                _c("label", [_vm._v(_vm._s(_vm.__("Logo", "pm-pro")))])
                            ]),
                            _vm._v(" "),
                            _c("td", [
                                _c("fieldset", [
                                    _c(
                                        "div",
                                        { staticClass: "pm-attachment-area pm-logo-upload-wrap" },
                                        [
                                            _vm.logo.length
                                                ? _c("p", { staticClass: "logo-preview" }, [
                                                    _c("img", {
                                                        attrs: { src: _vm.logo[0].thumb, alt: _vm.logo[0].name }
                                                    })
                                                ])
                                                : _vm._e(),
                                            _vm._v(" "),
                                            _c(
                                                "a",
                                                {
                                                    staticClass: "button button-secondary upload-logo",
                                                    attrs: { href: "#" },
                                                    on: {
                                                        click: function($event) {
                                                            $event.preventDefault()
                                                            return _vm.handleLogoUpload()
                                                        }
                                                    }
                                                },
                                                [_vm._v(_vm._s(_vm.__("Upload", "pm-pro")))]
                                            ),
                                            _vm._v(" "),
                                            _vm.logo.length
                                                ? _c(
                                                    "a",
                                                    {
                                                        staticClass: "button button-secondary upload-logo",
                                                        attrs: { href: "#" },
                                                        on: {
                                                            click: function($event) {
                                                                $event.preventDefault()
                                                                return _vm.handleLogoUploadDelete(_vm.logo)
                                                            }
                                                        }
                                                    },
                                                    [_vm._v(_vm._s(_vm.__("Delete", "pm-pro")))]
                                                )
                                                : _vm._e()
                                        ]
                                    )
                                ])
                            ])
                        ]),
                        _vm._v(" "),
                        _c("tr", [
                            _c("th", { attrs: { scope: "row" } }, [
                                _c("label", { attrs: { for: "pm_general[daily_digest]" } }, [
                                    _vm._v(_vm._s(_vm.__("Daily Digest", "pm-pro")))
                                ])
                            ]),
                            _vm._v(" "),
                            _c("td", [
                                _c("fieldset", [
                                    _c("label", [
                                        _c("input", {
                                            directives: [
                                                {
                                                    name: "model",
                                                    rawName: "v-model",
                                                    value: _vm.daily_digest,
                                                    expression: "daily_digest"
                                                }
                                            ],
                                            staticClass: "checkbox",
                                            attrs: { type: "checkbox" },
                                            domProps: {
                                                checked: Array.isArray(_vm.daily_digest)
                                                    ? _vm._i(_vm.daily_digest, null) > -1
                                                    : _vm.daily_digest
                                            },
                                            on: {
                                                change: function($event) {
                                                    var $$a = _vm.daily_digest,
                                                        $$el = $event.target,
                                                        $$c = $$el.checked ? true : false
                                                    if (Array.isArray($$a)) {
                                                        var $$v = null,
                                                            $$i = _vm._i($$a, $$v)
                                                        if ($$el.checked) {
                                                            $$i < 0 && (_vm.daily_digest = $$a.concat([$$v]))
                                                        } else {
                                                            $$i > -1 &&
                                                            (_vm.daily_digest = $$a
                                                                .slice(0, $$i)
                                                                .concat($$a.slice($$i + 1)))
                                                        }
                                                    } else {
                                                        _vm.daily_digest = $$c
                                                    }
                                                }
                                            }
                                        }),
                                        _vm._v(
                                            "\n                        " +
                                            _vm._s(_vm.__("Enable Daily Digest", "pm-pro")) +
                                            "\n                    "
                                        )
                                    ]),
                                    _vm._v(" "),
                                    _c("p", { staticClass: "description" })
                                ])
                            ])
                        ])
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-bc0e5824", esExports)
                }
            }

            /***/ }),
        /* 439 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_page_tab_menu_vue__ = __webpack_require__(129);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_56d4275a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_page_tab_menu_vue__ = __webpack_require__(440);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_page_tab_menu_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_56d4275a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_page_tab_menu_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/settings/page-tab-menu.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-56d4275a", Component.options)
                } else {
                    hotAPI.reload("data-v-56d4275a", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 440 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "router-link",
                    { staticClass: "nav-tab", attrs: { to: { name: "page_settings_tab" } } },
                    [_vm._v("\n    " + _vm._s(_vm.__("Pages", "pm-pro")) + "\n")]
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-56d4275a", esExports)
                }
            }

            /***/ }),
        /* 441 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _discussPrivacy = __webpack_require__(442);

            var _discussPrivacy2 = _interopRequireDefault(_discussPrivacy);

            var _taskListPrivacy = __webpack_require__(444);

            var _taskListPrivacy2 = _interopRequireDefault(_taskListPrivacy);

            var _taskPrivacy = __webpack_require__(446);

            var _taskPrivacy2 = _interopRequireDefault(_taskPrivacy);

            var _milestonePrivacy = __webpack_require__(448);

            var _milestonePrivacy2 = _interopRequireDefault(_milestonePrivacy);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevs_PM_Components.push({
                hook: 'pm_discuss_form',
                component: 'pm_discuss_privacy_field',
                property: _discussPrivacy2.default
            });

// const TaskListPrivacy = resolve => {
//     require.ensure(['./task-list-privacy.vue'], () => {
            //         resolve(require('./task-list-privacy.vue'));
            //     });
// }

// const DiscussPrivacy = resolve => {
//     require.ensure(['./discuss-privacy.vue'], () => {
            //         resolve(require('./discuss-privacy.vue'));
            //     });
// }

            weDevs_PM_Components.push({
                hook: 'pm_task_list_form',
                component: 'pm_task_list_privacy_field',
                property: _taskListPrivacy2.default
            });

// const TaskPrivacy = resolve => {
//     require.ensure(['./task-privacy.vue'], () => {
            //         resolve(require('./task-privacy.vue'));
            //     });
// }

            weDevs_PM_Components.push({
                hook: 'pm_task_form',
                component: 'pm_task_privacy_field',
                property: _taskPrivacy2.default
            });

// const MilestonePrivacy = resolve => {
//     require.ensure(['./milestone-privacy.vue'], () => {
            //         resolve(require('./milestone-privacy.vue'));
            //     });
// }

            weDevs_PM_Components.push({
                hook: 'pm_milestone_form',
                component: 'pm_milestone_privacy_field',
                property: _milestonePrivacy2.default
            });

            /***/ }),
        /* 442 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_discuss_privacy_vue__ = __webpack_require__(130);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7eace9b3_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_discuss_privacy_vue__ = __webpack_require__(443);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_discuss_privacy_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7eace9b3_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_discuss_privacy_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/privacy/discuss-privacy.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-7eace9b3", Component.options)
                } else {
                    hotAPI.reload("data-v-7eace9b3", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 443 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm-make-privacy" }, [
                    _c("label", [
                        _c("input", {
                            directives: [
                                {
                                    name: "model",
                                    rawName: "v-model",
                                    value: _vm.privacy,
                                    expression: "privacy"
                                }
                            ],
                            attrs: { value: "yes", type: "checkbox" },
                            domProps: {
                                checked: Array.isArray(_vm.privacy)
                                    ? _vm._i(_vm.privacy, "yes") > -1
                                    : _vm.privacy
                            },
                            on: {
                                change: function($event) {
                                    var $$a = _vm.privacy,
                                        $$el = $event.target,
                                        $$c = $$el.checked ? true : false
                                    if (Array.isArray($$a)) {
                                        var $$v = "yes",
                                            $$i = _vm._i($$a, $$v)
                                        if ($$el.checked) {
                                            $$i < 0 && (_vm.privacy = $$a.concat([$$v]))
                                        } else {
                                            $$i > -1 &&
                                            (_vm.privacy = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))
                                        }
                                    } else {
                                        _vm.privacy = $$c
                                    }
                                }
                            }
                        }),
                        _vm._v("\n        " + _vm._s(_vm.__("Private", "pm-pro")) + "\n    ")
                    ])
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-7eace9b3", esExports)
                }
            }

            /***/ }),
        /* 444 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_task_list_privacy_vue__ = __webpack_require__(131);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_427d84b9_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_task_list_privacy_vue__ = __webpack_require__(445);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_task_list_privacy_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_427d84b9_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_task_list_privacy_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/privacy/task-list-privacy.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-427d84b9", Component.options)
                } else {
                    hotAPI.reload("data-v-427d84b9", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 445 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _vm.user_can("view_private_list")
                    ? _c("div", { staticClass: "item pm-make-privacy" }, [
                        _c("label", [
                            _c("input", {
                                directives: [
                                    {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.privacy,
                                        expression: "privacy"
                                    }
                                ],
                                attrs: { value: "yes", type: "checkbox" },
                                domProps: {
                                    checked: Array.isArray(_vm.privacy)
                                        ? _vm._i(_vm.privacy, "yes") > -1
                                        : _vm.privacy
                                },
                                on: {
                                    change: function($event) {
                                        var $$a = _vm.privacy,
                                            $$el = $event.target,
                                            $$c = $$el.checked ? true : false
                                        if (Array.isArray($$a)) {
                                            var $$v = "yes",
                                                $$i = _vm._i($$a, $$v)
                                            if ($$el.checked) {
                                                $$i < 0 && (_vm.privacy = $$a.concat([$$v]))
                                            } else {
                                                $$i > -1 &&
                                                (_vm.privacy = $$a
                                                    .slice(0, $$i)
                                                    .concat($$a.slice($$i + 1)))
                                            }
                                        } else {
                                            _vm.privacy = $$c
                                        }
                                    }
                                }
                            }),
                            _vm._v(
                                "\n        " +
                                _vm._s(_vm.__("Private", "pm-pro")) +
                                "           \n    "
                            )
                        ])
                    ])
                    : _vm._e()
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-427d84b9", esExports)
                }
            }

            /***/ }),
        /* 446 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_task_privacy_vue__ = __webpack_require__(132);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4c5db7d8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_task_privacy_vue__ = __webpack_require__(447);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_task_privacy_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4c5db7d8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_task_privacy_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/privacy/task-privacy.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-4c5db7d8", Component.options)
                } else {
                    hotAPI.reload("data-v-4c5db7d8", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 447 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _vm.user_can("view_private_task")
                    ? _c("div", { staticClass: "pm-make-privacy" }, [
                        _vm.privacy
                            ? _c("span", {
                                staticClass: "icon-pm-private",
                                attrs: { title: "Make Pbulic" },
                                on: {
                                    click: function($event) {
                                        $event.preventDefault()
                                        return _vm.onPrivate(false)
                                    }
                                }
                            })
                            : _vm._e(),
                        _vm._v(" "),
                        !_vm.privacy
                            ? _c("span", {
                                staticClass: "icon-pm-unlock",
                                attrs: { title: "Make Private" },
                                on: {
                                    click: function($event) {
                                        $event.preventDefault()
                                        return _vm.onPrivate(true)
                                    }
                                }
                            })
                            : _vm._e()
                    ])
                    : _vm._e()
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-4c5db7d8", esExports)
                }
            }

            /***/ }),
        /* 448 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_milestone_privacy_vue__ = __webpack_require__(133);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8125517a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_milestone_privacy_vue__ = __webpack_require__(449);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_milestone_privacy_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8125517a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_milestone_privacy_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/privacy/milestone-privacy.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-8125517a", Component.options)
                } else {
                    hotAPI.reload("data-v-8125517a", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 449 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _vm.user_can("view_private_milestone")
                    ? _c("div", { staticClass: "pm-make-privacy" }, [
                        _c("label", [
                            _c("input", {
                                directives: [
                                    {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.privacy,
                                        expression: "privacy"
                                    }
                                ],
                                attrs: { value: "yes", type: "checkbox" },
                                domProps: {
                                    checked: Array.isArray(_vm.privacy)
                                        ? _vm._i(_vm.privacy, "yes") > -1
                                        : _vm.privacy
                                },
                                on: {
                                    change: function($event) {
                                        var $$a = _vm.privacy,
                                            $$el = $event.target,
                                            $$c = $$el.checked ? true : false
                                        if (Array.isArray($$a)) {
                                            var $$v = "yes",
                                                $$i = _vm._i($$a, $$v)
                                            if ($$el.checked) {
                                                $$i < 0 && (_vm.privacy = $$a.concat([$$v]))
                                            } else {
                                                $$i > -1 &&
                                                (_vm.privacy = $$a
                                                    .slice(0, $$i)
                                                    .concat($$a.slice($$i + 1)))
                                            }
                                        } else {
                                            _vm.privacy = $$c
                                        }
                                    }
                                }
                            }),
                            _vm._v(
                                "\n        " +
                                _vm._s(_vm.__("Private", "pm-pro")) +
                                "            \n    "
                            )
                        ])
                    ])
                    : _vm._e()
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-8125517a", esExports)
                }
            }

            /***/ }),
        /* 450 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _erpDepartment = __webpack_require__(451);

            var _erpDepartment2 = _interopRequireDefault(_erpDepartment);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            if (typeof PM_Pro_Vars.wperp !== 'undefined' && PM_Pro_Vars.wperp == '1') {
                weDevs_PM_Components.push({
                    hook: 'pm_project_form',
                    component: 'pm_project_department_form_field',
                    property: _erpDepartment2.default
                });
            }

            /***/ }),
        /* 451 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_erp_department_vue__ = __webpack_require__(134);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b391b964_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_erp_department_vue__ = __webpack_require__(454);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(452)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_erp_department_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b391b964_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_erp_department_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/erp-department/erp-department.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-b391b964", Component.options)
                } else {
                    hotAPI.reload("data-v-b391b964", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 452 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(453);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("31605429", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b391b964\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./erp-department.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b391b964\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./erp-department.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 453 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-project-form .project-department label {\n  line-height: 1.2;\n  display: inline-block;\n  margin-bottom: 5px;\n}\n", ""]);

// exports


            /***/ }),
        /* 454 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm-form-item item project-department" }, [
                    _c("label", [
                        _vm._v(_vm._s(_vm.__("Assign co-worker from departments", "pm")))
                    ]),
                    _vm._v(" "),
                    _c(
                        "select",
                        {
                            directives: [
                                {
                                    name: "model",
                                    rawName: "v-model",
                                    value: _vm.department_id,
                                    expression: "department_id"
                                }
                            ],
                            on: {
                                change: [
                                    function($event) {
                                        var $$selectedVal = Array.prototype.filter
                                            .call($event.target.options, function(o) {
                                                return o.selected
                                            })
                                            .map(function(o) {
                                                var val = "_value" in o ? o._value : o.value
                                                return val
                                            })
                                        _vm.department_id = $event.target.multiple
                                            ? $$selectedVal
                                            : $$selectedVal[0]
                                    },
                                    _vm.departmentChange
                                ]
                            }
                        },
                        [
                            _c("option", { domProps: { value: 0 } }, [
                                _vm._v("- Select Department -")
                            ]),
                            _vm._v(" "),
                            _vm._l(_vm.departments, function(department) {
                                return _c(
                                    "option",
                                    { key: department.id, domProps: { value: department.id } },
                                    [_vm._v(_vm._s(department.title))]
                                )
                            })
                        ],
                        2
                    )
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-b391b964", esExports)
                }
            }

            /***/ }),
        /* 455 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _searchAll = __webpack_require__(456);

            var _searchAll2 = _interopRequireDefault(_searchAll);

            var _projectSearch = __webpack_require__(461);

            var _projectSearch2 = _interopRequireDefault(_projectSearch);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevsPmProRegisterModule("search", 'search');

            weDevs_PM_Components.push({
                hook: 'pm_projects_header',
                component: 'pm_search_all',
                property: _searchAll2.default
            });

            weDevs_PM_Components.push({
                hook: 'pm_project_header',
                component: 'pm_search_project',
                property: _projectSearch2.default
            });

            /***/ }),
        /* 456 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_search_all_vue__ = __webpack_require__(135);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_28255422_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_search_all_vue__ = __webpack_require__(460);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(457)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_search_all_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_28255422_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_search_all_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/search/search-all.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-28255422", Component.options)
                } else {
                    hotAPI.reload("data-v-28255422", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 457 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(458);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("d61a1cb2", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-28255422\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./search-all.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-28255422\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./search-all.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 458 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-project-search {\n  position: relative;\n  display: flex;\n  justify-content: flex-start;\n}\n.pm-project-search .pm-search {\n  width: 268px !important;\n  height: 30px !important;\n  border-radius: 3px !important;\n  padding-right: 36px !important;\n}\n.pm-project-search .icon-pm-search {\n  position: absolute;\n  right: 13px;\n  top: 8px;\n}\n@media screen and (max-width: 480px) {\n.pm-project-search .pm-search {\n    width: 150px !important;\n}\n}\n", ""]);

// exports


            /***/ }),
        /* 459 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var SearchByClient = {
                init: function init(el, binding, vnode) {
                    $ = jQuery;
                    var pm_abort;
                    var context = vnode.context;

                    $(el).autocomplete({
                        minLength: 3,
                        source: function source(request, response) {
                            var args = {
                                conditions: {
                                    query: request.term
                                },
                                callback: function callback(res) {
                                    response(res);
                                }
                            };

                            if (pm_abort) {
                                pm_abort.abort();
                            }
                            pm_abort = context.get_search_user_project(args);
                        },

                        search: function search() {
                            $(this).addClass('pm-spinner');
                        },

                        open: function open() {
                            var self = $(this);
                            self.autocomplete('widget').css('z-index', 999999);
                            self.removeClass('pm-spinner');
                            return false;
                        },

                        select: function select(event, ui) {
                            var self = $(this);
                            self.removeClass('pm-spinner');
                            return false;
                        }

                    }).data("ui-autocomplete")._renderItem = function (ul, item) {
                        if (item.no_result) {
                            return $("<li class='pm-search-item-li'>").append('<div class="pm-search-item"><strong>' + item.no_result + '</strong></div>').appendTo(ul);
                        } else {
                            return $("<li class='pm-search-item-li'>").append('<div class="pm-search-item"><a class="pm-link" href=' + SearchByClient.url(context, item.id) + ' >' + item.title + '</a></div>').appendTo(ul);
                        }
                    };
                },
                url: function url(context, project_id) {
                    return context.$router.resolve({ name: 'pm_overview', params: { project_id: project_id } }).href;
                }
            };

            var SearchAll = {
                init: function init(el, binding, vnode) {
                    var $ = jQuery;
                    var pm_abort;
                    var context = vnode.context;

                    $(el).autocomplete({
                        minLength: 3,
                        source: function source(request, response) {
                            var args = {
                                conditions: {
                                    query: request.term
                                },
                                callback: function callback(res) {
                                    response(res);
                                }
                            };

                            if (pm_abort) {
                                pm_abort.abort();
                            }
                            pm_abort = context.search_all(args);
                        },

                        search: function search() {
                            $(this).addClass('pm-spinner');
                        },

                        open: function open() {
                            var self = $(this);
                            self.autocomplete('widget').css('z-index', 999999);
                            self.removeClass('pm-spinner');
                            return false;
                        },

                        select: function select(event, ui) {
                            var self = $(this);
                            self.removeClass('pm-spinner');
                            return false;
                        }

                    }).data("ui-autocomplete")._renderItem = function (ul, item) {
                        var no_project = context.__('No project found !', 'pm-pro');
                        if (item.no_result) {
                            return $("<li class='pm-search-item-li'>").append('<div class="pm-search-item"><strong>' + item.no_result + '</strong></div>').appendTo(ul);
                        } else {
                            return $("<li class='pm-search-item-li'>").append('<a class="pm-link" href=' + context.ResultItemUrl(item) + ' ><div class="pm-search-item"><strong>' + item.type.replace('_', ' ') + ':</strong>' + item.title + '</div></a>').appendTo(ul);
                        }
                    };
                }
            };

            var SearchProject = {
                init: function init(el, binding, vnode) {
                    var $ = jQuery;
                    var pm_abort;
                    var context = vnode.context;

                    $(el).autocomplete({
                        minLength: 3,
                        source: function source(request, response) {
                            context.loadding = true;
                            var args = {
                                conditions: {
                                    query: request.term
                                },
                                callback: function callback(res) {
                                    context.$store.commit('Search/serResults', res);
                                    context.loadding = false;
                                    response(res);
                                }
                            };

                            if (pm_abort) {
                                pm_abort.abort();
                            }
                            pm_abort = context.search_all(args);
                        }

                    });
                }
            };
// Register a global custom directive called v-pm-popup-box
            pm.Vue.directive('pm-search-client', {
                inserted: function inserted(el, binding, vnode) {
                    SearchByClient.init(el, binding, vnode);
                }
            });

            pm.Vue.directive('pm-search-all', {
                inserted: function inserted(el, binding, vnode) {
                    SearchAll.init(el, binding, vnode);
                }
            });

            pm.Vue.directive('pm-search-project', {
                inserted: function inserted(el, binding, vnode) {
                    SearchProject.init(el, binding, vnode);
                }
            });

            /***/ }),
        /* 460 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "pm-project-search" }, [
                    _c(
                        "form",
                        {
                            staticClass: "pm-search-form",
                            attrs: { action: "#", method: "get" },
                            on: {
                                submit: function($event) {
                                    $event.preventDefault()
                                }
                            }
                        },
                        [
                            _c("div", { staticClass: "pm-form-has-addon pm-project-search" }, [
                                _c("input", {
                                    directives: [{ name: "pm-search-all", rawName: "v-pm-search-all" }],
                                    staticClass: "pm-search pm-form-control",
                                    attrs: { type: "text", placeholder: _vm.search_all_text }
                                }),
                                _vm._v(" "),
                                _c(
                                    "button",
                                    {
                                        staticClass: "pm-submit-btn",
                                        attrs: { type: "button" },
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                            }
                                        }
                                    },
                                    [
                                        _c("i", {
                                            staticClass: "pm-icon flaticon-magnifying-glass-browser"
                                        })
                                    ]
                                )
                            ])
                        ]
                    )
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-28255422", esExports)
                }
            }

            /***/ }),
        /* 461 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_search_vue__ = __webpack_require__(137);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3f9e97fc_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_search_vue__ = __webpack_require__(466);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(462)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_search_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3f9e97fc_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_search_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/search/project-search.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-3f9e97fc", Component.options)
                } else {
                    hotAPI.reload("data-v-3f9e97fc", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 462 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(463);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("77809e39", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-3f9e97fc\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./project-search.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-3f9e97fc\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./project-search.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 463 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-search-project {\n  position: relative;\n}\n.pm-search-project .project-search-box {\n  position: relative;\n  top: 0;\n}\n.pm-search-project .project-search-box .pm-search-field input {\n  width: 288px !important;\n  height: 30px !important;\n  border-radius: 3px;\n  padding-right: 50px !important;\n}\n.pm-search-project .project-search-box .pm-search-field input:focus {\n  box-shadow: none;\n}\n.pm-search-project .project-search-box .pm-search-field a.select-box-icon {\n  position: absolute;\n  top: 5px;\n  right: 8px;\n  font-size: 9px;\n}\n.pm-search-project .project-search-box .pm-search-field a.select-box-icon .icon-pm-search {\n  font-size: 12px;\n}\n.pm-search-project .result-box {\n  background: #ffffff;\n  position: absolute;\n  top: 29px;\n  right: 0px;\n  z-index: 99;\n  padding: 10px 0px !important;\n  border: 1px solid #E2E2E2;\n  width: 288px;\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n  box-shadow: 0px 2px 40px 0px rgba(214, 214, 214, 0.6);\n}\n.pm-search-project .result-box ul.item-select {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 0px 3px !important;\n}\n.pm-search-project .result-box ul.item-select li {\n  display: inline-block;\n  font-family: Arial, Helvetica, sans-serif;\n  padding: 0px 5px;\n  color: #7A8186;\n  cursor: pointer;\n  border: 1px solid #E2E2E2;\n  font-size: 10px;\n  margin: 0px 7px;\n  border-radius: 3px;\n  background: #FBFBFB;\n}\n.pm-search-project .result-box ul.item-select li input {\n  display: none;\n}\n.pm-search-project .result-box ul.item-select li.selected {\n  border: 1px solid #1A9ED4;\n  color: #1A9ED4;\n}\n.pm-search-project .result-box .psrb-inner {\n  margin-top: 5px;\n  max-height: 300px;\n  overflow-y: scroll;\n  padding: 10px;\n}\n.pm-search-project .result-box .psrb-inner .search-model-title {\n  font-size: 14px;\n  color: #1A9ED4;\n  padding: 5px 5px;\n  display: block;\n  font-weight: normal;\n  line-height: 1;\n  font-family: Arial, Helvetica, sans-serif;\n}\n.pm-search-project .result-box .psrb-inner ul {\n  display: block;\n  overflow: hidden;\n}\n.pm-search-project .result-box .psrb-inner ul li {\n  display: block;\n  margin: 0;\n}\n.pm-search-project .result-box .psrb-inner ul li a {\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 13px;\n  color: #000000;\n  text-decoration: none;\n  display: block;\n  padding: 3px 0px;\n  line-height: 1.3;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n.pm-search-project .result-box .psrb-inner ul li a span {\n  padding: 2px 5px;\n  vertical-align: middle;\n}\n.pm-search-project .result-box .psrb-inner ul li a:hover {\n  color: #1A9ED4;\n}\n.pm-search-project .result-box .psrb-inner .noResult {\n  padding: 10px;\n  font-size: 17px;\n  text-align: center;\n  color: #bbb;\n}\n.pm-search-project .result-box.not-loaded .psrb-inner {\n  padding: 0 !important;\n  margin: 0 !important;\n}\n", ""]);

// exports


            /***/ }),
        /* 464 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_template_compiler_index_id_data_v_59cedcd1_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_search_loading_effect_vue__ = __webpack_require__(465);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */
            var __vue_script__ = null
            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __vue_script__,
                __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_template_compiler_index_id_data_v_59cedcd1_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_search_loading_effect_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/search/search-loading-effect.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-59cedcd1", Component.options)
                } else {
                    hotAPI.reload("data-v-59cedcd1", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 465 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "vue-content-loading",
                    _vm._b(
                        {
                            staticStyle: { "flex-grow": "1", padding: "10px" },
                            attrs: { width: 100, height: 50 }
                        },
                        "vue-content-loading",
                        _vm.$attrs,
                        false
                    ),
                    [
                        _c("rect", {
                            attrs: { x: "0", y: "1", rx: "0", ry: "0", width: "90", height: "5" }
                        }),
                        _vm._v(" "),
                        _c("rect", {
                            attrs: { x: "0", y: "8", rx: "0", ry: "0", width: "70", height: "5" }
                        }),
                        _vm._v(" "),
                        _c("rect", {
                            attrs: { x: "0", y: "22", rx: "0", ry: "0", width: "90", height: "5" }
                        }),
                        _vm._v(" "),
                        _c("rect", {
                            attrs: { x: "0", y: "28", rx: "0", ry: "0", width: "70", height: "5" }
                        }),
                        _vm._v(" "),
                        _c("rect", {
                            attrs: { x: "0", y: "40", rx: "0", ry: "0", width: "90", height: "5" }
                        })
                    ]
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-59cedcd1", esExports)
                }
            }

            /***/ }),
        /* 466 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    {
                        staticClass: "pm-search-project",
                        class: [_vm.resultbox ? "result" : ""]
                    },
                    [
                        _c(
                            "div",
                            {
                                directives: [
                                    {
                                        name: "pm-click-outside",
                                        rawName: "v-pm-click-outside",
                                        value: _vm.closeResultBox,
                                        expression: "closeResultBox"
                                    }
                                ],
                                staticClass: "project-search-box"
                            },
                            [
                                _c("div", { staticClass: "pm-search-field" }, [
                                    _c("input", {
                                        directives: [
                                            {
                                                name: "model",
                                                rawName: "v-model",
                                                value: _vm.searachContent,
                                                expression: "searachContent"
                                            }
                                        ],
                                        attrs: { type: "text", placeholder: _vm.search_all_text },
                                        domProps: { value: _vm.searachContent },
                                        on: {
                                            keyup: function($event) {
                                                return _vm.searchproject($event)
                                            },
                                            click: function($event) {
                                                $event.preventDefault()
                                                _vm.resultbox = true
                                            },
                                            input: function($event) {
                                                if ($event.target.composing) {
                                                    return
                                                }
                                                _vm.searachContent = $event.target.value
                                            }
                                        }
                                    }),
                                    _vm._v(" "),
                                    _c("a", { staticClass: "select-box-icon" }, [
                                        _vm.resultbox
                                            ? _c("span", {
                                                staticClass: "icon-pm-cross",
                                                on: {
                                                    click: function($event) {
                                                        $event.preventDefault()
                                                        _vm.resultbox = false
                                                    }
                                                }
                                            })
                                            : _c("span", { staticClass: "icon-pm-search" })
                                    ])
                                ]),
                                _vm._v(" "),
                                _vm.resultbox
                                    ? _c(
                                        "div",
                                        { staticClass: "result-box", class: _vm.resultClass },
                                        [
                                            _c(
                                                "ul",
                                                { staticClass: "item-select" },
                                                _vm._l(_vm.searchItems, function(item) {
                                                    return _c(
                                                        "li",
                                                        {
                                                            key: item.key,
                                                            class: [_vm.isItemSelect(item) ? "selected" : ""]
                                                        },
                                                        [
                                                            _c("label", [
                                                                _c("input", {
                                                                    directives: [
                                                                        {
                                                                            name: "model",
                                                                            rawName: "v-model",
                                                                            value: _vm.selectItems,
                                                                            expression: "selectItems"
                                                                        }
                                                                    ],
                                                                    attrs: { type: "checkbox" },
                                                                    domProps: {
                                                                        value: item,
                                                                        checked: Array.isArray(_vm.selectItems)
                                                                            ? _vm._i(_vm.selectItems, item) > -1
                                                                            : _vm.selectItems
                                                                    },
                                                                    on: {
                                                                        change: function($event) {
                                                                            var $$a = _vm.selectItems,
                                                                                $$el = $event.target,
                                                                                $$c = $$el.checked ? true : false
                                                                            if (Array.isArray($$a)) {
                                                                                var $$v = item,
                                                                                    $$i = _vm._i($$a, $$v)
                                                                                if ($$el.checked) {
                                                                                    $$i < 0 &&
                                                                                    (_vm.selectItems = $$a.concat([$$v]))
                                                                                } else {
                                                                                    $$i > -1 &&
                                                                                    (_vm.selectItems = $$a
                                                                                        .slice(0, $$i)
                                                                                        .concat($$a.slice($$i + 1)))
                                                                                }
                                                                            } else {
                                                                                _vm.selectItems = $$c
                                                                            }
                                                                        }
                                                                    }
                                                                }),
                                                                _vm._v(" " + _vm._s(item.value))
                                                            ])
                                                        ]
                                                    )
                                                }),
                                                0
                                            ),
                                            _vm._v(" "),
                                            _vm.loading
                                                ? _c("search-loading-effict")
                                                : _c("div", { staticClass: "psrb-inner" }, [
                                                    _c(
                                                        "div",
                                                        { staticClass: "item-outer" },
                                                        [
                                                            _vm._l(_vm.selectItems, function(model) {
                                                                return model.results.length
                                                                    ? _c(
                                                                        "div",
                                                                        {
                                                                            key: model.key,
                                                                            staticClass: "psrb-item"
                                                                        },
                                                                        [
                                                                            _c(
                                                                                "strong",
                                                                                { staticClass: "search-model-title" },
                                                                                [_vm._v(_vm._s(model.value))]
                                                                            ),
                                                                            _vm._v(" "),
                                                                            _c(
                                                                                "ul",
                                                                                _vm._l(model.results, function(result) {
                                                                                    return _c("li", { key: result.id }, [
                                                                                        _c(
                                                                                            "a",
                                                                                            {
                                                                                                attrs: {
                                                                                                    href: _vm.ResultItemUrl(
                                                                                                        result
                                                                                                    ),
                                                                                                    target: "_blank"
                                                                                                }
                                                                                            },
                                                                                            [
                                                                                                _c("span", {
                                                                                                    staticClass:
                                                                                                        "icon-pm-incomplete"
                                                                                                }),
                                                                                                _vm._v(
                                                                                                    " " + _vm._s(result.title)
                                                                                                )
                                                                                            ]
                                                                                        )
                                                                                    ])
                                                                                }),
                                                                                0
                                                                            )
                                                                        ]
                                                                    )
                                                                    : _vm._e()
                                                            }),
                                                            _vm._v(" "),
                                                            _vm.noResults && _vm.allLoaded
                                                                ? _c("div", { staticClass: "noResult" }, [
                                                                    _vm._v(
                                                                        " " +
                                                                        _vm._s(
                                                                            _vm.__("No result found", "pm-pro")
                                                                        ) +
                                                                        " "
                                                                    )
                                                                ])
                                                                : _vm._e()
                                                        ],
                                                        2
                                                    )
                                                ])
                                        ],
                                        1
                                    )
                                    : _vm._e()
                            ]
                        )
                    ]
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-3f9e97fc", esExports)
                }
            }

            /***/ }),
        /* 467 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _label = __webpack_require__(468);

            var _label2 = _interopRequireDefault(_label);

            var _inTask = __webpack_require__(473);

            var _inTask2 = _interopRequireDefault(_inTask);

            var _singleInTask = __webpack_require__(477);

            var _singleInTask2 = _interopRequireDefault(_singleInTask);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevs_PM_Components.push({
                hook: 'pm_task_form',
                component: 'pm_task_label',
                property: _label2.default
            });

            weDevs_PM_Components.push({
                hook: 'task_inline',
                component: 'pm-pro-in-task-label',
                property: _inTask2.default
            });

            weDevs_PM_Components.push({
                hook: 'completed-task_inline',
                component: 'pm-pro-completed-in-task-label',
                property: _inTask2.default
            });

            weDevs_PM_Components.push({
                hook: 'single_task_tools',
                component: 'pm-pro-in-single-task-label',
                property: _singleInTask2.default
            });

// window.wedevsPMTaskLabel = [];

// wp.hooks.addFilter(
//     'before_task_save',
//     'wedevsPMTaskLabel',

//     function(task) {


//         return task;
//     }
// );

            /***/ }),
        /* 468 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_label_vue__ = __webpack_require__(138);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_53680e7c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_label_vue__ = __webpack_require__(472);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(469)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_label_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_53680e7c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_label_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/task-label/label.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-53680e7c", Component.options)
                } else {
                    hotAPI.reload("data-v-53680e7c", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 469 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(470);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("708a4490", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-53680e7c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./label.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-53680e7c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./label.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 470 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.tooltip[x-placement^=\"bottom\"] .tooltip-arrow {\n  border-color: transparent;\n}\n.tooltip[x-placement^=\"bottom\"] .tooltip-arrow::before {\n  border-color: transparent transparent #DDDDDD transparent;\n  border-style: solid;\n  left: -8px;\n  position: absolute;\n  content: \"\";\n  top: -8px;\n  z-index: 9999;\n  border-width: 0 8px 8px 8px;\n}\n.tooltip[x-placement^=\"bottom\"] .tooltip-arrow::after {\n  border-color: transparent transparent #ffffff transparent;\n  border-style: solid;\n  left: -8px;\n  content: \"\";\n  position: absolute;\n  top: -6px;\n  z-index: 9999;\n  border-width: 0 8px 8px 8px;\n}\n.tooltip[x-placement^=\"top\"] .tooltip-arrow {\n  border-color: transparent;\n}\n.tooltip[x-placement^=\"top\"] .tooltip-arrow::before {\n  border-color: #DDDDDD transparent transparent transparent;\n  border-style: solid;\n  left: -6px;\n  position: absolute;\n  content: \"\";\n  bottom: 4px;\n  z-index: 9999;\n  border-width: 8px 8px 0px 8px;\n}\n.tooltip[x-placement^=\"top\"] .tooltip-arrow::after {\n  border-color: #ffffff transparent transparent transparent;\n  border-style: solid;\n  bottom: 6px;\n  left: -6px;\n  content: \"\";\n  position: absolute;\n  z-index: 9999;\n  border-width: 8px 8px 0px 8px;\n}\n.task-label-control {\n  margin-left: 7px;\n}\n.task-label-control span.icon-pm-tag:hover:before {\n  color: #000;\n}\n.task-label-control .v-popover .trigger {\n  display: block !important;\n}\n.tooltip.popover {\n  top: 6px;\n}\n.tooltip.popover .popover-inner {\n  top: -6px;\n  background: #fff;\n  padding: 5px;\n  box-shadow: 0px 2px 40px 0px rgba(214, 214, 214, 0.6);\n  border: 1px solid #DDDDDD;\n}\n.tooltip.popover .popover-inner .pm-label-content .color-slot .color-box {\n  padding: 2px 10px;\n  margin: 0 0 4px;\n  width: auto;\n  border-radius: 3px;\n  font-size: 12px;\n  font-weight: 300;\n  min-height: 20px;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.tooltip.popover .popover-inner .pm-label-content .color-slot .color-box .label-title {\n  margin-right: 10px;\n}\n.tooltip.popover .popover-inner .pm-label-content .color-slot .color-box .color-selected-icon {\n  position: relative;\n  left: -9999px;\n}\n.tooltip.popover .popover-inner .pm-label-content .color-slot .color-box .icon-right {\n  left: 0px;\n}\n.tooltip.popover .popover-inner .pm-label-content .color-slot .color-box .icon-right:before {\n  color: #fff;\n}\n.tooltip.popover .popover-inner .pm-label-content .elements-wrap .label-wrap:last-child .color-box {\n  margin-bottom: 0px;\n}\n", ""]);

// exports


            /***/ }),
        /* 471 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    { staticClass: "elements-wrap" },
                    _vm._l(_vm.labels, function(label) {
                        return _c("div", { staticClass: "label-wrap" }, [
                            _c("div", { staticClass: "color-slot" }, [
                                _c(
                                    "a",
                                    {
                                        staticClass: "color-box",
                                        style: "background: " + label.color + ";",
                                        attrs: { href: "#" },
                                        on: {
                                            click: function($event) {
                                                $event.preventDefault()
                                                return _vm.selectForStore(label)
                                            }
                                        }
                                    },
                                    [
                                        _c("span", { staticClass: "label-title" }, [
                                            _vm._v(_vm._s(_vm.ucfirst(label.title)))
                                        ]),
                                        _vm._v(" "),
                                        _c("span", {
                                            class:
                                                "color-selected-icon icon-pm-incomplete" +
                                                _vm.isSelected(label)
                                        })
                                    ]
                                )
                            ])
                        ])
                    }),
                    0
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-00aaab19", esExports)
                }
            }

            /***/ }),
        /* 472 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return !_vm.calendarView
                    ? _c(
                        "div",
                        { staticClass: "task-label-control" },
                        [
                            _c(
                                "a",
                                {
                                    attrs: { href: "#" },
                                    on: {
                                        click: function($event) {
                                            $event.preventDefault()
                                            return _vm.showHideLabel()
                                        }
                                    }
                                },
                                [_c("span", { staticClass: "icon-pm-tag" })]
                            ),
                            _vm._v(" "),
                            _vm.isThisTaskLabelActive
                                ? _c(
                                    "v-popover",
                                    {
                                        class: "pm-pro-task-label-popover-" + _vm.listId,
                                        attrs: {
                                            trigger: "manual",
                                            open: true,
                                            offset: "16",
                                            "auto-hide": false
                                        }
                                    },
                                    [
                                        _c(
                                            "template",
                                            { staticClass: "pm-pro-label-popover", slot: "popover" },
                                            [
                                                _c(
                                                    "div",
                                                    {
                                                        staticClass:
                                                            "pm-label-triangle pm-pro-task-label-conten"
                                                    },
                                                    [
                                                        _c(
                                                            "div",
                                                            { staticClass: "pm-label-content" },
                                                            [
                                                                _c("label-elements", {
                                                                    attrs: {
                                                                        listId: parseInt(_vm.listId),
                                                                        taskId: parseInt(_vm.taskId),
                                                                        labels: _vm.taskLabels,
                                                                        storeTaskLabel: _vm.storeTaskLabel
                                                                    },
                                                                    on: { onSelect: _vm.onSelect }
                                                                }),
                                                                _vm._v(" "),
                                                                !_vm.taskLabels.length
                                                                    ? _c("div", [
                                                                        _vm._v(
                                                                            _vm._s(
                                                                                _vm.__("No label found!", "pm-pro")
                                                                            )
                                                                        )
                                                                    ])
                                                                    : _vm._e()
                                                            ],
                                                            1
                                                        )
                                                    ]
                                                )
                                            ]
                                        )
                                    ],
                                    2
                                )
                                : _vm._e()
                        ],
                        1
                    )
                    : _vm._e()
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-53680e7c", esExports)
                }
            }

            /***/ }),
        /* 473 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_in_task_vue__ = __webpack_require__(141);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a13a0e0a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_in_task_vue__ = __webpack_require__(476);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(474)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_in_task_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a13a0e0a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_in_task_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/task-label/in-task.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-a13a0e0a", Component.options)
                } else {
                    hotAPI.reload("data-v-a13a0e0a", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 474 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(475);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("70fe089b", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-a13a0e0a\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./in-task.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-a13a0e0a\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./in-task.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 475 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.task-label {\n  display: flex;\n  align-items: center;\n  position: relative;\n  top: -4px;\n}\n.task-label .label-color {\n  border-radius: 2px;\n  box-shadow: inset 0 -1px 0 rgba(27, 31, 35, 0.12);\n  font-size: 10px;\n  font-weight: 400;\n  /* height: 20px; */\n  line-height: 10px;\n  padding: 0.3em 4px;\n  color: #fff;\n  white-space: nowrap;\n  text-transform: uppercase;\n}\n.task-label .label-block {\n  margin-right: 5px;\n}\n", ""]);

// exports


            /***/ }),
        /* 476 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    { staticClass: "task-label task-activity" },
                    _vm._l(_vm.actionData.task.labels.data, function(label) {
                        return _c("div", { staticClass: "label-block" }, [
                            _c(
                                "div",
                                { staticClass: "label-color", style: "background:" + label.color },
                                [_vm._v(_vm._s(label.title))]
                            )
                        ])
                    }),
                    0
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-a13a0e0a", esExports)
                }
            }

            /***/ }),
        /* 477 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_in_task_vue__ = __webpack_require__(142);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1f0b12ca_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_in_task_vue__ = __webpack_require__(484);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(478)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_in_task_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1f0b12ca_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_in_task_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/task-label/single-in-task.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-1f0b12ca", Component.options)
                } else {
                    hotAPI.reload("data-v-1f0b12ca", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 478 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(479);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("02416e59", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1f0b12ca\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-in-task.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1f0b12ca\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-in-task.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 479 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.popover-inner {\n  padding: 5px 8px 4px !important;\n  background: #f1f1f1 !important;\n}\n.popover-arrow {\n  border-color: #f1f1f1 !important;\n}\n.single-task-label .process-text-wrap .slot-wrap {\n  display: flex;\n  align-items: center;\n}\n.single-task-label .process-results.labels {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-left: 5px;\n  cursor: pointer;\n}\n.single-task-label .process-results.labels .label-block {\n  position: relative;\n}\n.single-task-label .process-results.labels .label-block:hover > .cross {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.single-task-label .process-results.labels .label-block .cross {\n  display: none;\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  background: #cf513d;\n  border-radius: 2px;\n  cursor: pointer;\n}\n.single-task-label .process-results.labels .label-block .cross svg {\n  fill: #fff;\n  height: 10px;\n  width: 10px;\n}\n.single-task-label .pm-popper .pm-pro-label-elements {\n  min-width: 140px;\n  padding: 5px 8px 4px !important;\n  background: #f1f1f1 !important;\n}\n.single-task-label .pm-popper .popper__arrow {\n  z-index: -1;\n}\n.single-task-label .pm-popper[x-placement^=\"top\"] .popper__arrow {\n  z-index: -1;\n  border-color: transparent transparent transparent transparent !important;\n}\n.single-task-label .pm-popper[x-placement^=\"top\"] .popper__arrow:after {\n  border-color: #f1f1f1 transparent transparent transparent;\n}\n.single-task-label .pm-popper[x-placement^=\"bottom\"] .popper__arrow {\n  z-index: -1;\n  border-color: transparent transparent transparent transparent !important;\n}\n.single-task-label .pm-popper[x-placement^=\"bottom\"] .popper__arrow:after {\n  border-color: transparent transparent #f1f1f1 transparent;\n}\n.single-task-label .icon-pm-tag {\n  cursor: pointer;\n}\n.single-task-label .label-color {\n  border-radius: 2px;\n  box-shadow: inset 0 -1px 0 rgba(27, 31, 35, 0.12);\n  font-size: 12px;\n  font-weight: 400;\n  /* height: 20px; */\n  line-height: 10px;\n  padding: 0.3em 4px;\n  color: #fff;\n  white-space: nowrap;\n}\n.single-task-label .label-block {\n  margin-right: 5px;\n}\n.single-task-label .label-block:last-child {\n  margin-right: 0;\n}\n", ""]);

// exports


            /***/ }),
        /* 480 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_element_vue__ = __webpack_require__(143);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_52c6416c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_element_vue__ = __webpack_require__(483);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(481)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_element_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_52c6416c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_element_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/task-label/element.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-52c6416c", Component.options)
                } else {
                    hotAPI.reload("data-v-52c6416c", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 481 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(482);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("433848de", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-52c6416c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./element.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-52c6416c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./element.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 482 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.label-wrap {\n  margin-bottom: 3px;\n}\n.label-wrap .color-box {\n  border-radius: 3px;\n  padding: 1px 6px;\n  display: flex;\n  align-items: center;\n  font-size: 11px;\n}\n.label-wrap .color-box .label-title {\n  flex: 1;\n  margin-right: 5px;\n}\n", ""]);

// exports


            /***/ }),
        /* 483 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "label-wrap" }, [
                    _c(
                        "a",
                        {
                            staticClass: "color-box",
                            style: {
                                background: _vm.label.color,
                                color: _vm.getTextColor(_vm.label.color)
                            },
                            attrs: { href: "#" },
                            on: {
                                click: function($event) {
                                    $event.preventDefault()
                                    return _vm.selectForStore(_vm.label)
                                }
                            }
                        },
                        [
                            _c("span", { staticClass: "label-title" }, [
                                _vm._v(_vm._s(_vm.ucfirst(_vm.label.title)))
                            ]),
                            _vm._v(" "),
                            _c("span", {
                                class: "color-selected-icon " + _vm.isSelected(_vm.label)
                            })
                        ]
                    )
                ])
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-52c6416c", esExports)
                }
            }

            /***/ }),
        /* 484 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _obj
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "single-task-label context" }, [
                    _c("h3", { staticClass: "label" }, [
                        _vm._v(_vm._s(_vm.__("Label", "wedevs-project-manager")))
                    ]),
                    _vm._v(" "),
                    _c(
                        "div",
                        {
                            class: _vm.classnames(
                                ((_obj = {}),
                                    (_obj["process-1"] = !_vm.actionData.task.labels.data.length),
                                    (_obj["data-active"] = _vm.actionData.task.labels.data.length),
                                    _obj)
                            )
                        },
                        [
                            _c(
                                "div",
                                { staticClass: "process-text-wrap" },
                                [
                                    _vm.has_task_permission()
                                        ? _c(
                                            "pm-popper",
                                            { attrs: { trigger: "click", options: _vm.popperOptions() } },
                                            [
                                                _c("div", { staticClass: "pm-popper popper" }, [
                                                    _c(
                                                        "div",
                                                        { staticClass: "pm-pro-label-elements" },
                                                        [
                                                            _vm._l(_vm.taskLabels, function(label, index) {
                                                                return _vm.taskLabels.length
                                                                    ? _c("label-element", {
                                                                        key: index,
                                                                        attrs: {
                                                                            listId: _vm.listId,
                                                                            taskId: _vm.taskId,
                                                                            label: label,
                                                                            storeTaskLabel: _vm.storeTaskLabel
                                                                        },
                                                                        on: { onSelect: _vm.onSelect }
                                                                    })
                                                                    : _vm._e()
                                                            }),
                                                            _vm._v(" "),
                                                            !_vm.taskLabels.length
                                                                ? _c("div", [
                                                                    _c("span", [
                                                                        _vm._v(
                                                                            _vm._s(_vm.__("No label found!", "pm-pro"))
                                                                        )
                                                                    ])
                                                                ])
                                                                : _vm._e()
                                                        ],
                                                        2
                                                    )
                                                ]),
                                                _vm._v(" "),
                                                _c(
                                                    "div",
                                                    {
                                                        staticClass: "slot-wrap",
                                                        attrs: { slot: "reference" },
                                                        slot: "reference"
                                                    },
                                                    [
                                                        _c(
                                                            "a",
                                                            {
                                                                staticClass: "display-flex process-btn",
                                                                attrs: { href: "#" },
                                                                on: {
                                                                    click: function($event) {
                                                                        $event.preventDefault()
                                                                    }
                                                                }
                                                            },
                                                            [
                                                                _c(
                                                                    "i",
                                                                    {
                                                                        attrs: {
                                                                            title: _vm.__(
                                                                                "Add new label",
                                                                                "wedevs-project-manager"
                                                                            )
                                                                        }
                                                                    },
                                                                    [
                                                                        _c(
                                                                            "svg",
                                                                            {
                                                                                attrs: {
                                                                                    viewBox: "0 0 319 277",
                                                                                    version: "1.1",
                                                                                    xmlns: "http://www.w3.org/2000/svg",
                                                                                    "xmlns:xlink":
                                                                                        "http://www.w3.org/1999/xlink"
                                                                                }
                                                                            },
                                                                            [
                                                                                _c(
                                                                                    "g",
                                                                                    {
                                                                                        attrs: {
                                                                                            id: "Page-1",
                                                                                            stroke: "none",
                                                                                            "stroke-width": "1"
                                                                                        }
                                                                                    },
                                                                                    [
                                                                                        _c(
                                                                                            "g",
                                                                                            {
                                                                                                attrs: {
                                                                                                    id: "label",
                                                                                                    transform:
                                                                                                        "translate(170.500000, 138.500000) rotate(-105.000000) translate(-170.500000, -138.500000) translate(23.000000, -9.000000)"
                                                                                                }
                                                                                            },
                                                                                            [
                                                                                                _c("path", {
                                                                                                    attrs: {
                                                                                                        d:
                                                                                                            "M290.156,23.89 C289.674,13.579 281.423,5.328 271.112,4.846 L168.005,0.023 C162.385,-0.249 156.908,1.878 152.928,5.859 L5.858,152.93 C2.108,156.681 0,161.767 0,167.072 C0,172.377 2.107,177.464 5.858,181.215 L113.787,289.143 C117.691,293.048 122.81,295 127.929,295 C133.047,295 138.166,293.047 142.072,289.143 L289.141,142.074 C293.121,138.094 295.241,132.62 294.978,126.997 L290.156,23.89 Z M252.481,76.087 C243.212,85.356 228.183,85.356 218.914,76.087 C209.645,66.818 209.645,51.789 218.914,42.52 C228.183,33.251 243.212,33.251 252.481,42.52 C261.75,51.789 261.751,66.817 252.481,76.087 Z",
                                                                                                        id: "Shape"
                                                                                                    }
                                                                                                })
                                                                                            ]
                                                                                        )
                                                                                    ]
                                                                                )
                                                                            ]
                                                                        )
                                                                    ]
                                                                )
                                                            ]
                                                        ),
                                                        _vm._v(" "),
                                                        _vm.actionData.task.labels.data.length
                                                            ? _c(
                                                                "div",
                                                                { staticClass: "process-results labels" },
                                                                _vm._l(_vm.actionData.task.labels.data, function(
                                                                    label
                                                                ) {
                                                                    return _c(
                                                                        "div",
                                                                        { staticClass: "label-block" },
                                                                        [
                                                                            _c(
                                                                                "div",
                                                                                {
                                                                                    staticClass: "label-color single",
                                                                                    style: { background: label.color }
                                                                                },
                                                                                [
                                                                                    _vm._v(
                                                                                        "\n                                " +
                                                                                        _vm._s(_vm.ucfirst(label.title)) +
                                                                                        "\n                            "
                                                                                    )
                                                                                ]
                                                                            )
                                                                        ]
                                                                    )
                                                                }),
                                                                0
                                                            )
                                                            : _vm._e(),
                                                        _vm._v(" "),
                                                        !_vm.actionData.task.labels.data.length
                                                            ? _c("div", { staticClass: "helper-text" }, [
                                                                _vm._v(_vm._s(_vm.__("Add Label", "pm-pro")))
                                                            ])
                                                            : _vm._e()
                                                    ]
                                                )
                                            ]
                                        )
                                        : _vm._e(),
                                    _vm._v(" "),
                                    !_vm.has_task_permission()
                                        ? _c("div", [
                                            _vm.actionData.task.labels.data.length
                                                ? _c(
                                                    "div",
                                                    { staticClass: "process-results labels" },
                                                    _vm._l(_vm.actionData.task.labels.data, function(
                                                        label
                                                    ) {
                                                        return _c("div", { staticClass: "label-block" }, [
                                                            _c(
                                                                "div",
                                                                {
                                                                    staticClass: "label-color single",
                                                                    style: { background: label.color }
                                                                },
                                                                [
                                                                    _vm._v(
                                                                        "\n                            " +
                                                                        _vm._s(_vm.ucfirst(label.title)) +
                                                                        "\n                        "
                                                                    )
                                                                ]
                                                            )
                                                        ])
                                                    }),
                                                    0
                                                )
                                                : _vm._e(),
                                            _vm._v(" "),
                                            !_vm.actionData.task.labels.data.length
                                                ? _c("div", { staticClass: "process-results labels" }, [
                                                    _c("span", [
                                                        _vm._v(_vm._s(_vm.__("No label found!", "pm-pro")))
                                                    ])
                                                ])
                                                : _vm._e()
                                        ])
                                        : _vm._e()
                                ],
                                1
                            )
                        ]
                    ),
                    _vm._v(" "),
                    _vm.labelLoading
                        ? _c("div", { staticClass: "spinner-wrap" }, [_vm._m(0)])
                        : _vm._e()
                ])
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "task-tool-spinner" }, [
                        _c("div", { staticClass: "bounce1" }),
                        _vm._v(" "),
                        _c("div", { staticClass: "bounce2" }),
                        _vm._v(" "),
                        _c("div", { staticClass: "bounce3" })
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-1f0b12ca", esExports)
                }
            }

            /***/ }),
        /* 485 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            __webpack_require__(486);

            var _menu = __webpack_require__(495);

            var _menu2 = _interopRequireDefault(_menu);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevs_PM_Components.push({
                hook: 'pm-my-task-menu',
                component: 'pm-pro-my-task-menu',
                property: _menu2.default
            });

            /***/ }),
        /* 486 */
        /***/ (function(module, exports, __webpack_require__) {

            "use strict";


            var _reports = __webpack_require__(487);

            var _reports2 = _interopRequireDefault(_reports);

            function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

            weDevsPMRegisterChildrenRoute("my_tasks", [{
                path: 'reports',
                component: _reports2.default,
                name: 'mytask-reports'
            }]);

            /***/ }),
        /* 487 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_reports_vue__ = __webpack_require__(144);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c7e42664_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_reports_vue__ = __webpack_require__(494);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(488)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_reports_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c7e42664_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_reports_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/my-tasks/reports.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-c7e42664", Component.options)
                } else {
                    hotAPI.reload("data-v-c7e42664", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 488 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(489);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("2bd491dd", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-c7e42664\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./reports.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-c7e42664\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./reports.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 489 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-pro-my-task-reports .date-range {\n  float: right;\n}\n.pm-pro-my-task-reports .date-range input {\n  width: 230px;\n  padding: 18px 10px;\n}\n.pm-pro-my-task-reports .date-range label {\n  color: #23282d;\n  font-weight: 600;\n}\n.pm-pro-my-task-reports .clearfix:after {\n  content: \"\";\n  clear: both;\n  display: table;\n}\n", ""]);

// exports


            /***/ }),
        /* 490 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_user_reports_task_estimation_vue__ = __webpack_require__(145);
            /* unused harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8894e278_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_user_reports_task_estimation_vue__ = __webpack_require__(493);
            var disposed = false
            function injectStyle (ssrContext) {
                if (disposed) return
                __webpack_require__(491)
            }
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = injectStyle
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_user_reports_task_estimation_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8894e278_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_user_reports_task_estimation_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/my-tasks/user-reports-task-estimation.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-8894e278", Component.options)
                } else {
                    hotAPI.reload("data-v-8894e278", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["a"] = (Component.exports);


            /***/ }),
        /* 491 */
        /***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
            var content = __webpack_require__(492);
            if(typeof content === 'string') content = [[module.i, content, '']];
            if(content.locals) module.exports = content.locals;
// add the styles to the DOM
            var update = __webpack_require__(2)("1474195e", content, false, {});
// Hot Module Replacement
            if(false) {
// When the styles change, update the <style> tags
                if(!content.locals) {
                    module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-8894e278\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./user-reports-task-estimation.vue", function() {
                        var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-8894e278\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./user-reports-task-estimation.vue");
                        if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
                        update(newContent);
                    });
                }
// When the module is disposed, remove the <style> tags
                module.hot.dispose(function() { update(); });
            }

            /***/ }),
        /* 492 */
        /***/ (function(module, exports, __webpack_require__) {

            exports = module.exports = __webpack_require__(1)(false);
// imports


// module
            exports.push([module.i, "\n.pm-pro-graph-wrap {\n  background: #fff;\n  margin-right: 10px;\n  padding: 0 10px 10px 10px;\n  margin-bottom: 1em;\n  border: 1px solid #e5e5e5;\n}\n.pm-pro-graph-wrap:last-child {\n  margin-right: 0;\n}\n.user-reports-wrap .table-wrap {\n  margin-bottom: 1em;\n}\n.user-reports-wrap .pm-report-worker-panel {\n  margin-bottom: 1em;\n}\n.user-reports-wrap .graph-wrap {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-bottom: 0.5em;\n}\n.user-reports-wrap .graph-wrap .canvas {\n  width: 33.33%;\n  height: 400px;\n}\n.user-reports-wrap .user-meta-data-wrap {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n}\n.user-reports-wrap .user-meta-data-wrap .meta-item {\n  display: flex;\n  align-items: center;\n  padding: 10px 10px 10px 0;\n}\n.user-reports-wrap .user-meta-data-wrap .meta-item:last-child {\n  padding-right: 0;\n}\n.user-reports-wrap .user-meta-data-wrap .meta-item .label {\n  background: #3797a4;\n  padding: 0 5px;\n  color: #f9f9f9;\n  font-size: 12px;\n}\n.user-reports-wrap .user-meta-data-wrap .meta-item .value {\n  background: #8ccbbe;\n  color: #555;\n  padding: 0 10px;\n  font-size: 12px;\n}\n.user-reports-wrap .user-wrap {\n  display: flex;\n  align-items: center;\n}\n.user-reports-wrap .user-wrap .user-name {\n  margin-left: 12px;\n  background: #fff;\n  border: 1px solid #E5E5E5;\n  padding: 2px 10px;\n}\n.user-reports-wrap .title {\n  width: 50%;\n}\n.user-reports-wrap .working-hour,\n.user-reports-wrap .estimated-hour {\n  width: 25%;\n}\n.user-reports-wrap .info-icon {\n  padding: 0 6px;\n}\n.user-reports-wrap .info-icon svg {\n  height: 10px !important;\n  width: 10px !important;\n  fill: #858587;\n}\n", ""]);

// exports


            /***/ }),
        /* 493 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    { staticClass: "user-reports-wrap" },
                    [
                        _vm._l(_vm.reports.users, function(user, id) {
                            return _c("div", { staticClass: "user-wrap" }, [
                                _c("h3", [_vm._v(_vm._s(_vm.__("User Name", "pm-pro")))]),
                                _vm._v(" "),
                                _c("span", { staticClass: "user-name" }, [
                                    _vm._v(_vm._s(_vm.ucfirst(user.display_name)))
                                ])
                            ])
                        }),
                        _vm._v(" "),
                        _c(
                            "div",
                            {
                                staticClass:
                                    "pm-card pm-card-default pm-report-meta-panel pm-report-worker-panel"
                            },
                            [
                                _vm._m(0),
                                _vm._v(" "),
                                _vm._l(_vm.reports.meta, function(meta, user_id) {
                                    return _c("div", { staticClass: "user-meta-data-wrap" }, [
                                        _c("div", { staticClass: "meta-item" }, [
                                            _c("div", { staticClass: "label" }, [
                                                _vm._v(
                                                    "\n                    " +
                                                    _vm._s(_vm.__("Total Estimation Hours")) +
                                                    "\n                "
                                                )
                                            ]),
                                            _vm._v(" "),
                                            _c("div", { staticClass: "value" }, [
                                                _vm._v(
                                                    "\n                    " +
                                                    _vm._s(meta.total_estimation_tf) +
                                                    "\n                "
                                                )
                                            ])
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "meta-item" }, [
                                            _c("div", { staticClass: "label" }, [
                                                _vm._v(
                                                    "\n                    " +
                                                    _vm._s(_vm.__("Completed Task Count")) +
                                                    "\n                "
                                                )
                                            ]),
                                            _vm._v(" "),
                                            _c("div", { staticClass: "value" }, [
                                                _vm._v(
                                                    "\n                    " +
                                                    _vm._s(meta.completed_tasks) +
                                                    "\n                "
                                                )
                                            ])
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "meta-item" }, [
                                            _c("div", { staticClass: "label" }, [
                                                _vm._v(
                                                    "\n                    " +
                                                    _vm._s(_vm.__("Avg. Hour Per-task")) +
                                                    "\n                "
                                                )
                                            ]),
                                            _vm._v(" "),
                                            _c("div", { staticClass: "value" }, [
                                                _vm._v(
                                                    "\n                    " +
                                                    _vm._s(meta.avg_hour_task_tf) +
                                                    "\n                "
                                                )
                                            ])
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "meta-item" }, [
                                            _c("div", { staticClass: "label" }, [
                                                _vm._v(
                                                    "\n                    " +
                                                    _vm._s(_vm.__("Avg. Work Hour Per-day")) +
                                                    "\n                "
                                                )
                                            ]),
                                            _vm._v(" "),
                                            _c("div", { staticClass: "value" }, [
                                                _vm._v(
                                                    "\n                    " +
                                                    _vm._s(meta.avg_work_hour_tf) +
                                                    "\n                "
                                                )
                                            ])
                                        ]),
                                        _vm._v(" "),
                                        _c("div", { staticClass: "meta-item" }, [
                                            _c("div", { staticClass: "label" }, [
                                                _vm._v(
                                                    "\n                    " +
                                                    _vm._s(_vm.__("Avg. Task Per-day")) +
                                                    "\n                "
                                                )
                                            ]),
                                            _vm._v(" "),
                                            _c("div", { staticClass: "value" }, [
                                                _vm._v(
                                                    "\n                    " +
                                                    _vm._s(meta.avg_task_day) +
                                                    "\n                "
                                                )
                                            ])
                                        ])
                                    ])
                                })
                            ],
                            2
                        ),
                        _vm._v(" "),
                        _vm.grapVisibility
                            ? _c(
                                "div",
                                { staticClass: "graph-wrap", staticStyle: { width: "100%" } },
                                [
                                    _c(
                                        "div",
                                        {
                                            staticStyle: { width: "33.333333%", "padding-right": "10px" }
                                        },
                                        [
                                            _c(
                                                "div",
                                                {
                                                    staticClass: "pm-pro-graph-wrap",
                                                    staticStyle: { width: "100%" }
                                                },
                                                [
                                                    _c("h3", [
                                                        _vm._v(_vm._s(_vm.__("All Projects", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("canvas", {
                                                        directives: [
                                                            {
                                                                name: "user-report-projects-estimation",
                                                                rawName: "v-user-report-projects-estimation"
                                                            }
                                                        ],
                                                        staticClass: "canvas",
                                                        attrs: { width: "100%" }
                                                    })
                                                ]
                                            )
                                        ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                        "div",
                                        {
                                            staticStyle: { width: "33.333333%", "padding-right": "10px" }
                                        },
                                        [
                                            _c(
                                                "div",
                                                {
                                                    staticClass: "pm-pro-graph-wrap",
                                                    staticStyle: { width: "100%" }
                                                },
                                                [
                                                    _c("h3", [
                                                        _vm._v(_vm._s(_vm.__("Task Types", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("canvas", {
                                                        directives: [
                                                            {
                                                                name: "user-report-task-type-estimation",
                                                                rawName: "v-user-report-task-type-estimation"
                                                            }
                                                        ],
                                                        staticClass: "canvas",
                                                        attrs: { width: "100%" }
                                                    })
                                                ]
                                            )
                                        ]
                                    ),
                                    _vm._v(" "),
                                    _c("div", { staticStyle: { width: "33.333333%" } }, [
                                        _c(
                                            "div",
                                            {
                                                staticClass: "pm-pro-graph-wrap",
                                                staticStyle: { width: "100%" }
                                            },
                                            [
                                                _c("h3", [
                                                    _vm._v(_vm._s(_vm.__("Subtask Types", "pm-pro")))
                                                ]),
                                                _vm._v(" "),
                                                _c("canvas", {
                                                    directives: [
                                                        {
                                                            name: "user-report-sub-task-type-estimation",
                                                            rawName: "v-user-report-sub-task-type-estimation"
                                                        }
                                                    ],
                                                    staticClass: "canvas",
                                                    attrs: { width: "100%" }
                                                })
                                            ]
                                        )
                                    ])
                                ]
                            )
                            : _vm._e(),
                        _vm._v(" "),
                        _c(
                            "div",
                            { staticClass: "table-wrap" },
                            [
                                _vm.reports.report_for == "task"
                                    ? _c("h3", { staticStyle: { "margin-top": "0" } }, [
                                        _vm._v(_vm._s(_vm.__("Tasks", "pm-pro")))
                                    ])
                                    : _vm._e(),
                                _vm._v(" "),
                                _vm.reports.report_for == "sub_task"
                                    ? _c("h3", { staticStyle: { "margin-top": "0" } }, [
                                        _vm._v(
                                            "\n            " +
                                            _vm._s(_vm.__("Subtasks", "pm-pro")) +
                                            "\n            "
                                        ),
                                        _c(
                                            "i",
                                            {
                                                directives: [
                                                    {
                                                        name: "tooltip",
                                                        rawName: "v-tooltip:top-center",
                                                        value: _vm.__(
                                                            "Please add <mark>Estimation time</mark> for sub tasks to get the list !",
                                                            "pm-pro"
                                                        ),
                                                        expression:
                                                            "__( 'Please add <mark>Estimation time</mark> for sub tasks to get the list !', 'pm-pro')",
                                                        arg: "top-center"
                                                    }
                                                ],
                                                staticClass: "info-icon"
                                            },
                                            [
                                                _c(
                                                    "svg",
                                                    {
                                                        staticStyle: {
                                                            "enable-background": "new 0 0 111.577 111.577"
                                                        },
                                                        attrs: {
                                                            version: "1.1",
                                                            id: "Capa_1",
                                                            xmlns: "http://www.w3.org/2000/svg",
                                                            "xmlns:xlink": "http://www.w3.org/1999/xlink",
                                                            x: "0px",
                                                            y: "0px",
                                                            viewBox: "0 0 111.577 111.577",
                                                            "xml:space": "preserve"
                                                        }
                                                    },
                                                    [
                                                        _c("g", [
                                                            _c("path", {
                                                                attrs: {
                                                                    d:
                                                                        "M78.962,99.536l-1.559,6.373c-4.677,1.846-8.413,3.251-11.195,4.217c-2.785,0.969-6.021,1.451-9.708,1.451 c-5.662,0-10.066-1.387-13.207-4.142c-3.141-2.766-4.712-6.271-4.712-10.523c0-1.646,0.114-3.339,0.351-5.064 c0.239-1.727,0.619-3.672,1.139-5.846l5.845-20.688c0.52-1.981,0.962-3.858,1.316-5.633c0.359-1.764,0.532-3.387,0.532-4.848 c0-2.642-0.547-4.49-1.636-5.529c-1.089-1.036-3.167-1.562-6.252-1.562c-1.511,0-3.064,0.242-4.647,0.71 c-1.59,0.47-2.949,0.924-4.09,1.346l1.563-6.378c3.829-1.559,7.489-2.894,10.99-4.002c3.501-1.111,6.809-1.667,9.938-1.667 c5.623,0,9.962,1.359,13.009,4.077c3.047,2.72,4.57,6.246,4.57,10.591c0,0.899-0.1,2.483-0.315,4.747 c-0.21,2.269-0.601,4.348-1.171,6.239l-5.82,20.605c-0.477,1.655-0.906,3.547-1.279,5.676c-0.385,2.115-0.569,3.731-0.569,4.815 c0,2.736,0.61,4.604,1.833,5.597c1.232,0.993,3.354,1.487,6.368,1.487c1.415,0,3.025-0.251,4.814-0.744 C76.854,100.348,78.155,99.915,78.962,99.536z M80.438,13.03c0,3.59-1.353,6.656-4.072,9.177c-2.712,2.53-5.98,3.796-9.803,3.796 c-3.835,0-7.111-1.266-9.854-3.796c-2.738-2.522-4.11-5.587-4.11-9.177c0-3.583,1.372-6.654,4.11-9.207 C59.447,1.274,62.729,0,66.563,0c3.822,0,7.091,1.277,9.803,3.823C79.087,6.376,80.438,9.448,80.438,13.03z"
                                                                }
                                                            })
                                                        ])
                                                    ]
                                                )
                                            ]
                                        )
                                    ])
                                    : _vm._e(),
                                _vm._v(" "),
                                _vm._l(_vm.reports.tasks.data, function(taskItems, user_id) {
                                    return [
                                        _c(
                                            "table",
                                            { staticClass: "wp-list-table widefat fixed striped" },
                                            [
                                                _c("thead", [
                                                    _c("th", { staticClass: "completed-at" }, [
                                                        _vm._v(_vm._s(_vm.__("Completed At", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("th", { staticClass: "task-title" }, [
                                                        _vm._v(_vm._s(_vm.__("Task Title", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _vm.reports.report_for == "sub_task"
                                                        ? _c("th", { staticClass: "task-title" }, [
                                                            _vm._v(_vm._s(_vm.__("Subtask Title", "pm-pro")))
                                                        ])
                                                        : _vm._e(),
                                                    _vm._v(" "),
                                                    _c("th", { staticClass: "project" }, [
                                                        _vm._v(_vm._s(_vm.__("Project", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("th", { staticClass: "type" }, [
                                                        _vm._v(_vm._s(_vm.__("Type", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("th", { staticClass: "hour" }, [
                                                        _vm._v(_vm._s(_vm.__("Hour", "pm-pro")))
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c(
                                                    "tbody",
                                                    [
                                                        _vm._l(taskItems.data, function(task, user_id) {
                                                            return [
                                                                _c("tr", [
                                                                    _c("td", [_vm._v(_vm._s(task.completed_at.date))]),
                                                                    _vm._v(" "),
                                                                    _vm.reports.report_for == "sub_task"
                                                                        ? _c("td", [
                                                                            _vm._v(
                                                                                "\n                                 " +
                                                                                _vm._s(
                                                                                    task.task
                                                                                        ? task.task.data
                                                                                            ? task.task.data.title
                                                                                            : "--"
                                                                                        : "--"
                                                                                ) +
                                                                                "\n                            "
                                                                            )
                                                                        ])
                                                                        : _vm._e(),
                                                                    _vm._v(" "),
                                                                    _c("td", [_vm._v(_vm._s(task.title))]),
                                                                    _vm._v(" "),
                                                                    _c("td", [_vm._v(_vm._s(task.project_title))]),
                                                                    _vm._v(" "),
                                                                    _c("td", [
                                                                        _vm._v(
                                                                            _vm._s(task.type.title ? task.type.title : "--")
                                                                        )
                                                                    ]),
                                                                    _vm._v(" "),
                                                                    _c("td", [_vm._v(_vm._s(task.estimation_tf))])
                                                                ])
                                                            ]
                                                        }),
                                                        _vm._v(" "),
                                                        _c("tr", [
                                                            _vm.reports.report_for == "sub_task"
                                                                ? _c("td", { attrs: { colspan: "5" } }, [
                                                                    _vm._v(_vm._s(_vm.__("Total")))
                                                                ])
                                                                : _vm._e(),
                                                            _vm._v(" "),
                                                            _vm.reports.report_for == "task"
                                                                ? _c("td", { attrs: { colspan: "4" } }, [
                                                                    _vm._v(_vm._s(_vm.__("Total")))
                                                                ])
                                                                : _vm._e(),
                                                            _vm._v(" "),
                                                            _c("td", [
                                                                _vm._v(_vm._s(_vm.reports.tasks.meta.total_hours_tf))
                                                            ])
                                                        ])
                                                    ],
                                                    2
                                                )
                                            ]
                                        )
                                    ]
                                }),
                                _vm._v(" "),
                                _vm.hasResults()
                                    ? _c("h1", [_vm._v(_vm._s(_vm.__("No result found!", "pm-pro")))])
                                    : _vm._e()
                            ],
                            2
                        ),
                        _vm._v(" "),
                        _c(
                            "div",
                            { staticClass: "table-wrap" },
                            [
                                _c("h3", [_vm._v(_vm._s(_vm.__("Projects", "pm-pro")))]),
                                _vm._v(" "),
                                _vm._l(_vm.reports.projects.data, function(projectItems, user_id) {
                                    return [
                                        _c(
                                            "table",
                                            { staticClass: "wp-list-table widefat fixed striped" },
                                            [
                                                _c("thead", [
                                                    _c("th", { staticClass: "completed-at" }, [
                                                        _vm._v(_vm._s(_vm.__("Project Name", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _vm.reports.report_for == "task"
                                                        ? _c("th", { staticClass: "task-title" }, [
                                                            _vm._v(
                                                                "\n                        " +
                                                                _vm._s(_vm.__("Task", "pm-pro")) +
                                                                "\n                    "
                                                            )
                                                        ])
                                                        : _vm._e(),
                                                    _vm._v(" "),
                                                    _vm.reports.report_for == "sub_task"
                                                        ? _c("th", { staticClass: "task-title" }, [
                                                            _vm._v(
                                                                "\n                        " +
                                                                _vm._s(_vm.__("Subtask", "pm-pro")) +
                                                                "\n                    "
                                                            )
                                                        ])
                                                        : _vm._e(),
                                                    _vm._v(" "),
                                                    _c("th", { staticClass: "project" }, [
                                                        _vm._v(_vm._s(_vm.__("Est. Hour", "pm-pro")))
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c(
                                                    "tbody",
                                                    [
                                                        _vm._l(
                                                            _vm.filterNullEstProject(projectItems.data),
                                                            function(project, user_id) {
                                                                return [
                                                                    _c("tr", [
                                                                        _c("td", [_vm._v(_vm._s(project.project.title))]),
                                                                        _vm._v(" "),
                                                                        _vm.reports.report_for == "sub_task"
                                                                            ? _c("td", [
                                                                                _vm._v(_vm._s(project.completed_sub_tasks))
                                                                            ])
                                                                            : _vm._e(),
                                                                        _vm._v(" "),
                                                                        _vm.reports.report_for == "task"
                                                                            ? _c("td", [
                                                                                _vm._v(_vm._s(project.completed_tasks))
                                                                            ])
                                                                            : _vm._e(),
                                                                        _vm._v(" "),
                                                                        _vm.reports.report_for == "task"
                                                                            ? _c("td", [
                                                                                _vm._v(
                                                                                    _vm._s(project.estimated_task_hours_tf)
                                                                                )
                                                                            ])
                                                                            : _vm._e(),
                                                                        _vm._v(" "),
                                                                        _vm.reports.report_for == "sub_task"
                                                                            ? _c("td", [
                                                                                _vm._v(
                                                                                    _vm._s(
                                                                                        project.estimated_sub_task_hours_tf
                                                                                    )
                                                                                )
                                                                            ])
                                                                            : _vm._e()
                                                                    ])
                                                                ]
                                                            }
                                                        ),
                                                        _vm._v(" "),
                                                        _c("tr", [
                                                            _c("td", [_vm._v(_vm._s(_vm.__("Total")))]),
                                                            _vm._v(" "),
                                                            _vm.reports.report_for == "sub_task"
                                                                ? _c("td", [
                                                                    _vm._v(
                                                                        _vm._s(
                                                                            _vm.reports.projects.meta.total_sub_tasks
                                                                        )
                                                                    )
                                                                ])
                                                                : _vm._e(),
                                                            _vm._v(" "),
                                                            _vm.reports.report_for == "task"
                                                                ? _c("td", [
                                                                    _vm._v(
                                                                        _vm._s(_vm.reports.projects.meta.total_tasks)
                                                                    )
                                                                ])
                                                                : _vm._e(),
                                                            _vm._v(" "),
                                                            _vm.reports.report_for == "task"
                                                                ? _c("td", [
                                                                    _vm._v(
                                                                        _vm._s(
                                                                            _vm.reports.projects.meta
                                                                                .total_task_estimation_tf
                                                                        )
                                                                    )
                                                                ])
                                                                : _vm._e(),
                                                            _vm._v(" "),
                                                            _vm.reports.report_for == "sub_task"
                                                                ? _c("td", [
                                                                    _vm._v(
                                                                        _vm._s(
                                                                            _vm.reports.projects.meta
                                                                                .total_sub_task_estimation_tf
                                                                        )
                                                                    )
                                                                ])
                                                                : _vm._e()
                                                        ])
                                                    ],
                                                    2
                                                )
                                            ]
                                        )
                                    ]
                                }),
                                _vm._v(" "),
                                _vm.hasResults()
                                    ? _c("h1", [_vm._v(_vm._s(_vm.__("No result found!", "pm-pro")))])
                                    : _vm._e()
                            ],
                            2
                        ),
                        _vm._v(" "),
                        _c(
                            "div",
                            { staticClass: "table-wrap" },
                            [
                                _c("h3", [_vm._v(_vm._s(_vm.__("Task type", "pm-pro")))]),
                                _vm._v(" "),
                                _vm._l(_vm.reports.task_types.data, function(items, user_id) {
                                    return [
                                        _c(
                                            "table",
                                            { staticClass: "wp-list-table widefat fixed striped" },
                                            [
                                                _c("thead", [
                                                    _c("th", { staticClass: "completed-at" }, [
                                                        _vm._v(_vm._s(_vm.__("Task Type", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("th", { staticClass: "task-title" }, [
                                                        _vm._v(_vm._s(_vm.__("Task", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("th", { staticClass: "project" }, [
                                                        _vm._v(_vm._s(_vm.__("Est. Hour", "pm-pro")))
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c(
                                                    "tbody",
                                                    [
                                                        _vm._l(items.data, function(type, index) {
                                                            return [
                                                                _c("tr", [
                                                                    _c("td", [_vm._v(_vm._s(type.type.title))]),
                                                                    _vm._v(" "),
                                                                    _c("td", [_vm._v(_vm._s(type.completed))]),
                                                                    _vm._v(" "),
                                                                    _c("td", [_vm._v(_vm._s(type.estimated_hours_tf))])
                                                                ])
                                                            ]
                                                        }),
                                                        _vm._v(" "),
                                                        _c("tr", [
                                                            _c("td", [_vm._v(_vm._s(_vm.__("Total")))]),
                                                            _vm._v(" "),
                                                            _c("td", [
                                                                _vm._v(
                                                                    _vm._s(_vm.reports.task_types.meta.total_tasks)
                                                                )
                                                            ]),
                                                            _vm._v(" "),
                                                            _c("td", [
                                                                _vm._v(
                                                                    _vm._s(
                                                                        _vm.reports.task_types.meta.total_estimation_tf
                                                                    )
                                                                )
                                                            ])
                                                        ])
                                                    ],
                                                    2
                                                )
                                            ]
                                        )
                                    ]
                                }),
                                _vm._v(" "),
                                _vm.hasResults()
                                    ? _c("h1", [_vm._v(_vm._s(_vm.__("No result found!", "pm-pro")))])
                                    : _vm._e()
                            ],
                            2
                        ),
                        _vm._v(" "),
                        _c(
                            "div",
                            [
                                _c("h3", [_vm._v(_vm._s(_vm.__("Subtask type", "pm-pro")))]),
                                _vm._v(" "),
                                _vm._l(_vm.reports.sub_task_types.data, function(items, user_id) {
                                    return _c("div", [
                                        _c(
                                            "table",
                                            { staticClass: "wp-list-table widefat fixed striped" },
                                            [
                                                _c("thead", [
                                                    _c("th", { staticClass: "completed-at" }, [
                                                        _vm._v(_vm._s(_vm.__("Subtask Type", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("th", { staticClass: "task-title" }, [
                                                        _vm._v(_vm._s(_vm.__("Subtask", "pm-pro")))
                                                    ]),
                                                    _vm._v(" "),
                                                    _c("th", { staticClass: "project" }, [
                                                        _vm._v(_vm._s(_vm.__("Est. Hour", "pm-pro")))
                                                    ])
                                                ]),
                                                _vm._v(" "),
                                                _c(
                                                    "tbody",
                                                    [
                                                        _vm._l(items.data, function(type, user_id) {
                                                            return [
                                                                _c("tr", [
                                                                    _c("td", [_vm._v(_vm._s(type.type.title))]),
                                                                    _vm._v(" "),
                                                                    _c("td", [_vm._v(_vm._s(type.completed))]),
                                                                    _vm._v(" "),
                                                                    _c("td", [_vm._v(_vm._s(type.estimated_hours_tf))])
                                                                ])
                                                            ]
                                                        }),
                                                        _vm._v(" "),
                                                        _c("tr", [
                                                            _c("td", [_vm._v(_vm._s(_vm.__("Total")))]),
                                                            _vm._v(" "),
                                                            _c("td", [
                                                                _vm._v(
                                                                    _vm._s(
                                                                        _vm.reports.sub_task_types.meta.total_sub_tasks
                                                                    )
                                                                )
                                                            ]),
                                                            _vm._v(" "),
                                                            _c("td", [
                                                                _vm._v(
                                                                    _vm._s(
                                                                        _vm.reports.sub_task_types.meta
                                                                            .total_estimation_tf
                                                                    )
                                                                )
                                                            ])
                                                        ])
                                                    ],
                                                    2
                                                )
                                            ]
                                        )
                                    ])
                                }),
                                _vm._v(" "),
                                _vm.hasResults()
                                    ? _c("h1", [_vm._v(_vm._s(_vm.__("No result found!", "pm-pro")))])
                                    : _vm._e()
                            ],
                            2
                        )
                    ],
                    2
                )
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "pm-report-panel-icon" }, [
                        _c("i", { staticClass: "flaticon-resume" })
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-8894e278", esExports)
                }
            }

            /***/ }),
        /* 494 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _obj
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "div",
                    { staticClass: "pm-pro-my-task-reports" },
                    [
                        _vm.isResolving
                            ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(0)])
                            : _vm._e(),
                        _vm._v(" "),
                        !_vm.isResolving
                            ? _c(
                                "div",
                                { staticClass: "date-range" },
                                [
                                    _c("label", [_vm._v(_vm._s("Date", "pm-pro"))]),
                                    _vm._v(" "),
                                    _c("pm-date-range-picker", {
                                        attrs: {
                                            options: {
                                                alwaysShowCalendars: true,
                                                input: true,
                                                autoOpen: false,
                                                autoApply: true,
                                                opens: "center",
                                                singleDatePicker: _vm.task_start_field ? false : true,
                                                showDropdowns: true,
                                                startDate: _vm.startDate,
                                                endDate: _vm.endDate,
                                                locale: {
                                                    cancelLabel: _vm.__("Clear", "wedevs-project-manager")
                                                },
                                                ranges:
                                                    ((_obj = {}),
                                                        (_obj[_vm.__("Today", "pm-pro")] = [
                                                            _vm.moment(),
                                                            _vm.moment()
                                                        ]),
                                                        (_obj[_vm.__("Yesterday", "pm-pro")] = [
                                                            _vm.moment().subtract(1, "days"),
                                                            _vm.moment().subtract(1, "days")
                                                        ]),
                                                        (_obj[_vm.__("Last 7 Days", "pm-pro")] = [
                                                            _vm.moment().subtract(6, "days"),
                                                            _vm.moment()
                                                        ]),
                                                        (_obj[_vm.__("Last 30 Days", "pm-pro")] = [
                                                            _vm.moment().subtract(29, "days"),
                                                            _vm.moment()
                                                        ]),
                                                        (_obj[_vm.__("This Month", "pm-pro")] = [
                                                            _vm.moment().startOf("month"),
                                                            _vm.moment().endOf("month")
                                                        ]),
                                                        (_obj[_vm.__("Last Month", "pm-pro")] = [
                                                            _vm
                                                                .moment()
                                                                .subtract(1, "month")
                                                                .startOf("month"),
                                                            _vm
                                                                .moment()
                                                                .subtract(1, "month")
                                                                .endOf("month")
                                                        ]),
                                                        _obj)
                                            }
                                        },
                                        on: {
                                            apply: _vm.onChangeDate,
                                            cancel: function($event) {
                                                return _vm.deleteDate()
                                            }
                                        }
                                    })
                                ],
                                1
                            )
                            : _vm._e(),
                        _vm._v(" "),
                        _c("div", { staticClass: "clearfix" }),
                        _vm._v(" "),
                        !_vm.isResolving
                            ? _c("user-reports-task-estimation", {
                                attrs: { reports: _vm.reports }
                            })
                            : _vm._e()
                    ],
                    1
                )
            }
            var staticRenderFns = [
                function() {
                    var _vm = this
                    var _h = _vm.$createElement
                    var _c = _vm._self._c || _h
                    return _c("div", { staticClass: "loadmoreanimation" }, [
                        _c("div", { staticClass: "load-spinner" }, [
                            _c("div", { staticClass: "rect1" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect2" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect3" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect4" }),
                            _vm._v(" "),
                            _c("div", { staticClass: "rect5" })
                        ])
                    ])
                }
            ]
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-c7e42664", esExports)
                }
            }

            /***/ }),
        /* 495 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_menu_vue__ = __webpack_require__(146);
            /* empty harmony namespace reexport */
            /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1d95fbe0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_menu_vue__ = __webpack_require__(496);
            var disposed = false
            var normalizeComponent = __webpack_require__(0)
            /* script */


            /* template */

            /* template functional */
            var __vue_template_functional__ = false
            /* styles */
            var __vue_styles__ = null
            /* scopeId */
            var __vue_scopeId__ = null
            /* moduleIdentifier (server only) */
            var __vue_module_identifier__ = null
            var Component = normalizeComponent(
                __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_menu_vue__["a" /* default */],
                __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1d95fbe0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_menu_vue__["a" /* default */],
                __vue_template_functional__,
                __vue_styles__,
                __vue_scopeId__,
                __vue_module_identifier__
            )
            Component.options.__file = "views/assets/src/components/my-tasks/menu.vue"

            /* hot reload */
            if (false) {(function () {
                var hotAPI = require("vue-hot-reload-api")
                hotAPI.install(require("vue"), false)
                if (!hotAPI.compatible) return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-1d95fbe0", Component.options)
                } else {
                    hotAPI.reload("data-v-1d95fbe0", Component.options)
                }
                module.hot.dispose(function (data) {
                    disposed = true
                })
            })()}

            /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


            /***/ }),
        /* 496 */
        /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            var render = function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c(
                    "li",
                    [
                        _c(
                            "router-link",
                            {
                                staticClass: "pm-my-reports pm-my-taskoverview",
                                attrs: { to: _vm.routeLink("reports") }
                            },
                            [
                                _vm._v(
                                    "\n        " +
                                    _vm._s(_vm.__("Reports", "wedevs-project-manager")) +
                                    "\n\n    "
                                )
                            ]
                        )
                    ],
                    1
                )
            }
            var staticRenderFns = []
            render._withStripped = true
            var esExports = { render: render, staticRenderFns: staticRenderFns }
            /* harmony default export */ __webpack_exports__["a"] = (esExports);
            if (false) {
                module.hot.accept()
                if (module.hot.data) {
                    require("vue-hot-reload-api")      .rerender("data-v-1d95fbe0", esExports)
                }
            }

            /***/ })
        /******/ ]);
