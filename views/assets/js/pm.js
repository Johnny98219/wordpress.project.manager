/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 212);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file.
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = injectStyles
  }

  if (hook) {
    var functional = options.functional
    var existing = functional
      ? options.render
      : options.beforeCreate

    if (!functional) {
      // inject component registration as beforeCreate hook
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    } else {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return existing(h, context)
      }
    }
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 1 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/

var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

var listToStyles = __webpack_require__(99)

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

module.exports = function (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _keys = __webpack_require__(59);

var _keys2 = _interopRequireDefault(_keys);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Task list mixin
 * All available function about task
 */

var PM_TaskList_Mixin = {
    data: function data() {
        return {};
    },


    computed: {
        task_start_field: function task_start_field() {
            if (!PM_Vars.is_pro) {
                return false;
            }
            return this.getSettings('task_start_field', false);
        },


        /**
         * Check is todo-list single or not
         * 
         * @return Boolean
         */
        is_single_list: function is_single_list() {
            return this.$store.state.projectTaskLists.is_single_list;
        },


        /**
         * Check is task single or not
         * 
         * @return Boolean
         */
        is_single_task: function is_single_task() {
            return this.$store.state.projectTaskLists.is_single_task;
        },
        can_create_list: function can_create_list() {
            return this.user_can("create_list");
        },
        can_create_task: function can_create_task() {
            return this.user_can("create_task");
        }
    },

    methods: {
        // ...pm.Vuex.mapMutations('projectTaskLists',
        //     [
        //         'setLists',
        //         'setListsMeta',
        //         'afterNewList',
        //         'afterNewListupdateListsMeta',
        //         'afterDeleteList',
        //         'afterNewTask',
        //         'afterUpdateTask',
        //         'projectTaskLists',
        //         'showHideListFormStatus',
        //         'single_task_popup',
        //         'balankTemplateStatus',
        //         'listTemplateStatus', 
        //         'setTasks',

        //         'afterUpdateList'
        //     ]
        // ),
        can_complete_task: function can_complete_task(task) {
            return !task.meta.can_complete_task;
        },
        can_edit_task_list: function can_edit_task_list(lsit) {
            var user = PM_Vars.current_user;
            if (this.is_manager()) {
                return true;
            }

            if (lsit.creator.data.id == user.ID) {
                return true;
            }

            return false;
        },
        can_edit_task: function can_edit_task(task) {
            var user = PM_Vars.current_user;
            if (this.is_manager()) {
                return true;
            }

            if (task.creator.data.id == user.ID) {
                return true;
            }

            return false;
        },

        /**
         * Get task completed progress width
         * 
         * @param  array tasks 
         * 
         * @return obj       
         */
        getProgressStyle: function getProgressStyle(list) {
            if (typeof list == 'undefined') {
                return 0;
            }
            var width = this.getProgressPercent(list);

            return { width: width + '%' };
        },

        /**
         * Get task completed percentage from todo list
         * 
         * @param  array tasks
         *  
         * @return float       
         */
        getProgressPercent: function getProgressPercent(list) {

            if (typeof list == 'undefined') {
                return 0;
            }

            var total_tasks = parseInt(list.meta.total_incomplete_tasks) + parseInt(list.meta.total_complete_tasks),
                //tasks.length,
            completed_tasks = list.meta.total_complete_tasks,
                //this.countCompletedTasks( list ),
            progress = 100 * completed_tasks / total_tasks;

            return isNaN(progress) ? 0 : progress.toFixed(0);
        },

        /**
         * Retrive All task list
         * @param  {[object]}   args SSR url condition
         * @param  {Function} callback  [description]
         * @return {[void]}             [description]
         */
        getLists: function getLists(args) {
            var self = this,
                pre_define = {
                condition: {
                    with: 'incomplete_tasks',
                    per_page: this.getSettings('list_per_page', 10),
                    page: this.setCurrentPageNumber()
                },
                callback: false
            };

            var args = jQuery.extend(true, pre_define, args);
            var condition = this.generateConditions(args.condition);
            var request = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/task-lists?' + condition,
                success: function success(res) {

                    res.data.map(function (list, index) {
                        self.addMetaList(list);

                        if (typeof list.incomplete_tasks !== 'undefined') {
                            list.incomplete_tasks.data.map(function (task) {
                                self.addTaskMeta(task);
                            });
                        }

                        if (typeof list.complete_tasks !== 'undefined') {
                            list.complete_tasks.data.map(function (task) {
                                self.addTaskMeta(task);
                            });
                        }
                    });
                    self.$root.$store.state.projectTaskListLoaded = true;
                    self.$store.commit('projectTaskLists/setLists', res.data);
                    self.$store.commit('projectTaskLists/setListsMeta', res.meta.pagination);

                    self.listTemplateAction();

                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res.data);
                    }
                },
                error: function error(res) {
                    res.responseJSON.message.map(function (value, index) {
                        pm.Toastr.error(value);
                    });
                }
            };
            self.httpRequest(request);
        },


        /**
         * Retrive a single list 
         * @param  {object}   args     condition and list id
         * @param  {Function} callback [description]
         * @return {void}            [description]
         */
        getList: function getList(args) {
            var self = this,
                pre_define = {
                condition: {
                    with: 'incomplete_tasks'
                },
                list_id: false,
                callback: false
            };

            var args = jQuery.extend(true, pre_define, args);
            var condition = self.generateConditions(args.condition);

            var request = {
                type: 'GET',
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/task-lists/' + args.list_id + '?' + condition,
                success: function success(res) {
                    self.addMetaList(res.data);

                    if (typeof res.data.comments !== 'undefined') {
                        res.data.comments.data.map(function (comment) {
                            self.addListCommentMeta(comment);
                        });
                    }

                    if (typeof res.data.incomplete_tasks !== 'undefined') {
                        res.data.incomplete_tasks.data.map(function (task) {
                            self.addTaskMeta(task);
                        });
                    }

                    if (typeof res.data.complete_tasks !== 'undefined') {
                        res.data.complete_tasks.data.map(function (task) {
                            self.addTaskMeta(task);
                        });
                    }
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                    pm.NProgress.done();
                }
            };

            if (args.list_id) {
                self.httpRequest(request);
            }
        },


        /**
         * Insert  todo list
         * 
         * @return void
         */
        addList: function addList(args) {
            var self = this,
                pre_define = {
                data: {
                    order: 0
                },
                callback: false
            },
                args = jQuery.extend(true, pre_define, args);
            var data = pm_apply_filters('before_task_list_save', args.data);
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/task-lists',
                data: data,
                type: 'POST',
                success: function success(res) {
                    self.addMetaList(res.data);
                    res.data.incomplete_tasks = { data: [] };
                    self.$store.commit('projectTaskLists/afterNewList', res.data);
                    self.$store.commit('projectTaskLists/afterNewListupdateListsMeta');
                    self.$store.commit('updateProjectMeta', 'total_task_lists');
                    self.$store.commit('updateProjectMeta', 'total_activities');
                    self.showHideListForm(false);
                    pm.Toastr.success(res.message);

                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }

                    pmBus.$emit('pm_after_create_list', res);
                },
                error: function error(res) {
                    // Showing error
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }

                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }

                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            };

            self.httpRequest(request_data);
        },

        /**
         * Update  todo list
         * 
         * @return void
         */
        updateList: function updateList(args) {
            var self = this,
                pre_define = {
                data: {
                    order: 0
                },
                callback: false
            };
            var args = jQuery.extend(true, pre_define, args);
            var data = pm_apply_filters('before_task_list_save', args.data);
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/task-lists/' + self.list.id,
                data: data,
                type: 'PUT',
                success: function success(res) {
                    self.addMetaList(res.data);
                    pm.Toastr.success(res.message);
                    self.$store.commit('projectTaskLists/afterUpdateList', res.data);
                    self.showHideListForm(false, self.list);

                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                    self.$store.commit('updateProjectMeta', 'total_activities');
                    pmBus.$emit('pm_after_update_list', res);
                },
                error: function error(res) {
                    // Showing error
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }

                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }

                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            };

            self.httpRequest(request_data);
        },

        /**
         * [modifyList description]
         * @param  {[type]} list [description]
         * @return {[type]}      [description]
         */
        modifyList: function modifyList(list) {

            var args = {
                data: list
            };

            this.updateList(args);
        },


        /**
         * Delete list
         * 
         * @param  int list_id 
         * 
         * @return void         
         */
        deleteList: function deleteList(args) {
            if (!confirm(this.__('Are you sure!', 'pm'))) {
                return;
            }
            var self = this,
                pre_define = {
                list_id: false,
                callback: false
            },
                args = jQuery.extend(true, pre_define, args);

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/task-lists/' + args.list_id,
                type: 'DELETE',
                success: function success(res) {
                    self.$store.commit('projectTaskLists/afterDeleteList', args.list_id);
                    pm.Toastr.success(res.message);
                    self.listTemplateAction();
                    self.$store.commit('updateProjectMeta', 'total_activities');
                    self.$store.commit('decrementProjectMeta', 'total_task_lists');
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                },
                error: function error(res) {
                    res.responseJSON.message.map(function (value, index) {
                        pm.Toastr.error(value);
                    });
                }
            };
            if (args.list_id) {
                self.httpRequest(request_data);
            }
        },


        /**
         * Retrive a single list 
         * @param  {object}   args     condition and list id
         * @param  {Function} callback [description]
         * @return {void}            [description]
         */
        getTask: function getTask(args) {
            var self = this,
                project_id = typeof this.$route.params.project_id == 'undefined' ? args.project_id : this.$route.params.project_id;

            var pre_define = {
                condition: {
                    with: ''
                },
                task_id: false,
                project_id: project_id,
                callback: false
            };

            var args = jQuery.extend(true, pre_define, args);
            var condition = self.generateConditions(args.condition);

            var request = {
                type: 'GET',
                url: self.base_url + '/pm/v2/projects/' + args.project_id + '/tasks/' + args.task_id + '?' + condition,
                success: function success(res) {
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                    pm.NProgress.done();
                }
            };

            if (args.task_id) {
                self.httpRequest(request);
            }
        },


        /**
         * Insert  task
         * 
         * @return void
         */
        addTask: function addTask(args, list) {
            var self = this,
                list = list || {},
                pre_define = {
                data: {},
                callback: false
            },
                args = jQuery.extend(true, pre_define, args);
            var data = pm_apply_filters('before_task_save', args.data);
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/tasks',
                type: 'POST',
                data: data,
                success: function success(res) {
                    self.addTaskMeta(res.data);
                    self.$store.commit('projectTaskLists/afterNewTask', {
                        list_id: args.data.list_id,
                        task: res.data,
                        list: list
                    });

                    self.$store.commit('updateProjectMeta', 'total_activities');
                    // Display a success toast, with a title
                    pm.Toastr.success(res.message);
                    self.showHideTaskFrom(false, self.list, self.task);
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }

                    pmBus.$emit('pm_after_create_task', res, args);
                },
                error: function error(res) {
                    // Showing error
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }

                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }

                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            };

            self.httpRequest(request_data);
        },


        /**
         * Update Task using Task object 
         * @param  {Object} task Task Object
         * @return {void}      Update a task
         */
        updateTask: function updateTask(args) {
            var self = this,
                pre_define = {
                data: {
                    project_id: self.project_id ? self.project_id : ''
                },
                callback: false
            };
            var args = jQuery.extend(true, pre_define, args);
            var data = pm_apply_filters('before_task_save', args.data);

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + args.data.project_id + '/tasks/' + args.data.task_id,
                type: 'PUT',
                data: data,
                success: function success(res) {
                    self.addTaskMeta(res.data);

                    self.$store.commit('projectTaskLists/afterUpdateTask', {
                        list_id: args.data.list_id,
                        task: res.data
                    });
                    self.$store.commit('updateProjectMeta', 'total_activities');
                    // Display a success toast, with a title
                    pm.Toastr.success(res.message);
                    self.showHideTaskFrom(false, self.list, self.task);
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }

                    pmBus.$emit('pm_after_update_task', res, args);
                },
                error: function error(res) {
                    // Showing error
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }
                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }

                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            };

            self.httpRequest(request_data);
        },


        /**
         * Update Task using Task object 
         * @param  {Object} task Task Object
         * @return {void}      Update a task
         */
        modifyTask: function modifyTask(task) {
            if (typeof task.id === 'undefined') {
                return;
            }
            var args = {
                data: task
            };

            this.updateTask(args);
        },
        deleteTask: function deleteTask(args) {
            if (!confirm(this.__('Are you sure!', 'pm'))) {
                return;
            }

            var self = this,
                pre_define = {
                callback: false
            };
            var args = jQuery.extend(true, pre_define, args);

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/tasks/' + args.task.id,
                type: 'DELETE',
                success: function success(res) {
                    self.$store.commit('projectTaskLists/afterDeleteTask', {
                        'task': args.task,
                        'list': args.list
                    });
                    self.$store.commit('updateProjectMeta', 'total_activities');
                    pm.Toastr.success(res.message);
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                },
                error: function error(res) {
                    res.responseJSON.message.map(function (value, index) {
                        pm.Toastr.error(value);
                    });
                }
            };
            this.httpRequest(request_data);
        },
        addComment: function addComment(args) {
            var self = this,
                project_id = '',
                pre_define = {
                data: {},
                callback: false
            };
            var args = jQuery.extend(true, pre_define, args);
            var data = new FormData();

            if (self.project_id) {
                project_id = self.project_id;
            } else {
                project_id = args.data.project_id;
            }

            data.append('content', args.data.content);
            data.append('mentioned_users', args.data.mentioned_users);
            data.append('commentable_id', args.data.commentable_id);
            data.append('commentable_type', args.data.commentable_type);
            data.append('notify_users', args.data.notify_users);

            args.data.deleted_files.map(function (del_file) {
                data.append('files_to_delete[]', del_file);
            });

            args.data.files.map(function (file) {
                if (typeof file.attachment_id === 'undefined') {
                    var decode = self.dataURLtoFile(file.thumb, file.name);
                    data.append('files[]', decode);
                }
            });

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + project_id + '/comments',
                type: "POST",
                data: data,
                cache: false,
                contentType: false,
                processData: false,
                success: function success(res) {
                    self.addListCommentMeta(res.data);
                    self.$root.$emit('after_comment');
                    pm.Toastr.success(res.message);
                    self.$store.commit('updateProjectMeta', 'total_activities');
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                },
                error: function error(res) {
                    if (res.status == 500) {

                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }
                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            };

            self.httpRequest(request_data);
        },
        updateComment: function updateComment(args) {
            var self = this,
                project_id = '',
                pre_define = {
                data: {},
                callback: false
            };
            var args = jQuery.extend(true, pre_define, args);
            var data = new FormData();
            if (self.project_id) {
                project_id = self.project_id;
            } else {
                project_id = args.data.project_id;
            }
            data.append('content', args.data.content);
            data.append('mentioned_users', args.data.mentioned_users);
            data.append('commentable_id', args.data.commentable_id);
            data.append('commentable_type', args.data.commentable_type);
            data.append('notify_users', args.data.notify_users);

            args.data.deleted_files.map(function (del_file) {
                data.append('files_to_delete[]', del_file);
            });

            args.data.files.map(function (file) {
                if (typeof file.attachment_id === 'undefined') {
                    var decode = self.dataURLtoFile(file.thumb, file.name);
                    data.append('files[]', decode);
                }
            });

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + project_id + '/comments/' + args.data.id,
                type: "POST",
                data: data,
                cache: false,
                contentType: false,
                processData: false,
                success: function success(res) {
                    self.addListCommentMeta(res.data);
                    pm.Toastr.success(res.message);
                    self.$root.$emit('after_comment');
                    self.$store.commit('updateProjectMeta', 'total_activities');
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                },
                error: function error(res) {
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            };

            self.httpRequest(request_data);
        },


        /**
         * Show and Hide list form for new and update
         * @param  {[String/boolean]} status [description]
         * @param  {[Object]} list   [Tasl List object for edit]
         * @return {[type]}        [description]
         */
        showHideListForm: function showHideListForm(status, list) {

            var list = list || false,
                list = jQuery.isEmptyObject(list) ? false : list;

            if (list && typeof list.edit_mode != 'undefined') {
                if (status === 'toggle') {
                    list.edit_mode = list.edit_mode ? false : true;
                } else {
                    list.edit_mode = status;
                }
            } else {
                this.$store.commit('projectTaskLists/showHideListFormStatus', status);
            }
        },


        /**
         * Show task edit form
         * 
         * @param  int task_index 
         * 
         * @return void            
         */
        showHideTaskFrom: function showHideTaskFrom(status, list, task) {
            var list = list || false;
            var task = task || false;

            if (task) {
                if (status === 'toggle') {
                    task.edit_mode = task.edit_mode ? false : true;
                } else {
                    task.edit_mode = status;
                }
            }

            if (list) {
                if (status === 'toggle') {
                    list.show_task_form = list.show_task_form ? false : true;
                } else {
                    list.show_task_form = status;
                }
            }
        },


        /**
         * List pagination set current page Number
         */
        setCurrentPageNumber: function setCurrentPageNumber() {
            var current_page_number = this.$route.params.current_page_number ? this.$route.params.current_page_number : 1;
            this.current_page_number = current_page_number;

            return current_page_number;
        },


        /**
         * Adding task list meta for edit mode
         * @param {[Object]} list [Task list Object]
         */
        addMetaList: function addMetaList(list) {
            list.edit_mode = false;
            list.show_task_form = false;
            list.task_loading_status = false;
        },


        /**
         * addTaskMeta for task edit mode
         * @param {[Object]} task [Task Object]
         */
        addTaskMeta: function addTaskMeta(task) {
            task.edit_mode = false;
        },


        /**
         * comment meta for edit mode
         * @param {Object} comment Task comment
         */
        addListCommentMeta: function addListCommentMeta(comment) {
            comment.edit_mode = false;
        },


        /**
         * Show and hide comment form
         * @param  {Object} comment Comment Object
         * @return {void}         
         */
        showHideListCommentEditForm: function showHideListCommentEditForm(comment) {
            comment.edit_mode = comment.edit_mode ? false : true;
        },


        /**
         * Incomplete task load more Button
         * @param  {[Object]}  list [Task List object]
         * @return {Boolean}      [description]
         */
        isIncompleteLoadMoreActive: function isIncompleteLoadMoreActive(list) {
            if (typeof list.incomplete_tasks === 'undefined') {
                return false;
            }

            var count_tasks = list.meta.total_incomplete_tasks;
            var total_set_task = list.incomplete_tasks.data.length;
            if (total_set_task === count_tasks) {
                return false;
            }
            return true;
        },


        /**
         * Load More Incomplete task
         * @param  {[Object]} list Task List
         * @return {[viod]}      [More Task]
         */
        loadMoreIncompleteTasks: function loadMoreIncompleteTasks(list) {
            if (list.task_loading_status) {
                return;
            }
            var self = this;
            list.task_loading_status = true;

            var total_tasks = list.meta.total_incomplete_tasks;
            var per_page = this.getSettings('incomplete_tasks_per_page', 10);
            var current_page = Math.ceil(list.incomplete_tasks.data.length / per_page);

            var args = {
                condition: {
                    with: 'incomplete_tasks',
                    incomplete_task_page: current_page + 1
                },
                list_id: list.id,
                callback: function callback(res) {
                    self.$store.commit('projectTaskLists/setTasks', res.data);
                    list.task_loading_status = false;
                }
            };

            this.getList(args);
        },


        /**
         * Complete task load more Button
         * @param  {[Object]}  list [Task List object]
         * @return {Boolean}      [description]
         */
        isCompleteLoadMoreActive: function isCompleteLoadMoreActive(list) {
            if (typeof list.complete_tasks === 'undefined') {
                return false;
            }
            var count_tasks = list.meta.total_complete_tasks;
            var total_set_task = list.complete_tasks.data.length;
            if (total_set_task === count_tasks) {
                return false;
            }
            return true;
        },


        /**
         * Load More Incomplete task
         * @param  {[Object]} list Task List
         * @return {[viod]}      [More Task]
         */
        loadMoreCompleteTasks: function loadMoreCompleteTasks(list) {

            if (list.task_loading_status) {
                return;
            }

            list.task_loading_status = true;

            var total_tasks = list.meta.total_complete_tasks;
            var per_page = this.getSettings('complete_tasks_per_page', 10);
            var current_page = Math.ceil(list.complete_tasks.data.length / per_page);

            var args = {
                condition: {
                    with: 'complete_tasks',
                    complete_task_page: current_page + 1
                },
                list_id: list.id,
                callback: function callback(res) {
                    this.$store.commit('projectTaskLists/setTasks', res.data);
                    list.task_loading_status = false;
                }
            };

            this.getList(args);
        },


        /**
         * WP settings date format convert to pm.Moment date format with time zone
         * 
         * @param  string date 
         * 
         * @return string      
         */
        shortDateFormat: function shortDateFormat(date) {
            if (date == '') {
                return;
            }
            var format = 'MMM DD';

            return pm.Moment(date).format(String(format));
        },


        /**
         * WP settings date time format convert to pm.Moment date format with time zone
         * 
         * @param  string date 
         * 
         * @return string      
         */
        dateTimeFormat: function dateTimeFormat(date) {
            if (date == '') {
                return;
            }

            var date_format = 'MMMM DD YYYY',
                time_format = 'h:mm:ss a';

            if (PM_Vars.wp_date_format == 'Y-m-d') {
                date_format = 'YYYY-MM-DD';
            } else if (PM_Vars.wp_date_format == 'm/d/Y') {
                date_format = 'MM/DD/YYYY';
            } else if (PM_Vars.wp_date_format == 'd/m/Y') {
                date_format = 'DD/MM/YYYY';
            }

            if (PM_Vars.wp_time_format == 'g:i a') {
                time_format = 'h:m a';
            } else if (PM_Vars.wp_time_format == 'g:i A') {
                time_format = 'h:m A';
            } else if (PM_Vars.wp_time_format == 'H:i') {
                time_format = 'HH:m';
            }

            var format = String(date_format + ', ' + time_format);

            return pm.Moment(date).format(format);
        },


        /**
         * Get index from array object element
         * 
         * @param   array 
         * @param   id    
         * 
         * @return  int      
         */
        getIndex: function getIndex(array, id, slug) {
            var target = false;

            array.map(function (content, index) {
                if (content[slug] == id) {
                    target = index;
                }
            });
            return target;
        },


        /**
         * ISO_8601 Date format convert to pm.Moment date format
         * 
         * @param  string date 
         * 
         * @return string      
         */
        dateISO8601Format: function dateISO8601Format(date) {
            return pm.Moment(date).format();
        },


        /**
         * Task Order for sortable 
         * @param  {[Object]}   data     Data order
         * @param  {Function} callback 
         * @return {Void}            
         */
        taskOrder: function taskOrder(data, callback) {
            var self = this;
            var request_data = {
                url: self.base_url + '/pm/v2/projects/1/tasks/reorder',
                type: 'PUT',
                data: data,
                success: function success(res) {
                    if (typeof callback !== 'undefined') {
                        callback.call(self, res);
                    }
                },
                error: function error(res) {
                    // Showing error
                    res.data.error.map(function (value, index) {
                        pm.Toastr.error(value);
                    });
                }
            };

            self.httpRequest(request_data);
        },


        /**
         * Show hide todo-list edit form
         * 
         * @param  int comment_id 
         * 
         * @return void            
         */
        showHideTaskCommentEditForm: function showHideTaskCommentEditForm(task, comment_id) {
            var list_index = this.getIndex(this.$store.state.projectTaskLists.lists, task.post_parent, 'ID'),
                task_index = this.getIndex(this.$store.state.projectTaskLists.lists[list_index].tasks, task.ID, 'ID'),
                comment_index = this.getIndex(this.task.comments, comment_id, 'comment_ID'),
                self = this;

            var edit_mode = this.task.comments[comment_index].edit_mode;

            if (edit_mode) {
                PM_Component_jQuery.slide(comment_id, function () {
                    //self.$store.commit( 'showHideTaskCommentEditForm', { list_index: list_index, task_index: task_index, comment_index: comment_index } );
                    self.task.comments[comment_index].edit_mode = false;
                });
            } else {
                //self.$store.commit( 'showHideTaskCommentEditForm', { list_index: list_index, task_index: task_index, comment_index: comment_index } );    
                self.task.comments[comment_index].edit_mode = true;

                pm.Vue.nextTick(function () {
                    PM_Component_jQuery.slide(comment_id);
                });
            }
        },


        /**
         * Get current project users by role
         * 
         * @param  string role 
         * 
         * @return array     
         */
        get_porject_users_by_role: function get_porject_users_by_role(role) {
            return this.$store.state.projectTaskLists.project_users.filter(function (user) {
                return user.role == role ? true : false;
            });
        },


        /**
         * Get current project users by role
         * 
         * @param  string role 
         * 
         * @return array     
         */
        get_porject_users_id_by_role: function get_porject_users_id_by_role(role) {
            var ids = [];

            this.$store.state.projectTaskLists.projectTaskLists.project_users.map(function (user) {
                if (user.role == role) {
                    ids.push(user.id);
                }

                if (typeof role == 'undefined') {
                    ids.push(user.id);
                }
            });
            return ids;
        },


        /**
         * Get user information from task assigned user id
         *  
         * @param  array assigned_user 
         * 
         * @return obje               
         */
        getUsers: function getUsers(assigned_user) {
            if (!assigned_user) {
                return [];
            }
            var filtered_users = [];

            var assigned_to = assigned_user.map(function (id) {
                return parseInt(id);
            });

            filtered_users = this.$store.state.projectTaskLists.projectTaskLists.project_users.filter(function (user) {
                return assigned_to.indexOf(parseInt(user.id)) >= 0;
            });

            return filtered_users;
        },


        /**
         * CSS class for task date
         * 
         * @param  string start_date 
         * @param  string due_date   
         * 
         * @return string            
         */
        taskDateWrap: function taskDateWrap(due_date) {
            if (!due_date) {
                return 'pm-current-date';
            }

            due_date = new Date(due_date);
            due_date = pm.Moment(due_date).format('YYYY-MM-DD');

            if (!pm.Moment(due_date).isValid()) {
                return false;
            }

            var today = pm.Moment().format('YYYY-MM-DD'),
                due_day = pm.Moment(due_date).format('YYYY-MM-DD');
            return pm.Moment(today).isSameOrBefore(due_day) ? 'pm-current-date' : 'pm-due-date';
        },


        /**
         * class for completed task wrap div
         * @param  {date} due_date complete date
         * @return {String}          wrapper Class
         */
        completedTaskWrap: function completedTaskWrap(due_date) {
            if (!due_date) {
                return false;
            }

            due_date = new Date(due_date);
            due_date = pm.Moment(due_date).format('YYYY-MM-DD');

            if (!pm.Moment(due_date).isValid()) {
                return false;
            }

            var today = pm.Moment().format('YYYY-MM-DD'),
                due_day = pm.Moment(due_date).format('YYYY-MM-DD');

            return pm.Moment(today).isSameOrBefore(due_day) ? false : 'pm-task-done';
        },


        /**
         * Showing (-) between task start date and due date
         * 
         * @param  string  task_start_field 
         * @param  string  start_date       
         * @param  string  due_date         
         * 
         * @return Boolean                  
         */
        isBetweenDate: function isBetweenDate(task_start_field, start_date, due_date) {
            if (task_start_field && start_date && due_date) {
                return true;
            }

            return false;
        },


        /**
         * Mark task done and undone
         * 
         * @param  int  task_id    
         * @param  Boolean is_checked 
         * @param  int  task_index 
         * 
         * @return void             
         */
        taskDoneUndone: function taskDoneUndone(args) {
            var self = this,
                pre_define = {
                data: {
                    task_id: '',
                    status: 0,
                    project_id: self.project_id ? self.project_id : ''
                },
                callback: false
            },
                args = jQuery.extend(true, pre_define, args);

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + args.data.project_id + '/tasks/' + args.data.task_id + '/change-status',
                type: 'PUT',
                data: args.data,
                success: function success(res) {
                    if (typeof args.callback === 'function') {
                        args.callback(res);
                    }
                    self.$store.commit('updateProjectMeta', 'total_activities');
                }
            };
            self.httpRequest(request_data);
        },

        /**
         * Checking empty object
         * @param  {Object}  obj 
         * @return {Boolean}     
         */
        isEmptyObject: function isEmptyObject(obj) {
            return (0, _keys2.default)(obj).length === 0;
        },


        /**
         * Single Task Poppu mutation setup
         * @param  {object} task Task Object
         * @param  {Object} list List object
         * @return {[type]}      [description]
         */
        singleTask: function singleTask(task, list) {
            this.$store.commit('projectTaskLists/single_task_popup', { task: task });
        },


        /**
         * List templete action to show hide blank templete
         * @return {[type]} [description]
         */
        listTemplateAction: function listTemplateAction() {
            var lists = this.$store.state.projectTaskLists.lists,
                blank,
                listTmpl;

            if (lists.length) {
                blank = false;
                listTmpl = true;
            } else {
                blank = true;
                listTmpl = false;
            }
            this.$store.commit('projectTaskLists/balankTemplateStatus', blank);
            this.$store.commit('projectTaskLists/listTemplateStatus', listTmpl);
        },


        is_assigned: function is_assigned(task) {

            return true;
        },

        privateClass: function privateClass(privacy) {
            if (typeof privacy !== 'undefined') {
                if (privacy == '1') {
                    return 'dashicons dashicons-lock';
                } else {
                    return 'dashicons dashicons-unlock';
                }
            }
        },
        listLockUnlock: function listLockUnlock(list) {

            var self = this;
            var data = {
                is_private: list.meta.privacy == '0' ? 1 : 0
            };
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/task-lists/privacy/' + list.id,
                type: 'POST',
                data: data,
                success: function success(res) {
                    self.$store.commit('projectTaskLists/updateListPrivacy', {
                        privacy: data.is_private,
                        project_id: self.project_id,
                        list_id: list.id

                    });
                },
                error: function error(res) {}
            };
            self.httpRequest(request_data);
        },
        TaskLockUnlock: function TaskLockUnlock(task) {

            var self = this;
            var data = {
                is_private: task.meta.privacy == '0' ? 1 : 0
            };
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/tasks/privacy/' + task.id,
                type: 'POST',
                data: data,
                success: function success(res) {
                    self.$store.commit('projectTaskLists/updateTaskPrivacy', {
                        privacy: data.is_private,
                        project_id: self.project_id,
                        task_id: task.id,
                        list_id: task.task_list.data.id

                    });
                },
                error: function error(res) {
                    res.responseJSON.message.map(function (value, index) {
                        pm.Toastr.error(value);
                    });
                }
            };
            self.httpRequest(request_data);
        },
        taskTimeWrap: function taskTimeWrap(task) {
            var isActive = this.getSettings('task_start_field', false);

            if (isActive) {
                if (typeof task.due_date == 'undefined' && typeof task.start_at == 'undefined') {
                    return false;
                }

                if (!task.due_date.date && !task.start_at.date) {
                    return false;
                }
            } else {
                if (typeof task.due_date == 'undefined') {
                    return false;
                }

                if (!task.due_date.date) {
                    return false;
                }
            }

            return true;
        },
        getMatches: function getMatches(string, regex, index) {
            index || (index = 1);

            var matches = [];
            var match;
            while (match = regex.exec(string)) {
                matches.push(match[index]);
            }

            return matches;
        }
    }
};

exports.default = PM_TaskList_Mixin;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.7' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_do_action_vue__ = __webpack_require__(29);
/* empty harmony namespace reexport */
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_do_action_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/common/do-action.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-92d70bf6", Component.options)
  } else {
    hotAPI.reload("data-v-92d70bf6", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(11)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 7 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    data: function data() {
        return {};
    },

    computed: {
        can_create_milestone: function can_create_milestone() {
            return this.user_can("create_task");
        }
    },
    methods: {
        can_edit_milestone: function can_edit_milestone(milestone) {
            var user = PM_Vars.current_user;
            if (this.is_manager()) {
                return true;
            }

            if (milestone.creator.data.id == user.ID) {
                return true;
            }

            return false;
        },
        showHideMilestoneForm: function showHideMilestoneForm(status, milestone) {
            var milestone = milestone || false,
                milestone = jQuery.isEmptyObject(milestone) ? false : milestone;

            if (milestone && typeof milestone.edit_mode != 'undefined') {
                if (status === 'toggle') {
                    milestone.edit_mode = milestone.edit_mode ? false : true;
                } else {
                    milestone.edit_mode = status;
                }
            } else {
                this.$store.commit('projectMilestones/showHideMilestoneForm', status);
            }
        },
        showHideCommentForm: function showHideCommentForm(status, comment) {
            if (status === 'toggle') {
                comment.edit_mode = comment.edit_mode ? false : true;
            } else {
                comment.edit_mode = status;
            }
        },

        /**
         * get single Milestones 
         *
         * @param {args} object [object with calback]
         */

        getMilestone: function getMilestone(args) {
            var self = this,
                pre_define = {
                conditions: {
                    with: 'discussion_boards,task_lists'
                },
                callback: false
            };

            var args = jQuery.extend(true, pre_define, args);
            var conditions = self.generateConditions(args.conditions);

            var request = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/milestones/' + self.$route.params.discussion_id + '?' + conditions,
                success: function success(res) {
                    self.addMeta(res.data);
                    self.$store.commit('projectMilestones/setMilestone', res.data);

                    if (typeof args.callback === 'function') {
                        args.callback(res.data);
                    }
                }
            };
            self.httpRequest(request);
        },


        /**
         * Retrive milestones 
         * 
         * @param {Object} args Object with callback
         */
        getMilestones: function getMilestones(args) {
            var self = this,
                pre_define = {
                conditions: {
                    with: 'discussion_boards,task_lists',
                    per_page: 20,
                    page: 1
                },
                callback: false
            };

            var args = jQuery.extend(true, pre_define, args);
            var conditions = self.generateConditions(args.conditions);

            var request = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/milestones?' + conditions,
                success: function success(res) {
                    res.data.map(function (milestone, index) {
                        self.addMeta(milestone, index);
                    });
                    self.$store.commit('projectMilestones/setMilestones', res.data);
                    self.$store.commit('projectMilestones/setMilestonesMeta', res.meta.pagination);

                    if (typeof args.callback === 'function') {
                        args.callback(res.data);
                    }
                }
            };

            self.httpRequest(request);
        },
        getSelfMilestones: function getSelfMilestones() {
            var self = this,
                args = {
                conditions: {
                    with: 'discussion_boards,task_lists',
                    per_page: 20,
                    page: self.setCurrentPageNumber()
                },
                callback: function callback() {
                    self.$root.$store.state.projectMilestoneLoaded = true;
                    pm.NProgress.done();
                    self.templateAction();
                }
            };

            self.getMilestones(args);
        },
        addMeta: function addMeta(milestone, index) {
            milestone.edit_mode = false;
        },
        setCurrentPageNumber: function setCurrentPageNumber() {
            var self = this;
            var current_page_number = self.$route.params.current_page_number ? self.$route.params.current_page_number : 1;
            self.current_page_number = current_page_number;
            return current_page_number;
        },


        /**
        * WP settings date format convert to pm.Moment date format with time zone
        * 
        * @param  string date 
        * 
        * @return string      
        */
        dateFormat: function dateFormat(date) {
            if (!date) {
                return;
            }

            date = new Date(date);
            date = pm.Moment(date).format('YYYY-MM-DD');

            var format = 'MMMM DD YYYY';

            if (PM_Vars.wp_date_format == 'Y-m-d') {
                format = 'YYYY-MM-DD';
            } else if (PM_Vars.wp_date_format == 'm/d/Y') {
                format = 'MM/DD/YYYY';
            } else if (PM_Vars.wp_date_format == 'd/m/Y') {
                format = 'DD/MM/YYYY';
            }

            return pm.Moment(date).format(format);
        },


        /**
         * Add new milestone 
         *
         * @param {object} args upgoment with data
         * @return { void } [description]
         */
        addMilestone: function addMilestone(args) {
            var self = this,
                pre_define = {
                data: {
                    order: 0,
                    status: 'incomplete'
                },
                callback: false
            };
            var args = jQuery.extend(true, pre_define, args);
            var data = pm_apply_filters('before_milestone_save', args.data);
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/milestones',
                type: 'POST',
                data: data,
                success: function success(res) {
                    self.addMeta(res.data);

                    self.$store.commit('projectMilestones/newMilestone', res.data);
                    self.$store.commit('projectMilestones/afterNewMilestoneUpdateMeta');

                    self.$root.$store.state.milestones_load = false;
                    // Display a success toast, with a title
                    pm.Toastr.success(res.message);

                    self.$root.$emit('after_comment');
                    self.templateAction();

                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                    self.$store.commit('updateProjectMeta', 'total_activities');
                    self.$store.commit('updateProjectMeta', 'total_milestones');

                    if (self.section === 'milestones') {
                        self.afterNewMilestone();
                    }
                },
                error: function error(res) {
                    // Showing error

                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }

                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            };
            self.httpRequest(request_data);
        },


        /**
         * Update milesotne 
         * @param  {[Objecat]}   args [description]
         * @return {[type]}             [description]
         */
        updateMilestone: function updateMilestone(args) {
            var self = this,
                pre_define = {
                data: {
                    order: 0,
                    status: 'incomplete',
                    project_id: self.project_id
                },
                callback: false
            };
            var args = jQuery.extend(true, pre_define, args);
            var data = pm_apply_filters('before_milestone_save', args.data);
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + args.data.project_id + '/milestones/' + args.data.id,
                type: 'PUT',
                data: data,
                success: function success(res) {
                    self.addMeta(res.data);

                    // update milestone 
                    self.$store.commit('projectMilestones/updateMilestone', res.data);
                    self.$root.$store.state.milestones_load = false;

                    // Display a success toast, with a title
                    pm.Toastr.success(res.message);
                    self.submit_disabled = false;
                    self.templateAction();

                    self.$root.$emit('after_comment');
                    self.$store.commit('updateProjectMeta', 'total_activities');

                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }

                    if (self.section === 'milestones') {
                        self.afterNewMilestone();
                    }
                },
                error: function error(res) {
                    // Showing error
                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            };
            self.httpRequest(request_data);
        },


        /**
         * Delete Milestone
         * @param  {Object} args 
         * @return {void}      
         */
        deleteMilestone: function deleteMilestone(args) {
            if (!confirm(this.__('Are you sure! Want to delete this milestones?', 'pm'))) {
                return;
            }
            var pre_define = {
                milestone_id: '',
                callback: false
            };

            var args = jQuery.extend(true, pre_define, args);
            var self = this;

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/milestones/' + args.milestone_id,
                type: 'DELETE',
                success: function success(res) {
                    self.$store.commit('projectMilestones/afterDeleteMilestone', args.milestone_id);
                    self.$root.$store.state.milestones_load = false;
                    self.$store.commit('updateProjectMeta', 'total_activities');
                    self.$store.commit('decrementProjectMeta', 'total_milestones');
                    pm.Toastr.success(res.message);
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            };

            self.httpRequest(request_data);
        },
        afterNewMilestone: function afterNewMilestone() {
            var self = this;

            if (self.$route.params.current_page_number > 1) {
                // named route
                self.$router.push({
                    name: 'milestones',
                    params: {
                        project_id: self.project_id
                    }
                });
            }
        },

        /**
         * Get task completed percentage from todo list
         * 
         * @param  array tasks
         *  
         * @return float       
         */
        getProgressPercent: function getProgressPercent(list) {

            if (typeof list == 'undefined') {
                return 0;
            }

            var total_tasks = parseInt(list.meta.total_incomplete_tasks) + parseInt(list.meta.total_complete_tasks),
                //tasks.length,
            completed_tasks = list.meta.total_complete_tasks,
                //this.countCompletedTasks( list ),
            progress = 100 * completed_tasks / total_tasks;

            return isNaN(progress) ? 0 : progress.toFixed(0);
        },

        /**
         * Get task completed progress width
         * 
         * @param  array tasks 
         * 
         * @return obj       
         */
        getProgressStyle: function getProgressStyle(list) {
            if (typeof list == 'undefined') {
                return 0;
            }
            var width = this.getProgressPercent(list);

            return { width: width + '%' };
        },
        humanDate: function humanDate(milestone) {
            var due_date = milestone.achieve_date.date ? milestone.achieve_date.date : milestone.created_at.date;
            due_date = new Date(due_date), due_date = pm.Moment(due_date).format();

            return pm.Moment(due_date).fromNow(true);
        },
        momentFormat: function momentFormat(milestone) {
            var due_date = milestone.achieve_date.date ? milestone.achieve_date.date : milestone.created_at.date;
            due_date = new Date(due_date), due_date = pm.Moment(due_date).format();

            return due_date;
        },
        getDueDate: function getDueDate(milestone) {
            var due_date = milestone.achieve_date.date ? milestone.achieve_date.date : milestone.created_at.date;
            var due_date = this.dateFormat(due_date);

            return due_date;
        },
        templateAction: function templateAction() {
            var blank, miltemp;

            var milestones = this.$store.state.projectMilestones.milestones;

            if (milestones.length) {
                blank = false;miltemp = true;
            }

            if (!milestones.length) {
                blank = true;miltemp = false;
            }

            this.$store.commit('projectMilestones/balankTemplateStatus', blank);
            this.$store.commit('projectMilestones/milestoneTemplateStatus', miltemp);
        },
        privateClass: function privateClass(privacy) {
            if (typeof privacy !== 'undefined') {
                if (privacy == '1') {
                    return 'dashicons dashicons-lock';
                } else {
                    return 'dashicons dashicons-unlock';
                }
            }
        },
        milestoneLockUnlock: function milestoneLockUnlock(milestone) {
            var self = this;
            var data = {
                is_private: milestone.meta.privacy == '0' ? 1 : 0
            };
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/milestones/privacy/' + milestone.id,
                type: 'POST',
                data: data,
                success: function success(res) {
                    self.$store.commit('projectMilestones/updateMilestonePrivacy', {
                        privacy: data.is_private,
                        project_id: self.project_id,
                        milestone_id: milestone.id

                    });
                },
                error: function error(res) {}
            };
            self.httpRequest(request_data);
        }
    }
};

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_header_vue__ = __webpack_require__(114);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_14704110_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_header_vue__ = __webpack_require__(316);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_header_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_14704110_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_header_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/common/header.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-14704110", Component.options)
  } else {
    hotAPI.reload("data-v-14704110", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_pagination_vue__ = __webpack_require__(32);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6ddfcbc6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_pagination_vue__ = __webpack_require__(92);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_pagination_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6ddfcbc6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_pagination_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/common/pagination.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6ddfcbc6", Component.options)
  } else {
    hotAPI.reload("data-v-6ddfcbc6", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = __webpack_require__(43);

var _extends3 = _interopRequireDefault(_extends2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    data: function data() {
        return {};
    },

    computed: (0, _extends3.default)({}, pm.Vuex.mapState('projectLists', {
        projects_view: function projects_view(state) {
            return state.projects_view;
        }
    }), {
        isFetchProjects: function isFetchProjects() {
            return this.$store.state.projectLists.isFetchProjects;
        }
    }),
    methods: {
        projects_view_class: function projects_view_class() {
            return 'grid_view' === this.projects_view ? 'pm-project-grid' : 'pm-project-list';
        },
        projectFetchStatus: function projectFetchStatus(status) {
            this.$store.commit('projectLists/projectFetchComplete', status);
        }
    }
};

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(7);
var core = __webpack_require__(4);
var ctx = __webpack_require__(65);
var hide = __webpack_require__(15);
var has = __webpack_require__(14);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 14 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(17);
var createDesc = __webpack_require__(50);
module.exports = __webpack_require__(6) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(20);
var IE8_DOM_DEFINE = __webpack_require__(66);
var toPrimitive = __webpack_require__(71);
var dP = Object.defineProperty;

exports.f = __webpack_require__(6) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_notify_user_vue__ = __webpack_require__(31);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_39a04148_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_notify_user_vue__ = __webpack_require__(89);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(97)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_notify_user_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_39a04148_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_notify_user_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/common/notify-user.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-39a04148", Component.options)
  } else {
    hotAPI.reload("data-v-39a04148", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_text_editor_vue__ = __webpack_require__(33);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3fcc7e9a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_text_editor_vue__ = __webpack_require__(90);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_text_editor_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3fcc7e9a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_text_editor_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/common/text-editor.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3fcc7e9a", Component.options)
  } else {
    hotAPI.reload("data-v-3fcc7e9a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(16);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 21 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 22 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(47);
var defined = __webpack_require__(21);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(51)('wks');
var uid = __webpack_require__(52);
var Symbol = __webpack_require__(7).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_file_uploader_vue__ = __webpack_require__(30);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_615029ec_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_file_uploader_vue__ = __webpack_require__(91);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_file_uploader_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_615029ec_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_file_uploader_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/common/file-uploader.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-615029ec", Component.options)
  } else {
    hotAPI.reload("data-v-615029ec", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    data: function data() {
        return {};
    },

    methods: {
        // saveSettings (settings, callback) {
        //     var settings = this.formatSettings(settings),
        //         self = this;

        //     var request = {
        //         url: self.base_url + '/pm/v2/settings',
        //         data: {
        //             settings: settings
        //         },
        //         type: 'POST',
        //         success (res) {
        //             pm.Toastr.success(res.message);
        //             if (typeof callback !== 'undefined') {
        //                 callback();
        //             }
        //         }
        //     };

        //     self.httpRequest(request);
        // },

        // formatSettings (settings) {
        //     var data = [];

        //     jQuery.each(settings, function(name, value) {
        //         data.push({
        //             key: name,
        //             value: value
        //         });
        //     });

        //     return data;
        // },

        // getSettings (key, pre_define ) {
        //     var pre_define   = pre_define || false,
        //         settings  = PM_Vars.settings;

        //     if ( typeof PM_Vars.settings[key] === 'undefined' ) {
        //         return pre_define;
        //     }

        //     return PM_Vars.settings[key];

        // }
    }
};

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _mixin = __webpack_require__(3);

var _mixin2 = _interopRequireDefault(_mixin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    data: function data() {
        return {
            base_url: PM_Vars.base_url + '/' + PM_Vars.rest_api_prefix,
            project_id: typeof this.$route === 'undefined' ? false : parseInt(this.$route.params.project_id),
            current_user: PM_Vars.current_user,
            avatar_url: PM_Vars.avatar_url,
            text: PM_Vars.text,
            PM_Vars: PM_Vars,
            pm: pm,
            taskLists: _mixin2.default,
            currentDate: pm.Moment(new Date()).format('YYYY-MM-DD')
        };
    },
    created: function created() {
        setLocaleData(PM_Vars.language.pm);
    },


    methods: {
        __: function (_) {
            function __(_x, _x2) {
                return _.apply(this, arguments);
            }

            __.toString = function () {
                return _.toString();
            };

            return __;
        }(function (text, domain) {
            return __(text, domain);
        }),

        sprintf: sprintf,
        user_can: function user_can(cap) {
            return pmUserCan(cap, this.$store.state.project);
        },
        is_user_in_project: function is_user_in_project() {
            return pmIsUserInProject(this.$store.state.project);
        },
        is_manager: function is_manager(project) {
            var project = project || this.$store.state.project;
            return pmIsManager(project);
        },
        has_manage_capability: function has_manage_capability() {
            return pmHasManageCapability();
        },
        has_create_capability: function has_create_capability() {
            return pmHasCreateCapability();
        },
        intersect: function intersect(a, b) {
            var d = {};
            var results = [];
            for (var i = 0; i < b.length; i++) {
                d[b[i]] = true;
            }
            for (var j = 0; j < a.length; j++) {
                if (d[a[j]]) results.push(a[j]);
            }
            return results;
        },
        can_edit_comment: function can_edit_comment(commnet) {
            var user = PM_Vars.current_user;
            if (commnet.commentable_type == 'task_activity') {
                return false;
            }
            if (this.is_manager()) {
                return true;
            }
            if (commnet.creator.data.id == user.ID) {
                return true;
            }

            return false;
        },
        pad2: function pad2(number) {
            return (number < 10 ? '0' : '') + number;
        },
        stringToTime: function stringToTime(seconds) {
            var numdays = Math.floor(seconds / 86400);

            var numhours = Math.floor(seconds % 86400 / 3600);

            var numminutes = Math.floor(seconds % 86400 % 3600 / 60);

            var numseconds = seconds % 86400 % 3600 % 60;

            return {
                'days': this.pad2(numdays),
                'hours': this.pad2(numhours),
                'minutes': this.pad2(numminutes),
                'seconds': this.pad2(numseconds)
            };
        },


        /**
         * WP settings date format convert to pm.Moment date format with time zone
         * 
         * @param  string date 
         * 
         * @return string      
         */
        shortDateFormat: function shortDateFormat(date) {
            if (date == '') {
                return;
            }

            date = new Date(date);
            date = pm.Moment(date).format('YYYY-MM-DD');

            var format = 'MMM DD';

            return pm.Moment(date).format(String(format));
        },


        /**
         * WP settings date format convert to pm.Moment date format with time zone
         * 
         * @param  string date 
         * 
         * @return string      
         */
        dateFormat: function dateFormat(date) {
            if (!date) {
                return;
            }

            date = new Date(date);
            date = pm.Moment(date).format('YYYY-MM-DD');

            var format = 'MMMM DD YYYY';

            if (PM_Vars.wp_date_format == 'Y-m-d') {
                format = 'YYYY-MM-DD';
            } else if (PM_Vars.wp_date_format == 'm/d/Y') {
                format = 'MM/DD/YYYY';
            } else if (PM_Vars.wp_date_format == 'd/m/Y') {
                format = 'DD/MM/YYYY';
            }

            return pm.Moment(date).format(format);
        },


        /**
        * WP settings date format convert to pm.Moment date format with time zone
        * 
        * @param  string date 
        * 
        * @return string      
        */
        taskDateFormat: function taskDateFormat(date) {
            if (!date) {
                return;
            }

            date = new Date(date);
            return pm.Moment(date).format('MMMM DD');
        },
        getSettings: function getSettings(key, pre_define, objKey) {

            var pre_define = typeof pre_define == 'undefined' ? false : pre_define,
                objKey = typeof objKey == 'undefined' ? false : objKey,
                settings = PM_Vars.settings;
            if (objKey) {
                if (typeof PM_Vars.settings[objKey] === 'undefined') {
                    return pre_define;
                }
                if (typeof PM_Vars.settings[objKey][key] === 'undefined') {
                    return pre_define;
                }

                if (PM_Vars.settings[objKey][key] === "true") {
                    return true;
                } else if (PM_Vars.settings[objKey][key] === "false") {
                    return false;
                } else {
                    return PM_Vars.settings[objKey][key];
                }
            }

            if (typeof PM_Vars.settings[key] == 'undefined') {
                return pre_define;
            }

            if (PM_Vars.settings[key] == "true") {
                return true;
            } else if (PM_Vars.settings[key] == "false") {
                return false;
            } else {
                return PM_Vars.settings[key];
            }
        },
        dataURLtoFile: function dataURLtoFile(dataurl, filename) {
            var arr = dataurl.split(','),
                mime = arr[0].match(/:(.*?);/)[1],
                bstr = atob(arr[1]),
                n = bstr.length,
                u8arr = new Uint8Array(n);
            while (n--) {
                u8arr[n] = bstr.charCodeAt(n);
            }
            return new File([u8arr], filename, { type: mime });
        },
        httpRequest: function httpRequest(property) {
            var before = function before(xhr) {
                xhr.setRequestHeader("Authorization_name", btoa('asaquzzaman')); //btoa js encoding base64_encode
                xhr.setRequestHeader("Authorization_password", btoa(12345678)); //atob js decode base64_decode

                xhr.setRequestHeader("X-WP-Nonce", PM_Vars.permission);
            };

            property.beforeSend = typeof property.beforeSend === 'undefined' ? before : property.beforeSend;

            return jQuery.ajax(property);
        },
        registerStore: function registerStore(module_name, store) {
            if (typeof store === 'undefined') {
                return false;
            }

            var self = this;
            if (typeof store !== 'undefined') {
                var mutations = store.mutations || {}; //self.$options.mutations;
                var state = store.state || {}; //self.$options.state;
            }

            // register a module `myModule`

            self.$store.registerModule(module_name, {
                namespaced: true,
                state: state,
                mutations: mutations
            });
        },


        /**
         * Create a new project 
         * @param  {[Object]} args data with callback
         * @return {viod}      [description]
         */
        newProject: function newProject(args) {
            var self = this,
                pre_define = {
                data: {
                    title: '',
                    categories: '',
                    description: '',
                    notify_users: '',
                    assignees: '',
                    status: 'incomplete'
                }
            },
                args = jQuery.extend(true, pre_define, args);
            args = pm_apply_filters('before_project_save', args);
            var request = {
                type: 'POST',
                url: this.base_url + '/pm/v2/projects/',
                data: args.data,
                success: function success(res) {
                    jQuery("#pm-project-dialog").dialog('destroy');
                    self.$root.$store.commit('newProject', res.data);
                    self.showHideProjectForm(false);
                    self.resetSelectedUsers();
                    pm.Toastr.success(res.message);

                    if (typeof args.callback === 'function') {
                        args.callback(res);
                    }
                },
                error: function error(res) {
                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }
                }
            };

            this.httpRequest(request);
        },
        formatUsers: function formatUsers(users) {
            var format_users = [];

            users.map(function (user, index) {
                format_users.push({
                    'user_id': user.id,
                    'role_id': user.roles.data[0].id
                });
            });

            return format_users;
        },
        updateProject: function updateProject(args) {
            var self = this,
                pre_define = {
                data: {
                    status: 'incomplete'
                },
                callback: false
            },
                args = jQuery.extend(true, pre_define, args);
            args = pm_apply_filters('before_project_save', args);
            var request = {
                type: 'PUT',
                url: this.base_url + '/pm/v2/projects/' + args.data.id,
                data: args.data,
                success: function success(res) {

                    self.$root.$store.commit('updateProject', res.data);
                    pm.Toastr.success(res.message);
                    self.showHideProjectForm(false);
                    jQuery("#pm-project-dialog").dialog("close");
                    self.resetSelectedUsers();
                    self.$store.commit('updateProjectMeta', 'total_activities');
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                },
                error: function error(res) {
                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            };

            this.httpRequest(request);
        },
        resetSelectedUsers: function resetSelectedUsers() {
            this.$root.$store.commit('resetSelectedUsers');
        },
        getProjects: function getProjects(args) {

            var self = this;
            var pre_define = {
                conditions: {
                    status: '',
                    per_page: this.getSettings('project_per_page', 10),
                    page: this.setCurrentPageNumber(),
                    category: typeof this.$route.query.category !== 'undefined' ? this.$route.query.category[0] : ''
                }
            };

            var args = jQuery.extend(true, pre_define, args);
            var conditions = pm_apply_filters('before_get_project', args.conditions);
            conditions = self.generateConditions(conditions);

            var request_data = {
                url: self.base_url + '/pm/v2/projects?' + conditions,
                success: function success(res) {
                    res.data.map(function (project) {
                        self.addProjectMeta(project);
                    });

                    self.$store.commit('setProjects', { 'projects': res.data });
                    self.$store.commit('setProjectsMeta', res.meta);

                    pm.NProgress.done();
                    self.loading = false;

                    if (typeof args.callback != 'undefined') {
                        args.callback(res.data);
                    }

                    pmProjects = res.data;
                }
            };

            self.httpRequest(request_data);
        },
        setCurrentPageNumber: function setCurrentPageNumber() {
            var current_page_number = this.$route.params.current_page_number ? this.$route.params.current_page_number : 1;
            this.current_page_number = current_page_number;
            return current_page_number;
        },
        getProject: function getProject(args) {
            var self = this;
            var pre_define = {
                conditions: {},
                project_id: this.project_id,
                callback: false
            };

            var args = jQuery.extend(true, pre_define, args);
            var conditions = self.generateConditions(args.conditions);

            if (typeof args.project_id === 'undefined') {
                return;
            }

            self.httpRequest({
                url: self.base_url + '/pm/v2/projects/' + args.project_id + '?' + conditions,
                success: function success(res) {

                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                },
                error: function error(res) {
                    if (res.status === 404) {
                        pm.Toastr.success(res.responseJSON.message);
                    }

                    self.$router.push({
                        name: 'project_lists'
                    });
                }
            });
        },
        getUser: function getUser(args) {
            var self = this;
            var pre_define = {
                data: {},
                conditions: {},
                callback: false
            };

            var args = jQuery.extend(true, pre_define, args);
            var conditions = self.generateConditions(args.conditions);

            if (typeof args.data.user_id === 'undefined') {
                return;
            }

            self.httpRequest({
                url: self.base_url + '/pm/v2/users/' + args.data.user_id + '?' + conditions,
                success: function success(res) {
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            });
        },
        get_search_user: function get_search_user(args) {
            var self = this;
            var pre_define = {
                data: {},
                conditions: {},
                callback: false
            };

            var args = jQuery.extend(true, pre_define, args);
            var conditions = self.generateConditions(args.conditions);

            var request = {
                url: self.base_url + '/pm/v2/users/search?' + conditions,
                success: function success(res) {
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            };

            return self.httpRequest(request);
        },
        getGloabalProject: function getGloabalProject() {
            var args = {
                callback: function callback(res) {
                    this.addProjectMeta(res.data);
                    this.$root.$store.commit('setProject', res.data);
                    this.$root.$store.commit('setProjectMeta', res.meta);
                    this.$root.$store.commit('setProjectUsers', res.data.assignees.data);
                    pmBus.$emit('pm_after_fetch_project', res.data);
                }
            };
            this.$root.$store.state.project_switch = false;
            var project = this.$root.$store.state.project;
            if (!project.hasOwnProperty('id') || project.id !== this.project_id) {
                this.$root.$store.commit('setDefaultLoaded');
                this.getProject(args);
            } else {
                pmBus.$emit('pm_after_fetch_project', project);
            }
        },
        addProjectMeta: function addProjectMeta(project) {
            project.edit_mode = false;
            project.settings_hide = false;
        },
        getProjectCategories: function getProjectCategories(callback) {
            var callback = callback || false;
            var self = this;

            var categories = self.$root.$store.state.categories;

            if (categories.length) {
                if (callback) {
                    //callback(categories);
                }
                return categories;
            }

            this.httpRequest({
                url: self.base_url + '/pm/v2/categories?type=project',
                success: function success(res) {
                    self.$root.$store.commit('setCategories', res.data);

                    if (callback) {
                        callback(res.data);
                    }
                }
            });
        },
        getRoles: function getRoles(callback) {
            var callback = callback || false;
            var self = this;

            var roles = self.$root.$store.state.roles;

            if (roles.length) {
                if (callback) {
                    callback(roles);
                }
                return roles;
            }

            self.httpRequest({
                url: self.base_url + '/pm/v2/roles',
                success: function success(res) {
                    self.$root.$store.commit('setRoles', res.data);

                    if (callback) {
                        callback(res.data);
                    }
                }
            });
        },

        /**
         * Get index from array object element
         *
         * @param   itemList
         * @param   id
         *
         * @return  int
         */
        getIndex: function getIndex(itemList, id, slug) {
            var index = false;

            jQuery.each(itemList, function (key, item) {

                if (item[slug] == id) {
                    index = key;
                }
            });

            return index;
        },
        showHideProjectForm: function showHideProjectForm(status) {
            this.$root.$store.commit('showHideProjectForm', status);
        },
        deleteFile: function deleteFile(file_id, callback) {
            var self = this;

            self.httpRequest({
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/files/' + file_id,
                type: 'DELETE',
                success: function success(res) {

                    if (typeof callback !== 'undefined') {
                        callback(res.data);
                    }
                }
            });
        },
        userTaskProfileUrl: function userTaskProfileUrl(user_id) {
            return PM_Vars.ajaxurl + '?page=pm_task#/user/' + user_id;
        },


        /**
         * Set extra element in httpRequest query
         */
        getQueryParams: function getQueryParams(add_query) {

            var self = this,
                query_str = '';

            jQuery.each(add_query, function (key, val) {

                if (Array.isArray(val)) {

                    val.map(function (el, index) {
                        query_str = query_str + key + '=' + el + '&';
                    });
                } else {
                    query_str = query_str + key + '=' + val + '&';
                }
            });

            jQuery.each(this.$route.query, function (key, val) {

                if (Array.isArray(val)) {

                    val.map(function (el, index) {
                        query_str = query_str + key + '=' + el + '&';
                    });
                } else {
                    query_str = query_str + key + '=' + val + '&';
                }
            });

            var query_str = query_str.slice(0, -1);

            return query_str;
        },


        /**
         * Set extra element in this.$route.query
         */
        setQuery: function setQuery(add_query) {
            var self = this,
                route_query = {};

            jQuery.each(self.$route.query, function (key, val) {
                if (Array.isArray(val)) {
                    route_query[key] = [];

                    val.map(function (el, index) {
                        route_query[key].push(el);
                    });
                } else if (val) {
                    route_query[key] = [val];
                }
            });

            jQuery.each(add_query, function (key, val) {
                if (val) {
                    route_query[key] = [val];
                } else {
                    delete route_query[key];
                }
            });

            return route_query;
        },


        /**
         * ISO_8601 Date format convert to moment date format
         * 
         * @param  string date 
         * 
         * @return string      
         */
        pmDateISO8601Format: function pmDateISO8601Format(date, time) {
            var date = new Date(date + ' ' + time);

            return pm.Moment(date).format();
        },
        deleteProject: function deleteProject(id, project) {
            if (!confirm(this.__('Are you sure to delete this project?', 'pm'))) {
                return;
            }
            var self = this;
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + id,
                type: 'DELETE',
                success: function success(res) {
                    self.$store.commit('afterDeleteProject', id);
                    self.$store.commit('afterDeleteProjectCount', { project: project });
                    pm.Toastr.success(res.message);
                    var total_page = self.$store.state.pagination.total_pages;

                    if (self.project_id || !self.$store.state.projects.length) {
                        self.$router.push({
                            name: 'project_lists'
                        });

                        if (total_page > 1 && typeof self.$route.params.current_page_number == 'undefined') {
                            self.getProjects();
                        }
                    } else {
                        //self.getProjects();
                    }
                }
            };

            self.httpRequest(request_data);
        },
        addUserMeta: function addUserMeta(user) {
            if (!user.roles.data.length) {
                user.roles = {
                    data: [{
                        description: "Co-Worker for project manager",
                        id: 2,
                        title: "Co-Worker"
                    }]
                };
            }
        },
        projects_view_class: function projects_view_class() {
            return this.$store.state.projects_view === 'grid_view' ? 'pm-project-grid' : 'pm-project-list';
        },
        generateConditions: function generateConditions(conditions) {
            var query = '';

            if (jQuery.isEmptyObject(conditions)) {
                return '';
            }

            jQuery.each(conditions, function (condition, key) {
                if (key) {
                    query = query + condition + '=' + key + '&';
                }
            });

            return query.slice(0, -1);
        },

        /**
         * [get Global Milestones in every page where milestone need and store in $root.$store.state.milestone ]
         * @param  {Function} callback [optional]
         * @return {[type]}            [milestone]
         */
        getGlobalMilestones: function getGlobalMilestones(callback) {
            var self = this,
                milestones = this.$root.$store.state.milestones,
                milestones_load = self.$root.$store.state.milestones_load;

            if (milestones_load) {
                if (typeof callback === 'function') {
                    callback.call(self, milestones);
                }
                return milestones;
            } else {
                var request = {
                    url: self.base_url + '/pm/v2/projects/' + self.project_id + '/milestones',
                    success: function success(res) {
                        self.$root.$store.commit('setMilestones', res.data);

                        if (typeof callback === 'function') {
                            callback.call(self, res.data);
                        }
                    }
                };
                self.httpRequest(request);
            }
        },
        loadingStart: function loadingStart(id, args) {
            var pre_define = {
                // loading text
                text: '',

                // from 0 to 100 
                percent: '',

                // duration in ms
                duration: '',

                // z-index property
                zIndex: '',

                // sets relative position to preloader's parent
                setRelative: false

            };
            var args = jQuery.extend(true, pre_define, args);

            jQuery('#' + id).preloader(args);
        },
        loadingStop: function loadingStop(id) {
            jQuery('#' + id).preloader('remove');
        },
        arrayDiffer: function arrayDiffer(arr1, arr2) {
            var diff = [];
            arr1.forEach(function (arr) {
                if (arr2.indexOf(arr) > -1) {
                    diff.push(arr);
                }
            });
            return diff;
        },
        saveSettings: function saveSettings(settings, project_id, callback) {
            settings = this.formatSettings(settings), project_id = project_id || false, self = this;

            var url = project_id ? self.base_url + '/pm/v2/projects/' + project_id + '/settings' : self.base_url + '/pm/v2/settings';

            var request = {
                url: url,
                data: {
                    settings: settings
                },
                type: 'POST',
                success: function success(res) {
                    pm.Toastr.success(res.message);
                    if (typeof callback !== 'undefined') {
                        callback(res.data);
                    }
                }
            };

            self.httpRequest(request);
        },
        formatSettings: function formatSettings(settings) {
            var data = [];

            jQuery.each(settings, function (name, value) {
                data.push({
                    key: name,
                    value: value
                });
            });

            return data;
        },
        getViewType: function getViewType(callback) {
            var is_need_fetch_view_type = this.$store.state.is_need_fetch_view_type;

            if (!is_need_fetch_view_type) {
                callback({
                    'value': this.$store.state.listView
                });
                return;
            }

            var self = this;
            var request = {
                url: self.base_url + '/pm/v2/projects/' + this.project_id + '/settings?key=list_view_type',
                data: {},
                type: 'GET',
                success: function success(res) {
                    self.$store.commit('is_need_fetch_view_type', false);
                    if (res.length) {
                        self.setViewType(res.data.value);
                    } else {
                        self.setViewType('list');
                    }

                    if (typeof callback !== 'undefined') {
                        callback(res.data);
                    }
                }
            };

            self.httpRequest(request);
        },
        setViewType: function setViewType(view_type) {
            this.$store.commit('listViewType', view_type);
        },
        getClients: function getClients() {

            var project = this.$store.state.project,
                assignees = this.$store.state.project.assignees.data;

            return assignees.filter(function (user) {

                var roles = user.roles.data.filter(function (role) {
                    return role.slug == 'client' ? true : false;
                });

                return roles.length ? true : false;
            });
        },
        myTaskRedirect: function myTaskRedirect(userid) {
            var current_user = PM_Vars.current_user.ID;

            if (!PM_Vars.is_pro) {
                return this.$router.resolve({ name: 'my-tasks' }).href;
            }

            if (userid == current_user) {
                return this.$router.resolve({ name: 'mytask-tasks' }).href;
            }

            return this.$router.resolve({ name: 'mytask-tasks', params: { user_id: userid } }).href;
        },
        fileDownload: function fileDownload(fileId) {
            window.location.href = this.base_url + '/pm/v2/projects/' + this.project_id + '/files/' + fileId + '/users/' + PM_Vars.current_user.ID + '/download';
        },
        getDownloadUrl: function getDownloadUrl(fileId) {
            return this.base_url + '/pm/v2/projects/' + this.project_id + '/files/' + fileId + '/users/' + PM_Vars.current_user.ID + '/download';
        },
        copy: function copy(text) {
            var $temp = $("<input>");
            $("body").append($temp);
            $temp.val(text).select();
            document.execCommand("copy");
            $temp.remove();
        },
        deleteSettings: function deleteSettings(key, pre_define) {
            var pre_define = pre_define || false,
                settings = PM_Vars.settings;

            if (typeof PM_Vars.settings[key] === 'undefined') {
                return pre_define;
            }

            return PM_Vars.settings[key];
        }
    }
};

/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['value', 'dependency'],
    data: function data() {
        return {
            dateValue: ''
        };
    },
    created: function created() {
        if (!this.value) {
            return '';
        }
        var date = new Date(this.value);
        date = pm.Moment(date).format('YYYY-MM-DD');
        this.dateValue = date;
    },

    mounted: function mounted() {
        var self = this,
            limit_date = self.dependency == 'pm-datepickter-from' ? "maxDate" : "minDate";

        jQuery(self.$el).datepicker({
            dateFormat: 'yy-mm-dd',
            changeYear: true,
            changeMonth: true,
            numberOfMonths: 1,
            onClose: function onClose(selectedDate) {
                jQuery("." + self.dependency).datepicker("option", limit_date, selectedDate);
            },
            onSelect: function onSelect(dateText) {
                self.$emit('input', dateText);
            }
        });

        jQuery(self.$el).on("change", function () {
            var date = jQuery(self.$el).val();
            self.$emit('input', date);
        });
    }
});

/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers_mixin_mixin__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers_mixin_mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__helpers_mixin_mixin__);




function PMGetComponents() {
    var components = {};

    weDevs_PM_Components.map(function (obj, key) {
        if (obj.property.mixins) {
            obj.property.mixins.push(__WEBPACK_IMPORTED_MODULE_0__helpers_mixin_mixin___default.a);
        } else {
            obj.property.mixins = [__WEBPACK_IMPORTED_MODULE_0__helpers_mixin_mixin___default.a];
        }

        components[obj.component] = obj.property;
    });

    return components;
}

var action = {
    props: {
        hook: {
            type: String,
            required: true
        },

        actionData: {
            type: [Object, Array, String, Number],

            default: function _default() {
                return {};
            }
        }
    },

    components: PMGetComponents(),

    render: function render(h) {
        this.$options.components = PMGetComponents();

        var components = [],
            self = this;

        weDevs_PM_Components.map(function (obj, key) {
            if (obj.hook == self.hook) {
                components.push(Vue.compile('<' + obj.component + ' :actionData="actionData"></' + obj.component + '>').render.call(self));
            }
        });

        return h('span', {}, components);
    }
};

/* harmony default export */ __webpack_exports__["a"] = (action);

/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

// Register a global custom directive called v-pm-popup-box
Vue.directive('pm-uploader', {
    inserted: function inserted(el, binding, vnode) {
        new PM_Uploader(el, 'pm-upload-container', vnode.context);
    },

    update: function update(el, binding, vnode) {
        //new PM_Uploader('pm-upload-pickfiles', 'pm-upload-container', vnode.context );
    }
});

/* harmony default export */ __webpack_exports__["a"] = ({
    props: {
        files: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        delete: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        single: {
            type: Boolean,
            default: false
        }
    },

    methods: {
        /**
         * Set the uploaded file
         *
         * @param  object file_res
         *
         * @return void
         */
        fileUploaded: function fileUploaded(file_res) {

            if (typeof this.files == 'undefined') {
                this.files = [];
            }

            this.files.push(file_res.res.file);
        },

        /**
         * Delete file
         *
         * @param  object file_id
         *
         * @return void
         */
        deletefile: function deletefile(file_id) {
            if (!confirm(this.text.are_you_sure)) {
                return;
            }
            var self = this;
            var index = self.getIndex(self.files, file_id, 'id');

            if (index !== false) {
                self.files.splice(index, 1);
                this.delete.push(file_id);
            }
        },
        test: function test() {}
    }
});

/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ __webpack_exports__["a"] = ({
    props: {
        value: {
            type: [Array],
            default: function _default() {
                return [];
            }
        },
        users: {
            type: [Array],
            default: function _default() {
                return this.$root.$store.state.project_users;
            }
        }
    },
    data: function data() {
        return {
            notify_users: this.value,
            select_all: false
        };
    },

    watch: {
        notify_users: function notify_users(value) {
            if (this.assain_users.length == value.length) {
                this.select_all = true;
            }
            if (this.assain_users.length !== value.length) {
                this.select_all = false;
            }
            this.$emit('input', value);
        },
        value: function value(v) {
            this.notify_users = v;
        }
    },
    computed: {
        assain_users: function assain_users() {
            var _this = this;

            return this.users.filter(function (user) {
                return user.id !== _this.current_user.ID;
            });
        }
    },
    methods: {
        select_all_user: function select_all_user() {
            var self = this;
            if (this.select_all) {
                this.notify_users = [];
                this.assain_users.forEach(function (user) {
                    self.notify_users.push(user.id);
                });
            } else {
                this.notify_users = [];
            }
        }
    }
});

/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['total_pages', 'current_page_number', 'component_name'],

    data: function data() {
        return {
            route_query: this.$route.query
        };
    },


    watch: {
        '$route': function $route(url) {
            this.route_query = url.query;
        }
    },

    methods: {
        pageClass: function pageClass(page) {
            if (page == this.current_page_number) {
                return 'page-numbers current';
            }

            return 'page-numbers';
        }
    }
});

/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__);

//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({

    watch: {
        content: {
            handler: function handler(html) {
                if (html.html == '') {

                    tinymce.get(this.editor_id).setContent(html.html);
                    tinymce.get(this.editor_id).save();
                }
            },

            deep: true
        }
    },

    // Get passing data for this component.
    props: ['editor_id', 'content'],

    // Initial action for this component
    mounted: function mounted() {
        var _settings;

        var self = this;

        if (tinymce.get(this.editor_id)) {
            tinymce.execCommand('mceRemoveEditor', false, this.editor_id);
        }

        // Instantiate the editor
        var settings = (_settings = {
            selector: 'textarea#' + self.editor_id,
            menubar: false,
            placeholder: self.__('Write a comment...', 'pm'),
            branding: false
        }, __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_settings, 'menubar', false), __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_settings, 'setup', function setup(editor) {
            editor.on('change', function () {
                self.content.html = editor.getContent();
            });
            editor.on('keyup', function (event) {
                self.content.html = editor.getContent();
            });
            editor.on('NodeChange', function () {
                self.content.html = editor.getContent();
            });
        }), __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_settings, 'external_plugins', PM_Vars.todo_list_text_editor.external_plugins), __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_settings, 'fontsize_formats', '10px 11px 13px 14px 16px 18px 22px 25px 30px 36px 40px 45px 50px 60px 65px 70px 75px 80px'), __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_settings, 'font_formats', 'Arial=arial,helvetica,sans-serif;' + 'Comic Sans MS=comic sans ms,sans-serif;' + 'Courier New=courier new,courier;' + 'Georgia=georgia,palatino;' + 'Lucida=Lucida Sans Unicode, Lucida Grande, sans-serif;' + 'Tahoma=tahoma,arial,helvetica,sans-serif;' + 'Times New Roman=times new roman,times;' + 'Trebuchet MS=trebuchet ms,geneva;' + 'Verdana=verdana,geneva;'), __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_settings, 'plugins', PM_Vars.todo_list_text_editor.plugins), __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_settings, 'toolbar1', 'shortcodes bold italic strikethrough bullist numlist alignleft aligncenter alignjustify alignright link wp_adv'), __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_settings, 'toolbar2', 'formatselect forecolor backcolor underline blockquote hr code'), __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()(_settings, 'toolbar3', 'fontselect fontsizeselect removeformat undo redo'), _settings);

        if (PmProComment.hasOwnProperty('mentions')) {
            PmProComment.mentions['source'] = self.$store.state.project_users;
            settings = jQuery.extend(settings, PmProComment);
        }

        tinymce.init(settings);
    }
});

/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__task_comments_vue__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_do_action_vue__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_multiselect__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_multiselect___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_vue_multiselect__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["a"] = ({
    props: {
        taskId: {
            type: [Number, Boolean, String],
            default: function _default() {
                return false;
            }
        },
        projectId: {
            type: [Number, Boolean, String],
            default: function _default() {
                return false;
            }
        }
    },
    data: function data() {
        return {
            loading: true,
            is_task_title_edit_mode: false,
            is_task_details_edit_mode: false,
            is_task_date_edit_mode: false,
            is_enable_multi_select: false,
            task_description: '',
            update_description: __('Update Description', 'pm'),
            task_id: this.$route.params.task_id,
            list: {},
            task: {},
            assigned_to: []
        };
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],

    watch: {
        is_enable_multi_select: function is_enable_multi_select(val) {

            if (val) {
                pm.Vue.nextTick(function () {
                    jQuery('.multiselect__input').show().focus();
                });
            }
        }
    },

    computed: {
        doActionData: function doActionData() {
            return {
                task: this.task,
                list: this.list,
                is_single_task_open: true
            };
        },


        project_users: function project_users() {
            return this.$root.$store.state.project_users;
        },
        task_users: function task_users() {
            if (jQuery.isEmptyObject(this.$store.state.projectTaskLists.task)) {
                return [];
            }
            return this.$store.state.projectTaskLists.task.assignees.data;
        },


        /**
         * Get and Set task users
         */
        task_assign: {
            /**
             * Filter only current task assgin user from vuex state project_users
             *
             * @return array
             */
            get: function get() {
                this.assigned_to = this.task.assignees.data.map(function (user) {
                    return user.id;
                });
                return typeof this.task.assignees === 'undefined' ? [] : this.task.assignees.data;
            },

            /**
             * Set selected users at task insert or edit time
             *
             * @param array selected_users
             */
            set: function set(selected_users) {
                this.assigned_to = selected_users.map(function (user) {
                    return user.id;
                });

                this.task.assignees.data = selected_users;

                this.updateTaskElement(this.task);
            }
        }
    },

    components: {
        'task-comments': __WEBPACK_IMPORTED_MODULE_0__task_comments_vue__["a" /* default */],
        'multiselect': __WEBPACK_IMPORTED_MODULE_3_vue_multiselect___default.a,
        'do-action': __WEBPACK_IMPORTED_MODULE_1__common_do_action_vue__["default"]
    },

    created: function created() {
        this.getSelfTask();
        window.addEventListener('click', this.windowActivity);
        this.$root.$on('pm_date_picker', this.fromDate);
    },

    methods: {
        copyUrl: function copyUrl(task) {
            pmBus.$emit('pm_generate_task_url', task);
            // var url  = PM_Vars.project_page + '#' + this.$route.path + '/tasks/' + task.id; 
            // this.copy(url);
        },
        lineThrough: function lineThrough(task) {
            if (task.status) {
                return 'pm-line-through';
            }
        },

        singleTaskDoneUndone: function singleTaskDoneUndone() {
            var self = this,
                status = !this.task.status ? 1 : 0;
            var args = {
                data: {
                    task_id: this.task.id ? this.task.id : this.taskId,
                    status: status,
                    project_id: this.task.project_id
                },
                callback: function callback(res) {
                    if (status == '1') {
                        self.task.status = true;
                    } else {
                        self.task.status = false;
                    }

                    pmBus.$emit('pm_after_task_doneUndone', res);
                }
            };
            this.taskDoneUndone(args);
        },
        getSelfTask: function getSelfTask() {
            var self = this;
            var args = {
                condition: {
                    with: 'boards,comments'
                },
                task_id: self.task_id ? self.task_id : this.taskId,
                project_id: self.projectId ? self.projectId : self.project_id,
                callback: function callback(res) {
                    if (typeof res.data === 'undefined') {
                        pm.Toastr.error(res.message);
                        self.$router.go(-1);
                        return;
                    }
                    self.addMeta(res.data);
                    //self.list = res.data.boards.data[0];
                    //self.$store.commit('projectTaskLists/setSingleTask', res.data);
                    self.task = res.data;

                    self.loading = false;
                }
            };

            this.getTask(args);
        },
        addMeta: function addMeta(task) {
            task.edit_mode = false;

            if (task.status === 'complete') {
                task.status = true;
            } else {
                task.status = false;
            }

            task.comments.data.map(function (comment) {
                comment.edit_mode = false;
            });
        },


        isEnableMultiSelect: function isEnableMultiSelect() {
            if (!this.can_edit_task(this.task)) {
                return false;
            }
            this.is_enable_multi_select = true;

            pm.Vue.nextTick(function () {
                jQuery('.multiselect__input').focus();
            });
        },

        fromDate: function fromDate(date) {
            if (date.field == 'datepicker_from') {

                if (this.task.due_date.date) {
                    var start = new Date(date.date);
                    var end = new Date(this.task.due_date.date);
                    var compare = pm.Moment(end).isBefore(start);

                    if (this.task_start_field && compare) {
                        pm.Toastr.error('Invalid date range!');
                        return;
                    }
                }

                this.task.start_at.date = date.date;

                this.updateTaskElement(this.task);
            }

            if (date.field == 'datepicker_to') {

                if (this.task.start_at.date) {
                    var start = new Date(this.task.start_at.date);
                    var end = new Date(date.date);
                    var compare = pm.Moment(end).isBefore(start);

                    if (this.task_start_field && compare) {
                        pm.Toastr.error('Invalid date range!');
                        return;
                    }
                }

                var task = this.task;

                var start = new Date(task.start_at),
                    due = new Date(date.date);

                if (!this.$store.state.projectTaskLists.permissions.task_start_field) {
                    task.due_date.date = date.date;
                    this.updateTaskElement(task);
                } else if (start <= due) {
                    task.due_date.date = date.date;
                    this.updateTaskElement(task);
                }
            }
        },
        updateTaskPrivacy: function updateTaskPrivacy(task, status) {
            task.task_privacy = status;
            this.updateTaskElement(task);
        },
        isTaskDetailsEditMode: function isTaskDetailsEditMode() {
            if (!this.can_edit_task(this.task)) {
                this.is_task_details_edit_mode = false;
            } else {
                this.task_description = this.task.description.content;
                this.is_task_details_edit_mode = true;
            }

            pm.Vue.nextTick(function () {
                jQuery('.pm-desc-field').focus();
            });
        },

        updateDescription: function updateDescription(task, event) {
            if (event.keyCode == 13 && event.shiftKey) {
                return;
            }

            if (this.task_description.trim() == task.description.content) {
                return;
            }
            task.description.content = this.task_description.trim();
            this.is_task_details_edit_mode = false, this.updateTaskElement(task);
        },

        closePopup: function closePopup() {
            pmBus.$emit('pm_after_close_single_task_modal');
            return;
            this.$router.go(-1);
            return;
            var history = this.$store.state.history;

            if (!history.from.name) {
                this.$router.push({
                    name: 'task_lists',
                    params: {
                        project_id: this.$route.params.project_id
                    }
                });
            } else {
                this.$router.push(history.from);
            }
        },

        singleTaskTitle: function singleTaskTitle(task) {
            return task.completed ? 'pm-task-complete' : 'pm-task-incomplete';
        },

        updateTaskElement: function updateTaskElement(task) {
            var start = new Date(task.start_at.date);
            var end = new Date(task.due_date.date);
            var compare = pm.Moment(end).isBefore(start);
            var project_id = this.project_id ? this.project_id : task.project_id;

            if (task.start_at.date && task.due_date.date && this.task_start_field && compare) {
                pm.Toastr.error('Invalid date range!');
                return;
            }

            var update_data = {
                'title': task.title,
                'description': task.description.content,
                'estimation': task.estimation,
                'start_at': task.start_at ? task.start_at.date : '',
                'due_date': task.due_date ? task.due_date.date : '',
                'complexity': task.complexity,
                'priority': task.priority,
                'order': task.order,
                'payable': task.payable,
                'recurrent': task.recurrent,
                'status': task.status ? 1 : 0,
                'category_id': task.category_id,
                'assignees': this.assigned_to
            },
                self = this,
                url = this.base_url + '/pm/v2/projects/' + project_id + '/tasks/' + task.id;

            var request_data = {
                url: url,
                data: update_data,
                type: 'PUT',
                success: function success(res) {
                    pmBus.$emit('pm_after_update_single_task', res);
                    self.is_task_title_edit_mode = false;
                    self.is_task_details_edit_mode = false;
                    self.is_enable_multi_select = false;
                    self.task.description = res.data.description;
                    self.$store.commit('updateProjectMeta', 'total_activities');
                },
                error: function error(res) {
                    res.responseJSON.message.map(function (value, index) {
                        pm.Toastr.error(value);
                    });
                }
            };

            this.httpRequest(request_data);
        },

        isTaskTitleEditMode: function isTaskTitleEditMode() {
            if (!this.can_edit_task(this.task)) {
                return this.is_task_title_edit_mode = false;
            }
            return this.is_task_title_edit_mode = true;
        },

        isTaskDateEditMode: function isTaskDateEditMode() {
            if (!this.can_edit_task(this.task)) {
                return this.is_task_date_edit_mode = false;
            }
            return this.is_task_date_edit_mode = true;
        },

        windowActivity: function windowActivity(el) {
            var title_blur = jQuery(el.target).hasClass('pm-task-title-activity'),
                dscription_blur = jQuery(el.target).closest('.pm-des-area'),
                assign_user = jQuery(el.target).closest('.pm-assigned-user-wrap');

            if (!title_blur) {
                this.is_task_title_edit_mode = false;
            }

            if (!dscription_blur.length) {
                this.is_task_details_edit_mode = false;
            }

            if (!assign_user.length) {
                this.is_enable_multi_select = false;
            }

            this.datePickerDispaly(el);
        },

        datePickerDispaly: function datePickerDispaly(el) {
            var date_picker_blur = jQuery(el.target).closest('.pm-task-date-wrap').hasClass('pm-date-window');

            if (!date_picker_blur) {
                this.is_task_date_edit_mode = false;
            }
        },

        singleTaskLockUnlock: function singleTaskLockUnlock(task) {
            var self = this;
            var data = {
                is_private: task.meta.privacy == '0' ? 1 : 0
            };
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + task.project_id + '/tasks/privacy/' + task.id,
                type: 'POST',
                data: data,
                success: function success(res) {
                    task.meta.privacy = data.is_private;
                },
                error: function error(res) {
                    res.responseJSON.message.map(function (value, index) {
                        pm.Toastr.error(value);
                    });
                }
            };
            self.httpRequest(request_data);
        }
    },

    destroyed: function destroyed() {
        this.$store.commit('isSigleTask', false);
        pmBus.$emit('pm_before_destroy_single_task', this.task);
    }
});

/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_common_text_editor_vue__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_common_file_uploader_vue__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_common_notify_user_vue__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["a"] = ({
    props: {
        comment: {
            type: [Object],
            default: function _default() {
                return {};
            }
        },

        comments: {
            type: [Array],
            default: function _default() {
                return [];
            }
        },

        task: {
            type: [Object],
            default: function _default() {
                return {
                    id: false
                };
            }
        }
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_3__mixin___default.a],

    data: function data() {
        return {
            submit_disabled: false,
            show_spinner: false,
            content: {
                html: typeof this.comment.content == 'undefined' ? '' : this.comment.content
            },
            task_id: typeof this.task.id == 'undefined' ? false : this.task.id,
            files: typeof this.comment.files === 'undefined' ? [] : this.comment.files.data,
            deleted_files: [],
            mentioned_user_ids: null,
            add_new_comment: __('Add New Comment', 'pm'),
            update_comment: __('Update Comment', 'pm'),
            notify_users: []
        };
    },


    components: {
        'text-editor': __WEBPACK_IMPORTED_MODULE_0__components_common_text_editor_vue__["a" /* default */],
        'file-uploader': __WEBPACK_IMPORTED_MODULE_1__components_common_file_uploader_vue__["a" /* default */],
        notifyUser: __WEBPACK_IMPORTED_MODULE_2__components_common_notify_user_vue__["default"]
    },

    watch: {
        /**
        * Observe onchange comment message
        *
        * @param string new_content 
        * 
        * @type void
        */
        content: {
            handler: function handler(new_content) {
                this.comment.content = new_content.html;
            },

            deep: true
        }
    },

    computed: {
        /**
        * Editor ID
        * 
        * @return string
        */
        editor_id: function editor_id() {
            var comment_id = typeof this.comment.id === 'undefined' ? '' : '-' + this.comment.id;
            return 'pm-comment-editor' + comment_id;
        }
    },
    methods: {
        taskCommentAction: function taskCommentAction() {
            var regEx = /data-pm-user-id=":(.+?):"/g;
            this.mentioned_user_ids = this.getMatches(this.comment.content, regEx, 1);

            // Prevent sending request when multiple click submit button 
            if (this.submit_disabled) {
                return;
            }
            if (typeof this.comment.content === 'undefined' || this.comment.content == '') {
                return;
            }
            // Disable submit button for preventing multiple click
            this.submit_disabled = true;
            // Showing loading option 
            this.show_spinner = true;
            var self = this;

            var args = {
                data: {
                    commentable_id: self.task_id,
                    content: self.comment.content,
                    commentable_type: 'task',
                    deleted_files: self.deleted_files || [],
                    mentioned_users: self.mentioned_user_ids,
                    files: self.files || [],
                    project_id: self.task.project_id,
                    notify_users: this.notify_users
                }
            };

            if (typeof this.comment.id !== 'undefined') {
                args.data.id = this.comment.id;
                args.callback = function (res) {
                    var index = self.getIndex(self.comments, self.comment.id, 'id');
                    self.comments.splice(index, 1, res.data);
                };

                self.updateComment(args);
            } else {

                args.callback = function (res) {
                    self.comments.push(res.data);
                    self.submit_disabled = false;
                    self.show_spinner = false;
                    self.content.html = '';
                    self.comment.content = '';
                    self.notify_users = [];
                    self.files = [];
                    self.deleted_files = [];
                };
                self.addComment(args);
            }
        }
    }
});

/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__task_comment_form_vue__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["a"] = ({
    // Get passing data for this component.
    props: ['comments', 'task'],

    mixins: [__WEBPACK_IMPORTED_MODULE_1__mixin___default.a],

    data: function data() {
        return {
            currnet_user_id: 1,
            avatar_url: PM_Vars.avatar_url
        };
    },

    components: {
        'task-comment-form': __WEBPACK_IMPORTED_MODULE_0__task_comment_form_vue__["a" /* default */]
    },

    methods: {
        commentDate: function commentDate(comment) {
            if (typeof comment.created_at != 'undefined') {
                return comment.created_at.date + ', ' + comment.created_at.time;
            }

            return '';
        },
        showHideTaskCommentForm: function showHideTaskCommentForm(comment) {
            comment.edit_mode = comment.edit_mode ? false : true;
        },

        current_user_can_edit_delete: function current_user_can_edit_delete(comment, task) {
            if (comment.comment_type == 'pm_activity') {
                return false;
            }

            if (task.can_del_edit) {
                return true;
            }

            if (comment.user_id == this.currnet_user_id && comment.comment_type == '') {
                return true;
            }

            return false;
        },

        deleteTaskComment: function deleteTaskComment(id) {
            if (!confirm(this.__('Are you sure!', 'pm'))) {
                return;
            }
            var self = this;

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/comments/' + id,
                type: 'DELETE',
                success: function success(res) {
                    var index = self.getIndex(self.comments, id, 'id');
                    pm.Toastr.success(res.message);
                    self.comments.splice(index, 1);
                }
            };
            this.httpRequest(request_data);
        }
    }
});

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    data: function data() {
        return {};
    },

    methods: {
        can_create_message: function can_create_message() {
            return this.user_can("create_message");
        },
        can_edit_message: function can_edit_message(message) {
            var user = PM_Vars.current_user;
            if (this.is_manager()) {
                return true;
            }

            if (message.creator.data.id == user.ID) {
                return true;
            }

            return false;
        },
        showHideDiscussForm: function showHideDiscussForm(status, discuss) {
            var discuss = discuss || false,
                discuss = jQuery.isEmptyObject(discuss) ? false : discuss;

            if (discuss && typeof discuss.edit_mode != 'undefined') {
                if (status === 'toggle') {
                    discuss.edit_mode = discuss.edit_mode ? false : true;
                } else {
                    discuss.edit_mode = status;
                }
            } else {
                this.$store.commit('projectDiscussions/showHideDiscussForm', status);
            }
        },
        showHideDiscussCommentForm: function showHideDiscussCommentForm(status, comment) {
            if (status === 'toggle') {
                comment.edit_mode = comment.edit_mode ? false : true;
            } else {
                comment.edit_mode = status;
            }
        },
        getDiscussion: function getDiscussion(args) {
            var self = this;
            var pre_define = {
                conditions: {
                    with: 'comments',
                    per_page: 20,
                    page: 1
                },
                callback: false
            };

            var args = jQuery.extend(true, pre_define, args);
            var conditions = self.generateConditions(args.conditions);

            var request = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/discussion-boards?' + conditions,
                success: function success(res) {
                    res.data.map(function (discuss, index) {
                        self.addDiscussMeta(discuss);
                    });
                    self.$store.commit('projectDiscussions/setDiscussion', res.data);
                    self.$store.commit('projectDiscussions/setDiscussionMeta', res.meta);

                    if (typeof args.callback === 'function') {
                        args.callback(res.data);
                    }
                }
            };
            self.httpRequest(request);
        },
        getDiscuss: function getDiscuss(args) {
            var self = this;
            var pre_define = {
                conditions: {
                    with: 'comments'
                },
                callback: false
            };

            var args = jQuery.extend(true, pre_define, args);
            var conditions = self.generateConditions(args.conditions);

            var request = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/discussion-boards/' + self.$route.params.discussion_id + '?' + conditions, ///with=comments',
                success: function success(res) {
                    self.addDiscussMeta(res.data);
                    self.$store.commit('projectDiscussions/setDiscuss', res.data);

                    if (typeof args.callback === 'function') {
                        args.callback(res.data);
                    }
                }
            };
            self.httpRequest(request);
        },
        addDiscussMeta: function addDiscussMeta(discuss) {
            var self = this;
            discuss.edit_mode = false;

            if (typeof discuss.comments !== 'undefined') {
                discuss.comments.data.map(function (comment, index) {
                    self.addCommentMeta(comment);
                });
            }
        },
        setCurrentPageNumber: function setCurrentPageNumber() {
            var self = this;
            var current_page_number = self.$route.params.current_page_number ? self.$route.params.current_page_number : 1;
            self.current_page_number = current_page_number;
            return current_page_number;
        },


        /**
         * Insert and edit task
         * 
         * @return void
         */
        newDiscuss: function newDiscuss(args) {
            // Exit from this function, If submit button disabled 
            if (this.submit_disabled) {}
            //return;

            // Disable submit button for preventing multiple click
            this.submit_disabled = true;

            var self = this;
            var pre_define = {};
            var args = jQuery.extend(true, pre_define, args);
            var data = new FormData();

            data.append('title', args.title);
            data.append('description', args.description);
            data.append('milestone', args.milestone_id);
            data.append('notify_users', args.notify_users);
            data.append('order', 0);

            args.deleted_files.map(function (del_file) {
                data.append('files_to_delete[]', del_file);
            });

            args.files.map(function (file) {
                if (typeof file.attachment_id === 'undefined') {
                    var decode = self.dataURLtoFile(file.thumb, file.name);
                    data.append('files[]', decode);
                }
            });

            // Showing loading option 
            this.show_spinner = true;
            data = pm_apply_filters('before_discuss_save', data);
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/discussion-boards',
                type: 'POST',
                data: data,
                cache: false,
                contentType: false,
                processData: false,
                success: function success(res) {

                    // Display a success toast, with a title
                    pm.Toastr.success(res.message);
                    self.submit_disabled = false;
                    self.show_spinner = false;
                    self.addDiscussMeta(res.data);
                    self.showHideDiscussForm(false);
                    self.$root.$emit('after_comment');
                    self.$store.commit('projectDiscussions/newDiscuss', res.data);
                    self.$store.commit('projectDiscussions/updateMetaAfterNewDiscussion');
                    self.$store.commit('updateProjectMeta', 'total_activities');
                    self.$store.commit('updateProjectMeta', 'total_discussion_boards');

                    if (typeof args.callback === 'function') {
                        args.callback(res.data);
                    }
                },
                error: function error(res) {
                    self.show_spinner = false;

                    // Showing error
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }
                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }
                    self.submit_disabled = false;
                }
            };
            self.httpRequest(request_data);
        },

        updateDiscuss: function updateDiscuss(args) {
            // Exit from this function, If submit button disabled 
            if (this.submit_disabled) {
                return;
            }

            var self = this;
            var pre_define = {};
            var args = jQuery.extend(true, pre_define, args);
            var data = new FormData();

            // Disable submit button for preventing multiple click
            this.submit_disabled = true;

            data.append('title', args.title);
            data.append('description', args.description);
            data.append('milestone', args.milestone_id);
            data.append('notify_users', args.notify_users);
            data.append('order', 0);

            args.deleted_files.map(function (del_file) {
                data.append('files_to_delete[]', del_file);
            });

            args.files.map(function (file) {
                if (typeof file.attachment_id === 'undefined') {
                    var decode = self.dataURLtoFile(file.thumb, file.name);
                    data.append('files[]', decode);
                }
            });

            // Showing loading option 
            this.show_spinner = true;
            data = pm_apply_filters('before_discuss_save', data);
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/discussion-boards/' + this.discuss.id,
                type: 'POST',
                data: data,
                cache: false,
                contentType: false,
                processData: false,
                success: function success(res) {
                    self.show_spinner = false;
                    // Display a success toast, with a title
                    pm.Toastr.success(res.message);
                    self.addDiscussMeta(res.data);
                    self.submit_disabled = false;

                    self.showHideDiscussForm(false, self.discuss);

                    self.$store.commit('projectDiscussions/updateDiscuss', res.data);
                    self.$root.$emit('after_comment');
                    self.$store.commit('updateProjectMeta', 'total_activities');

                    if (typeof args.callback === 'function') {
                        args.callback(res.data);
                    }
                },
                error: function error(res) {
                    self.show_spinner = false;
                    // Showing error
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }
                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }
                    self.submit_disabled = false;
                }
            };
            self.httpRequest(request_data);
        },
        lockUnlock: function lockUnlock(discuss) {
            var self = this;
            var data = {
                is_private: discuss.meta.privacy == '0' ? 1 : 0
            };
            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/discussion-boards/privacy/' + discuss.id,
                type: 'POST',
                data: data,
                success: function success(res) {

                    if (typeof discuss.callback === 'function') {
                        discuss.callback(res.data);
                    }

                    self.$store.commit('projectDiscussions/updatePrivacy', {
                        privacy: data.is_private,
                        project_id: self.project_id,
                        discuss_id: discuss.id

                    });
                },
                error: function error(res) {
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }
                }
            };
            self.httpRequest(request_data);
        },
        newComment: function newComment(args) {
            // Exit from this function, If submit button disabled 
            if (this.submit_disabled) {
                return;
            }

            // Disable submit button for preventing multiple click
            this.submit_disabled = true;

            var self = this;
            var pre_define = {};
            var args = jQuery.extend(true, pre_define, args);
            var data = new FormData();

            data.append('content', args.content);
            data.append('mentioned_users', args.mentioned_users);
            data.append('commentable_id', args.commentable_id);
            data.append('commentable_type', args.commentable_type); //'discussion-board'
            data.append('notify_users', args.notify_users);

            args.files.map(function (file) {
                if (typeof file.attachment_id === 'undefined') {
                    var decode = self.dataURLtoFile(file.thumb, file.name);
                    data.append('files[]', decode);
                }
            });

            // Showing loading option 
            this.show_spinner = true;

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/comments',
                type: 'POST',
                data: data,
                cache: false,
                contentType: false,
                processData: false,
                success: function success(res) {
                    self.addCommentMeta(res.data);
                    self.files = [];
                    //self.getDiscuss(self);
                    self.show_spinner = false;
                    // Display a success toast, with a title
                    pm.Toastr.success(res.message);

                    self.submit_disabled = false;

                    self.showHideDiscussCommentForm(false, self.comment);

                    //self.$root.$emit('after_comment');

                    self.$store.commit('projectDiscussions/afterNewComment', {
                        'comment': res.data,
                        'commentable_id': args.commentable_id
                    });

                    self.$store.commit('updateProjectMeta', 'total_activities');

                    if (typeof args.callback === 'function') {
                        args.callback(res.data);
                    }
                },
                error: function error(res) {
                    self.show_spinner = false;

                    // Showing error
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }
                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }
                    self.submit_disabled = false;
                }
            };

            self.httpRequest(request_data);
        },
        updateComment: function updateComment(args) {
            // Exit from this function, If submit button disabled 
            if (this.submit_disabled) {
                return;
            }

            // Disable submit button for preventing multiple click
            this.submit_disabled = true;

            var self = this;
            var pre_define = {};
            var args = jQuery.extend(true, pre_define, args);
            var data = new FormData();

            data.append('content', args.content);
            data.append('mentioned_users', args.mentioned_users);
            data.append('commentable_id', args.commentable_id);
            data.append('commentable_type', args.commentable_type); //'discussion-board'
            data.append('notify_users', args.notify_users);

            args.deleted_files.map(function (del_file) {
                data.append('files_to_delete[]', del_file);
            });

            args.files.map(function (file) {
                if (typeof file.attachment_id === 'undefined') {
                    var decode = self.dataURLtoFile(file.thumb, file.name);
                    data.append('files[]', decode);
                }
            });

            // Showing loading option 
            this.show_spinner = true;

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/comments/' + args.comment_id,
                type: 'POST',
                data: data,
                cache: false,
                contentType: false,
                processData: false,
                success: function success(res) {
                    self.addCommentMeta(res.data);
                    self.files = [];
                    //self.getDiscuss(self);
                    self.show_spinner = false;
                    // Display a success toast, with a title
                    pm.Toastr.success(res.message);

                    self.submit_disabled = false;

                    self.showHideDiscussCommentForm(false, self.comment);

                    //self.$root.$emit('after_comment', true);

                    self.$store.commit('projectDiscussions/afterUpdateComment', {
                        'comment': res.data,
                        'commentable_id': args.commentable_id,
                        'comment_id': args.comment_id
                    });
                    self.$store.commit('updateProjectMeta', 'total_activities');

                    if (typeof args.callback === 'function') {
                        args.callback(res.data);
                    }
                },
                error: function error(res) {
                    self.show_spinner = false;

                    // Showing error
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }
                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }
                    self.submit_disabled = false;
                }
            };

            self.httpRequest(request_data);
        },
        addCommentMeta: function addCommentMeta(comment) {
            comment.edit_mode = false;
        },
        deleteDiscuss: function deleteDiscuss(args) {
            if (!confirm(this.__('Are you sure!', 'pm'))) {
                return;
            }
            var self = this;
            var pre_define = {
                discuss_id: false,
                callback: false
            };

            var args = jQuery.extend(true, pre_define, args);

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/discussion-boards/' + args.discuss_id,
                type: 'DELETE',
                success: function success(res) {
                    self.$store.commit('projectDiscussions/afterDeleteDiscuss', args.discuss_id);

                    if (!self.$store.state.projectDiscussions.discussion.length) {
                        self.$router.push({
                            name: 'discussions',
                            params: {
                                project_id: self.project_id
                            }
                        });
                    } else {
                        self.getDiscussion();
                    }
                    self.$store.commit('updateProjectMeta', 'total_activities');
                    self.$store.commit('decrementProjectMeta', 'total_discussion_boards');

                    pm.Toastr.success(res.message);
                    if (typeof args.callback === 'function') {
                        args.callback();
                    }
                },
                error: function error(res) {
                    res.responseJSON.message.map(function (value, index) {
                        pm.Toastr.error(value);
                    });
                }
            };

            self.httpRequest(request_data);
        },
        deleteComment: function deleteComment(args) {
            if (!confirm(this.__('Are you sure to delete this comment?', 'pm'))) {
                return;
            }

            var self = this;
            var pre_define = {
                comment_id: false,
                callback: false,
                commentable_id: false
            };

            var args = jQuery.extend(true, pre_define, args);

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/comments/' + args.comment_id,
                type: 'DELETE',
                success: function success(res) {
                    pm.Toastr.success(res.message);
                    self.$store.commit('projectDiscussions/afterDeleteComment', {
                        comment_id: args.comment_id,
                        commentable_id: args.commentable_id
                    });
                    self.$store.commit('updateProjectMeta', 'total_activities');
                },
                error: function error(res) {
                    if (res.status == 500) {
                        res.responseJSON.message.map(function (value, index) {
                            pm.Toastr.error(value);
                        });
                    }
                }
            };

            self.httpRequest(request_data);
        },
        viewAction: function viewAction(blank, discuss) {
            var blank = blank || false;
            var discuss = discuss || false;

            this.$store.commit('projectDiscussions/balankTemplateStatus', blank);
            this.$store.commit('projectDiscussions/discussTemplateStatus', discuss);
        },
        lazyAction: function lazyAction() {
            var discussion = this.$store.state.projectDiscussions.discussion;

            if (discussion.length) {
                this.viewAction(false, true);
            }

            if (!discussion.length) {
                this.viewAction(true, false);
            }
        },
        privateClass: function privateClass(discuss) {
            if (typeof discuss.meta.privacy !== 'undefined') {
                if (discuss.meta.privacy == 1) {
                    return 'dashicons dashicons-lock';
                } else {
                    return 'dashicons dashicons-unlock';
                }
            }
        },
        getMatches: function getMatches(string, regex, index) {
            index || (index = 1);

            var matches = [];
            var match;
            while (match = regex.exec(string)) {
                matches.push(match[index]);
            }

            return matches;
        }
    }
};

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(67);
var enumBugKeys = __webpack_require__(46);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(51)('keys');
var uid = __webpack_require__(52);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(21);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_new_task_form_vue__ = __webpack_require__(155);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_182bf602_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_new_task_form_vue__ = __webpack_require__(319);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(406)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_new_task_form_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_182bf602_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_new_task_form_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/new-task-form.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-182bf602", Component.options)
  } else {
    hotAPI.reload("data-v-182bf602", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.VueMultiselect=e():t.VueMultiselect=e()}(this,function(){return function(t){function e(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:i})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="/",e(e.s=66)}([function(t,e){var n=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(t,e,n){t.exports=!n(12)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){var i=n(10),r=n(43),o=n(31),s=Object.defineProperty;e.f=n(1)?Object.defineProperty:function(t,e,n){if(i(t),e=o(e,!0),i(n),r)try{return s(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e,n){var i=n(77),r=n(21);t.exports=function(t){return i(r(t))}},function(t,e,n){var i=n(9),r=n(52),o=n(18),s=n(55),u=n(53),a=function(t,e,n){var l,c,f,p,h=t&a.F,d=t&a.G,v=t&a.S,y=t&a.P,g=t&a.B,b=d?i:v?i[e]||(i[e]={}):(i[e]||{}).prototype,m=d?r:r[e]||(r[e]={}),_=m.prototype||(m.prototype={});d&&(n=e);for(l in n)c=!h&&b&&void 0!==b[l],f=(c?b:n)[l],p=g&&c?u(f,i):y&&"function"==typeof f?u(Function.call,f):f,b&&s(b,l,f,t&a.U),m[l]!=f&&o(m,l,p),y&&_[l]!=f&&(_[l]=f)};i.core=r,a.F=1,a.G=2,a.S=4,a.P=8,a.B=16,a.W=32,a.U=64,a.R=128,t.exports=a},function(t,e,n){var i=n(3),r=n(15);t.exports=n(1)?function(t,e,n){return i.f(t,e,r(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var i=n(29)("wks"),r=n(16),o=n(0).Symbol,s="function"==typeof o;(t.exports=function(t){return i[t]||(i[t]=s&&o[t]||(s?o:r)("Symbol."+t))}).store=i},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e){var n=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(t,e,n){var i=n(13);t.exports=function(t){if(!i(t))throw TypeError(t+" is not an object!");return t}},function(t,e){var n=t.exports={version:"2.4.0"};"number"==typeof __e&&(__e=n)},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e,n){var i=n(48),r=n(22);t.exports=Object.keys||function(t){return i(t,r)}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e){var n=0,i=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++n+i).toString(36))}},function(t,e){t.exports=function(t){if(void 0==t)throw TypeError("Can't call method on  "+t);return t}},function(t,e,n){var i=n(109),r=n(110);t.exports=n(35)?function(t,e,n){return i.f(t,e,r(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e,n){var i=n(8);t.exports=function(t,e){return!!t&&i(function(){e?t.call(null,function(){},1):t.call(null)})}},function(t,e){t.exports=function(t){if(void 0==t)throw TypeError("Can't call method on  "+t);return t}},function(t,e){t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(t,e,n){var i=n(0),r=n(11),o=n(74),s=n(6),u=function(t,e,n){var a,l,c,f=t&u.F,p=t&u.G,h=t&u.S,d=t&u.P,v=t&u.B,y=t&u.W,g=p?r:r[e]||(r[e]={}),b=g.prototype,m=p?i:h?i[e]:(i[e]||{}).prototype;p&&(n=e);for(a in n)(l=!f&&m&&void 0!==m[a])&&a in g||(c=l?m[a]:n[a],g[a]=p&&"function"!=typeof m[a]?n[a]:v&&l?o(c,i):y&&m[a]==c?function(t){var e=function(e,n,i){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,i)}return t.apply(this,arguments)};return e.prototype=t.prototype,e}(c):d&&"function"==typeof c?o(Function.call,c):c,d&&((g.virtual||(g.virtual={}))[a]=c,t&u.R&&b&&!b[a]&&s(b,a,c)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,t.exports=u},function(t,e){t.exports={}},function(t,e){t.exports=!0},function(t,e){e.f={}.propertyIsEnumerable},function(t,e,n){var i=n(3).f,r=n(2),o=n(7)("toStringTag");t.exports=function(t,e,n){t&&!r(t=n?t:t.prototype,o)&&i(t,o,{configurable:!0,value:e})}},function(t,e,n){var i=n(29)("keys"),r=n(16);t.exports=function(t){return i[t]||(i[t]=r(t))}},function(t,e,n){var i=n(0),r=i["__core-js_shared__"]||(i["__core-js_shared__"]={});t.exports=function(t){return r[t]||(r[t]={})}},function(t,e){var n=Math.ceil,i=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?i:n)(t)}},function(t,e,n){var i=n(13);t.exports=function(t,e){if(!i(t))return t;var n,r;if(e&&"function"==typeof(n=t.toString)&&!i(r=n.call(t)))return r;if("function"==typeof(n=t.valueOf)&&!i(r=n.call(t)))return r;if(!e&&"function"==typeof(n=t.toString)&&!i(r=n.call(t)))return r;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){var i=n(0),r=n(11),o=n(25),s=n(33),u=n(3).f;t.exports=function(t){var e=r.Symbol||(r.Symbol=o?{}:i.Symbol||{});"_"==t.charAt(0)||t in e||u(e,t,{value:s.f(t)})}},function(t,e,n){e.f=n(7)},function(t,e,n){var i=n(53),r=n(36),o=n(57),s=n(37),u=n(104);t.exports=function(t,e){var n=1==t,a=2==t,l=3==t,c=4==t,f=6==t,p=5==t||f,h=e||u;return function(e,u,d){for(var v,y,g=o(e),b=r(g),m=i(u,d,3),_=s(b.length),x=0,w=n?h(e,_):a?h(e,0):void 0;_>x;x++)if((p||x in b)&&(v=b[x],y=m(v,x,g),t))if(n)w[x]=y;else if(y)switch(t){case 3:return!0;case 5:return v;case 6:return x;case 2:w.push(v)}else if(c)return!1;return f?-1:l||c?c:w}}},function(t,e,n){t.exports=!n(8)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(t,e,n){var i=n(51);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==i(t)?t.split(""):Object(t)}},function(t,e,n){var i=n(56),r=Math.min;t.exports=function(t){return t>0?r(i(t),9007199254740991):0}},function(t,e,n){var i=n(111)("wks"),r=n(58),o=n(9).Symbol,s="function"==typeof o;(t.exports=function(t){return i[t]||(i[t]=s&&o[t]||(s?o:r)("Symbol."+t))}).store=i},function(t,e,n){"use strict";function i(t){return 0!==t&&(!(!Array.isArray(t)||0!==t.length)||!t)}function r(t){return function(){return!t.apply(void 0,arguments)}}function o(t,e){return void 0===t&&(t="undefined"),null===t&&(t="null"),!1===t&&(t="false"),-1!==t.toString().toLowerCase().indexOf(e.trim())}function s(t,e,n,i){return t.filter(function(t){return o(i(t,n),e)})}function u(t){return t.filter(function(t){return!t.$isLabel})}function a(t,e){return function(n){return n.reduce(function(n,i){return i[t]&&i[t].length?(n.push({$groupLabel:i[e],$isLabel:!0}),n.concat(i[t])):n},[])}}function l(t,e,n,i,r){return function(o){return o.map(function(o){var u;if(!o[n])return console.warn("Options passed to vue-multiselect do not contain groups, despite the config."),[];var a=s(o[n],t,e,r);return a.length?(u={},v()(u,i,o[i]),v()(u,n,a),u):[]})}}var c=n(65),f=n.n(c),p=n(59),h=(n.n(p),n(122)),d=(n.n(h),n(64)),v=n.n(d),y=n(120),g=(n.n(y),n(121)),b=(n.n(g),n(117)),m=(n.n(b),n(123)),_=(n.n(m),n(118)),x=(n.n(_),n(119)),w=(n.n(x),function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return function(t){return e.reduce(function(t,e){return e(t)},t)}});e.a={data:function(){return{search:"",isOpen:!1,prefferedOpenDirection:"below",optimizedHeight:this.maxHeight}},props:{internalSearch:{type:Boolean,default:!0},options:{type:Array,required:!0},multiple:{type:Boolean,default:!1},value:{type:null,default:function(){return[]}},trackBy:{type:String},label:{type:String},searchable:{type:Boolean,default:!0},clearOnSelect:{type:Boolean,default:!0},hideSelected:{type:Boolean,default:!1},placeholder:{type:String,default:"Select option"},allowEmpty:{type:Boolean,default:!0},resetAfter:{type:Boolean,default:!1},closeOnSelect:{type:Boolean,default:!0},customLabel:{type:Function,default:function(t,e){return i(t)?"":e?t[e]:t}},taggable:{type:Boolean,default:!1},tagPlaceholder:{type:String,default:"Press enter to create a tag"},tagPosition:{type:String,default:"top"},max:{type:[Number,Boolean],default:!1},id:{default:null},optionsLimit:{type:Number,default:1e3},groupValues:{type:String},groupLabel:{type:String},groupSelect:{type:Boolean,default:!1},blockKeys:{type:Array,default:function(){return[]}},preserveSearch:{type:Boolean,default:!1},preselectFirst:{type:Boolean,default:!1}},mounted:function(){this.multiple||this.clearOnSelect||console.warn("[Vue-Multiselect warn]: ClearOnSelect and Multiple props can’t be both set to false."),!this.multiple&&this.max&&console.warn("[Vue-Multiselect warn]: Max prop should not be used when prop Multiple equals false."),this.preselectFirst&&!this.internalValue.length&&this.options.length&&this.select(this.filteredOptions[0])},computed:{internalValue:function(){return this.value||0===this.value?Array.isArray(this.value)?this.value:[this.value]:[]},filteredOptions:function(){var t=this.search||"",e=t.toLowerCase().trim(),n=this.options.concat();return n=this.internalSearch?this.groupValues?this.filterAndFlat(n,e,this.label):s(n,e,this.label,this.customLabel):this.groupValues?a(this.groupValues,this.groupLabel)(n):n,n=this.hideSelected?n.filter(r(this.isSelected)):n,this.taggable&&e.length&&!this.isExistingOption(e)&&("bottom"===this.tagPosition?n.push({isTag:!0,label:t}):n.unshift({isTag:!0,label:t})),n.slice(0,this.optionsLimit)},valueKeys:function(){var t=this;return this.trackBy?this.internalValue.map(function(e){return e[t.trackBy]}):this.internalValue},optionKeys:function(){var t=this;return(this.groupValues?this.flatAndStrip(this.options):this.options).map(function(e){return t.customLabel(e,t.label).toString().toLowerCase()})},currentOptionLabel:function(){return this.multiple?this.searchable?"":this.placeholder:this.internalValue.length?this.getOptionLabel(this.internalValue[0]):this.searchable?"":this.placeholder}},watch:{internalValue:function(){this.resetAfter&&this.internalValue.length&&(this.search="",this.$emit("input",this.multiple?[]:null))},search:function(){this.$emit("search-change",this.search,this.id)}},methods:{getValue:function(){return this.multiple?this.internalValue:0===this.internalValue.length?null:this.internalValue[0]},filterAndFlat:function(t,e,n){return w(l(e,n,this.groupValues,this.groupLabel,this.customLabel),a(this.groupValues,this.groupLabel))(t)},flatAndStrip:function(t){return w(a(this.groupValues,this.groupLabel),u)(t)},updateSearch:function(t){this.search=t},isExistingOption:function(t){return!!this.options&&this.optionKeys.indexOf(t)>-1},isSelected:function(t){var e=this.trackBy?t[this.trackBy]:t;return this.valueKeys.indexOf(e)>-1},getOptionLabel:function(t){if(i(t))return"";if(t.isTag)return t.label;if(t.$isLabel)return t.$groupLabel;var e=this.customLabel(t,this.label);return i(e)?"":e},select:function(t,e){if(t.$isLabel&&this.groupSelect)return void this.selectGroup(t);if(!(-1!==this.blockKeys.indexOf(e)||this.disabled||t.$isDisabled||t.$isLabel)&&(!this.max||!this.multiple||this.internalValue.length!==this.max)&&("Tab"!==e||this.pointerDirty)){if(t.isTag)this.$emit("tag",t.label,this.id),this.search="",this.closeOnSelect&&!this.multiple&&this.deactivate();else{if(this.isSelected(t))return void("Tab"!==e&&this.removeElement(t));this.$emit("select",t,this.id),this.multiple?this.$emit("input",this.internalValue.concat([t]),this.id):this.$emit("input",t,this.id),this.clearOnSelect&&(this.search="")}this.closeOnSelect&&this.deactivate()}},selectGroup:function(t){var e=this,n=this.options.find(function(n){return n[e.groupLabel]===t.$groupLabel});if(n)if(this.wholeGroupSelected(n)){this.$emit("remove",n[this.groupValues],this.id);var i=this.internalValue.filter(function(t){return-1===n[e.groupValues].indexOf(t)});this.$emit("input",i,this.id)}else{var o=n[this.groupValues].filter(r(this.isSelected));this.$emit("select",o,this.id),this.$emit("input",this.internalValue.concat(o),this.id)}},wholeGroupSelected:function(t){return t[this.groupValues].every(this.isSelected)},removeElement:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!this.disabled){if(!this.allowEmpty&&this.internalValue.length<=1)return void this.deactivate();var n="object"===f()(t)?this.valueKeys.indexOf(t[this.trackBy]):this.valueKeys.indexOf(t);if(this.$emit("remove",t,this.id),this.multiple){var i=this.internalValue.slice(0,n).concat(this.internalValue.slice(n+1));this.$emit("input",i,this.id)}else this.$emit("input",null,this.id);this.closeOnSelect&&e&&this.deactivate()}},removeLastElement:function(){-1===this.blockKeys.indexOf("Delete")&&0===this.search.length&&Array.isArray(this.internalValue)&&this.removeElement(this.internalValue[this.internalValue.length-1],!1)},activate:function(){var t=this;this.isOpen||this.disabled||(this.adjustPosition(),this.groupValues&&0===this.pointer&&this.filteredOptions.length&&(this.pointer=1),this.isOpen=!0,this.searchable?(this.preserveSearch||(this.search=""),this.$nextTick(function(){return t.$refs.search.focus()})):this.$el.focus(),this.$emit("open",this.id))},deactivate:function(){this.isOpen&&(this.isOpen=!1,this.searchable?this.$refs.search.blur():this.$el.blur(),this.preserveSearch||(this.search=""),this.$emit("close",this.getValue(),this.id))},toggle:function(){this.isOpen?this.deactivate():this.activate()},adjustPosition:function(){if("undefined"!=typeof window){var t=this.$el.getBoundingClientRect().top,e=window.innerHeight-this.$el.getBoundingClientRect().bottom;e>this.maxHeight||e>t||"below"===this.openDirection||"bottom"===this.openDirection?(this.prefferedOpenDirection="below",this.optimizedHeight=Math.min(e-40,this.maxHeight)):(this.prefferedOpenDirection="above",this.optimizedHeight=Math.min(t-40,this.maxHeight))}}}}},function(t,e,n){"use strict";var i=n(59);n.n(i);e.a={data:function(){return{pointer:0,pointerDirty:!1}},props:{showPointer:{type:Boolean,default:!0},optionHeight:{type:Number,default:40}},computed:{pointerPosition:function(){return this.pointer*this.optionHeight},visibleElements:function(){return this.optimizedHeight/this.optionHeight}},watch:{filteredOptions:function(){this.pointerAdjust()},isOpen:function(){this.pointerDirty=!1}},methods:{optionHighlight:function(t,e){return{"multiselect__option--highlight":t===this.pointer&&this.showPointer,"multiselect__option--selected":this.isSelected(e)}},groupHighlight:function(t,e){var n=this;if(!this.groupSelect)return["multiselect__option--disabled"];var i=this.options.find(function(t){return t[n.groupLabel]===e.$groupLabel});return[this.groupSelect?"multiselect__option--group":"multiselect__option--disabled",{"multiselect__option--highlight":t===this.pointer&&this.showPointer},{"multiselect__option--group-selected":this.wholeGroupSelected(i)}]},addPointerElement:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Enter",e=t.key;this.filteredOptions.length>0&&this.select(this.filteredOptions[this.pointer],e),this.pointerReset()},pointerForward:function(){this.pointer<this.filteredOptions.length-1&&(this.pointer++,this.$refs.list.scrollTop<=this.pointerPosition-(this.visibleElements-1)*this.optionHeight&&(this.$refs.list.scrollTop=this.pointerPosition-(this.visibleElements-1)*this.optionHeight),this.filteredOptions[this.pointer]&&this.filteredOptions[this.pointer].$isLabel&&!this.groupSelect&&this.pointerForward()),this.pointerDirty=!0},pointerBackward:function(){this.pointer>0?(this.pointer--,this.$refs.list.scrollTop>=this.pointerPosition&&(this.$refs.list.scrollTop=this.pointerPosition),this.filteredOptions[this.pointer]&&this.filteredOptions[this.pointer].$isLabel&&!this.groupSelect&&this.pointerBackward()):this.filteredOptions[this.pointer]&&this.filteredOptions[0].$isLabel&&!this.groupSelect&&this.pointerForward(),this.pointerDirty=!0},pointerReset:function(){this.closeOnSelect&&(this.pointer=0,this.$refs.list&&(this.$refs.list.scrollTop=0))},pointerAdjust:function(){this.pointer>=this.filteredOptions.length-1&&(this.pointer=this.filteredOptions.length?this.filteredOptions.length-1:0),this.filteredOptions.length>0&&this.filteredOptions[this.pointer].$isLabel&&!this.groupSelect&&this.pointerForward()},pointerSet:function(t){this.pointer=t,this.pointerDirty=!0}}}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e,n){var i=n(13),r=n(0).document,o=i(r)&&i(r.createElement);t.exports=function(t){return o?r.createElement(t):{}}},function(t,e,n){t.exports=!n(1)&&!n(12)(function(){return 7!=Object.defineProperty(n(42)("div"),"a",{get:function(){return 7}}).a})},function(t,e,n){"use strict";var i=n(25),r=n(23),o=n(49),s=n(6),u=n(2),a=n(24),l=n(79),c=n(27),f=n(86),p=n(7)("iterator"),h=!([].keys&&"next"in[].keys()),d=function(){return this};t.exports=function(t,e,n,v,y,g,b){l(n,e,v);var m,_,x,w=function(t){if(!h&&t in P)return P[t];switch(t){case"keys":case"values":return function(){return new n(this,t)}}return function(){return new n(this,t)}},S=e+" Iterator",O="values"==y,L=!1,P=t.prototype,k=P[p]||P["@@iterator"]||y&&P[y],E=k||w(y),j=y?O?w("entries"):E:void 0,V="Array"==e?P.entries||k:k;if(V&&(x=f(V.call(new t)))!==Object.prototype&&(c(x,S,!0),i||u(x,p)||s(x,p,d)),O&&k&&"values"!==k.name&&(L=!0,E=function(){return k.call(this)}),i&&!b||!h&&!L&&P[p]||s(P,p,E),a[e]=E,a[S]=d,y)if(m={values:O?E:w("values"),keys:g?E:w("keys"),entries:j},b)for(_ in m)_ in P||o(P,_,m[_]);else r(r.P+r.F*(h||L),e,m);return m}},function(t,e,n){var i=n(10),r=n(83),o=n(22),s=n(28)("IE_PROTO"),u=function(){},a=function(){var t,e=n(42)("iframe"),i=o.length;for(e.style.display="none",n(76).appendChild(e),e.src="javascript:",t=e.contentWindow.document,t.open(),t.write("<script>document.F=Object<\/script>"),t.close(),a=t.F;i--;)delete a.prototype[o[i]];return a()};t.exports=Object.create||function(t,e){var n;return null!==t?(u.prototype=i(t),n=new u,u.prototype=null,n[s]=t):n=a(),void 0===e?n:r(n,e)}},function(t,e,n){var i=n(48),r=n(22).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return i(t,r)}},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e,n){var i=n(2),r=n(4),o=n(73)(!1),s=n(28)("IE_PROTO");t.exports=function(t,e){var n,u=r(t),a=0,l=[];for(n in u)n!=s&&i(u,n)&&l.push(n);for(;e.length>a;)i(u,n=e[a++])&&(~o(l,n)||l.push(n));return l}},function(t,e,n){t.exports=n(6)},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){var n=t.exports={version:"2.4.0"};"number"==typeof __e&&(__e=n)},function(t,e,n){var i=n(50);t.exports=function(t,e,n){if(i(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,i){return t.call(e,n,i)};case 3:return function(n,i,r){return t.call(e,n,i,r)}}return function(){return t.apply(e,arguments)}}},function(t,e,n){var i=n(51);t.exports=Array.isArray||function(t){return"Array"==i(t)}},function(t,e,n){var i=n(9),r=n(18),o=n(107),s=n(58)("src"),u=Function.toString,a=(""+u).split("toString");n(52).inspectSource=function(t){return u.call(t)},(t.exports=function(t,e,n,u){var l="function"==typeof n;l&&(o(n,"name")||r(n,"name",e)),t[e]!==n&&(l&&(o(n,s)||r(n,s,t[e]?""+t[e]:a.join(String(e)))),t===i?t[e]=n:u?t[e]?t[e]=n:r(t,e,n):(delete t[e],r(t,e,n)))})(Function.prototype,"toString",function(){return"function"==typeof this&&this[s]||u.call(this)})},function(t,e){var n=Math.ceil,i=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?i:n)(t)}},function(t,e,n){var i=n(17);t.exports=function(t){return Object(i(t))}},function(t,e){var n=0,i=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++n+i).toString(36))}},function(t,e,n){"use strict";var i=n(5),r=n(34)(5),o=!0;"find"in[]&&Array(1).find(function(){o=!1}),i(i.P+i.F*o,"Array",{find:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}}),n(99)("find")},function(t,e,n){"use strict";function i(t){n(124)}var r=n(67),o=n(126),s=n(125),u=i,a=s(r.a,o.a,!1,u,null,null);e.a=a.exports},function(t,e,n){t.exports=n(68)},function(t,e,n){t.exports=n(69)},function(t,e,n){t.exports=n(70)},function(t,e,n){function i(t,e,n){return e in t?r(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var r=n(61);t.exports=i},function(t,e,n){function i(t){return(i="function"==typeof s&&"symbol"==typeof o?function(t){return typeof t}:function(t){return t&&"function"==typeof s&&t.constructor===s&&t!==s.prototype?"symbol":typeof t})(t)}function r(e){return"function"==typeof s&&"symbol"===i(o)?t.exports=r=function(t){return i(t)}:t.exports=r=function(t){return t&&"function"==typeof s&&t.constructor===s&&t!==s.prototype?"symbol":i(t)},r(e)}var o=n(63),s=n(62);t.exports=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(60),r=n(39),o=n(40);n.d(e,"Multiselect",function(){return i.a}),n.d(e,"multiselectMixin",function(){return r.a}),n.d(e,"pointerMixin",function(){return o.a}),e.default=i.a},function(t,e,n){"use strict";var i=n(39),r=n(40);e.a={name:"vue-multiselect",mixins:[i.a,r.a],props:{name:{type:String,default:""},selectLabel:{type:String,default:"Press enter to select"},selectGroupLabel:{type:String,default:"Press enter to select group"},selectedLabel:{type:String,default:"Selected"},deselectLabel:{type:String,default:"Press enter to remove"},deselectGroupLabel:{type:String,default:"Press enter to deselect group"},showLabels:{type:Boolean,default:!0},limit:{type:Number,default:99999},maxHeight:{type:Number,default:300},limitText:{type:Function,default:function(t){return"and ".concat(t," more")}},loading:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},openDirection:{type:String,default:""},showNoResults:{type:Boolean,default:!0},tabindex:{type:Number,default:0}},computed:{isSingleLabelVisible:function(){return this.singleValue&&(!this.isOpen||!this.searchable)&&!this.visibleValues.length},isPlaceholderVisible:function(){return!(this.internalValue.length||this.searchable&&this.isOpen)},visibleValues:function(){return this.multiple?this.internalValue.slice(0,this.limit):[]},singleValue:function(){return this.internalValue[0]},deselectLabelText:function(){return this.showLabels?this.deselectLabel:""},deselectGroupLabelText:function(){return this.showLabels?this.deselectGroupLabel:""},selectLabelText:function(){return this.showLabels?this.selectLabel:""},selectGroupLabelText:function(){return this.showLabels?this.selectGroupLabel:""},selectedLabelText:function(){return this.showLabels?this.selectedLabel:""},inputStyle:function(){if(this.multiple&&this.value&&this.value.length)return this.isOpen?{width:"auto"}:{width:"0",position:"absolute",padding:"0"}},contentStyle:function(){return this.options.length?{display:"inline-block"}:{display:"block"}},isAbove:function(){return"above"===this.openDirection||"top"===this.openDirection||"below"!==this.openDirection&&"bottom"!==this.openDirection&&"above"===this.prefferedOpenDirection},showSearchInput:function(){return this.searchable&&(!this.hasSingleSelectedSlot||!this.visibleSingleValue&&0!==this.visibleSingleValue||this.isOpen)}}}},function(t,e,n){n(92);var i=n(11).Object;t.exports=function(t,e,n){return i.defineProperty(t,e,n)}},function(t,e,n){n(95),n(93),n(96),n(97),t.exports=n(11).Symbol},function(t,e,n){n(94),n(98),t.exports=n(33).f("iterator")},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e){t.exports=function(){}},function(t,e,n){var i=n(4),r=n(89),o=n(88);t.exports=function(t){return function(e,n,s){var u,a=i(e),l=r(a.length),c=o(s,l);if(t&&n!=n){for(;l>c;)if((u=a[c++])!=u)return!0}else for(;l>c;c++)if((t||c in a)&&a[c]===n)return t||c||0;return!t&&-1}}},function(t,e,n){var i=n(71);t.exports=function(t,e,n){if(i(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,i){return t.call(e,n,i)};case 3:return function(n,i,r){return t.call(e,n,i,r)}}return function(){return t.apply(e,arguments)}}},function(t,e,n){var i=n(14),r=n(47),o=n(26);t.exports=function(t){var e=i(t),n=r.f;if(n)for(var s,u=n(t),a=o.f,l=0;u.length>l;)a.call(t,s=u[l++])&&e.push(s);return e}},function(t,e,n){t.exports=n(0).document&&document.documentElement},function(t,e,n){var i=n(41);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==i(t)?t.split(""):Object(t)}},function(t,e,n){var i=n(41);t.exports=Array.isArray||function(t){return"Array"==i(t)}},function(t,e,n){"use strict";var i=n(45),r=n(15),o=n(27),s={};n(6)(s,n(7)("iterator"),function(){return this}),t.exports=function(t,e,n){t.prototype=i(s,{next:r(1,n)}),o(t,e+" Iterator")}},function(t,e){t.exports=function(t,e){return{value:e,done:!!t}}},function(t,e,n){var i=n(14),r=n(4);t.exports=function(t,e){for(var n,o=r(t),s=i(o),u=s.length,a=0;u>a;)if(o[n=s[a++]]===e)return n}},function(t,e,n){var i=n(16)("meta"),r=n(13),o=n(2),s=n(3).f,u=0,a=Object.isExtensible||function(){return!0},l=!n(12)(function(){return a(Object.preventExtensions({}))}),c=function(t){s(t,i,{value:{i:"O"+ ++u,w:{}}})},f=function(t,e){if(!r(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!o(t,i)){if(!a(t))return"F";if(!e)return"E";c(t)}return t[i].i},p=function(t,e){if(!o(t,i)){if(!a(t))return!0;if(!e)return!1;c(t)}return t[i].w},h=function(t){return l&&d.NEED&&a(t)&&!o(t,i)&&c(t),t},d=t.exports={KEY:i,NEED:!1,fastKey:f,getWeak:p,onFreeze:h}},function(t,e,n){var i=n(3),r=n(10),o=n(14);t.exports=n(1)?Object.defineProperties:function(t,e){r(t);for(var n,s=o(e),u=s.length,a=0;u>a;)i.f(t,n=s[a++],e[n]);return t}},function(t,e,n){var i=n(26),r=n(15),o=n(4),s=n(31),u=n(2),a=n(43),l=Object.getOwnPropertyDescriptor;e.f=n(1)?l:function(t,e){if(t=o(t),e=s(e,!0),a)try{return l(t,e)}catch(t){}if(u(t,e))return r(!i.f.call(t,e),t[e])}},function(t,e,n){var i=n(4),r=n(46).f,o={}.toString,s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],u=function(t){try{return r(t)}catch(t){return s.slice()}};t.exports.f=function(t){return s&&"[object Window]"==o.call(t)?u(t):r(i(t))}},function(t,e,n){var i=n(2),r=n(90),o=n(28)("IE_PROTO"),s=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=r(t),i(t,o)?t[o]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?s:null}},function(t,e,n){var i=n(30),r=n(21);t.exports=function(t){return function(e,n){var o,s,u=String(r(e)),a=i(n),l=u.length;return a<0||a>=l?t?"":void 0:(o=u.charCodeAt(a),o<55296||o>56319||a+1===l||(s=u.charCodeAt(a+1))<56320||s>57343?t?u.charAt(a):o:t?u.slice(a,a+2):s-56320+(o-55296<<10)+65536)}}},function(t,e,n){var i=n(30),r=Math.max,o=Math.min;t.exports=function(t,e){return t=i(t),t<0?r(t+e,0):o(t,e)}},function(t,e,n){var i=n(30),r=Math.min;t.exports=function(t){return t>0?r(i(t),9007199254740991):0}},function(t,e,n){var i=n(21);t.exports=function(t){return Object(i(t))}},function(t,e,n){"use strict";var i=n(72),r=n(80),o=n(24),s=n(4);t.exports=n(44)(Array,"Array",function(t,e){this._t=s(t),this._i=0,this._k=e},function(){var t=this._t,e=this._k,n=this._i++;return!t||n>=t.length?(this._t=void 0,r(1)):"keys"==e?r(0,n):"values"==e?r(0,t[n]):r(0,[n,t[n]])},"values"),o.Arguments=o.Array,i("keys"),i("values"),i("entries")},function(t,e,n){var i=n(23);i(i.S+i.F*!n(1),"Object",{defineProperty:n(3).f})},function(t,e){},function(t,e,n){"use strict";var i=n(87)(!0);n(44)(String,"String",function(t){this._t=String(t),this._i=0},function(){var t,e=this._t,n=this._i;return n>=e.length?{value:void 0,done:!0}:(t=i(e,n),this._i+=t.length,{value:t,done:!1})})},function(t,e,n){"use strict";var i=n(0),r=n(2),o=n(1),s=n(23),u=n(49),a=n(82).KEY,l=n(12),c=n(29),f=n(27),p=n(16),h=n(7),d=n(33),v=n(32),y=n(81),g=n(75),b=n(78),m=n(10),_=n(4),x=n(31),w=n(15),S=n(45),O=n(85),L=n(84),P=n(3),k=n(14),E=L.f,j=P.f,V=O.f,C=i.Symbol,T=i.JSON,A=T&&T.stringify,$=h("_hidden"),D=h("toPrimitive"),F={}.propertyIsEnumerable,M=c("symbol-registry"),B=c("symbols"),N=c("op-symbols"),R=Object.prototype,H="function"==typeof C,G=i.QObject,I=!G||!G.prototype||!G.prototype.findChild,K=o&&l(function(){return 7!=S(j({},"a",{get:function(){return j(this,"a",{value:7}).a}})).a})?function(t,e,n){var i=E(R,e);i&&delete R[e],j(t,e,n),i&&t!==R&&j(R,e,i)}:j,z=function(t){var e=B[t]=S(C.prototype);return e._k=t,e},U=H&&"symbol"==typeof C.iterator?function(t){return"symbol"==typeof t}:function(t){return t instanceof C},W=function(t,e,n){return t===R&&W(N,e,n),m(t),e=x(e,!0),m(n),r(B,e)?(n.enumerable?(r(t,$)&&t[$][e]&&(t[$][e]=!1),n=S(n,{enumerable:w(0,!1)})):(r(t,$)||j(t,$,w(1,{})),t[$][e]=!0),K(t,e,n)):j(t,e,n)},J=function(t,e){m(t);for(var n,i=g(e=_(e)),r=0,o=i.length;o>r;)W(t,n=i[r++],e[n]);return t},q=function(t,e){return void 0===e?S(t):J(S(t),e)},X=function(t){var e=F.call(this,t=x(t,!0));return!(this===R&&r(B,t)&&!r(N,t))&&(!(e||!r(this,t)||!r(B,t)||r(this,$)&&this[$][t])||e)},Y=function(t,e){if(t=_(t),e=x(e,!0),t!==R||!r(B,e)||r(N,e)){var n=E(t,e);return!n||!r(B,e)||r(t,$)&&t[$][e]||(n.enumerable=!0),n}},Q=function(t){for(var e,n=V(_(t)),i=[],o=0;n.length>o;)r(B,e=n[o++])||e==$||e==a||i.push(e);return i},Z=function(t){for(var e,n=t===R,i=V(n?N:_(t)),o=[],s=0;i.length>s;)!r(B,e=i[s++])||n&&!r(R,e)||o.push(B[e]);return o};H||(C=function(){if(this instanceof C)throw TypeError("Symbol is not a constructor!");var t=p(arguments.length>0?arguments[0]:void 0),e=function(n){this===R&&e.call(N,n),r(this,$)&&r(this[$],t)&&(this[$][t]=!1),K(this,t,w(1,n))};return o&&I&&K(R,t,{configurable:!0,set:e}),z(t)},u(C.prototype,"toString",function(){return this._k}),L.f=Y,P.f=W,n(46).f=O.f=Q,n(26).f=X,n(47).f=Z,o&&!n(25)&&u(R,"propertyIsEnumerable",X,!0),d.f=function(t){return z(h(t))}),s(s.G+s.W+s.F*!H,{Symbol:C});for(var tt="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),et=0;tt.length>et;)h(tt[et++]);for(var tt=k(h.store),et=0;tt.length>et;)v(tt[et++]);s(s.S+s.F*!H,"Symbol",{for:function(t){return r(M,t+="")?M[t]:M[t]=C(t)},keyFor:function(t){if(U(t))return y(M,t);throw TypeError(t+" is not a symbol!")},useSetter:function(){I=!0},useSimple:function(){I=!1}}),s(s.S+s.F*!H,"Object",{create:q,defineProperty:W,defineProperties:J,getOwnPropertyDescriptor:Y,getOwnPropertyNames:Q,getOwnPropertySymbols:Z}),T&&s(s.S+s.F*(!H||l(function(){var t=C();return"[null]"!=A([t])||"{}"!=A({a:t})||"{}"!=A(Object(t))})),"JSON",{stringify:function(t){if(void 0!==t&&!U(t)){for(var e,n,i=[t],r=1;arguments.length>r;)i.push(arguments[r++]);return e=i[1],"function"==typeof e&&(n=e),!n&&b(e)||(e=function(t,e){if(n&&(e=n.call(this,t,e)),!U(e))return e}),i[1]=e,A.apply(T,i)}}}),C.prototype[D]||n(6)(C.prototype,D,C.prototype.valueOf),f(C,"Symbol"),f(Math,"Math",!0),f(i.JSON,"JSON",!0)},function(t,e,n){n(32)("asyncIterator")},function(t,e,n){n(32)("observable")},function(t,e,n){n(91);for(var i=n(0),r=n(6),o=n(24),s=n(7)("toStringTag"),u=["NodeList","DOMTokenList","MediaList","StyleSheetList","CSSRuleList"],a=0;a<5;a++){var l=u[a],c=i[l],f=c&&c.prototype;f&&!f[s]&&r(f,s,l),o[l]=o.Array}},function(t,e,n){var i=n(38)("unscopables"),r=Array.prototype;void 0==r[i]&&n(18)(r,i,{}),t.exports=function(t){r[i][t]=!0}},function(t,e,n){var i=n(19);t.exports=function(t){if(!i(t))throw TypeError(t+" is not an object!");return t}},function(t,e,n){var i=n(115),r=n(37),o=n(114);t.exports=function(t){return function(e,n,s){var u,a=i(e),l=r(a.length),c=o(s,l);if(t&&n!=n){for(;l>c;)if((u=a[c++])!=u)return!0}else for(;l>c;c++)if((t||c in a)&&a[c]===n)return t||c||0;return!t&&-1}}},function(t,e,n){var i=n(50),r=n(57),o=n(36),s=n(37);t.exports=function(t,e,n,u,a){i(e);var l=r(t),c=o(l),f=s(l.length),p=a?f-1:0,h=a?-1:1;if(n<2)for(;;){if(p in c){u=c[p],p+=h;break}if(p+=h,a?p<0:f<=p)throw TypeError("Reduce of empty array with no initial value")}for(;a?p>=0:f>p;p+=h)p in c&&(u=e(u,c[p],p,l));return u}},function(t,e,n){var i=n(19),r=n(54),o=n(38)("species");t.exports=function(t){var e;return r(t)&&(e=t.constructor,"function"!=typeof e||e!==Array&&!r(e.prototype)||(e=void 0),i(e)&&null===(e=e[o])&&(e=void 0)),void 0===e?Array:e}},function(t,e,n){var i=n(103);t.exports=function(t,e){return new(i(t))(e)}},function(t,e,n){var i=n(19),r=n(9).document,o=i(r)&&i(r.createElement);t.exports=function(t){return o?r.createElement(t):{}}},function(t,e,n){"use strict";var i=n(18),r=n(55),o=n(8),s=n(17),u=n(38);t.exports=function(t,e,n){var a=u(t),l=n(s,a,""[t]),c=l[0],f=l[1];o(function(){var e={};return e[a]=function(){return 7},7!=""[t](e)})&&(r(String.prototype,t,c),i(RegExp.prototype,a,2==e?function(t,e){return f.call(t,this,e)}:function(t){return f.call(t,this)}))}},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){t.exports=!n(35)&&!n(8)(function(){return 7!=Object.defineProperty(n(105)("div"),"a",{get:function(){return 7}}).a})},function(t,e,n){var i=n(100),r=n(108),o=n(116),s=Object.defineProperty;e.f=n(35)?Object.defineProperty:function(t,e,n){if(i(t),e=o(e,!0),i(n),r)try{return s(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var i=n(9),r=i["__core-js_shared__"]||(i["__core-js_shared__"]={});t.exports=function(t){return r[t]||(r[t]={})}},function(t,e,n){var i=n(5),r=n(17),o=n(8),s=n(113),u="["+s+"]",a="​",l=RegExp("^"+u+u+"*"),c=RegExp(u+u+"*$"),f=function(t,e,n){var r={},u=o(function(){return!!s[t]()||a[t]()!=a}),l=r[t]=u?e(p):s[t];n&&(r[n]=l),i(i.P+i.F*u,"String",r)},p=f.trim=function(t,e){return t=String(r(t)),1&e&&(t=t.replace(l,"")),2&e&&(t=t.replace(c,"")),t};t.exports=f},function(t,e){t.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(t,e,n){var i=n(56),r=Math.max,o=Math.min;t.exports=function(t,e){return t=i(t),t<0?r(t+e,0):o(t,e)}},function(t,e,n){var i=n(36),r=n(17);t.exports=function(t){return i(r(t))}},function(t,e,n){var i=n(19);t.exports=function(t,e){if(!i(t))return t;var n,r;if(e&&"function"==typeof(n=t.toString)&&!i(r=n.call(t)))return r;if("function"==typeof(n=t.valueOf)&&!i(r=n.call(t)))return r;if(!e&&"function"==typeof(n=t.toString)&&!i(r=n.call(t)))return r;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){"use strict";var i=n(5),r=n(34)(2);i(i.P+i.F*!n(20)([].filter,!0),"Array",{filter:function(t){return r(this,t,arguments[1])}})},function(t,e,n){"use strict";var i=n(5),r=n(101)(!1),o=[].indexOf,s=!!o&&1/[1].indexOf(1,-0)<0;i(i.P+i.F*(s||!n(20)(o)),"Array",{indexOf:function(t){return s?o.apply(this,arguments)||0:r(this,t,arguments[1])}})},function(t,e,n){var i=n(5);i(i.S,"Array",{isArray:n(54)})},function(t,e,n){"use strict";var i=n(5),r=n(34)(1);i(i.P+i.F*!n(20)([].map,!0),"Array",{map:function(t){return r(this,t,arguments[1])}})},function(t,e,n){"use strict";var i=n(5),r=n(102);i(i.P+i.F*!n(20)([].reduce,!0),"Array",{reduce:function(t){return r(this,t,arguments.length,arguments[1],!1)}})},function(t,e,n){n(106)("search",1,function(t,e,n){return[function(n){"use strict";var i=t(this),r=void 0==n?void 0:n[e];return void 0!==r?r.call(n,i):new RegExp(n)[e](String(i))},n]})},function(t,e,n){"use strict";n(112)("trim",function(t){return function(){return t(this,3)}})},function(t,e){},function(t,e){t.exports=function(t,e,n,i,r,o){var s,u=t=t||{},a=typeof t.default;"object"!==a&&"function"!==a||(s=t,u=t.default);var l="function"==typeof u?u.options:u;e&&(l.render=e.render,l.staticRenderFns=e.staticRenderFns,l._compiled=!0),n&&(l.functional=!0),r&&(l._scopeId=r);var c;if(o?(c=function(t){t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,t||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),i&&i.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},l._ssrRegister=c):i&&(c=i),c){var f=l.functional,p=f?l.render:l.beforeCreate;f?(l._injectStyles=c,l.render=function(t,e){return c.call(e),p(t,e)}):l.beforeCreate=p?[].concat(p,c):[c]}return{esModule:s,exports:u,options:l}}},function(t,e,n){"use strict";var i=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"multiselect",class:{"multiselect--active":t.isOpen,"multiselect--disabled":t.disabled,"multiselect--above":t.isAbove},attrs:{tabindex:t.searchable?-1:t.tabindex},on:{focus:function(e){t.activate()},blur:function(e){!t.searchable&&t.deactivate()},keydown:[function(e){return"button"in e||!t._k(e.keyCode,"down",40,e.key,"ArrowDown")?e.target!==e.currentTarget?null:(e.preventDefault(),void t.pointerForward()):null},function(e){return"button"in e||!t._k(e.keyCode,"up",38,e.key,"ArrowUp")?e.target!==e.currentTarget?null:(e.preventDefault(),void t.pointerBackward()):null},function(e){return"button"in e||!t._k(e.keyCode,"enter",13,e.key,"Enter")||!t._k(e.keyCode,"tab",9,e.key,"Tab")?(e.stopPropagation(),e.target!==e.currentTarget?null:void t.addPointerElement(e)):null}],keyup:function(e){if(!("button"in e)&&t._k(e.keyCode,"esc",27,e.key,"Escape"))return null;t.deactivate()}}},[t._t("caret",[n("div",{staticClass:"multiselect__select",on:{mousedown:function(e){e.preventDefault(),e.stopPropagation(),t.toggle()}}})],{toggle:t.toggle}),t._v(" "),t._t("clear",null,{search:t.search}),t._v(" "),n("div",{ref:"tags",staticClass:"multiselect__tags"},[n("div",{directives:[{name:"show",rawName:"v-show",value:t.visibleValues.length>0,expression:"visibleValues.length > 0"}],staticClass:"multiselect__tags-wrap"},[t._l(t.visibleValues,function(e){return[t._t("tag",[n("span",{staticClass:"multiselect__tag"},[n("span",{domProps:{textContent:t._s(t.getOptionLabel(e))}}),t._v(" "),n("i",{staticClass:"multiselect__tag-icon",attrs:{"aria-hidden":"true",tabindex:"1"},on:{keydown:function(n){if(!("button"in n)&&t._k(n.keyCode,"enter",13,n.key,"Enter"))return null;n.preventDefault(),t.removeElement(e)},mousedown:function(n){n.preventDefault(),t.removeElement(e)}}})])],{option:e,search:t.search,remove:t.removeElement})]})],2),t._v(" "),t.internalValue&&t.internalValue.length>t.limit?[t._t("limit",[n("strong",{staticClass:"multiselect__strong",domProps:{textContent:t._s(t.limitText(t.internalValue.length-t.limit))}})])]:t._e(),t._v(" "),n("transition",{attrs:{name:"multiselect__loading"}},[t._t("loading",[n("div",{directives:[{name:"show",rawName:"v-show",value:t.loading,expression:"loading"}],staticClass:"multiselect__spinner"})])],2),t._v(" "),n("input",{directives:[{name:"show",rawName:"v-show",value:t.isOpen&&t.searchable,expression:"isOpen && searchable"}],ref:"search",staticClass:"multiselect__input",style:t.inputStyle,attrs:{name:t.name,id:t.id,type:"text",autocomplete:"off",placeholder:t.placeholder,disabled:t.disabled,tabindex:t.tabindex},domProps:{value:t.search},on:{input:function(e){t.updateSearch(e.target.value)},focus:function(e){e.preventDefault(),t.activate()},blur:function(e){e.preventDefault(),t.deactivate()},keyup:function(e){if(!("button"in e)&&t._k(e.keyCode,"esc",27,e.key,"Escape"))return null;t.deactivate()},keydown:[function(e){if(!("button"in e)&&t._k(e.keyCode,"down",40,e.key,"ArrowDown"))return null;e.preventDefault(),t.pointerForward()},function(e){if(!("button"in e)&&t._k(e.keyCode,"up",38,e.key,"ArrowUp"))return null;e.preventDefault(),t.pointerBackward()},function(e){return"button"in e||!t._k(e.keyCode,"enter",13,e.key,"Enter")?(e.preventDefault(),e.stopPropagation(),e.target!==e.currentTarget?null:void t.addPointerElement(e)):null},function(e){if(!("button"in e)&&t._k(e.keyCode,"delete",[8,46],e.key,["Backspace","Delete"]))return null;e.stopPropagation(),t.removeLastElement()}]}}),t._v(" "),t.isSingleLabelVisible?n("span",{staticClass:"multiselect__single",on:{mousedown:function(e){return e.preventDefault(),t.toggle(e)}}},[t._t("singleLabel",[[t._v(t._s(t.currentOptionLabel))]],{option:t.singleValue})],2):t._e(),t._v(" "),t.isPlaceholderVisible?n("span",{on:{mousedown:function(e){return e.preventDefault(),t.toggle(e)}}},[t._t("placeholder",[n("span",{staticClass:"multiselect__single"},[t._v("\n            "+t._s(t.placeholder)+"\n          ")])])],2):t._e()],2),t._v(" "),n("transition",{attrs:{name:"multiselect"}},[n("div",{directives:[{name:"show",rawName:"v-show",value:t.isOpen,expression:"isOpen"}],ref:"list",staticClass:"multiselect__content-wrapper",style:{maxHeight:t.optimizedHeight+"px"},on:{focus:t.activate,mousedown:function(t){t.preventDefault()}}},[n("ul",{staticClass:"multiselect__content",style:t.contentStyle},[t._t("beforeList"),t._v(" "),t.multiple&&t.max===t.internalValue.length?n("li",[n("span",{staticClass:"multiselect__option"},[t._t("maxElements",[t._v("Maximum of "+t._s(t.max)+" options selected. First remove a selected option to select another.")])],2)]):t._e(),t._v(" "),!t.max||t.internalValue.length<t.max?t._l(t.filteredOptions,function(e,i){return n("li",{key:i,staticClass:"multiselect__element"},[e&&(e.$isLabel||e.$isDisabled)?t._e():n("span",{staticClass:"multiselect__option",class:t.optionHighlight(i,e),attrs:{"data-select":e&&e.isTag?t.tagPlaceholder:t.selectLabelText,"data-selected":t.selectedLabelText,"data-deselect":t.deselectLabelText},on:{click:function(n){n.stopPropagation(),t.select(e)},mouseenter:function(e){if(e.target!==e.currentTarget)return null;t.pointerSet(i)}}},[t._t("option",[n("span",[t._v(t._s(t.getOptionLabel(e)))])],{option:e,search:t.search})],2),t._v(" "),e&&(e.$isLabel||e.$isDisabled)?n("span",{staticClass:"multiselect__option",class:t.groupHighlight(i,e),attrs:{"data-select":t.groupSelect&&t.selectGroupLabelText,"data-deselect":t.groupSelect&&t.deselectGroupLabelText},on:{mouseenter:function(e){if(e.target!==e.currentTarget)return null;t.groupSelect&&t.pointerSet(i)},mousedown:function(n){n.preventDefault(),t.selectGroup(e)}}},[t._t("option",[n("span",[t._v(t._s(t.getOptionLabel(e)))])],{option:e,search:t.search})],2):t._e()])}):t._e(),t._v(" "),n("li",{directives:[{name:"show",rawName:"v-show",value:t.showNoResults&&0===t.filteredOptions.length&&t.search&&!t.loading,expression:"showNoResults && (filteredOptions.length === 0 && search && !loading)"}]},[n("span",{staticClass:"multiselect__option"},[t._t("noResult",[t._v("No elements found. Consider changing the search query.")])],2)]),t._v(" "),t._t("afterList")],2)])])],2)},r=[],o={render:i,staticRenderFns:r};e.a=o}])});

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__(215);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),
/* 44 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(16);
var document = __webpack_require__(7).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 46 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(44);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 48 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 49 */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),
/* 50 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(4);
var global = __webpack_require__(7);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(49) ? 'pure' : 'global',
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 52 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_new_milestone_form_vue__ = __webpack_require__(143);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_36583e05_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_new_milestone_form_vue__ = __webpack_require__(332);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(383)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_new_milestone_form_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_36583e05_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_new_milestone_form_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-milestones/new-milestone-form.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-36583e05", Component.options)
  } else {
    hotAPI.reload("data-v-36583e05", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_new_task_list_form_vue__ = __webpack_require__(157);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_e2c0be76_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_new_task_list_form_vue__ = __webpack_require__(375);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_new_task_list_form_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_e2c0be76_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_new_task_list_form_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/new-task-list-form.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e2c0be76", Component.options)
  } else {
    hotAPI.reload("data-v-e2c0be76", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_task_vue__ = __webpack_require__(34);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_289031e6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_task_vue__ = __webpack_require__(88);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(95)
  __webpack_require__(96)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_task_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_289031e6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_task_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/single-task.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-289031e6", Component.options)
  } else {
    hotAPI.reload("data-v-289031e6", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 56 */,
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    data: function data() {
        return {
            loading: true
        };
    },

    methods: {
        /**
         * Insert categroy resource
         * @param  {Object} args Object with callback
         * @return {void}      
         */
        newCategory: function newCategory(args) {
            var self = this;
            var pre_define = {
                data: {
                    title: this.title,
                    description: this.description,
                    categorible_type: 'project'
                },
                callback: false
            },
                args = jQuery.extend(true, pre_define, args);

            var request_data = {
                url: self.base_url + '/pm/v2/categories',
                type: 'POST',
                data: args.data,

                success: function success(res) {
                    self.addCategoryMeta(res.data);

                    self.show_spinner = false;

                    // Display a success toast, with a title
                    pm.Toastr.success(res.message);

                    self.submit_disabled = false;

                    self.$root.$store.commit('afterNewCategories', res.data);
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                },
                error: function error(res) {
                    self.show_spinner = false;
                    // Showing error
                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }

                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res.responseJSON.data);
                    }
                    self.submit_disabled = false;
                }
            };

            self.httpRequest(request_data);
        },


        /**
         * Get All categories 
         * @return {[data]} [description]
         */
        getCategories: function getCategories() {
            var self = this;
            var request_data = {
                url: self.base_url + '/pm/v2/categories',
                success: function success(res) {
                    res.data.map(function (category, index) {
                        self.addCategoryMeta(category);
                    });
                    pm.NProgress.done();
                    self.$root.$store.commit('setCategories', res.data);
                }
            };

            self.httpRequest(request_data);
        },
        getCategory: function getCategory() {},

        /**
         * Category meta
         * @param {Object} category 
         */
        addCategoryMeta: function addCategoryMeta(category) {
            category.edit_mode = false;
        },


        /**
         * Category form mood
         * @param  {Object} category 
         * @return {void}          
         */
        showHideCategoryEditForm: function showHideCategoryEditForm(category) {
            category.edit_mode = category.edit_mode ? false : true;
        },


        /**
         * Update Category 
         * @param  {Object} args 
         * @return {Data Collection}      
         */
        updateCategory: function updateCategory(args) {
            var self = this;
            var pre_define = {
                data: {
                    id: '',
                    title: '',
                    description: '',
                    categorible_type: 'project'
                },
                callback: false
            },
                args = jQuery.extend(true, pre_define, args);

            // Showing loading option 
            this.show_spinner = true;

            var request_data = {
                url: self.base_url + '/pm/v2/categories/' + args.data.id,
                type: 'PUT',
                data: args.data,

                success: function success(res) {
                    self.addCategoryMeta(res.data);
                    self.show_spinner = false;

                    // Display a success toast, with a title
                    pm.Toastr.success(res.message);

                    self.submit_disabled = false;
                    self.show_spinner = false;

                    self.$root.$store.commit('afterUpdateCategories', res.data);
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                },
                error: function error(res) {
                    self.show_spinner = false;
                    // Showing error
                    if (res.status == 400) {
                        var params = res.responseJSON.data.params;
                        for (var obj in params) {
                            pm.Toastr.error(params[obj][0]);
                        }
                    }

                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res.responseJSON.data);
                    }
                    self.submit_disabled = false;
                }
            };
            self.httpRequest(request_data);
        },


        /**
         * Delete Bulk categories by categories ids
         * @param  {Object} args ids with callback
         * @return {void}      
         */
        deleteCategories: function deleteCategories(args) {
            var self = this;

            var pre_define = {
                category_ids: [],
                callback: false
            },
                args = jQuery.extend(true, pre_define, args);

            var request_data = {
                url: self.base_url + '/pm/v2/categories/bulk-delete/',
                data: {
                    'category_ids': args.category_ids
                },
                type: 'DELETE',
                success: function success(res) {
                    args.category_ids.map(function (id, index) {
                        self.$root.$store.commit('afterDeleteCategory', id);
                    });
                    pm.Toastr.success(res.message);
                    if (typeof args.callback === 'function') {
                        args.callback.call(self, res);
                    }
                }
            };
            self.httpRequest(request_data);
        }
    }
};

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(61), __esModule: true };

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(62), __esModule: true };

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(58);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (obj, key, value) {
  if (key in obj) {
    (0, _defineProperty2.default)(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(72);
var $Object = __webpack_require__(4).Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(73);
module.exports = __webpack_require__(4).Object.keys;


/***/ }),
/* 63 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(23);
var toLength = __webpack_require__(70);
var toAbsoluteIndex = __webpack_require__(69);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(63);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(6) && !__webpack_require__(11)(function () {
  return Object.defineProperty(__webpack_require__(45)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(14);
var toIObject = __webpack_require__(23);
var arrayIndexOf = __webpack_require__(64)(false);
var IE_PROTO = __webpack_require__(39)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(13);
var core = __webpack_require__(4);
var fails = __webpack_require__(11);
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(22);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(22);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(16);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(13);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(6), 'Object', { defineProperty: __webpack_require__(17).f });


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(40);
var $keys = __webpack_require__(38);

__webpack_require__(68)('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-todo .pm-modal-conetnt .pm-desc-content{\n    position: relative;\n}\n.pm-todo .pm-modal-conetnt .pm-task-title-right {\n    float: right;\n}\ntextarea.pm-desc-field {\n    line-height: 1.6;\n}\n.pm-task-modal .pm-multiselect-single-task .multiselect__input{\n    width: 100%;\n}\n.pm-task-modal .pm-multiselect-single-task .multiselect__select {\n    display: none;\n}\n.pm-task-modal .pm-multiselect-single-task .multiselect__tags {\n    padding: 8px 12px 0 8px;\n}\n.pm-task-modal .pm-multiselect-single-task .multiselect__tag {\n    display: none;\n    margin: 0;\n    padding: 0;\n}\na.task-description-edit-icon {\n    position: absolute;\n    top: -22px;\n    right: 0px;\n    padding: 10px;\n}\n\n", ""]);

// exports


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-line-through {\n    text-decoration: line-through;\n}\n.pm-multiselect-single-task {\n    position: absolute;\n    width: 26%;\n}\n", ""]);

// exports


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-small-title input[type=\"checkbox\"] {\n    margin: -3px 0 0 !important;\n}\n.pm-user-list input[type=\"checkbox\"] {\n    margin: -1px 0 0 !important;\n}\n", ""]);

// exports


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-task-comment-thumb {\n    height: 80px;\n    width: 80px;\n}\n", ""]);

// exports


/***/ }),
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_date_picker_vue__ = __webpack_require__(28);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_158f4fcc_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_date_picker_vue__ = __webpack_require__(87);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_date_picker_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_158f4fcc_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_date_picker_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/common/date-picker.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-158f4fcc", Component.options)
  } else {
    hotAPI.reload("data-v-158f4fcc", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_header_vue__ = __webpack_require__(128);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_972db828_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_header_vue__ = __webpack_require__(364);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_header_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_972db828_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_header_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/header.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-972db828", Component.options)
  } else {
    hotAPI.reload("data-v-972db828", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 80 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4bc5108e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_loading_vue__ = __webpack_require__(338);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */
var __vue_script__ = null
/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4bc5108e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_loading_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/project-loading.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4bc5108e", Component.options)
  } else {
    hotAPI.reload("data-v-4bc5108e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 81 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_summary_vue__ = __webpack_require__(134);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_be540dba_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_summary_vue__ = __webpack_require__(367);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(396)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_summary_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_be540dba_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_summary_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/project-summary.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-be540dba", Component.options)
  } else {
    hotAPI.reload("data-v-be540dba", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 82 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_action_milestones_vue__ = __webpack_require__(136);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0a184313_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_action_milestones_vue__ = __webpack_require__(314);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_action_milestones_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0a184313_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_action_milestones_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-milestones/action-milestones.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0a184313", Component.options)
  } else {
    hotAPI.reload("data-v-0a184313", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_list_vue__ = __webpack_require__(140);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8354a3d6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_list_vue__ = __webpack_require__(360);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_list_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8354a3d6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_list_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-milestones/list.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-8354a3d6", Component.options)
  } else {
    hotAPI.reload("data-v-8354a3d6", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_milestone_discussion_vue__ = __webpack_require__(141);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6893489c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_milestone_discussion_vue__ = __webpack_require__(352);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_milestone_discussion_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6893489c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_milestone_discussion_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-milestones/milestone-discussion.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6893489c", Component.options)
  } else {
    hotAPI.reload("data-v-6893489c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 85 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_task_comment_form_vue__ = __webpack_require__(35);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f52544c6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_task_comment_form_vue__ = __webpack_require__(94);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_task_comment_form_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f52544c6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_task_comment_form_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/task-comment-form.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-f52544c6", Component.options)
  } else {
    hotAPI.reload("data-v-f52544c6", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 86 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_task_comments_vue__ = __webpack_require__(36);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8f6feec2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_task_comments_vue__ = __webpack_require__(93);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(98)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_task_comments_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8f6feec2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_task_comments_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/task-comments.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-8f6feec2", Component.options)
  } else {
    hotAPI.reload("data-v-8f6feec2", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 87 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("input", {
    staticClass: "pm-datepicker",
    attrs: { type: "text" },
    domProps: { value: _vm.dateValue }
  })
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-158f4fcc", esExports)
  }
}

/***/ }),
/* 88 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "nonsortable" }, [
    _vm.loading
      ? _c(
          "div",
          {
            staticClass: "modal-mask half-modal pm-task-modal modal-transition"
          },
          [
            _c("div", { staticClass: "modal-wrapper" }, [
              _c(
                "div",
                {
                  staticClass: "modal-container",
                  staticStyle: { height: "20000px" }
                },
                [
                  _c("span", { staticClass: "close-vue-modal" }, [
                    _c(
                      "a",
                      {
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            _vm.closePopup()
                          }
                        }
                      },
                      [_c("span", { staticClass: "dashicons dashicons-no" })]
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(0)
                ]
              )
            ])
          ]
        )
      : _c(
          "div",
          {
            staticClass: "modal-mask half-modal pm-task-modal modal-transition"
          },
          [
            _c("div", { staticClass: "modal-wrapper" }, [
              _c("div", { staticClass: "modal-container" }, [
                _c("span", { staticClass: "close-vue-modal" }, [
                  _c(
                    "a",
                    {
                      on: {
                        click: function($event) {
                          $event.preventDefault()
                          _vm.closePopup()
                        }
                      }
                    },
                    [_c("span", { staticClass: "dashicons dashicons-no" })]
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "modal-body pm-todolist" }, [
                  _c("div", { staticClass: "pm-col-12 pm-todo" }, [
                    _c(
                      "div",
                      { staticClass: "pm-modal-conetnt" },
                      [
                        _c(
                          "div",
                          { staticClass: "cmp-task-header" },
                          [
                            _c("h3", { staticClass: "pm-task-title" }, [
                              _c(
                                "span",
                                { staticClass: "pm-mark-done-checkbox" },
                                [
                                  _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.task.status,
                                        expression: "task.status"
                                      }
                                    ],
                                    attrs: {
                                      disabled: _vm.can_complete_task(_vm.task),
                                      type: "checkbox"
                                    },
                                    domProps: {
                                      checked: Array.isArray(_vm.task.status)
                                        ? _vm._i(_vm.task.status, null) > -1
                                        : _vm.task.status
                                    },
                                    on: {
                                      click: function($event) {
                                        _vm.singleTaskDoneUndone()
                                      },
                                      change: function($event) {
                                        var $$a = _vm.task.status,
                                          $$el = $event.target,
                                          $$c = $$el.checked ? true : false
                                        if (Array.isArray($$a)) {
                                          var $$v = null,
                                            $$i = _vm._i($$a, $$v)
                                          if ($$el.checked) {
                                            $$i < 0 &&
                                              _vm.$set(
                                                _vm.task,
                                                "status",
                                                $$a.concat([$$v])
                                              )
                                          } else {
                                            $$i > -1 &&
                                              _vm.$set(
                                                _vm.task,
                                                "status",
                                                $$a
                                                  .slice(0, $$i)
                                                  .concat($$a.slice($$i + 1))
                                              )
                                          }
                                        } else {
                                          _vm.$set(_vm.task, "status", $$c)
                                        }
                                      }
                                    }
                                  })
                                ]
                              ),
                              _vm._v(" "),
                              _c(
                                "span",
                                {
                                  class:
                                    _vm.singleTaskTitle(_vm.task) +
                                    " pm-task-title-wrap"
                                },
                                [
                                  _c(
                                    "div",
                                    { staticClass: "pm-task-title-text" },
                                    [
                                      _vm.is_task_title_edit_mode &&
                                      _vm.can_edit_task(_vm.task)
                                        ? _c("span", [
                                            _c("input", {
                                              directives: [
                                                {
                                                  name: "model",
                                                  rawName: "v-model",
                                                  value: _vm.task.title,
                                                  expression: "task.title"
                                                }
                                              ],
                                              staticClass:
                                                "pm-task-title-activity pm-task-title-field",
                                              attrs: { type: "text" },
                                              domProps: {
                                                value: _vm.task.title
                                              },
                                              on: {
                                                blur: function($event) {
                                                  _vm.updateTaskElement(
                                                    _vm.task
                                                  )
                                                },
                                                keyup: function($event) {
                                                  if (
                                                    !("button" in $event) &&
                                                    _vm._k(
                                                      $event.keyCode,
                                                      "enter",
                                                      13,
                                                      $event.key,
                                                      "Enter"
                                                    )
                                                  ) {
                                                    return null
                                                  }
                                                  _vm.updateTaskElement(
                                                    _vm.task
                                                  )
                                                },
                                                input: function($event) {
                                                  if ($event.target.composing) {
                                                    return
                                                  }
                                                  _vm.$set(
                                                    _vm.task,
                                                    "title",
                                                    $event.target.value
                                                  )
                                                }
                                              }
                                            })
                                          ])
                                        : _vm._e(),
                                      _vm._v(" "),
                                      !_vm.is_task_title_edit_mode
                                        ? _c(
                                            "span",
                                            {
                                              class:
                                                _vm.lineThrough(_vm.task) +
                                                " pm-task-title-activity pm-task-title-span",
                                              on: {
                                                click: function($event) {
                                                  $event.preventDefault()
                                                  _vm.isTaskTitleEditMode()
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "\n                                                " +
                                                  _vm._s(_vm.task.title) +
                                                  "\n                                            "
                                              )
                                            ]
                                          )
                                        : _vm._e()
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c("div", {
                                    staticClass: "clearfix pm-clear"
                                  })
                                ]
                              ),
                              _vm._v(" "),
                              _c(
                                "div",
                                { staticClass: "pm-task-title-right" },
                                [
                                  _vm.PM_Vars.is_pro &&
                                  _vm.task.status == "0" &&
                                  _vm.can_edit_task(_vm.task) &&
                                  _vm.user_can("view_private_task")
                                    ? _c(
                                        "a",
                                        {
                                          attrs: { href: "#" },
                                          on: {
                                            click: function($event) {
                                              $event.preventDefault()
                                              _vm.singleTaskLockUnlock(_vm.task)
                                            }
                                          }
                                        },
                                        [
                                          _c("span", {
                                            class: _vm.privateClass(
                                              _vm.task.meta.privacy
                                            )
                                          })
                                        ]
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  _c(
                                    "a",
                                    {
                                      directives: [
                                        {
                                          name: "pm-tooltip",
                                          rawName: "v-pm-tooltip"
                                        }
                                      ],
                                      attrs: {
                                        title: _vm.__(
                                          "Copy this task URL",
                                          "pm"
                                        ),
                                        href: "#"
                                      },
                                      on: {
                                        click: function($event) {
                                          $event.preventDefault()
                                          _vm.copyUrl(_vm.task)
                                        }
                                      }
                                    },
                                    [
                                      _c("i", {
                                        staticClass: "fa fa-clipboard",
                                        attrs: { "aria-hidden": "true" }
                                      })
                                    ]
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c("div", { staticClass: "clearfix pm-clear" })
                            ]),
                            _vm._v(" "),
                            _c("do-action", {
                              attrs: {
                                hook: "single_task_inline",
                                actionData: _vm.doActionData
                              }
                            }),
                            _vm._v(" "),
                            _c("div", { staticClass: "pm-task-meta" }, [
                              _c(
                                "span",
                                { staticClass: "pm-assigned-user-wrap" },
                                [
                                  _vm._l(_vm.task.assignees.data, function(
                                    user
                                  ) {
                                    return _vm.task.assignees.data.length
                                      ? _c(
                                          "span",
                                          {
                                            staticClass: "pm-assigned-user",
                                            on: {
                                              click: function($event) {
                                                $event.preventDefault()
                                                _vm.isEnableMultiSelect()
                                              }
                                            }
                                          },
                                          [
                                            _c(
                                              "a",
                                              {
                                                attrs: {
                                                  href: "#",
                                                  title: user.display_name
                                                }
                                              },
                                              [
                                                _c("img", {
                                                  staticClass:
                                                    "avatar avatar-48 photo",
                                                  attrs: {
                                                    alt: user.display_name,
                                                    src: user.avatar_url,
                                                    height: "48",
                                                    width: "48"
                                                  }
                                                })
                                              ]
                                            )
                                          ]
                                        )
                                      : _vm._e()
                                  }),
                                  _vm._v(" "),
                                  !_vm.task.assignees.data.length
                                    ? _c(
                                        "span",
                                        {
                                          staticClass: "pm-assigned-user",
                                          on: {
                                            click: function($event) {
                                              $event.preventDefault()
                                              _vm.isEnableMultiSelect()
                                            }
                                          }
                                        },
                                        [
                                          _c("i", {
                                            staticClass: "fa fa-user",
                                            staticStyle: {
                                              "font-size": "20px"
                                            },
                                            attrs: { "aria-hidden": "true" }
                                          })
                                        ]
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  _vm.is_enable_multi_select
                                    ? _c(
                                        "div",
                                        {
                                          staticClass:
                                            "pm-multiselect pm-multiselect-single-task"
                                        },
                                        [
                                          _c("multiselect", {
                                            attrs: {
                                              options: _vm.project_users,
                                              multiple: true,
                                              "close-on-select": false,
                                              "clear-on-select": true,
                                              "show-labels": true,
                                              searchable: true,
                                              placeholder: "Select User",
                                              "select-label": "",
                                              "selected-label": "selected",
                                              "deselect-label": "",
                                              label: "display_name",
                                              "track-by": "id",
                                              "allow-empty": true
                                            },
                                            model: {
                                              value: _vm.task_assign,
                                              callback: function($$v) {
                                                _vm.task_assign = $$v
                                              },
                                              expression: "task_assign"
                                            }
                                          })
                                        ],
                                        1
                                      )
                                    : _vm._e()
                                ],
                                2
                              ),
                              _vm._v(" "),
                              _vm.task.start_at.date || _vm.task.due_date.date
                                ? _c(
                                    "span",
                                    {
                                      class:
                                        _vm.taskDateWrap(
                                          _vm.task.due_date.date
                                        ) + " pm-task-date-wrap pm-date-window"
                                    },
                                    [
                                      _c(
                                        "span",
                                        {
                                          on: {
                                            click: function($event) {
                                              $event.preventDefault()
                                              _vm.isTaskDateEditMode()
                                            }
                                          }
                                        },
                                        [
                                          _vm.task_start_field
                                            ? _c("span", [
                                                _vm._v(
                                                  "\n                                                    " +
                                                    _vm._s(
                                                      _vm.dateFormat(
                                                        _vm.task.start_at.date
                                                      )
                                                    ) +
                                                    "\n                                                "
                                                )
                                              ])
                                            : _vm._e(),
                                          _vm._v(" "),
                                          _vm.task_start_field &&
                                          _vm.task.start_at.date &&
                                          _vm.task.due_date.date
                                            ? _c("span", [_vm._v("–")])
                                            : _vm._e(),
                                          _vm._v(" "),
                                          _vm.task.due_date
                                            ? _c("span", [
                                                _vm._v(
                                                  "\n                                                    " +
                                                    _vm._s(
                                                      _vm.dateFormat(
                                                        _vm.task.due_date.date
                                                      )
                                                    ) +
                                                    "\n                                                "
                                                )
                                              ])
                                            : _vm._e()
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _vm.is_task_date_edit_mode &&
                                      _vm.can_edit_task(_vm.task)
                                        ? _c(
                                            "div",
                                            {
                                              staticClass: "pm-date-update-wrap"
                                            },
                                            [
                                              _vm.task_start_field
                                                ? _c("div", {
                                                    directives: [
                                                      {
                                                        name: "pm-datepicker",
                                                        rawName:
                                                          "v-pm-datepicker"
                                                      }
                                                    ],
                                                    staticClass:
                                                      "pm-date-picker-from pm-inline-date-picker-from"
                                                  })
                                                : _vm._e(),
                                              _vm._v(" "),
                                              _c("div", {
                                                directives: [
                                                  {
                                                    name: "pm-datepicker",
                                                    rawName: "v-pm-datepicker"
                                                  }
                                                ],
                                                staticClass:
                                                  "pm-date-picker-to pm-inline-date-picker-to"
                                              }),
                                              _vm._v(" "),
                                              _c("div", {
                                                staticClass: "clearfix pm-clear"
                                              })
                                            ]
                                          )
                                        : _vm._e()
                                    ]
                                  )
                                : _vm._e(),
                              _vm._v(" "),
                              !_vm.task.start_at.date && !_vm.task.due_date.date
                                ? _c(
                                    "span",
                                    {
                                      staticClass:
                                        "pm-task-date-wrap pm-date-window"
                                    },
                                    [
                                      _c(
                                        "span",
                                        {
                                          class: _vm.task.status
                                            ? _vm.completedTaskWrap(
                                                _vm.task.start_at.date,
                                                _vm.task.due_date.date
                                              )
                                            : _vm.taskDateWrap(
                                                _vm.task.start_at.date,
                                                _vm.task.due_date.date
                                              ),
                                          on: {
                                            click: function($event) {
                                              $event.preventDefault()
                                              _vm.isTaskDateEditMode()
                                            }
                                          }
                                        },
                                        [_vm._m(1)]
                                      ),
                                      _vm._v(" "),
                                      _vm.is_task_date_edit_mode &&
                                      _vm.can_edit_task(_vm.task)
                                        ? _c(
                                            "div",
                                            {
                                              staticClass: "pm-date-update-wrap"
                                            },
                                            [
                                              _vm.task_start_field
                                                ? _c("div", {
                                                    directives: [
                                                      {
                                                        name: "pm-datepicker",
                                                        rawName:
                                                          "v-pm-datepicker"
                                                      }
                                                    ],
                                                    staticClass:
                                                      "pm-date-picker-from pm-inline-date-picker-from"
                                                  })
                                                : _vm._e(),
                                              _vm._v(" "),
                                              _c("div", {
                                                directives: [
                                                  {
                                                    name: "pm-datepicker",
                                                    rawName: "v-pm-datepicker"
                                                  }
                                                ],
                                                staticClass:
                                                  "pm-date-picker-to pm-inline-date-picker-to"
                                              }),
                                              _vm._v(" "),
                                              _c("div", {
                                                staticClass: "clearfix pm-clear"
                                              })
                                            ]
                                          )
                                        : _vm._e()
                                    ]
                                  )
                                : _vm._e(),
                              _vm._v(" "),
                              _c(
                                "span",
                                { staticClass: "pm-task-comment-count" },
                                [
                                  _vm._v(
                                    _vm._s(_vm.task.comments.data.length) +
                                      " " +
                                      _vm._s(_vm.__("Comments", "pm"))
                                  )
                                ]
                              )
                            ])
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "div",
                          { staticClass: "task-details" },
                          [
                            !_vm.is_task_details_edit_mode
                              ? _c(
                                  "div",
                                  {
                                    staticClass: "pm-des-area pm-desc-content"
                                  },
                                  [
                                    _vm.task.description.content != ""
                                      ? _c("div", [
                                          _c("div", {
                                            staticClass: "pm-task-description",
                                            domProps: {
                                              innerHTML: _vm._s(
                                                _vm.task.description.html
                                              )
                                            }
                                          })
                                        ])
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "a",
                                      {
                                        staticClass:
                                          "task-description-edit-icon",
                                        attrs: {
                                          title: _vm.update_description
                                        },
                                        on: {
                                          click: function($event) {
                                            $event.preventDefault()
                                            _vm.isTaskDetailsEditMode()
                                          }
                                        }
                                      },
                                      [
                                        _c("i", {
                                          staticClass: "fa fa-pencil",
                                          staticStyle: { "font-size": "16px" },
                                          attrs: { "aria-hidden": "true" }
                                        })
                                      ]
                                    )
                                  ]
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            _vm.is_task_details_edit_mode &&
                            _vm.can_edit_task(_vm.task)
                              ? _c("textarea", {
                                  directives: [
                                    {
                                      name: "prevent-line-break",
                                      rawName: "v-prevent-line-break"
                                    },
                                    {
                                      name: "model",
                                      rawName: "v-model",
                                      value: _vm.task_description,
                                      expression: "task_description"
                                    }
                                  ],
                                  staticClass: "pm-des-area pm-desc-field",
                                  domProps: { value: _vm.task_description },
                                  on: {
                                    blur: function($event) {
                                      _vm.updateDescription(_vm.task, $event)
                                    },
                                    keyup: function($event) {
                                      if (
                                        !("button" in $event) &&
                                        _vm._k(
                                          $event.keyCode,
                                          "enter",
                                          13,
                                          $event.key,
                                          "Enter"
                                        )
                                      ) {
                                        return null
                                      }
                                      _vm.updateDescription(_vm.task, $event)
                                    },
                                    input: function($event) {
                                      if ($event.target.composing) {
                                        return
                                      }
                                      _vm.task_description = $event.target.value
                                    }
                                  }
                                })
                              : _vm._e(),
                            _vm._v(" "),
                            _vm.is_task_details_edit_mode &&
                            _vm.can_edit_task(_vm.task)
                              ? _c("div", { staticClass: "pm-help-text" }, [
                                  _c("span", [
                                    _vm._v(
                                      _vm._s(
                                        _vm.__(
                                          "Shift+Enter for line break",
                                          "pm"
                                        )
                                      )
                                    )
                                  ])
                                ])
                              : _vm._e(),
                            _vm._v(" "),
                            _c("div", { staticClass: "clearfix pm-clear" }),
                            _vm._v(" "),
                            _c("do-action", {
                              attrs: {
                                hook: "aftre_single_task_details",
                                actionData: _vm.doActionData
                              }
                            })
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c("do-action", {
                          attrs: {
                            hook: "aftre_single_task_content",
                            actionData: _vm.doActionData
                          }
                        }),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-todo-wrap clearfix" }, [
                          _c("div", { staticClass: "pm-task-comment" }, [
                            _c(
                              "div",
                              { staticClass: "comment-content" },
                              [
                                _c("task-comments", {
                                  attrs: {
                                    task: _vm.task,
                                    comments: _vm.task.comments.data
                                  }
                                })
                              ],
                              1
                            )
                          ])
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "clearfix" })
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "clearfix" })
              ])
            ])
          ]
        )
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "modal-body pm-todolist" }, [
      _c("div", { staticClass: "pm-data-load-before" }, [
        _c("div", { staticClass: "loadmoreanimation" }, [
          _c("div", { staticClass: "load-spinner" }, [
            _c("div", { staticClass: "rect1" }),
            _vm._v(" "),
            _c("div", { staticClass: "rect2" }),
            _vm._v(" "),
            _c("div", { staticClass: "rect3" }),
            _vm._v(" "),
            _c("div", { staticClass: "rect4" }),
            _vm._v(" "),
            _c("div", { staticClass: "rect5" })
          ])
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("span", [
      _c("i", {
        staticClass: "fa fa-calendar",
        staticStyle: { "font-size": "20px" },
        attrs: { "aria-hidden": "true" }
      })
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-289031e6", esExports)
  }
}

/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.assain_users.length
    ? _c("div", { staticClass: "notify-users" }, [
        _c("h2", { staticClass: "pm-box-title" }, [
          _vm._v(
            " \n        " +
              _vm._s(_vm.__("Notify users", "pm")) +
              "               \n        "
          ),
          _c(
            "label",
            { staticClass: "pm-small-title", attrs: { for: "select-all" } },
            [
              _c("input", {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.select_all,
                    expression: "select_all"
                  }
                ],
                staticClass: "pm-toggle-checkbox",
                attrs: { type: "checkbox", id: "select-all" },
                domProps: {
                  checked: Array.isArray(_vm.select_all)
                    ? _vm._i(_vm.select_all, null) > -1
                    : _vm.select_all
                },
                on: {
                  change: [
                    function($event) {
                      var $$a = _vm.select_all,
                        $$el = $event.target,
                        $$c = $$el.checked ? true : false
                      if (Array.isArray($$a)) {
                        var $$v = null,
                          $$i = _vm._i($$a, $$v)
                        if ($$el.checked) {
                          $$i < 0 && (_vm.select_all = $$a.concat([$$v]))
                        } else {
                          $$i > -1 &&
                            (_vm.select_all = $$a
                              .slice(0, $$i)
                              .concat($$a.slice($$i + 1)))
                        }
                      } else {
                        _vm.select_all = $$c
                      }
                    },
                    function($event) {
                      _vm.select_all_user()
                    }
                  ]
                }
              }),
              _vm._v(
                " \n            " +
                  _vm._s(_vm.__("Select all", "pm")) +
                  "\n        "
              )
            ]
          )
        ]),
        _vm._v(" "),
        _c(
          "ul",
          { staticClass: "pm-user-list" },
          [
            _vm._l(_vm.assain_users, function(user) {
              return _c("li", { key: user.id }, [
                _c("label", [
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.notify_users,
                        expression: "notify_users"
                      }
                    ],
                    ref: "users",
                    refInFor: true,
                    attrs: { type: "checkbox" },
                    domProps: {
                      value: user.id,
                      checked: Array.isArray(_vm.notify_users)
                        ? _vm._i(_vm.notify_users, user.id) > -1
                        : _vm.notify_users
                    },
                    on: {
                      change: function($event) {
                        var $$a = _vm.notify_users,
                          $$el = $event.target,
                          $$c = $$el.checked ? true : false
                        if (Array.isArray($$a)) {
                          var $$v = user.id,
                            $$i = _vm._i($$a, $$v)
                          if ($$el.checked) {
                            $$i < 0 && (_vm.notify_users = $$a.concat([$$v]))
                          } else {
                            $$i > -1 &&
                              (_vm.notify_users = $$a
                                .slice(0, $$i)
                                .concat($$a.slice($$i + 1)))
                          }
                        } else {
                          _vm.notify_users = $$c
                        }
                      }
                    }
                  }),
                  _vm._v(
                    " \n                " +
                      _vm._s(user.display_name) +
                      "\n            "
                  )
                ])
              ])
            }),
            _vm._v(" "),
            _c("div", { staticClass: "clearfix" })
          ],
          2
        )
      ])
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-39a04148", esExports)
  }
}

/***/ }),
/* 90 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("textarea", {
    directives: [
      {
        name: "model",
        rawName: "v-model",
        value: _vm.content.html,
        expression: "content.html"
      }
    ],
    attrs: { id: _vm.editor_id },
    domProps: { value: _vm.content.html },
    on: {
      input: function($event) {
        if ($event.target.composing) {
          return
        }
        _vm.$set(_vm.content, "html", $event.target.value)
      }
    }
  })
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-3fcc7e9a", esExports)
  }
}

/***/ }),
/* 91 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "pm-attachment-area" }, [
    _c("div", { attrs: { id: "pm-upload-container" } }, [
      _c(
        "div",
        { staticClass: "pm-upload-filelist" },
        _vm._l(_vm.files, function(file) {
          return _c("div", { key: file.id, staticClass: "pm-uploaded-item" }, [
            _c(
              "a",
              {
                staticClass: "pm-uploaded-img",
                attrs: { href: file.url, target: "_blank" }
              },
              [
                _c("img", {
                  staticClass: "pm-uploaded-file",
                  attrs: { src: file.thumb, alt: file.name }
                })
              ]
            ),
            _vm._v(" "),
            _c(
              "a",
              {
                staticClass: "button",
                attrs: { href: "#" },
                on: {
                  click: function($event) {
                    $event.preventDefault()
                    _vm.deletefile(file.id)
                  }
                }
              },
              [_vm._v(_vm._s(_vm.__("Delete File", "pm")))]
            )
          ])
        })
      ),
      _vm._v(" "),
      _c("span", [
        _vm._v(
          " \n            " +
            _vm._s(_vm.__("To attach", "pm")) +
            " \n            "
        ),
        _c(
          "a",
          {
            directives: [{ name: "pm-uploader", rawName: "v-pm-uploader" }],
            staticClass: "pm-upload-pickfiles",
            attrs: { href: "#" }
          },
          [_vm._v(_vm._s(_vm.__("select files", "pm")))]
        ),
        _vm._v(
          " \n            " +
            _vm._s(_vm.__("from your computer.", "pm")) +
            "\n        "
        )
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-615029ec", esExports)
  }
}

/***/ }),
/* 92 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.total_pages > 1
    ? _c("div", { staticClass: "pm-pagination-wrap" }, [
        _c(
          "div",
          { staticClass: "pm-pagination-inner" },
          [
            parseInt(_vm.current_page_number) > 1
              ? _c(
                  "router-link",
                  {
                    staticClass: "pm-pagination-btn prev page-numbers",
                    attrs: {
                      to: {
                        name: _vm.component_name,
                        params: {
                          current_page_number: _vm.current_page_number - 1
                        },
                        query: _vm.route_query
                      }
                    }
                  },
                  [_vm._v("\n            «\n        ")]
                )
              : _vm._e(),
            _vm._v(" "),
            _vm._l(_vm.total_pages, function(page) {
              return _c(
                "router-link",
                {
                  key: page,
                  class: _vm.pageClass(page) + " pm-pagination-btn",
                  attrs: {
                    to: {
                      name: _vm.component_name,
                      params: {
                        current_page_number: page
                      },
                      query: _vm.route_query
                    }
                  }
                },
                [_vm._v("\n            " + _vm._s(page) + "\n        ")]
              )
            }),
            _vm._v(" "),
            parseInt(_vm.current_page_number) < parseInt(_vm.total_pages)
              ? _c(
                  "router-link",
                  {
                    staticClass: "pm-pagination-btn next page-numbers",
                    attrs: {
                      to: {
                        name: _vm.component_name,
                        params: {
                          current_page_number: _vm.current_page_number + 1
                        },
                        query: _vm.route_query
                      }
                    }
                  },
                  [_vm._v("\n            »\n        ")]
                )
              : _vm._e()
          ],
          2
        ),
        _vm._v(" "),
        _c("div", { staticClass: "pm-clearfix" })
      ])
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-6ddfcbc6", esExports)
  }
}

/***/ }),
/* 93 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "pm-task-comment-wrap" }, [
    _c("h3", { staticClass: "pm-comment-title" }, [
      _vm._v(_vm._s(_vm.__("Discuss this task", "pm")))
    ]),
    _vm._v(" "),
    _vm.comments.length
      ? _c(
          "ul",
          { staticClass: "pm-comment-wrap" },
          _vm._l(_vm.comments, function(comment) {
            return _c(
              "li",
              {
                key: "tasks-comments-" + comment.id,
                class: "pm-comment clearfix even pm-fade-out-" + comment.id
              },
              [
                _c("div", { staticClass: "pm-avatar" }, [
                  _c(
                    "a",
                    {
                      attrs: {
                        href: _vm.myTaskRedirect(comment.creator.data.id),
                        title: comment.creator.data.display_name
                      }
                    },
                    [
                      _c("img", {
                        staticClass: "avatar avatar-96 photo",
                        attrs: {
                          alt: comment.creator.data.display_name,
                          src: comment.creator.data.avatar_url,
                          height: "96",
                          width: "96"
                        }
                      })
                    ]
                  )
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "pm-comment-container" },
                  [
                    _c("div", { staticClass: "pm-comment-meta" }, [
                      _vm._v(
                        "\n                    " +
                          _vm._s(_vm.__("By", "pm")) +
                          "\n                    "
                      ),
                      _c("span", { staticClass: "pm-author" }, [
                        _c(
                          "a",
                          {
                            attrs: {
                              href: _vm.myTaskRedirect(comment.creator.data.id),
                              title: comment.creator.data.display_name
                            }
                          },
                          [
                            _vm._v(
                              "\n                            " +
                                _vm._s(comment.creator.data.display_name) +
                                "\n                        "
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("span", [_vm._v(_vm._s(_vm.__("on", "pm")))]),
                      _vm._v(" "),
                      _c("span", { staticClass: "pm-date" }, [
                        _c(
                          "time",
                          {
                            attrs: {
                              datetime: _vm.dateISO8601Format(
                                comment.comment_date
                              ),
                              title: _vm.dateISO8601Format(comment.comment_date)
                            }
                          },
                          [_vm._v(_vm._s(_vm.commentDate(comment)))]
                        )
                      ]),
                      _vm._v(" "),
                      _vm.can_edit_comment(comment)
                        ? _c("div", { staticClass: "pm-comment-action" }, [
                            _c("span", { staticClass: "pm-edit-link" }, [
                              _c("a", {
                                staticClass: "dashicons dashicons-edit",
                                attrs: { href: "#" },
                                on: {
                                  click: function($event) {
                                    $event.preventDefault()
                                    _vm.showHideTaskCommentForm(comment)
                                  }
                                }
                              })
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "pm-delete-link" }, [
                              _c("a", {
                                staticClass: "dashicons dashicons-trash",
                                attrs: { href: "#" },
                                on: {
                                  click: function($event) {
                                    $event.preventDefault()
                                    _vm.deleteTaskComment(comment.id)
                                  }
                                }
                              })
                            ])
                          ])
                        : _vm._e()
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "pm-comment-content" }, [
                      _c("div", {
                        domProps: { innerHTML: _vm._s(comment.content) }
                      }),
                      _vm._v(" "),
                      comment.files.data.length
                        ? _c(
                            "ul",
                            { staticClass: "pm-attachments" },
                            _vm._l(comment.files.data, function(file) {
                              return _c("li", [
                                file.type == "image"
                                  ? _c(
                                      "a",
                                      {
                                        directives: [
                                          {
                                            name: "pm-pretty-photo",
                                            rawName: "v-pm-pretty-photo"
                                          }
                                        ],
                                        staticClass: "pm-colorbox-img",
                                        attrs: {
                                          href: _vm.getDownloadUrl(
                                            file.attachment_id
                                          ),
                                          title: file.name,
                                          target: "_blank"
                                        }
                                      },
                                      [
                                        _c("img", {
                                          staticClass: "pm-content-img-size",
                                          attrs: {
                                            src: file.thumb,
                                            alt: file.name
                                          }
                                        })
                                      ]
                                    )
                                  : _c(
                                      "a",
                                      {
                                        staticClass: "pm-colorbox-img",
                                        attrs: {
                                          href: _vm.getDownloadUrl(
                                            file.attachment_id
                                          ),
                                          title: file.name,
                                          target: "_blank"
                                        }
                                      },
                                      [
                                        _c("img", {
                                          staticClass: "pm-content-img-size",
                                          attrs: {
                                            src: file.thumb,
                                            alt: file.name
                                          }
                                        })
                                      ]
                                    )
                              ])
                            })
                          )
                        : _vm._e()
                    ]),
                    _vm._v(" "),
                    _vm.can_edit_comment(comment)
                      ? _c("transition", { attrs: { name: "slide" } }, [
                          comment.edit_mode
                            ? _c(
                                "div",
                                { staticClass: "pm-comment-edit-form" },
                                [
                                  _c("task-comment-form", {
                                    attrs: {
                                      task: _vm.task,
                                      comment: comment,
                                      comments: _vm.comments
                                    }
                                  })
                                ],
                                1
                              )
                            : _vm._e()
                        ])
                      : _vm._e()
                  ],
                  1
                )
              ]
            )
          })
        )
      : _vm._e(),
    _vm._v(" "),
    _c("div", { staticClass: "single-todo-comments" }, [
      _c("div", { staticClass: "pm-comment-form-wrap" }, [
        _c("div", { staticClass: "pm-avatar" }, [
          _c(
            "a",
            {
              attrs: { href: _vm.myTaskRedirect(_vm.PM_Vars.current_user.ID) }
            },
            [
              _c("img", {
                attrs: { src: _vm.avatar_url, height: "48", width: "48" }
              })
            ]
          )
        ]),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "pm-new-doc-comment-form" },
          [
            _c("task-comment-form", {
              attrs: { task: _vm.task, comment: {}, comments: _vm.comments }
            })
          ],
          1
        )
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-8f6feec2", esExports)
  }
}

/***/ }),
/* 94 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "form",
    {
      staticClass: "pm-comment-form-vue pm-comment-form",
      on: {
        submit: function($event) {
          $event.preventDefault()
          _vm.taskCommentAction()
        }
      }
    },
    [
      _c(
        "div",
        { staticClass: "item message pm-sm-col-12 " },
        [
          _c("text-editor", {
            attrs: { editor_id: _vm.editor_id, content: _vm.content }
          })
        ],
        1
      ),
      _vm._v(" "),
      _c("file-uploader", {
        attrs: { files: _vm.files, delete: _vm.deleted_files }
      }),
      _vm._v(" "),
      _c("notify-user", {
        attrs: { users: _vm.task.assignees.data },
        model: {
          value: _vm.notify_users,
          callback: function($$v) {
            _vm.notify_users = $$v
          },
          expression: "notify_users"
        }
      }),
      _vm._v(" "),
      _c("div", { staticClass: "submit" }, [
        !_vm.comment.edit_mode
          ? _c("input", {
              staticClass: "button-primary",
              attrs: { disabled: _vm.submit_disabled, type: "submit", id: "" },
              domProps: { value: _vm.add_new_comment }
            })
          : _vm._e(),
        _vm._v(" "),
        _vm.comment.edit_mode
          ? _c("input", {
              staticClass: "button-primary",
              attrs: { disabled: _vm.submit_disabled, type: "submit", id: "" },
              domProps: { value: _vm.update_comment }
            })
          : _vm._e(),
        _vm._v(" "),
        _c("span", {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.show_spinner,
              expression: "show_spinner"
            }
          ],
          staticClass: "pm-spinner"
        })
      ])
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-f52544c6", esExports)
  }
}

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(74);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("2403bce3", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-289031e6\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-task.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-289031e6\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-task.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(75);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("f342587c", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-289031e6\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=1!./single-task.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-289031e6\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=1!./single-task.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(76);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("3fbcc252", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-39a04148\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./notify-user.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-39a04148\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./notify-user.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(77);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("3a17a2b8", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-8f6feec2\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./task-comments.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-8f6feec2\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./task-comments.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 99 */
/***/ (function(module, exports) {

/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
module.exports = function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}


/***/ }),
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_common_do_action_vue__ = __webpack_require__(5);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
    components: {
        'do-action': __WEBPACK_IMPORTED_MODULE_0__components_common_do_action_vue__["default"]
    },

    created: function created() {
        this.registerModule();
    },


    // watch: {
    //     $route(to, from) {
    //         this.$store.commit('recordHistory', {
    //             to, from
    //         });
    //     }
    // },

    methods: {
        registerModule: function registerModule() {
            var self = this;

            weDevsPmModules.forEach(function (module) {
                var store = __webpack_require__(404)("./" + module.path + '/store.js');
                self.registerStore(module.name, store.default);
            });
        }
    },

    data: function data() {
        return {
            is_pro: PM_Vars.is_pro
        };
    }
});

/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
    mounted: function mounted() {
        pm.NProgress.done();
    }
});

/***/ }),
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
    mounted: function mounted() {
        pm.NProgress.done();
    }
});

/***/ }),
/* 109 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__edit_category_form_vue__ = __webpack_require__(270);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["a"] = ({
    mixins: [__WEBPACK_IMPORTED_MODULE_1__mixin___default.a],

    components: {
        'edit-category-form': __WEBPACK_IMPORTED_MODULE_0__edit_category_form_vue__["a" /* default */]
    },

    created: function created() {
        this.getCategories();
    },
    data: function data() {
        return {
            title: '',
            description: '',
            submit_disabled: false,
            delete_items: [],
            bulk_action: '-1',
            select_all: false,
            show_spinner: false,
            add_new_category: __('Add New Category', 'pm')
        };
    },

    watch: {
        delete_items: function delete_items(value) {
            if (this.delete_items.length === this.$root.$store.state.categories.length) {
                this.select_all = true;
            } else {
                this.select_all = false;
            }
        }
    },

    computed: {
        categories: function categories() {
            return this.$root.$store.state.categories;
        },
        isFetchCategories: function isFetchCategories() {
            return this.$root.$store.state.isFetchCategories;
        }
    },

    methods: {
        selectAll: function selectAll() {
            var self = this;
            self.delete_items = [];
            if (self.select_all === true) {
                this.$root.$store.state.categories.map(function (category, index) {
                    self.delete_items.push(category.id);
                });
            }
        },
        catTrClass: function catTrClass(category) {
            if (category.edit_mode) {
                return 'inline-edit-row inline-editor';
            }
        },
        selfDeleted: function selfDeleted() {
            if (!confirm(this.__('Are you sure!', 'pm'))) {
                return;
            }
            var self = this;
            switch (this.bulk_action) {
                case 'delete':
                    self.deleteCategories({ category_ids: this.delete_items });
                    break;
            }
        },
        categoryFormAction: function categoryFormAction() {
            // Exit from this function, If submit button disabled 
            if (this.submit_disabled) {
                return;
            }
            // Disable submit button for preventing multiple click
            this.submit_disabled = true;
            this.show_spinner = true;

            var args = {
                data: {
                    title: this.title,
                    description: this.description
                }
            };
            this.newCategory(args);
            this.title = '';
            this.description = '';
        }
    }
});

/***/ }),
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['category'],
    mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
    data: function data() {
        return {
            submit_disabled: false,
            show_spinner: false,
            update_category: __('Update Category', 'pm')
        };
    },

    methods: {
        updateSelfCategory: function updateSelfCategory() {
            // Exit from this function, If submit button disabled 
            if (this.submit_disabled) {
                return;
            }

            // Disable submit button for preventing multiple click
            this.submit_disabled = true;
            this.show_spinner = true;

            var args = {
                data: {
                    id: this.category.id,
                    title: this.category.title,
                    description: this.category.description
                }
            };

            this.updateCategory(args);
        }
    }
});

/***/ }),
/* 111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var validateColor = function validateColor(color) {
  return (/^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{6})$/.test(color)
  );
};

/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    speed: {
      default: 2,
      type: Number
    },

    width: {
      default: 400,
      type: Number
    },

    height: {
      default: 130,
      type: Number
    },

    primary: {
      type: String,
      default: '#f0f0f0',
      validator: validateColor
    },

    secondary: {
      type: String,
      default: '#e0e0e0',
      validator: validateColor
    }
  },

  computed: {
    viewbox: function viewbox() {
      return '0 0 ' + this.width + ' ' + this.height;
    },
    formatedSpeed: function formatedSpeed() {
      return this.speed + 's';
    },
    gradientId: function gradientId() {
      return 'gradient-' + this._uid;
    },
    clipPathId: function clipPathId() {
      return 'clipPath-' + this._uid;
    }
  }
});

/***/ }),
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//


/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['activity'],
    data: function data() {
        return {};
    },


    computed: {
        parseMessage: function parseMessage() {
            var obj = this.activity,
                identifiers = this.fetchIdentifiers(obj.message);

            for (var i = 0; i < identifiers.length; i++) {
                var identifier = identifiers[i].replace(/\{\{|\}\}/g, ''),
                    link = this.isLinkable(identifier);

                if (link) {
                    obj.message = obj.message.replace(identifiers[i], link);
                } else {
                    obj.message = obj.message.replace(identifiers[i], this.getIdentifierValue(identifier));
                }
            }

            return obj.message;
        }
    },

    methods: {
        fetchIdentifiers: function fetchIdentifiers(message) {
            var regex = /\{\{[a-zA-Z._0-9\$]*\}\}/g,
                match = [];
            do {
                var m = regex.exec(message);
                if (m) {
                    match.push(m[0]);
                }
            } while (m);

            return match;
        },
        linkableIdentifiers: function linkableIdentifiers() {
            var obj = this.activity;
            return {
                'actor.data.display_name': "<a href='" + this.actor_url() + "'>" + obj.actor.data.display_name + "</a>",
                'meta.project_title': "<a href='" + this.resolve_url() + "'>" + obj.meta.project_title + "</a>",
                'meta.project_title_old': "<a href='" + this.resolve_url() + "'>" + obj.meta.project_title_old + "</a>",
                'meta.old_project_title': "<a href='" + this.resolve_url() + "'>" + obj.meta.old_project_title + "</a>",
                'meta.project_title_new': "<a href='" + this.resolve_url() + "'>" + obj.meta.project_title_new + "</a>",
                'meta.discussion_board_title': "<a href='" + this.resolve_url() + "'>" + obj.meta.discussion_board_title + "</a>",
                'meta.discussion_board_title_old': "<a href='" + this.resolve_url() + "'>" + obj.meta.discussion_board_title_old + "</a>",
                'meta.discussion_board_title_new': "<a href='" + this.resolve_url() + "'>" + obj.meta.discussion_board_title_new + "</a>",
                'meta.task_list_title': "<a href='" + this.resolve_url() + "'>" + obj.meta.task_list_title + "</a>",
                'meta.task_list_title_old': "<a href='" + this.resolve_url() + "'>" + obj.meta.task_list_title_old + "</a>",
                'meta.task_list_title_new': "<a href='" + this.resolve_url() + "'>" + obj.meta.task_list_title_new + "</a>",
                'meta.milestone_title': "<a href='" + this.resolve_url() + "'>" + obj.meta.milestone_title + "</a>",
                'meta.milestone_title_old': "<a href='" + this.resolve_url() + "'>" + obj.meta.milestone_title_old + "</a>",
                'meta.milestone_title_new': "<a href='" + this.resolve_url() + "'>" + obj.meta.milestone_title_new + "</a>",
                'meta.task_title': "<a href='" + this.resolve_url() + "'>" + obj.meta.task_title + "</a>",
                'meta.task_title_old': "<a href='" + this.resolve_url() + "'>" + obj.meta.task_title_old + "</a>",
                'meta.task_title_new': "<a href='" + this.resolve_url() + "'>" + obj.meta.discussion_board_title + "</a>",
                'meta.file_title': "<a href='" + this.resolve_url() + "'>" + obj.meta.file_title + "</a>",
                'meta.file_title_old': "<a href='" + this.resolve_url() + "'>" + obj.meta.file_title_old + "</a>",
                'meta.file_title_new': "<a href='" + this.resolve_url() + "'>" + obj.meta.file_title_new + "</a>",
                'meta.task_status_old': "<strong>" + obj.meta.task_status_old + "</strong>",
                'meta.task_status_new': "<strong>" + obj.meta.task_status_new + "</strong>",
                'meta.project_status_new': "<strong>" + obj.meta.project_status_new + "</strong>",
                'meta.project_status_old': "<strong>" + obj.meta.project_status_old + "</strong>",
                'meta.task_start_at_new': obj.meta.task_start_at_new !== null ? "<strong>" + pm.Moment(obj.meta.task_start_at_new).format('MMMM Do YYYY') + "</strong>" : "<strong>...</strong>",
                'meta.task_start_at_old': obj.meta.task_start_at_old !== null ? "<strong>" + pm.Moment(obj.meta.task_start_at_old).format('MMMM Do YYYY') + "</strong>" : "<strong>...</strong>",
                'meta.task_due_date_new': obj.meta.task_due_date_new !== null ? "<strong>" + pm.Moment(obj.meta.task_due_date_new).format('MMMM Do YYYY') + "</strong>" : "<strong>...</strong>",
                'meta.task_due_date_old': obj.meta.task_due_date_old !== null ? "<strong>" + pm.Moment(obj.meta.task_due_date_old).format('MMMM Do YYYY') + "</strong>" : "<strong>...</strong>"
            };
        },
        isLinkable: function isLinkable(identifier) {
            var obj = this.activity,
                identifiers = this.linkableIdentifiers();

            for (var prop in identifiers) {
                if (prop === identifier) return identifiers[prop];
            }

            return false;
        },
        getIdentifierValue: function getIdentifierValue(identifier) {
            var props = identifier.split('.'),
                count = 0,
                prop = props[count],
                value = this.activity;

            while (count < props.length) {
                value = value[prop];
                count = count + 1;
                prop = props[count];
            }

            return value;
        },

        resolve_url: function resolve_url() {
            //return this.$router.resolve({ name : name, params: params }).href;
            var url,
                resource_type = this.activity.resource_type,
                resource_id = this.activity.resource_id,
                meta = this.activity.meta,
                project_id = this.activity.project.data.id;

            switch (resource_type) {
                case 'task':
                    url = this.$router.resolve({ name: 'lists_single_task', params: { project_id: project_id, task_id: resource_id } }).href;
                    break;
                case 'project':
                    url = this.$router.resolve({ name: 'pm_overview', params: { project_id: resource_id } }).href;
                    if ('duplicate_project' == this.activity.action) {
                        url = this.$router.resolve({ name: 'pm_overview', params: { project_id: meta.old_project_id } }).href;
                    }
                    break;
                case 'milestone':
                    url = this.$router.resolve({ name: 'milestones', params: { project_id: project_id } }).href;
                    break;

                case 'discussion_board':
                    url = this.$router.resolve({ name: 'individual_discussions', params: { project_id: project_id, discussion_id: resource_id } }).href;
                    break;
                case 'task_list':
                    url = this.$router.resolve({ name: 'single_list', params: { project_id: project_id, list_id: resource_id } }).href;
                    break;
                default:
                    url = '#';
                    break;
            }
            return url;
        },
        actor_url: function actor_url() {

            var current_user = PM_Vars.current_user.ID;
            var userid = this.activity.actor.data.id;

            if (!PM_Vars.is_pro) {
                return this.$router.resolve({ name: 'my-tasks' }).href;
            }

            if (userid == current_user) {
                return this.$router.resolve({ name: 'mytask-tasks' }).href;
            }

            return this.$router.resolve({ name: 'mytask-tasks', params: { user_id: userid } }).href;
        }
    }
});

/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

// import Sketch from 'vue-color/src/components/Sketch.vue';

/* harmony default export */ __webpack_exports__["a"] = ({
    components: {
        Sketch: pm.color.default
    },

    props: {
        value: {
            type: String,
            required: true,
            default: ''
        },

        format: {
            type: String,
            required: false,
            default: 'hex',
            validator: function validator(type) {
                return ['hsl', 'hex', 'rgba', 'hsv'].indexOf(type) !== -1;
            }
        },

        presetColors: {
            type: Array,
            required: false,
            default: function _default() {
                return ['#000', '#fff', '#d33', '#d93', '#ee2', '#81d742', '#1e73be', '#8224e3'];
            }
        },

        disableAlpha: {
            type: Boolean,
            required: false,
            default: true
        },

        disableFields: {
            type: Boolean,
            required: false,
            default: true
        }
    },

    data: function data() {
        return {
            showColorPicker: false
        };
    },


    methods: {
        updateColor: function updateColor(colors) {
            var color = '';

            if (colors[this.format]) {
                color = colors[this.format];
            }

            this.$emit('input', color);
        },
        toggleColorPicker: function toggleColorPicker() {
            this.showColorPicker = !this.showColorPicker;
        },
        setHexColor: function setHexColor(color) {
            this.updateColor({
                hex: color
            });
        }
    }
});

/***/ }),
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__do_action_vue__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__project_lists_project_create_form_vue__ = __webpack_require__(172);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

//import router from './../../router/router';



/* harmony default export */ __webpack_exports__["a"] = ({
    data: function data() {
        return {
            project_action: __('Project Actions', 'pm'),
            settings_hide: false
        };
    },


    computed: {
        is_project_edit_mode: function is_project_edit_mode() {
            return this.$root.$store.state.is_project_form_active;
        },
        project: function project() {
            return this.$root.$store.state.project;
        },
        menu: function menu() {
            var project = this.$root.$store.state.project;

            if (typeof project.meta === 'undefined') {
                return [];
            }

            return [{
                route: {
                    name: 'pm_overview',
                    project_id: this.project_id
                },

                name: this.__('Overview', 'pm'),
                count: '',
                class: 'overview pm-sm-col-12'
            }, {
                route: {
                    name: 'activities',
                    project_id: this.project_id
                },

                name: this.__('Activities', 'pm'),
                count: project.meta.data.total_activities,
                class: 'activity pm-sm-col-12'
            }, {
                route: {
                    name: 'discussions',
                    project_id: this.project_id
                },

                name: this.__('Discussions', 'pm'),
                count: project.meta.data.total_discussion_boards,
                class: 'message pm-sm-col-12'
            }, {
                route: {
                    name: 'task_lists',
                    project_id: this.project_id
                },

                name: this.__('Task Lists', 'pm'),
                count: project.meta.data.total_task_lists,
                class: 'to-do-list pm-sm-col-12'
            }, {
                route: {
                    name: 'milestones',
                    project_id: this.project_id
                },

                name: this.__('Milestones', 'pm'),
                count: project.meta.data.total_milestones,
                class: 'milestone pm-sm-col-12'
            }, {
                route: {
                    name: 'pm_files',
                    project_id: this.project_id
                },

                name: this.__('Files', 'pm'),
                count: project.meta.data.total_files,
                class: 'files pm-sm-col-12'
            }];
        }
    },

    created: function created() {
        this.getGloabalProject();
        this.getProjectCategories();
        this.getRoles();
    },


    components: {
        'do-action': __WEBPACK_IMPORTED_MODULE_0__do_action_vue__["default"],
        'edit-project': __WEBPACK_IMPORTED_MODULE_1__project_lists_project_create_form_vue__["a" /* default */]
    },

    methods: {
        showProjectAction: function showProjectAction() {
            this.settings_hide = !this.settings_hide;
        },
        selfProjectMarkDone: function selfProjectMarkDone() {
            var args = {
                data: {
                    id: this.project.id,
                    status: this.project.status === 'complete' ? 'incomplete' : 'complete',
                    title: this.project.title
                },
                callback: function callback(res) {
                    this.$root.$store.commit('showHideProjectDropDownAction', {
                        status: false,
                        project_id: this.project_id
                    });
                }
            };

            this.updateProject(args);
        }
    }
});

/***/ }),
/* 115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['value', 'dependency'],
    mounted: function mounted() {
        var self = this,
            limit_date = self.dependency == 'pm-datepickter-from' ? "maxDate" : "minDate";

        jQuery(self.$el).datetimepicker({
            dateFormat: 'yy-mm-dd',
            changeYear: true,
            changeMonth: true,
            numberOfMonths: 1,
            onClose: function onClose(selectedDate) {
                jQuery("." + self.dependency).datetimepicker("option", limit_date, selectedDate);
            },
            onSelect: function onSelect(dateText) {
                self.$emit('input', dateText);
            }
        });
    }
});

/***/ }),
/* 116 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
    mounted: function mounted() {
        pm.NProgress.done();
    }
});

/***/ }),
/* 117 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
    mounted: function mounted() {
        pm.NProgress.done();
    }
});

/***/ }),
/* 118 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_common_header_vue__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["a"] = ({
    beforeRouteEnter: function beforeRouteEnter(to, from, next) {
        next(function (vm) {
            //vm.$store.state.projectActivities.activities =[];

        });
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_1__mixin___default.a],
    data: function data() {
        return {
            isActivityFetched: false,
            total_activity: 0,
            per_page: 2,
            show_spinner: false,
            loadMoreStatus: false
        };
    },
    created: function created() {
        this.activityQuery();
    },

    watch: {
        '$route': function $route(route) {
            if (typeof route.params.current_page_number !== 'undefined') {
                this.activityQuery();
            } else {
                this.$store.state.projectActivities.activities = [];
                this.activityQuery();
            }
        }
    },
    computed: {
        activities: function activities() {
            var records = this.$store.state.projectActivities.activities,
                self = this;

            var index = this.getIndex(records, this.project_id, 'project_id');

            if (index === false) {
                return [];
            }

            records = records[index].activities;

            var activities = _.chain(records).groupBy(self.occurrenceDay).map(self.groupToDay).sortBy('day').value();

            return activities;
        },
        loaded_activities: function loaded_activities() {

            var records = this.$store.state.projectActivities.activities,
                self = this;

            var index = this.getIndex(records, this.project_id, 'project_id');

            if (index === false) {
                return 0;
            }

            return records[index].activities.length;
        },
        current_page: function current_page() {
            if (typeof this.$route.params.current_page_number !== 'undefined') {
                return parseInt(this.$route.params.current_page_number, 10);
            } else {
                return 1;
            }
        }
    },
    components: {
        'pm-header': __WEBPACK_IMPORTED_MODULE_0__components_common_header_vue__["default"]
    },

    methods: {
        occurrenceDay: function occurrenceDay(occurrence) {
            var date = new Date(occurrence.committed_at.date);
            var date = pm.Moment(date).format('YYYY-MM-DD');

            return pm.Moment(date).startOf('day').format('YYYY-MM-DD');
        },
        groupToDay: function groupToDay(group, day) {
            return {
                date: day,
                activities: group
            };
        },


        /**
         * WP settings date format convert to moment date format with time zone
         * 
         * @param  string date 
         * 
         * @return string      
         */
        actiivtyGroupDate: function actiivtyGroupDate(date, format) {
            if (!date) {
                return;
            }
            date = new Date(date);
            return pm.Moment(date).format(format);
        },

        loadMore: function loadMore() {
            this.show_spinner = true;
            var records = this.$store.state.projectActivities.activities;
            var index = this.getIndex(records, this.project_id, 'project_id');

            if (index === false) {
                return;
            }

            var page = parseInt(records[index].page) + 1;

            this.loadMoreStatus = true;
            this.activityQuery(page);
        },
        activityQuery: function activityQuery(page) {
            page = page || 1;
            var condition = {
                per_page: 20,
                page: page
            },
                self = this;
            this.getActivities(condition, function (res) {
                self.$store.commit('projectActivities/setActivities', {
                    data: res.data,
                    loadStatus: self.loadMoreStatus,
                    project_id: self.project_id
                });
                self.$root.$store.state.projectActivityLoaded = true;
                self.total_activity = res.meta.pagination.total;
                self.show_spinner = false;
                self.isActivityFetched = true;
            });
        }
    }
});

/***/ }),
/* 119 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_common_text_editor_vue__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_common_file_uploader_vue__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_common_notify_user_vue__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['comment', 'discuss'],
    mixins: [__WEBPACK_IMPORTED_MODULE_3__mixin___default.a],
    data: function data() {
        return {
            content: {
                html: typeof this.comment.content == 'undefined' ? '' : this.comment.content
            },
            submit_disabled: false,
            show_spinner: false,
            mentioned_user_ids: null,
            notify_users: [],
            add_new_comment: __('Add New Comment', 'pm'),
            Update_Comment: __('Update Comment', 'pm'),
            deleted_files: [],
            files: typeof this.comment.files === 'undefined' ? [] : this.comment.files.data
        };
    },


    watch: {
        /**
         * Observe onchange comment message
         *
         * @param string new_content 
         * 
         * @type void
         */
        content: {
            handler: function handler(new_content) {
                this.comment.content = new_content.html;
            },

            deep: true
        }
    },

    components: {
        'text-editor': __WEBPACK_IMPORTED_MODULE_0__components_common_text_editor_vue__["a" /* default */],
        'file-uploader': __WEBPACK_IMPORTED_MODULE_1__components_common_file_uploader_vue__["a" /* default */],
        notifyUser: __WEBPACK_IMPORTED_MODULE_2__components_common_notify_user_vue__["default"]
    },

    computed: {
        /**
         * Editor ID
         * 
         * @return string
         */
        editor_id: function editor_id() {
            var comment_id = typeof this.comment.id === 'undefined' ? '' : '-' + this.comment.id;
            return 'pm-comment-editor-' + comment_id;
        }
    },

    methods: {
        newSelfComment: function newSelfComment() {
            if (typeof this.comment.content === 'undefined' || this.comment.content == '') {
                return;
            }
            var self = this;
            var comment_id = typeof self.comment.id == 'undefined' ? false : true;

            var regEx = /data-pm-user-id=":(.+?):"/g;
            this.mentioned_user_ids = this.getMatches(this.comment.content, regEx, 1);

            var args = {
                content: this.comment.content,
                commentable_id: this.discuss.id,
                commentable_type: 'discussion_board',
                deleted_files: this.deleted_files,
                files: this.files,
                mentioned_users: this.mentioned_user_ids,
                notify_users: this.notify_users,

                callback: function callback() {
                    self.content.html = '';
                    self.notify_users = [];
                }
            };

            if (comment_id) {
                args.comment_id = self.comment.id;
                self.updateComment(args);
            } else {
                self.newComment(args);
            }
        }
    }
});

/***/ }),
/* 120 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_header_vue__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__new_discuss_form_vue__ = __webpack_require__(171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_pagination_vue__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["a"] = ({
    beforeRouteEnter: function beforeRouteEnter(to, from, next) {
        next(function (vm) {
            vm.getGlobalMilestones();
            vm.discussQuery();
        });
    },


    mixins: [__WEBPACK_IMPORTED_MODULE_3__mixin___default.a],

    data: function data() {
        return {
            edit: __('Edit', 'pm'),
            delete_this_message: __('Delete this message', 'pm'),
            make_it_private: __('Make it private', 'pm'),
            current_page_number: 1
        };
    },

    watch: {
        '$route': function $route(route) {
            this.discussQuery();
        }
    },
    components: {
        'pm-header': __WEBPACK_IMPORTED_MODULE_0__common_header_vue__["default"],
        'new-discuss-form': __WEBPACK_IMPORTED_MODULE_1__new_discuss_form_vue__["a" /* default */],
        'pm-pagination': __WEBPACK_IMPORTED_MODULE_2__common_pagination_vue__["default"]
    },
    computed: {
        discussTemplate: function discussTemplate() {
            return this.$store.state.projectDiscussions.discuss_template;
        },
        blankTemplate: function blankTemplate() {
            return this.$store.state.projectDiscussions.blank_template;
        },
        is_discuss_form_active: function is_discuss_form_active() {
            return this.$store.state.projectDiscussions.is_discuss_form_active;
        },
        discussion: function discussion() {
            return this.$store.state.projectDiscussions.discussion;
        },
        total_discussion_page: function total_discussion_page() {
            return this.$store.state.projectDiscussions.meta.pagination.total_pages;
        },
        isFetchDiscussion: function isFetchDiscussion() {
            return this.$root.$store.state.projectDiscussLoaded;
        }
    },
    methods: {
        discussQuery: function discussQuery() {
            var self = this;

            var conditions = {
                with: 'comments',
                per_page: 2,
                page: this.setCurrentPageNumber()
            };

            var args = {
                conditions: conditions,
                callback: function callback() {
                    self.lazyAction();
                    self.$root.$store.state.projectDiscussLoaded = true;
                    pm.NProgress.done();
                }
            };

            this.getDiscussion(args);
        },
        deleteSelfDiscuss: function deleteSelfDiscuss(id) {
            var self = this;
            var args = {
                discuss_id: id,
                callback: function callback() {
                    self.lazyAction();
                }
            };

            self.deleteDiscuss(args);
        }
    }
});

/***/ }),
/* 121 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_header_vue__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__new_discuss_form_vue__ = __webpack_require__(171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__comment_form_vue__ = __webpack_require__(278);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["a"] = ({
    beforeRouteEnter: function beforeRouteEnter(to, from, next) {

        next(function (vm) {
            vm.getSelfDiscuss();
            vm.getGlobalMilestones();
        });
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_3__mixin___default.a],
    data: function data() {
        return {
            loading: true
        };
    },

    computed: {
        discuss: function discuss() {
            if (this.$store.state.projectDiscussions.discussion.length) {
                return this.$store.state.projectDiscussions.discussion[0];
            }

            return false;
        },
        files: function files() {
            if (this.$store.state.projectDiscussions.discussion.length) {
                return this.$store.state.projectDiscussions.discussion[0].files.data;
            }
            return [];
        },
        comments: function comments() {
            if (this.$store.state.projectDiscussions.discussion.length && this.$store.state.projectDiscussions.discussion[0].hasOwnProperty('comments')) {
                return this.$store.state.projectDiscussions.discussion[0].comments.data;
            }
            return [];
        },
        commentsTotal: function commentsTotal() {
            if (this.$store.state.projectDiscussions.discussion.length) {
                return this.$store.state.projectDiscussions.discussion[0].comments.meta.pagination.total;
            }
            return 0;
        },
        can_create: function can_create() {
            if (typeof this.$store.state.projectDiscussions.discussion[0].meta.permission === 'undefined') {
                return false;
            }
            return this.$store.state.projectDiscussions.discussion[0].meta.permission.can_create;
        }
    },
    components: {
        'pm-header': __WEBPACK_IMPORTED_MODULE_0__common_header_vue__["default"],
        'new-discuss-form': __WEBPACK_IMPORTED_MODULE_1__new_discuss_form_vue__["a" /* default */],
        'comment-form': __WEBPACK_IMPORTED_MODULE_2__comment_form_vue__["a" /* default */]
    },

    methods: {
        deleteSelfComment: function deleteSelfComment(comment_id, commentable_id) {
            var self = this;
            var args = {
                comment_id: comment_id,
                commentable_id: commentable_id,
                callback: function callback() {}
            };

            self.deleteComment(args);
        },
        getSelfDiscuss: function getSelfDiscuss() {
            var self = this;
            var args = {
                callback: function callback(res) {
                    self.loading = false;
                    pm.NProgress.done();
                }
            };
            self.getDiscuss(args);
        },
        commentImgSize: function commentImgSize(comment) {
            return comment.edit_mode ? 'pm-comment-img-size' : '';
        }
    }
});

/***/ }),
/* 122 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_common_text_editor_vue__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_common_file_uploader_vue__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_common_notify_user_vue__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['discuss'],
    mixins: [__WEBPACK_IMPORTED_MODULE_3__mixin___default.a],

    data: function data() {
        return {
            submit_disabled: false,
            show_spinner: false,
            Enter_Message_Title: __('Enter message title', 'pm'),
            Add_message: __('Add Message', 'pm'),
            update_message: __('Update Message', 'pm'),
            content: {
                html: typeof this.discuss.description == 'undefined' ? '' : this.discuss.description
            },
            milestone_id: typeof this.discuss.milestone === 'undefined' ? '-1' : this.discuss.milestone.data.id,
            files: typeof this.discuss.files === 'undefined' ? [] : this.discuss.files.data,
            deleted_files: [],
            pfiles: [],
            notify_users: []

        };
    },


    watch: {
        milestone_id: function milestone_id(_milestone_id) {
            this.discuss.milestone_id = _milestone_id;
        },

        /**
         * Observe onchange comment message
         *
         * @param string new_content 
         * 
         * @type void
         */
        content: {
            handler: function handler(new_content) {
                this.discuss.description = new_content.html;
            },
            deep: true
        }
    },

    components: {
        'text-editor': __WEBPACK_IMPORTED_MODULE_0__components_common_text_editor_vue__["a" /* default */],
        'file-uploader': __WEBPACK_IMPORTED_MODULE_1__components_common_file_uploader_vue__["a" /* default */],
        notifyUser: __WEBPACK_IMPORTED_MODULE_2__components_common_notify_user_vue__["default"]
    },
    computed: {
        milestones: function milestones() {
            return this.$root.$store.state.milestones;
        },

        /**
        * Editor ID
        * 
        * @return string
        */
        editor_id: function editor_id() {
            var discuss_id = typeof this.discuss.id === 'undefined' ? '' : '-' + this.discuss.id;
            return 'pm-discuss-editor' + discuss_id;
        }
    },
    methods: {
        filesChange: function filesChange($event, $files) {
            this.pfiles = $files;
        },
        formAction: function formAction() {
            var self = this;
            var discuss_id = typeof self.discuss.id === 'undefined' ? false : this.discuss.id;

            var args = {
                title: this.discuss.title,
                description: typeof this.discuss.description === 'undefined' ? '' : this.discuss.description,
                milestone_id: this.discuss.milestone_id,
                order: 0,
                deleted_files: this.deleted_files,
                files: this.files,
                notify_users: this.notify_users
            };

            if (discuss_id) {
                args.discuss_id = discuss_id;
                self.updateDiscuss(args);
            } else {
                args.callback = function (res) {
                    self.lazyAction();
                    self.$router.push({
                        name: 'individual_discussions',
                        params: {
                            project_id: self.project_id,
                            discussion_id: res.id
                        }
                    });
                };
                self.newDiscuss(args);
            }
        }
    }

});

/***/ }),
/* 123 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_common_do_action_vue__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_common_header_vue__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin__ = __webpack_require__(166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__mixin__);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["a"] = ({

    mixins: [__WEBPACK_IMPORTED_MODULE_3__mixin___default.a],
    created: function created() {

        if (!PM_Vars.is_pro) {
            this.getFiles();
        }
    },

    computed: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapState('projectFiles', ['files'])),

    data: function data() {
        return {
            loading: true,
            is_pro: PM_Vars.is_pro
        };
    },


    components: {
        'do-action': __WEBPACK_IMPORTED_MODULE_1__components_common_do_action_vue__["default"],
        'pm-header': __WEBPACK_IMPORTED_MODULE_2__components_common_header_vue__["default"]
    },

    methods: {
        selfDownloadFile: function selfDownloadFile(file) {
            this.fileDownload(file.attachment_id);
        },
        attachTo: function attachTo(file) {
            if (file.fileable_type === 'discussion_board') {
                return 'Discuss';
            }

            if (file.fileable_type === 'comment') {
                return 'Comment';
            }
        },
        contentURL: function contentURL(file) {
            var self = this;
            switch (file.fileable_type) {

                case 'discussion_board':
                    return '#/projects/' + self.project_id + '/discussions/' + file.fileable_id;
                    break;

                case 'task_list':
                    return '#/projects/' + self.project_id + '/task-lists/' + file.fileable_id;
                    break;

                case 'task':
                    return '#/projects/' + self.project_id + '/task/' + file.fileable_id;
                    break;
                case 'comment':
                    return self.getCommentUrl(file);
                    break;

                default:
                    break;
            }
        },
        getCommentUrl: function getCommentUrl(file) {
            var self = this;

            switch (file.fileable.commentable_type) {
                case 'task_list':
                    return '#/projects/' + self.project_id + '/task-lists/' + file.fileable.commentable_id;
                    break;

                case 'discussion_board':
                    return '#/projects/' + self.project_id + '/discussions/' + file.fileable.commentable_id;
                    break;

                case 'task':
                    return '#/projects/' + self.project_id + '/task/' + file.fileable.commentable_id;
                    break;
            }
        }
    }

});

/***/ }),
/* 124 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__project_summary_vue__ = __webpack_require__(81);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_pagination_vue__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_do_action_vue__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__project_loading_vue__ = __webpack_require__(80);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__header_vue__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








/* harmony default export */ __webpack_exports__["a"] = ({
    data: function data() {
        return {
            current_page_number: 1,
            loading: true
        };
    },


    mixins: [__WEBPACK_IMPORTED_MODULE_5__mixin___default.a],

    created: function created() {
        this.projectQuery();
        this.getRoles();
        this.getProjectCategories();
    },


    watch: {
        '$route': function $route(route) {
            this.current_page_number = route.params.current_page_number;
            this.projectQuery();
        }
    },

    computed: {
        total_pages: function total_pages() {
            return this.$root.$store.state.pagination.total_pages;
        },
        project: function project() {

            var projects = this.$root.$store.state.projects;
            var index = this.getIndex(projects, this.project_id, 'id');
            var project = {};

            if (index !== false) {
                project = projects[index];
            }

            return project;
        }
    },

    components: {
        'project-summary': __WEBPACK_IMPORTED_MODULE_0__project_summary_vue__["a" /* default */],
        'pm-pagination': __WEBPACK_IMPORTED_MODULE_1__common_pagination_vue__["default"],
        'do-action': __WEBPACK_IMPORTED_MODULE_2__common_do_action_vue__["default"],
        'project-loading': __WEBPACK_IMPORTED_MODULE_3__project_loading_vue__["a" /* default */],
        'project-list-header': __WEBPACK_IMPORTED_MODULE_4__header_vue__["a" /* default */]
    },

    methods: {
        projectQuery: function projectQuery() {
            var self = this;
            var args = {
                conditions: {
                    status: 'incomplete'
                },

                callback: function callback(res) {
                    self.projectFetchStatus(true);
                }
            };

            this.loading = true;
            this.getProjects(args);
        }
    }
});

/***/ }),
/* 125 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__project_summary_vue__ = __webpack_require__(81);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_pagination_vue__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_do_action_vue__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__project_loading_vue__ = __webpack_require__(80);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__header_vue__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









/* harmony default export */ __webpack_exports__["a"] = ({
    beforeRouteEnter: function beforeRouteEnter(to, from, next) {
        next(function (vm) {});
    },
    created: function created() {
        this.projectQuery();
        this.getRoles();
        this.getProjectCategories();
    },
    data: function data() {
        return {
            current_page_number: 1,
            loading: true
        };
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_5__mixin___default.a],
    watch: {
        '$route': function $route(route) {
            this.current_page_number = route.params.current_page_number;
            this.projectQuery();
        }
    },

    computed: {
        is_popup_active: function is_popup_active() {
            return this.$store.state.is_popup_active;
        },
        total_pages: function total_pages() {
            return this.$root.$store.state.pagination.total_pages;
        }
    },

    components: {
        'project-summary': __WEBPACK_IMPORTED_MODULE_0__project_summary_vue__["a" /* default */],
        'pm-pagination': __WEBPACK_IMPORTED_MODULE_1__common_pagination_vue__["default"],
        'do-action': __WEBPACK_IMPORTED_MODULE_2__common_do_action_vue__["default"],
        'project-loading': __WEBPACK_IMPORTED_MODULE_3__project_loading_vue__["a" /* default */],
        'project-list-header': __WEBPACK_IMPORTED_MODULE_4__header_vue__["a" /* default */]
    },

    methods: {
        projectQuery: function projectQuery() {
            this.loading = true;
            this.getProjects();
        }
    }
});

/***/ }),
/* 126 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__project_summary_vue__ = __webpack_require__(81);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_pagination_vue__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_do_action_vue__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__project_loading_vue__ = __webpack_require__(80);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__header_vue__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








/* harmony default export */ __webpack_exports__["a"] = ({
    beforeRouteEnter: function beforeRouteEnter(to, from, next) {
        next(function (vm) {});
    },
    created: function created() {
        this.projectQuery();
        this.getRoles();
        this.getProjectCategories();
    },
    data: function data() {
        return {
            current_page_number: 1,
            loading: true
        };
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_5__mixin___default.a],
    watch: {
        '$route': function $route(route) {
            this.current_page_number = route.params.current_page_number;
            this.projectQuery();
        }
    },

    computed: {
        is_popup_active: function is_popup_active() {
            return this.$store.state.is_popup_active;
        },
        total_pages: function total_pages() {
            return this.$root.$store.state.pagination.total_pages;
        }
    },

    components: {
        'project-summary': __WEBPACK_IMPORTED_MODULE_0__project_summary_vue__["a" /* default */],
        'pm-pagination': __WEBPACK_IMPORTED_MODULE_1__common_pagination_vue__["default"],
        'do-action': __WEBPACK_IMPORTED_MODULE_2__common_do_action_vue__["default"],
        'project-loading': __WEBPACK_IMPORTED_MODULE_3__project_loading_vue__["a" /* default */],
        'project-list-header': __WEBPACK_IMPORTED_MODULE_4__header_vue__["a" /* default */]
    },

    methods: {
        projectQuery: function projectQuery() {

            var args = {
                conditions: {
                    status: 'complete'
                }
            };

            this.loading = true;
            this.getProjects(args);
        }
    }
});

/***/ }),
/* 127 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
	created: function created() {

		if ('/projects' === this.$route.path) {
			this.$router.push({
				name: 'project_lists'
			});
		}
	},


	watch: {
		'$route': function $route() {
			if ('/projects' === this.$route.path) {
				this.$router.push({
					name: 'project_lists'
				});
			}
		}
	}
});

/***/ }),
/* 128 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__project_new_project_btn_vue__ = __webpack_require__(288);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__project_filter_by_category_vue__ = __webpack_require__(286);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__project_search_by_client_vue__ = __webpack_require__(291);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__project_search_all_vue__ = __webpack_require__(290);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__project_header_menu_vue__ = __webpack_require__(287);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__project_view_vue__ = __webpack_require__(292);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__project_create_form_vue__ = __webpack_require__(172);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









/* harmony default export */ __webpack_exports__["a"] = ({
    components: {
        'project-new-project-btn': __WEBPACK_IMPORTED_MODULE_0__project_new_project_btn_vue__["a" /* default */],
        'project-filter-by-category': __WEBPACK_IMPORTED_MODULE_1__project_filter_by_category_vue__["a" /* default */],
        'project-search-by-client': __WEBPACK_IMPORTED_MODULE_2__project_search_by_client_vue__["a" /* default */],
        'project-search-all': __WEBPACK_IMPORTED_MODULE_3__project_search_all_vue__["a" /* default */],
        'project-header-menu': __WEBPACK_IMPORTED_MODULE_4__project_header_menu_vue__["a" /* default */],
        'project-view': __WEBPACK_IMPORTED_MODULE_5__project_view_vue__["a" /* default */],
        'project-create-form': __WEBPACK_IMPORTED_MODULE_6__project_create_form_vue__["a" /* default */]
    },
    data: function data() {
        return {
            start_new_project: __('Start a new project', 'pm')
        };
    }
});

/***/ }),
/* 129 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directive_js__ = __webpack_require__(191);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directive_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__directive_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__project_new_user_form_vue__ = __webpack_require__(289);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





var new_project_form = {

    props: ['is_update'],

    data: function data() {

        return {
            project_name: '',
            project_cat: 0,
            project_description: '',
            project_notify: false,
            assignees: [],
            show_spinner: false,
            name_of_the_project: __('Name of the project', 'pm'),
            details_of_project: __('Some details about the project (optional)', 'pm'),
            search_user: __('Type 3 or more characters to search users...', 'pm'),
            create_new_user: __('Create a new user', 'pm'),
            add_new_project: __('Add New Project', 'pm'),
            update_project: __('Update Project', 'pm')
        };
    },

    components: {
        'project-new-user-form': __WEBPACK_IMPORTED_MODULE_1__project_new_user_form_vue__["a" /* default */]
    },
    created: function created() {
        this.setProjectUser();
    },

    computed: {
        roles: function roles() {
            return this.$root.$store.state.roles;
        },
        categories: function categories() {
            return this.$root.$store.state.categories;
        },
        project: function project() {

            var projects = this.$root.$store.state.projects;
            var index = this.getIndex(projects, this.project_id, 'id');
            var project = {};

            if (index !== false) {
                project = projects[index];
            }

            return project;
        },
        selectedUsers: function selectedUsers() {
            return this.$root.$store.state.assignees;
        },


        project_category: {
            get: function get() {
                if (this.is_update) {
                    var projects = this.$root.$store.state.projects;
                    var index = this.getIndex(projects, this.project_id, 'id');
                    var project = projects[index];

                    if (typeof project.categories !== 'undefined' && project.categories.data.length) {

                        this.project_cat = project.categories.data[0].id;

                        return project.categories.data[0].id;
                    }
                }

                return this.project_cat;
            },
            set: function set(cat) {
                this.project_cat = cat;
            }
        },

        show_role_field: function show_role_field() {
            return typeof PM_BP_Vars !== 'undefined' ? PM_BP_Vars.show_role_field : true;
        }
    },

    methods: {
        deleteUser: function deleteUser(del_user) {
            if (this.is_project_creator(del_user.id)) {
                return;
            }

            this.$root.$store.commit('afterDeleteUserFromProject', {
                project_id: this.project_id,
                user_id: del_user.id
            });
        },
        is_project_creator: function is_project_creator(user_id) {
            if (!this.project.hasOwnProperty('creator')) {
                return false;
            }

            if (this.project.creator.data.id == user_id) {
                return true;
            }
        },

        /**
         * Action after submit the form to save and update
         * @return {[void]} 
         */
        projectFormAction: function projectFormAction() {
            if (this.show_spinner) {
                return;
            }

            if (!this.project.title) {
                pm.Toastr.error('Project title is required!');
                return;
            }

            this.show_spinner = true;

            var args = {
                data: {
                    'title': this.project.title,
                    'categories': this.project_cat ? [this.project_cat] : null,
                    'description': this.project.description,
                    'notify_users': this.project_notify,
                    'assignees': this.formatUsers(this.selectedUsers),
                    'status': this.project.status
                }
            };

            var self = this;
            if (this.is_update) {
                args.data.id = this.project.id;
                args.callback = function (res) {
                    self.show_spinner = false;
                };
                this.updateProject(args);
            } else {
                args.callback = function (res) {
                    self.project.title = '';
                    self.project_cat = 0;
                    self.project.description = '';
                    self.project_notify = [];
                    self.project.status = '';
                    self.show_spinner = false;
                    self.$router.push({
                        name: 'pm_overview',
                        params: {
                            project_id: res.data.id
                        }
                    });
                };

                this.newProject(args);
            }
        },
        setProjectUser: function setProjectUser() {
            var projects = this.$root.$store.state.projects;
            var index = this.getIndex(projects, this.project_id, 'id');
            if (index !== false && this.is_update) {
                this.$root.$store.commit('setSeletedUser', projects[index].assignees.data);
            } else {
                this.$root.$store.commit('resetSelectedUsers');
            }
        },
        closeForm: function closeForm() {
            if (!this.is_update) {
                this.project.title = '';
                this.project_cat = 0;
                this.project.description = '';
                this.project_notify = [];
                this.project.status = '';
                this.$store.commit('setSeletedUser', []);
                jQuery("#pm-project-dialog").dialog('close');
            }
            this.showHideProjectForm(false);
        }
    }
};

/* harmony default export */ __webpack_exports__["a"] = (new_project_form);

/***/ }),
/* 130 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
    data: function data() {
        return {
            categorie_id: typeof this.$route.query.category === 'undefined' ? '-1' : this.$route.query.category
        };
    },

    computed: {
        categories: function categories() {
            return this.$root.$store.state.categories;
        }
    },

    methods: {
        categoryFilter: function categoryFilter() {
            var self = this;
            var extra_ele = {
                'category': self.categorie_id === '-1' ? false : self.categorie_id
            };

            var setQuery = this.setQuery(extra_ele);

            this.$router.push({
                query: setQuery
            });
        }
    }
});

/***/ }),
/* 131 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
    data: function data() {
        return {};
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
    computed: {
        activated: function activated() {
            return this.$store.state.projects_meta.total_incomplete;
        },
        completed: function completed() {
            return this.$store.state.projects_meta.total_complete;
        },
        allof: function allof() {
            var incomplete = this.$store.state.projects_meta.total_incomplete;
            var complete = this.$store.state.projects_meta.total_complete;

            return incomplete + complete;
        }
    }
});

/***/ }),
/* 132 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//

var project_btn = {
    methods: {
        is_popup_active: function is_popup_active() {
            jQuery('#pm-project-dialog').dialog("open");
            //this.$store.commit('is_popup_active', {is_active: true});
        }
    }
};

/* harmony default export */ __webpack_exports__["a"] = (project_btn);

/***/ }),
/* 133 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ __webpack_exports__["a"] = ({
    data: function data() {
        return {
            username: '',
            first_name: '',
            last_name: '',
            email: '',
            create_user: __('Create User', 'pm'),
            show_spinner: false
        };
    },


    methods: {
        createUser: function createUser() {
            var self = this;
            this.show_spinner = true;

            self.httpRequest({
                url: self.base_url + '/pm/v2/users',
                method: 'POST',
                data: {
                    username: this.username,
                    first_name: this.first_name,
                    last_name: this.last_name,
                    email: this.email
                },

                success: function success(res) {
                    self.addUserMeta(res.data);
                    self.show_spinner = false;

                    // self.$root.$store.commit(
                    //     'setNewUser',
                    //     {
                    //         project_id: self.project_id,
                    //         user: res.data
                    //     }
                    // );

                    self.$root.$store.commit('updateSeletedUser', res.data);
                    jQuery("#pm-create-user-wrap").dialog("close");
                }
            });
        }
    }
});

/***/ }),
/* 134 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ __webpack_exports__["a"] = ({
    data: function data() {
        return {
            is_active_settings: false,
            is_update: false,
            project: {},
            project_action: __('Project Actions', 'pm')
        };
    },

    computed: {
        projects: function projects() {
            return this.$root.$store.state.projects;
        },
        meta: function meta() {
            return this.$root.$store.state.projects_meta;
        }
    },

    methods: {
        settingsShowHide: function settingsShowHide(project) {
            project.settings_hide = project.settings_hide ? false : true;
        },
        projectCompleteStatus: function projectCompleteStatus(project) {
            var progress = 0;
            if (typeof project.meta !== 'undefined') {
                var total_task = parseInt(project.meta.data.total_tasks, 10) || 0;
                var completed = parseInt(project.meta.data.total_complete_tasks, 10) || 0;
                progress = 100 * completed / total_task;
            }
            return {
                width: progress + '%'
            };
        },
        projectMarkAsDoneUndone: function projectMarkAsDoneUndone(project) {
            var self = this;
            project.status = project.status === 'complete' ? 'incomplete' : 'complete';

            var args = {
                data: {
                    'id': project.id,
                    'title': project.title,
                    'status': project.status
                },
                callback: function callback(project) {

                    switch (project.data.status) {

                        case 'complete':
                            self.getProjects({
                                conditions: { status: 'incomplete' },
                                callback: function callback() {
                                    if (!self.$store.state.projects.length) {
                                        self.$router.push({
                                            name: 'project_lists'
                                        });
                                    }
                                }
                            });
                            break;

                        case 'incomplete':

                            self.getProjects({
                                conditions: { status: 'complete' },
                                callback: function callback() {
                                    if (!self.$store.state.projects.length) {
                                        self.$router.push({
                                            name: 'completed_projects'
                                        });
                                    }
                                }
                            });
                            break;

                        default:
                            self.getProjects();
                            break;
                    }
                }
            };

            this.updateProject(args);
        }
    }
});

/***/ }),
/* 135 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__mixin__);

//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
    data: function data() {
        return {
            list_view: __('List View', 'pm'),
            grid_view: __('Grid View', 'pm')
            //projects_view: this.$store.state.projects_view,
        };
    },


    mixins: [__WEBPACK_IMPORTED_MODULE_1__mixin___default.a],

    created: function created() {
        this.getCookie("project_view");
    },

    methods: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapMutations('projectLists', ['setProjectsView']), {
        setcookie: function setcookie() {
            var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "grid_view";

            var d = new Date();
            d.setTime(d.getTime() + 365 * 24 * 60 * 60 * 1000);
            var expires = "expires=" + d.toUTCString();

            document.cookie = "project_view=" + name + ';' + expires;
            this.setProjectsView(name);
            //this.$store.commit('projectLists/setProjectsView', name);
        },
        getCookie: function getCookie(key) {
            var cookies = document.cookie.split(';'),
                cookieslen = cookies.length;
            key = key + "=";
            for (var i = 0; i < cookieslen; i++) {
                var c = cookies[i];
                while (c.charAt(0) == ' ') {
                    c = c.substring(1);
                }

                if (c.indexOf(key) == 0) {
                    this.setProjectsView(c.substring(key.length, c.length));
                    //this.$store.commit('projectLists/setProjectsView', c.substring(key.length, c.length))
                    return c.substring(key.length, c.length);
                }
            }

            return "";
        },
        activeClass: function activeClass(view) {
            if (view == this.projects_view) {
                return view;
            }

            //return this.$store.state.projects_view === view;
        }
    })
});

/***/ }),
/* 136 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['milestone'],

    mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],

    data: function data() {
        return {
            due_date: this.milestone.achieve_date.date,
            edit_milestone: __('Edit Milestone', 'pm'),
            delete_milestone: __('Delete milestone', 'pm'),
            mark_as_incomplete: __('Mark as incomplete', 'pm'),
            mark_as_complete: __('Mark as complete', 'pm')

        };
    },


    computed: {
        is_complete: function is_complete() {
            return this.milestone.status === 'complete' ? true : false;
        }
    },
    methods: {
        milestoneMarkDone: function milestoneMarkDone(milestone) {
            var args = {
                data: {
                    id: milestone.id,
                    title: milestone.title,
                    status: 'complete'
                },
                callback: function callback(res) {
                    milestone.status = 'complete';
                }
            };
            this.updateMilestone(args);
        },
        milestoneMarkUndone: function milestoneMarkUndone(milestone) {
            var args = {
                data: {
                    id: milestone.id,
                    title: milestone.title,
                    status: 'incomplete'
                },
                callback: function callback(res) {
                    milestone.status = 'incomplete';
                }
            };
            this.updateMilestone(args);
        },
        deleteSelfMilestone: function deleteSelfMilestone() {

            var self = this;
            var hasCurrentPage = self.$route.params.current_page_number;
            var args = {
                milestone_id: this.milestone.id,
                callback: function callback(res) {
                    if (!self.$store.state.projectMilestones.milestones.length) {
                        self.$router.push({
                            name: 'milestones',
                            params: {
                                project_id: self.project_id
                            }
                        });
                        if (hasCurrentPage) {
                            self.$store.commit('projectMilestones/fetchMilestoneStatus', false);
                        }
                    } else {
                        self.getSelfMilestones();
                    }

                    self.templateAction();
                }
            };
            this.deleteMilestone(args);
        }
    }
});

/***/ }),
/* 137 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__new_milestone_form_vue__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__list_vue__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__action_milestones_vue__ = __webpack_require__(82);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__milestone_discussion_vue__ = __webpack_require__(84);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixin__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ __webpack_exports__["a"] = ({
    mixins: [__WEBPACK_IMPORTED_MODULE_4__mixin___default.a],
    components: {
        'new-milestone-form': __WEBPACK_IMPORTED_MODULE_0__new_milestone_form_vue__["a" /* default */],
        'list': __WEBPACK_IMPORTED_MODULE_1__list_vue__["a" /* default */],
        'action': __WEBPACK_IMPORTED_MODULE_2__action_milestones_vue__["a" /* default */],
        'discuss': __WEBPACK_IMPORTED_MODULE_3__milestone_discussion_vue__["a" /* default */]
    },
    computed: {
        completedMilestones: function completedMilestones() {
            return this.$store.state.projectMilestones.milestones.filter(function (milestone) {
                return milestone.status === 'complete' ? milestone : false;
            });
        }
    }
});

/***/ }),
/* 138 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['value', 'dependency'],
    mounted: function mounted() {
        var self = this,
            limit_date = self.dependency == 'pm-datepickter-from' ? "maxDate" : "minDate";

        jQuery(self.$el).datepicker({
            dateFormat: 'yy-mm-dd',
            changeYear: true,
            changeMonth: true,
            numberOfMonths: 1,
            onClose: function onClose(selectedDate) {
                jQuery("." + self.dependency).datepicker("option", limit_date, selectedDate);
            },
            onSelect: function onSelect(dateText) {
                self.$emit('input', dateText);
            }
        });
    }
});

/***/ }),
/* 139 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__new_milestone_form_vue__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__list_vue__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__action_milestones_vue__ = __webpack_require__(82);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__milestone_discussion_vue__ = __webpack_require__(84);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixin__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ __webpack_exports__["a"] = ({
    mixins: [__WEBPACK_IMPORTED_MODULE_4__mixin___default.a],
    components: {
        'new-milestone-form': __WEBPACK_IMPORTED_MODULE_0__new_milestone_form_vue__["a" /* default */],
        'list': __WEBPACK_IMPORTED_MODULE_1__list_vue__["a" /* default */],
        'action': __WEBPACK_IMPORTED_MODULE_2__action_milestones_vue__["a" /* default */],
        'discuss': __WEBPACK_IMPORTED_MODULE_3__milestone_discussion_vue__["a" /* default */]
    },
    computed: {
        lateMileStones: function lateMileStones() {

            return this.$store.state.projectMilestones.milestones.filter(function (milestone) {

                if (milestone.status === 'complete') {
                    return false;
                }

                var due_date = milestone.achieve_date.date;

                if (!due_date) {
                    return milestone;
                }

                due_date = new Date(due_date);
                due_date = pm.Moment(due_date).format('YYYY-MM-DD');

                if (!pm.Moment(due_date).isValid()) {
                    return false;
                }

                var today = pm.Moment().format('YYYY-MM-DD'),
                    due_day = pm.Moment(due_date).format('YYYY-MM-DD');

                return pm.Moment(due_day).isBefore(today) ? milestone : false;
            });
        }
    },

    methods: {
        humanDate: function humanDate(milestone) {
            var due_date = milestone.achieve_date.date ? milestone.achieve_date.date : milestone.created_at.date;
            due_date = new Date(due_date), due_date = pm.Moment(due_date).format();

            return pm.Moment(due_date).fromNow();
        },
        momentFormat: function momentFormat(milestone) {
            var due_date = milestone.achieve_date.date ? milestone.achieve_date.date : milestone.created_at.date;
            due_date = new Date(due_date), due_date = pm.Moment(due_date).format();

            return due_date;
        },
        getDueDate: function getDueDate(milestone) {
            var due_date = milestone.achieve_date.date ? milestone.achieve_date.date : milestone.created_at.date;
            var due_date = this.dateFormat(due_date);

            return due_date;
        }
    }
});

/***/ }),
/* 140 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['list'],
    mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a]
});

/***/ }),
/* 141 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['discuss'],
    mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a]
});

/***/ }),
/* 142 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_header_vue__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__new_milestone_form_vue__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_pagination_vue__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_do_action_vue__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__late_milestones_vue__ = __webpack_require__(295);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__upcoming_milestones_vue__ = __webpack_require__(297);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__completed_milestones_vue__ = __webpack_require__(293);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mixin__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//










/* harmony default export */ __webpack_exports__["a"] = ({
    beforeRouteEnter: function beforeRouteEnter(to, from, next) {
        next(function (vm) {
            vm.getSelfMilestones();
        });
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_7__mixin___default.a],
    data: function data() {
        return {
            current_page_number: 1
        };
    },


    watch: {
        '$route': function $route(route) {
            this.getSelfMilestones(this);
        }
    },
    components: {
        'pm-header': __WEBPACK_IMPORTED_MODULE_0__common_header_vue__["default"],
        'new-milestone-form': __WEBPACK_IMPORTED_MODULE_1__new_milestone_form_vue__["a" /* default */],
        'pm-do-action': __WEBPACK_IMPORTED_MODULE_3__common_do_action_vue__["default"],
        'pm-pagination': __WEBPACK_IMPORTED_MODULE_2__common_pagination_vue__["default"],
        'late-milestones': __WEBPACK_IMPORTED_MODULE_4__late_milestones_vue__["a" /* default */],
        'upcomming-milestone': __WEBPACK_IMPORTED_MODULE_5__upcoming_milestones_vue__["a" /* default */],
        'completed-milestones': __WEBPACK_IMPORTED_MODULE_6__completed_milestones_vue__["a" /* default */]
    },
    computed: {
        milestoneTemplate: function milestoneTemplate() {
            return this.$store.state.projectMilestones.milestone_template;
        },
        blankTemplate: function blankTemplate() {
            if (!this.$store.state.projectMilestones.milestones.length) {
                return true;
            }

            return false;
        },
        is_milestone_form_active: function is_milestone_form_active() {
            return this.$store.state.projectMilestones.is_milestone_form_active;
        },
        milestones: function milestones() {
            return this.$store.state.projectMilestones.milestones;
        },
        total_milestone_page: function total_milestone_page() {
            if (typeof this.$store.state.projectMilestones.milestone_meta !== 'undefined') {
                return this.$store.state.projectMilestones.milestone_meta.total_pages;
            }
            return false;
        },
        isFetchMilestone: function isFetchMilestone() {
            return this.$store.state.projectMilestones.isFetchMilestone;
        }
    },
    methods: {}
});

/***/ }),
/* 143 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_text_editor_vue__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__date_picker_vue__ = __webpack_require__(294);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['milestone', 'section'],
    data: function data() {
        return {
            submit_disabled: false,
            show_spinner: false,
            due_date_text: __('Due Date', 'pm'),
            milestone_name: __('Milestone name', 'pm'),
            add_milestone: __('Add Milestone', 'pm'),
            update_milestone: __('Update Milestone', 'pm'),
            content: {
                html: typeof this.milestone.description == 'undefined' ? '' : this.milestone.description
            },
            milestone_id: 4,
            due_date: typeof this.milestone.achieve_date === 'undefined' ? '' : this.milestone.achieve_date.date
        };
    },


    mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],

    watch: {
        /**
         * Observe onchange comment message
         *
         * @param string new_content 
         * 
         * @type void
         */
        content: {
            handler: function handler(new_content) {
                this.milestone.description = new_content.html;
            },

            deep: true
        }
    },

    components: {
        'text-editor': __WEBPACK_IMPORTED_MODULE_0__common_text_editor_vue__["a" /* default */],
        'pm-datepickter': __WEBPACK_IMPORTED_MODULE_1__date_picker_vue__["a" /* default */]
    },
    computed: {
        milestones: function milestones() {
            return this.$store.state.projectMilestones.milestones;
        },

        /**
         * Editor ID
         * 
         * @return string
         */
        editor_id: function editor_id() {
            var milestone_id = typeof this.milestone.id === 'undefined' ? '' : '-' + this.milestone.id;
            return 'pm-milestone-editor' + milestone_id;
        }
    },
    methods: {
        milestoneFormAction: function milestoneFormAction() {
            // Exit from this function, If submit button disabled 
            if (this.submit_disabled) {
                return;
            }

            // Disable submit button for preventing multiple click
            this.submit_disabled = true;
            // Showing loading option 
            this.show_spinner = true;

            var self = this;

            var args = {
                data: {
                    title: self.milestone.title,
                    description: self.milestone.description,
                    achieve_date: self.due_date,
                    order: self.milestone.order,
                    status: self.milestone.status
                }
            };

            if (typeof this.milestone.id !== 'undefined') {
                args.data.id = this.milestone.id;
                args.callback = function (res) {
                    self.showHideMilestoneForm(false, self.milestone);
                    self.show_spinner = false;
                    self.submit_disabled = false;
                };

                this.updateMilestone(args);
            } else {
                args.callback = function (res) {
                    self.showHideMilestoneForm(false);
                    self.show_spinner = false;
                    self.submit_disabled = false;
                };
                this.addMilestone(args);
            }
        }
    }

});

/***/ }),
/* 144 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__new_milestone_form_vue__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__list_vue__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__action_milestones_vue__ = __webpack_require__(82);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__milestone_discussion_vue__ = __webpack_require__(84);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixin__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ __webpack_exports__["a"] = ({
    mixins: [__WEBPACK_IMPORTED_MODULE_4__mixin___default.a],
    components: {
        'new-milestone-form': __WEBPACK_IMPORTED_MODULE_0__new_milestone_form_vue__["a" /* default */],
        'list': __WEBPACK_IMPORTED_MODULE_1__list_vue__["a" /* default */],
        'action': __WEBPACK_IMPORTED_MODULE_2__action_milestones_vue__["a" /* default */],
        'discuss': __WEBPACK_IMPORTED_MODULE_3__milestone_discussion_vue__["a" /* default */]
    },
    computed: {
        upComingMileStones: function upComingMileStones() {

            return this.$store.state.projectMilestones.milestones.filter(function (milestone) {

                if (milestone.status === 'complete') {
                    return false;
                }
                var due_date = milestone.achieve_date.date;

                if (!due_date) {
                    return false;
                }

                due_date = new Date(due_date);
                due_date = pm.Moment(due_date).format('YYYY-MM-DD');

                if (!pm.Moment(due_date).isValid()) {
                    return false;
                }

                var today = pm.Moment().format('YYYY-MM-DD'),
                    due_day = pm.Moment(due_date).format('YYYY-MM-DD');

                return pm.Moment(due_day).isSameOrAfter(today) ? milestone : false;
            });
        }
    }
});

/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_header_vue__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directive__ = __webpack_require__(196);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directive___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__directive__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__mixin__);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ __webpack_exports__["a"] = ({
    beforeRouteEnter: function beforeRouteEnter(to, from, next) {
        next(function (vm) {
            vm.getOverViews();
        });
    },

    computed: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapState('projectOverview', {
        'meta': function meta(state) {
            return state.meta;
        },
        'users': function users(state) {
            return state.assignees;
        },
        'graph': function graph(state) {
            return state.graph;
        }
    }), {
        fetchOverview: function fetchOverview() {
            return this.$root.$store.state.projectOverviewLoaded;
        }

        // meta () {
        //     return this.$store.state.meta;
        // },

        // users () {
        //     return this.$store.state.assignees;
        // },

        // graph () {
        //     return this.$store.state.graph;
        // }

    }),
    components: {
        'pm-header': __WEBPACK_IMPORTED_MODULE_1__common_header_vue__["default"]
    },

    methods: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, pm.Vuex.mapMutations('projectOverview', ['setOverViews']), {
        getOverViews: function getOverViews() {
            var args = {
                conditions: {
                    with: 'overview_graph'
                },
                callback: function callback(res) {
                    this.$root.$store.state.projectOverviewLoaded = true;
                    this.setOverViews(res.data);
                    pm.NProgress.done();
                }
            };

            this.getProject(args);
        }
    })
});

/***/ }),
/* 146 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__new_task_form_vue__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['task', 'list'],
    mixins: [__WEBPACK_IMPORTED_MODULE_1__mixin___default.a],
    data: function data() {
        return {
            taskId: false,
            projectId: false
        };
    },

    components: {
        'new-task-form': __WEBPACK_IMPORTED_MODULE_0__new_task_form_vue__["default"],
        'single-task': pm.SingleTask
    },
    computed: {
        route_name: function route_name() {
            if (this.$route.name === 'single_list') {
                return 'single_task';
            }

            return 'lists_single_task';
        }
    },
    created: function created() {
        pmBus.$on('pm_after_close_single_task_modal', this.afterCloseSingleTaskModal);
    },

    methods: {
        afterCloseSingleTaskModal: function afterCloseSingleTaskModal() {

            if (this.$route.name == 'lists_single_task') {
                this.$router.push({
                    name: 'task_lists'
                });
            } else if (this.$route.name == 'single_task') {
                this.$router.push({
                    name: 'single_list'
                });
            } else {
                this.taskId = false;
                this.projectId = false;
            }
        },
        getSingleTask: function getSingleTask(task) {
            this.$store.commit('projectTaskLists/updateSingleTaskActiveMode', true);
            this.taskId = task.id;
            this.projectId = task.project_id;
        },

        is_assigned: function is_assigned(task) {
            return true;
            var get_current_user_id = this.$store.state.projectTaskLists.get_current_user_id,
                in_task = task.assigned_to.indexOf(get_current_user_id);

            if (task.can_del_edit || in_task != '-1') {
                return true;
            }

            return false;
        },

        doneUndone: function doneUndone() {
            var self = this,
                status = !this.task.status ? 1 : 0;
            var args = {
                data: {
                    title: this.task.title,
                    task_id: this.task.id,
                    status: status
                },
                callback: function callback(res) {
                    self.$store.commit('projectTaskLists/afterTaskDoneUndone', {
                        status: status,
                        task: res.data,
                        list_id: self.list.id,
                        task_id: self.task.id
                    });
                }
            };

            this.taskDoneUndone(args);
        }
    }
});

/***/ }),
/* 147 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['value', 'dependency'],
    data: function data() {
        return {
            dateValue: ''
        };
    },
    created: function created() {
        if (!this.value) {
            return '';
        }
        var date = new Date(this.value);
        date = pm.Moment(date).format('YYYY-MM-DD');
        this.dateValue = date;
    },

    mounted: function mounted() {
        var self = this,
            limit_date = self.dependency == 'pm-datepickter-from' ? "maxDate" : "minDate";

        jQuery(self.$el).datepicker({
            dateFormat: 'yy-mm-dd',
            changeYear: true,
            changeMonth: true,
            numberOfMonths: 1,
            onClose: function onClose(selectedDate) {
                jQuery("." + self.dependency).datepicker("option", limit_date, selectedDate);
            },
            onSelect: function onSelect(dateText) {
                self.$emit('input', dateText);
            }
        });
        jQuery(self.$el).on("change", function () {
            var date = jQuery(self.$el).val();
            self.$emit('input', date);
        });
    }
});

/***/ }),
/* 148 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__new_task_list_btn_vue__ = __webpack_require__(176);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__new_task_list_form_vue__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ __webpack_exports__["a"] = ({
    mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],
    components: {
        'new-task-list-btn': __WEBPACK_IMPORTED_MODULE_0__new_task_list_btn_vue__["a" /* default */],
        'new-task-list-form': __WEBPACK_IMPORTED_MODULE_1__new_task_list_form_vue__["default"]
    },

    computed: {
        is_active_list_form: function is_active_list_form() {
            return this.$store.state.projectTaskLists.is_active_list_form;
        }
    }
});

/***/ }),
/* 149 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__new_task_form_vue__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_do_action_vue__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ __webpack_exports__["a"] = ({
    props: ['task', 'list'],

    mixins: [__WEBPACK_IMPORTED_MODULE_2__mixin___default.a],

    data: function data() {
        return {
            taskId: false,
            projectId: false
        };
    },
    created: function created() {
        pmBus.$on('pm_after_close_single_task_modal', this.afterCloseSingleTaskModal);
    },


    components: {
        'new-task-form': __WEBPACK_IMPORTED_MODULE_0__new_task_form_vue__["default"],
        'do-action': __WEBPACK_IMPORTED_MODULE_1__common_do_action_vue__["default"],
        'single-task': pm.SingleTask
    },

    computed: {
        route_name: function route_name() {
            if (this.$route.name === 'single_list') {
                return 'single_task';
            }

            return 'lists_single_task';
        },
        isSingleTask: function isSingleTask() {
            return this.$route.params.task_id ? true : false;
        },
        doActionData: function doActionData() {
            return {
                task: this.task,
                list: this.list
            };
        }
    },

    methods: {
        afterCloseSingleTaskModal: function afterCloseSingleTaskModal() {

            if (this.$route.name == 'lists_single_task') {
                this.$router.push({
                    name: 'task_lists'
                });
            } else if (this.$route.name == 'single_task') {
                this.$router.push({
                    name: 'single_list'
                });
            } else {
                this.taskId = false;
                this.projectId = false;
            }
        },
        getSingleTask: function getSingleTask(task) {
            this.$store.commit('projectTaskLists/updateSingleTaskActiveMode', true);
            this.taskId = task.id;
            this.projectId = task.project_id;
        },
        doneUndone: function doneUndone() {
            var self = this,
                status = !this.task.status ? 1 : 0;
            var args = {
                data: {
                    title: this.task.title,
                    task_id: this.task.id,
                    status: status
                },
                callback: function callback(res) {
                    self.$store.commit('projectTaskLists/afterTaskDoneUndone', {
                        status: status,
                        task: res.data,
                        list_id: self.list.id,
                        task_id: self.task.id
                    });
                }
            };

            this.taskDoneUndone(args);
        }
    }
});

/***/ }),
/* 150 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_common_text_editor_vue__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_common_file_uploader_vue__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_common_notify_user_vue__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["a"] = ({
    // Get passing data for this component. 
    props: ['comment', 'list'],

    mixins: [__WEBPACK_IMPORTED_MODULE_3__mixin___default.a],

    /**
     * Initial data for this component
     * 
     * @return obj
     */
    data: function data() {
        return {
            files: typeof this.comment.files === 'undefined' ? [] : this.comment.files.data,
            deleted_files: [],
            content: {
                html: typeof this.comment.content === 'undefined' ? '' : this.comment.content
            },
            notify_users: [],
            mentioned_user_ids: null,
            add_new_comment: __('Add New Comment', 'pm'),
            update_comment: __('Update Comment', 'pm'),
            show_spinner: false,
            submit_disabled: false,
            list_id: this.$route.params.list_id
        };
    },

    /**
     * Observe onchange value
     */
    watch: {

        /**
         * Observe onchange comment message
         *
         * @param string new_content 
         * 
         * @type void
         */
        content: {
            handler: function handler(new_content) {
                this.comment.content = new_content.html;
            },

            deep: true
        }

    },

    components: {
        'text-editor': __WEBPACK_IMPORTED_MODULE_0__components_common_text_editor_vue__["a" /* default */],
        'file-uploader': __WEBPACK_IMPORTED_MODULE_1__components_common_file_uploader_vue__["a" /* default */],
        notifyUser: __WEBPACK_IMPORTED_MODULE_2__components_common_notify_user_vue__["default"]
    },

    /**
     * Unassigned varable value
     */
    computed: {
        /**
         * Editor ID
         * 
         * @return string
         */
        editor_id: function editor_id() {
            var comment_id = typeof this.comment.id == 'undefined' ? '' : '-' + this.comment.id;
            return 'pm-list-editor' + comment_id;
        },

        /**
         * Get current projects co-worker
         * 
         * @return object
         */
        co_workers: function co_workers() {
            return this.get_porject_users_by_role('co_worker');
        },

        /**
         * Check has co-worker in project or not
         * 
         * @return boolean
         */
        hasCoWorker: function hasCoWorker() {
            var co_worker = this.get_porject_users_by_role('co_worker');

            if (co_worker.length) {
                return true;
            }

            return false;
        }
    },

    methods: {
        /**
         * Insert and update todo-list comment
         * 
         * @return void
         */
        listCommentAction: function listCommentAction() {
            var regEx = /data-pm-user-id=":(.+?):"/g;
            this.mentioned_user_ids = this.getMatches(this.comment.content, regEx, 1);

            // Prevent sending request when multiple click submit button 
            if (this.submit_disabled) {
                return;
            }
            if (typeof this.comment.content === 'undefined' || this.comment.content == '') {
                return;
            }
            this.submit_disabled = true;
            // Showing loading option 
            this.show_spinner = true;
            var self = this;
            var args = {
                data: {
                    commentable_id: self.list_id,
                    content: self.comment.content,
                    mentioned_users: self.mentioned_user_ids,
                    commentable_type: 'task_list',
                    deleted_files: self.deleted_files || [],
                    files: self.files || [],
                    notify_users: this.notify_users
                }
            };
            if (typeof this.comment.id !== 'undefined') {
                args.data.id = this.comment.id;
                args.callback = function (res) {
                    self.$store.commit('projectTaskLists/listUpdateComment', {
                        list_id: self.list_id,
                        comment_id: self.comment.id,
                        comment: res.data
                    });
                    self.submit_disabled = false;
                    self.show_spinner = false;
                    self.notify_users = [];
                    self.files = [];
                    self.deleted_files = [];
                };
                self.updateComment(args);
            } else {
                args.callback = function (res) {
                    self.$store.commit('projectTaskLists/listNewComment', {
                        list_id: self.list_id,
                        comment: res.data
                    });
                    self.submit_disabled = false;
                    self.show_spinner = false;
                    self.content.html = '';
                    self.comment.content = '';
                    self.notify_users = [];
                    self.files = [];
                    self.deleted_files = [];
                };
                self.addComment(args);
            }
        }
    }
});

/***/ }),
/* 151 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__list_comment_form_vue__ = __webpack_require__(301);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ __webpack_exports__["a"] = ({

    // Get passing data for this component. 
    props: ['comments', 'list'],

    mixins: [__WEBPACK_IMPORTED_MODULE_1__mixin___default.a],

    computed: {
        /**
         * Get current user avatar
         */
        getCurrentUserAvatar: function getCurrentUserAvatar() {
            return PM_Vars.avatar_url;
        }
    },

    methods: {
        current_user_can_edit_delete: function current_user_can_edit_delete(comment, list) {

            if (list.can_del_edit) {
                return true;
            }

            if (comment.user_id == this.$store.state.projectTaskLists.get_current_user_id && comment.comment_type == '') {
                return true;
            }

            return false;
        },
        deleteListComment: function deleteListComment(id) {
            if (!confirm(this.__('Are you sure!', 'pm'))) {
                return;
            }
            var self = this;

            var request_data = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/comments/' + id,
                type: 'DELETE',
                success: function success(res) {
                    var index = self.getIndex(self.comments, id, 'id');
                    pm.Toastr.success(res.message);
                    self.comments.splice(index, 1);
                }
            };
            this.httpRequest(request_data);
        }
    },

    components: {
        'list-comment-form': __WEBPACK_IMPORTED_MODULE_0__list_comment_form_vue__["a" /* default */]
    }

});

/***/ }),
/* 152 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__new_task_form_vue__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__incompleted_tasks_vue__ = __webpack_require__(174);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__completed_tasks_vue__ = __webpack_require__(173);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["a"] = ({

    // Get passing data for this component. Remember only array and objects are
    props: ['list'],

    mixins: [__WEBPACK_IMPORTED_MODULE_3__mixin___default.a],

    /**
     * Initial data for this component
     * 
     * @return obj
     */
    data: function data() {
        return {
            showTaskForm: false,
            task: {},
            tasks: this.list.tasks,
            task_index: 'undefined', // Using undefined for slideToggle class
            task_loading_status: false,
            complete_show_load_more_btn: false,
            currnet_user_id: this.$store.state.projectTaskLists.get_current_user_id,
            more_incomplete_task_spinner: false,
            more_completed_task_spinner: false,
            loading_completed_tasks: true,
            loading_incomplete_tasks: true,
            completed_tasks_next_page_number: null
        };
    },


    computed: {
        /**
         * Check, Has task from this props list
         * 
         * @return boolen
         */
        taskLength: function taskLength() {
            return typeof this.list.tasks != 'undefined' && this.list.tasks.length ? true : false;
        },


        /**
         * Get incomplete tasks
         * 
         * @param  array tasks 
         * 
         * @return array       
         */
        getIncompleteTasks: function getIncompleteTasks() {
            if (this.list.incomplete_tasks) {
                this.list.incomplete_tasks.data.map(function (task, index) {
                    task.status = false;
                });

                return this.list.incomplete_tasks.data;
            }

            return [];
        },


        /**
         * Get completed tasks
         * 
         * @param  array tasks 
         * 
         * @return array       
         */
        getCompletedTask: function getCompletedTask() {
            if (this.list.complete_tasks) {
                this.list.complete_tasks.data.map(function (task, index) {
                    task.status = true;
                });

                return this.list.complete_tasks.data;
            }
        },
        loadMoreButton: function loadMoreButton() {
            if (typeof this.list.incomplete_tasks == 'undefined') {
                return false;
            }
            var pagination = this.list.incomplete_tasks.meta.pagination;
            if (pagination.current_page < pagination.total_pages) {
                this.completed_tasks_next_page_number = pagination.current_page + 1;
                return true;
            }

            return false;
        }
    },

    components: {
        'new-task-form': __WEBPACK_IMPORTED_MODULE_0__new_task_form_vue__["default"],
        'incompleted-tasks': __WEBPACK_IMPORTED_MODULE_1__incompleted_tasks_vue__["a" /* default */],
        'completed-tasks': __WEBPACK_IMPORTED_MODULE_2__completed_tasks_vue__["a" /* default */],
        'single-task': pm.SingleTask
    },

    methods: {
        is_assigned: function is_assigned(task) {
            return true;
            var get_current_user_id = this.$store.state.projectTaskLists.get_current_user_id,
                in_task = task.assigned_to.indexOf(get_current_user_id);

            if (task.can_del_edit || in_task != '-1') {
                return true;
            }

            return false;
        },

        /**
         * Get incomplete tasks
         * 
         * @param  array tasks 
         * 
         * @return array       
         */
        getIncompletedTasks: function getIncompletedTasks(lists) {
            return lists.tasks.filter(function (task) {
                return task.completed == '0' || !task.completed;
            });
        },


        /**
         * Get completed tasks
         * 
         * @param  array tasks 
         * 
         * @return array       
         */
        getCompleteTask: function getCompleteTask(lists) {
            return lists.tasks.filter(function (task) {
                return task.completed == '1' || task.completed;
            });
        }
    }
});

/***/ }),
/* 153 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__new_task_list_btn_vue__ = __webpack_require__(176);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__new_task_list_form_vue__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__new_task_btn_vue__ = __webpack_require__(175);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_common_pagination_vue__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_common_header_vue__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__list_tasks_vue__ = __webpack_require__(303);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__default_list_page_vue__ = __webpack_require__(300);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//










/* harmony default export */ __webpack_exports__["a"] = ({
    beforeRouteEnter: function beforeRouteEnter(to, from, next) {
        next(function (vm) {
            var self = vm;
        });
    },

    components: {
        'new-task-list-btn': __WEBPACK_IMPORTED_MODULE_0__new_task_list_btn_vue__["a" /* default */],
        'new-task-list-form': __WEBPACK_IMPORTED_MODULE_1__new_task_list_form_vue__["default"],
        'new-task-button': __WEBPACK_IMPORTED_MODULE_2__new_task_btn_vue__["a" /* default */],
        'pm-pagination': __WEBPACK_IMPORTED_MODULE_3__components_common_pagination_vue__["default"],
        'pm-header': __WEBPACK_IMPORTED_MODULE_4__components_common_header_vue__["default"],
        'list-tasks': __WEBPACK_IMPORTED_MODULE_5__list_tasks_vue__["a" /* default */],
        'default-list-page': __WEBPACK_IMPORTED_MODULE_6__default_list_page_vue__["a" /* default */]

    },

    mixins: [__WEBPACK_IMPORTED_MODULE_7__mixin___default.a],

    /**
     * Initial data for this component
     * 
     * @return obj
     */
    data: function data() {
        return {
            list: {},
            index: false,
            project_id: this.$route.params.project_id,
            current_page_number: this.$route.params.current_page_number || 1
        };
    },


    watch: {
        '$route': function $route(route) {
            if (route.name != 'lists_single_task' && this.current_page_number != route.params.current_page_number) {
                this.getSelfLists();
            }

            this.isSingleTask();
        }
    },

    computed: {
        /**
         * Get lists from vuex store
         * 
         * @return array
         */
        lists: function lists() {
            return this.$store.state.projectTaskLists.lists;
        },


        /**
         * Get milestones from vuex store
         * 
         * @return array
         */
        milestones: function milestones() {
            return this.$store.state.projectTaskLists.milestones;
        },
        is_active_list_form: function is_active_list_form() {
            return this.$store.state.projectTaskLists.is_active_list_form;
        },
        total_list_page: function total_list_page() {
            return this.$store.state.projectTaskLists.lists_meta.total_pages;
        },
        is_blank_Template: function is_blank_Template() {
            return this.$store.state.projectTaskLists.balankTemplateStatus;
        },
        is_list_Template: function is_list_Template() {
            return this.$store.state.projectTaskLists.listTemplateStatus;
        },
        isListFetch: function isListFetch() {
            return this.$store.state.projectTaskLists.isListFetch;
        },
        listViewType: function listViewType() {
            var meta = this.$store.state.projectMeta;
            var self = this;
            if (meta.hasOwnProperty('list_view_type')) {
                if (!meta.list_view_type || meta.list_view_type.meta_value == 'list') {
                    self.$store.state.projectTaskLists.is_single_list = false;
                    self.isSingleTask();
                    self.getSelfLists();
                    self.getGlobalMilestones();
                } else {
                    self.$router.push({
                        name: 'kanboard'
                    });
                }

                return true;
            }

            return false;
        }
    },

    created: function created() {
        pmBus.$on('pm_before_destroy_single_task', this.updateSingleTask);
        pmBus.$on('pm_generate_task_url', this.generateTaskUrl);
    },


    methods: {
        generateTaskUrl: function generateTaskUrl(task) {
            var url = this.$router.resolve({
                name: 'lists_single_task',
                params: {
                    task_id: task.id,
                    project_id: task.project_id,
                    list_id: task.task_list.data.id
                }
            }).href;
            var url = PM_Vars.project_page + url;
            //var url = PM_Vars.project_page + '#/projects/' + task.project_id + '/task-lists/tasks/' + task.id; 
            this.copy(url);
        },
        afterTaskDoneUndone: function afterTaskDoneUndone(task) {

            this.$store.commit('projectTaskLists/afterTaskDoneUndone', {
                status: task.status == 'complete' || task.status === true ? 1 : 0,
                task: task,
                list_id: task.task_list.data.id,
                task_id: task.id
            });
        },
        updateSingleTask: function updateSingleTask(task) {

            if (task.status == 'complete' || task.status === true) {
                this.afterTaskDoneUndone(task);
            } else {
                this.setTaskDefaultData(task);
                this.$store.commit('projectTaskLists/afterUpdateTask', {
                    task: task,
                    list_id: task.task_list.data.id
                });
            }

            this.$store.commit('projectTaskLists/updateSingleTaskActiveMode', false);
        },
        setTaskDefaultData: function setTaskDefaultData(task) {
            var lists = this.$store.state.projectTaskLists.lists;
            var list_index = this.getIndex(lists, task.task_list.data.id, 'id');

            if (list_index === false) {
                return;
            }

            if (task.status === 'incomplete' || task.status === false) {
                var task_index = this.getIndex(lists[list_index].incomplete_tasks.data, task.id, 'id');

                var prevTask = lists[list_index].incomplete_tasks.data[task_index];

                task.sub_task_content = prevTask.sub_task_content;
                task.edit_mode = prevTask.edit_mode;
            }
        },
        isSingleTask: function isSingleTask() {
            if (this.$route.name == 'lists_single_task') {
                this.$store.commit('isSigleTask', true);
            } else {
                this.$store.commit('isSigleTask', false);
            }
        },
        showEditForm: function showEditForm(list, index) {
            list.edit_mode = list.edit_mode ? false : true;
        },
        getSelfLists: function getSelfLists() {
            var self = this;
            var args = {
                callback: function callback(res) {
                    pm.NProgress.done();
                }
            };
            this.getLists(args);
        },
        deleteSelfList: function deleteSelfList(list) {
            var self = this;
            var hasCurrentPage = self.$route.params.current_page_number;
            var args = {
                list_id: list.id,
                callback: function callback(res) {
                    if (!self.$store.state.projectTaskLists.lists.length) {
                        self.$router.push({
                            name: 'task_lists',
                            params: {
                                project_id: self.project_id
                            }
                        });
                        if (hasCurrentPage) {
                            self.$store.commit('projectTaskLists/fetchListStatus', false);
                        }
                    } else {
                        self.getLists();
                    }
                }
            };
            this.deleteList(args);
        }
    }
});

/***/ }),
/* 154 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
    // Get passing data for this component. Remember only array and objects are
    props: ['list', 'task'],

    mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],

    methods: {
        /**
         * Select new todo-list button class for +,- icon
         * 
         * @return string
         */
        newTaskBtnClass: function newTaskBtnClass() {
            return this.list.show_task_form ? 'pm-new-task-btn-minus' : 'pm-new-task-btn';
        }
    }
});

/***/ }),
/* 155 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__date_picker_vue__ = __webpack_require__(299);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["a"] = ({
    // Get passing data for this component. Remember only array and objects are
    props: {
        list: {
            type: Object,
            default: function _default() {
                return {};
            }
        },

        task: {
            type: Object,
            default: function _default() {
                return {
                    description: {},
                    due_date: {},
                    assignees: {
                        data: []
                    },
                    estimation: ''
                };
            }
        }
    },

    /**
     * Initial data for this component
     * 
     * @return obj
     */
    data: function data() {
        return {
            task_privacy: this.task.task_privacy == 'yes' ? true : false,
            submit_disabled: false,
            before_edit: jQuery.extend(true, {}, this.task),
            task_description: this.task.description.content,
            show_spinner: false,
            date_from: '',
            date_to: '',
            assigned_to: [],
            add_new_task: __('Add a new task', 'pm'),
            task_description_placeholder: __('Add extra details about this task (optional)', 'pm'),
            task_start_date: __('Start Date', 'pm'),
            task_due_date: __('Due Date', 'pm'),
            select_user_text: __('Select User', 'pm'),
            update_task: __('Update Task', 'pm'),
            add_task: __('Add Task', 'pm')
        };
    },
    mixins: [__WEBPACK_IMPORTED_MODULE_1__mixin___default.a],

    components: {
        'multiselect': pm.Multiselect.Multiselect,
        'pm-datepickter': __WEBPACK_IMPORTED_MODULE_0__date_picker_vue__["a" /* default */]
    },

    beforeMount: function beforeMount() {
        this.setDefaultValue();
    },


    // Initial action for this component
    created: function created() {
        this.$on('pm_date_picker', this.getDatePicker);
    },

    watch: {
        date_from: function date_from(new_date) {
            this.task.start_at = new_date;
        },

        date_to: function date_to(new_date) {
            this.task.due_date = new_date;
        },
        /**
         * Live check is the task private or not
         * 
         * @param  boolean val 
         * 
         * @return void     
         */
        task_privacy: function task_privacy(val) {
            if (val) {
                this.task.task_privacy = 'yes';
            } else {
                this.task.task_privacy = 'no';
            }
        }
    },

    computed: {
        project_users: function project_users() {
            return this.$root.$store.state.project_users;
        },

        /**
         * Check current user can view the todo or not
         * 
         * @return boolean
         */
        todo_view_private: function todo_view_private() {
            if (!this.$store.state.projectTaskLists.init.hasOwnProperty('premissions')) {
                return true;
            }

            if (this.$store.state.projectTaskLists.init.premissions.hasOwnProperty('todo_view_private')) {
                return this.$store.state.projectTaskLists.init.premissions.tdolist_view_private;
            }

            return true;
        },

        /**
         * Get and Set task users
         */
        task_assign: {
            /**
             * Filter only current task assgin user from vuex state project_users
             *
             * @return array
             */
            get: function get() {
                // var filtered_users = [];

                // if ( this.task.assigned_to && this.task.assigned_to.length ) {
                //     var assigned_to = this.task.assigned_to.map(function (id) {
                //         return parseInt(id);
                //     });


                //     filtered_users = this.project_users.filter(function (user) {
                //         return (assigned_to.indexOf(parseInt(user.id)) >= 0);
                //     });
                // }

                return typeof this.task.assignees == 'undefined' ? [] : this.task.assignees.data;
            },

            /**
             * Set selected users at task insert or edit time
             * 
             * @param array selected_users 
             */
            set: function set(selected_users) {
                this.assigned_to = selected_users.map(function (user) {
                    return user.id;
                });
            }
        }
    },

    methods: {
        setDefaultValue: function setDefaultValue() {
            if (typeof this.task.assignees !== 'undefined') {
                var self = this;
                this.task.assignees.data.map(function (user) {
                    self.assigned_to.push(user.id);
                });
            }

            if (typeof this.task.start_at === 'undefined') {
                this.task.start_at = {
                    date: ''
                };
            }

            if (typeof this.task.due_date === 'undefined') {
                this.task.due_date = {
                    date: ''
                };
            }
        },

        /**
         * Set tast start and end date at task insert or edit time
         * 
         * @param  string data 
         * 
         * @return void   
         */
        getDatePicker: function getDatePicker(data) {

            if (data.field == 'datepicker_from') {
                //this.task.start_at = data.date;
            }

            if (data.field == 'datepicker_to') {
                //this.task.due_date = data.date;
            }
        },

        /**
         * Show or hieding task insert and edit form
         *  
         * @param  int list_index 
         * @param  int task_id    
         * 
         * @return void           
         */
        hideNewTaskForm: function hideNewTaskForm(list_index, task_id) {
            var self = this,
                task_index = this.getIndex(this.list.tasks, task_id, 'ID'),
                list_index = this.getIndex(this.$store.state.projectTaskLists.lists, this.list.ID, 'ID');

            if (typeof task_id == 'undefined') {
                self.showHideTaskFrom(self.list);
                return;
            }

            this.list.tasks.map(function (task, index) {
                if (task.ID == task_id) {
                    self.showHideTaskFrom(self.list);
                    self.task = jQuery.extend(self.task, self.before_edit);
                }
            });
        },

        taskFormAction: function taskFormAction() {

            // Exit from this function, If submit button disabled 
            if (this.submit_disabled) {
                return;
            }

            if (!this.task.title) {
                pm.Toastr.error('Task title required!');
                return false;
            }

            var start = new Date(this.task.start_at.date);

            if (this.task.due_date.date) {
                var end = new Date(this.task.due_date.date);
                var compare = pm.Moment(end).isBefore(start);

                if (this.task_start_field && compare) {
                    pm.Toastr.error('Invalid date range!');
                    return;
                }
            }

            var self = this;
            this.submit_disabled = true;
            // Showing loading option 
            this.show_spinner = true;
            var args = {
                data: {
                    task_id: this.task.id,
                    board_id: this.list.id,
                    assignees: this.filterUserId(this.task.assignees.data), //this.assigned_to,
                    title: this.task.title,
                    description: this.task_description,
                    start_at: this.task.start_at.date,
                    due_date: this.task.due_date.date,
                    list_id: this.list.id,
                    order: this.task.order,
                    estimation: this.task.estimation
                },
                callback: function callback(res) {
                    self.show_spinner = false;
                    self.submit_disabled = false;
                    self.task_description = res.data.description.content;
                }
            };

            if (typeof this.task.id !== 'undefined') {
                self.updateTask(args);
            } else {
                self.addTask(args, this.list);
            }
        },
        filterUserId: function filterUserId(users) {
            return users.map(function (user) {
                return user.id;
            });
        }
    }
});

/***/ }),
/* 156 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
    /**
     * Initial data for this component
     * 
     * @return obj
     */
    data: function data() {
        return {
            list: {},
            index: false,
            permissions: this.$store.state.projectTaskLists.permissions
        };
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],

    computed: {
        /**
         * Show new todo-list form
         * 
         * @return boolean
         */
        show_list_form: function show_list_form() {
            return this.$store.state.projectTaskLists.show_list_form;
        }
    },

    methods: {}
});

/***/ }),
/* 157 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
    // Get passing data for this component. Remember only array and objects are 
    props: {
        list: {
            type: [Object],
            default: function _default() {
                return {
                    milestone: -1
                };
            }
        },

        section: {
            type: [String],
            default: function _default() {
                return '';
            }
        }
    },

    /**
     * Initial data for this component
     * 
     * @return obj
     */
    data: function data() {
        return {
            tasklist_milestone: this.list.milestone ? this.list.milestone : '-1',
            show_spinner: false,
            error: [],
            success: '',
            submit_disabled: false,
            project_id: this.$route.params.project_id,
            milestone_id: '-1',
            task_list_name: __('Task list name', 'pm'),
            task_list_details: __('Task list details', 'pm'),
            task_list_update: __('Update List', 'pm'),
            add_list: __('Add List', 'pm')
        };
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],

    created: function created() {

        if (this.list.milestone != -1 && typeof this.list.milestone != 'undefined') {
            this.milestone_id = this.list.milestone.data.id;
        }
    },


    computed: {

        /**
         * Get current project milestones 
         * 
         * @return array
         */
        milestones: function milestones() {
            return this.$root.$store.state.milestones;
        }
    },

    methods: {

        /**
         * Get todo list form class
         * 
         * @param  obej list 
         * 
         * @return string     
         */
        todolistFormClass: function todolistFormClass(list) {
            return list.ID ? 'pm-todo-form-wrap pm-form pm-slide-' + list.ID : 'pm-todo-list-form-wrap pm-form pm-slide-list';
        },


        /**
         * Insert and update todo list
         * 
         * @return void
         */
        listFormAction: function listFormAction() {

            // Prevent sending request when multiple click submit button 
            if (this.submit_disabled) {
                return;
            }
            var self = this;
            // Make disable submit button
            this.submit_disabled = true;
            this.show_spinner = true;
            this.show_spinner = true;

            var is_update = typeof this.list.id !== 'undefined' ? true : false;
            var args = {
                data: {
                    id: self.list.id,
                    title: self.list.title,
                    description: self.list.description,
                    milestone: self.milestone_id,
                    order: self.list.order
                },
                callback: function callback(res) {
                    self.show_spinner = false;
                    self.submit_disabled = false;
                    self.listTemplateAction();
                }
            };

            if (!is_update) {
                self.addList(args);
            } else {
                self.updateList(args);
            }
        },
        singleAfterNewList: function singleAfterNewList(self, res, is_update) {
            if (is_update) {
                var condition = 'incomplete_tasks,complete_tasks,comments';
                self.getList(self, self.list.id, condition);
            }
        }
    }
});

/***/ }),
/* 158 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__new_task_form_vue__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__incompleted_tasks_vue__ = __webpack_require__(174);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__completed_tasks_vue__ = __webpack_require__(173);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ __webpack_exports__["a"] = ({

    // Get passing data for this component. Remember only array and objects are
    props: ['list'],

    /**
     * Initial data for this component
     * 
     * @return obj
     */
    data: function data() {
        return {
            showTaskForm: false,
            task: {},
            tasks: this.list.tasks,
            task_index: 'undefined', // Using undefined for slideToggle class
            task_loading_status: false,
            incomplete_show_load_more_btn: false,
            complete_show_load_more_btn: false,
            currnet_user_id: this.$store.state.projectTaskLists.get_current_user_id,
            more_incomplete_task_spinner: false,
            more_completed_task_spinner: false,
            loading_completed_tasks: true,
            loading_incomplete_tasks: true,
            completed_tasks_next_page_number: null,
            incompleted_tasks_next_page_number: null
        };
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_3__mixin___default.a],

    computed: {
        /**
         * Check, Has task from this props list
         * 
         * @return boolen
         */
        taskLength: function taskLength() {
            return typeof this.list.tasks != 'undefined' && this.list.tasks.length ? true : false;
        },

        /**
         * Get incomplete tasks
         * 
         * @param  array tasks 
         * 
         * @return array       
         */
        getIncompleteTasks: function getIncompleteTasks() {
            if (this.list.incomplete_tasks) {
                this.list.incomplete_tasks.data.forEach(function (task, index) {
                    if (task) {
                        task.status = false;
                    }
                });

                return this.list.incomplete_tasks.data;
            }
        },

        /**
         * Get completed tasks
         * 
         * @param  array tasks 
         * 
         * @return array       
         */
        getCompletedTask: function getCompletedTask() {
            if (this.list.complete_tasks) {
                this.list.complete_tasks.data.map(function (task, index) {
                    if (task) {
                        task.status = true;
                    }
                });

                return this.list.complete_tasks.data;
            }
        },
        incompletedLoadMoreButton: function incompletedLoadMoreButton() {

            if (typeof this.list.incomplete_tasks == 'undefined') {
                return false;
            }

            var pagination = this.list.incomplete_tasks.meta.pagination;
            if (pagination.current_page < pagination.total_pages) {
                this.incompleted_tasks_next_page_number = pagination.current_page + 1;
                return true;
            }

            return false;
        },
        completedLoadMoreButton: function completedLoadMoreButton() {
            if (typeof this.list.complete_tasks == 'undefined') {
                return false;
            }
            var pagination = this.list.complete_tasks.meta.pagination;
            if (pagination.current_page < pagination.total_pages) {
                this.completed_tasks_next_page_number = pagination.current_page + 1;
                return true;
            }

            return false;
        }
    },

    components: {
        'new-task-form': __WEBPACK_IMPORTED_MODULE_0__new_task_form_vue__["default"],
        'incompleted-tasks': __WEBPACK_IMPORTED_MODULE_1__incompleted_tasks_vue__["a" /* default */],
        'completed-tasks': __WEBPACK_IMPORTED_MODULE_2__completed_tasks_vue__["a" /* default */]
    },

    methods: {
        is_assigned: function is_assigned(task) {
            return true;
            var get_current_user_id = this.$store.state.projectTaskLists.get_current_user_id,
                in_task = task.assigned_to.indexOf(get_current_user_id);

            if (task.can_del_edit || in_task != '-1') {
                return true;
            }

            return false;
        },
        /**
         * Get incomplete tasks
         * 
         * @param  array tasks 
         * 
         * @return array       
         */
        getIncompletedTasks: function getIncompletedTasks(lists) {
            return lists.tasks.filter(function (task) {
                return task.completed == '0' || !task.completed;
            });
        },

        /**
         * Get completed tasks
         * 
         * @param  array tasks 
         * 
         * @return array       
         */
        getCompleteTask: function getCompleteTask(lists) {
            return lists.tasks.filter(function (task) {
                return task.completed == '1' || task.completed;
            });
        }
    }
});

/***/ }),
/* 159 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__single_list_tasks_vue__ = __webpack_require__(305);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__list_comments_vue__ = __webpack_require__(302);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__new_task_list_form_vue__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__new_task_btn_vue__ = __webpack_require__(175);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_header_vue__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









/* harmony default export */ __webpack_exports__["a"] = ({
    beforeRouteEnter: function beforeRouteEnter(to, from, next) {
        next(function (vm) {});
    },

    /**
     * Initial data for this component
     * 
     * @return obj
     */
    data: function data() {
        return {
            list_id: this.$route.params.list_id,
            //list: {},
            render_tmpl: false,
            task_id: parseInt(this.$route.params.task_id) ? this.$route.params.task_id : false, //for single task popup
            loading: true,
            delete_task_list: __('Delete List', 'pm')

        };
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_5__mixin___default.a],
    watch: {
        '$route': function $route(to, from) {
            if (from.name == 'single_task') {
                this.getIndividualList();
                this.getGlobalMilestones();
            }
        }
    },
    /**
     * Initial action for this component
     * 
     * @return void
     */
    created: function created() {
        this.getIndividualList();
        this.getGlobalMilestones();
        this.$store.state.projectTaskLists.is_single_list = true;
        pmBus.$on('pm_before_destroy_single_task', this.afterDestroySingleTask);
        pmBus.$on('pm_generate_task_url', this.generateTaskUrl);
    },

    computed: {
        /**
         * Get todo lists from vuex store
         * 
         * @return array
         */
        list: function list() {
            if (this.$store.state.projectTaskLists.lists.length) {
                return this.$store.state.projectTaskLists.lists[0];
            }
        },

        /**
         * Get milestones from vuex store
         * 
         * @return array
         */
        milestones: function milestones() {
            return this.$store.state.projectTaskLists.milestones;
        },

        comments: function comments() {
            if (this.$store.state.projectTaskLists.lists.length) {
                return this.$store.state.projectTaskLists.lists[0].comments.data;
            }
        },


        /**
         * Get initial data from vuex store when this component loaded
         * 
         * @return obj
         */
        init: function init() {
            return this.$store.state.projectTaskLists.init;
        }

    },

    methods: {
        generateTaskUrl: function generateTaskUrl(task) {
            var url = this.$router.resolve({
                name: 'single_task',
                params: {
                    task_id: task.id,
                    project_id: task.project_id,
                    list_id: task.task_list.data.id
                }
            }).href;
            var url = PM_Vars.project_page + url;

            //var url = PM_Vars.project_page + '#/projects/' + task.project_id + '/task-lists/' +task.task_list.data.id+ '/tasks/' + task.id; 
            this.copy(url);
        },
        afterTaskDoneUndone: function afterTaskDoneUndone(task) {
            this.$store.commit('projectTaskLists/afterTaskDoneUndone', {
                status: task.status == 'complete' || task.status === true ? 1 : 0,
                task: task,
                list_id: task.task_list.data.id,
                task_id: task.id
            });
        },
        afterDestroySingleTask: function afterDestroySingleTask(task) {

            this.setTaskDefaultData(task);
            this.$store.commit('projectTaskLists/afterUpdateTask', {
                task: task,
                list_id: task.task_list.data.id
            });

            this.$store.commit('projectTaskLists/updateSingleTaskActiveMode', false);
        },
        setTaskDefaultData: function setTaskDefaultData(task) {
            var lists = this.$store.state.projectTaskLists.lists;
            var list_index = this.getIndex(lists, task.task_list.data.id, 'id');

            if (list_index === false) {
                return;
            }

            if (task.status == 'incomplete' || task.status === false) {
                var task_index = this.getIndex(lists[list_index].incomplete_tasks.data, task.id, 'id');

                if (task_index === false) {
                    this.$store.commit('projectTaskLists/afterTaskDoneUndone', {
                        list_id: task.task_list.data.id,
                        task_id: task.id,
                        status: 0
                    });
                } else {
                    var prevTask = lists[list_index].incomplete_tasks.data[task_index];

                    task.sub_task_content = typeof prevTask.sub_task_content == 'undefined' ? false : prevTask.sub_task_content;

                    task.edit_mode = prevTask.edit_mode;
                }
            }

            if (task.status == 'complete' || task.status === true) {
                var task_index = this.getIndex(lists[list_index].complete_tasks.data, task.id, 'id');

                if (task_index === false) {
                    this.$store.commit('projectTaskLists/afterTaskDoneUndone', {
                        list_id: task.task_list.data.id,
                        task_id: task.id,
                        status: 1
                    });
                }
            }
        },


        /**
         * Get todo list for single todo list page
         * 
         * @param  int list_id 
         * 
         * @return void         
         */
        getIndividualList: function getIndividualList() {
            var self = this;
            var args = {
                condition: {
                    with: 'incomplete_tasks,complete_tasks,comments'
                },
                list_id: this.list_id,
                callback: function callback(res) {
                    self.$store.commit('projectTaskLists/setList', res.data);
                    self.loading = false;
                }
            };

            this.getList(args);
        },
        showEditForm: function showEditForm(list) {
            list.edit_mode = list.edit_mode ? false : true;
        },
        deleteSelfList: function deleteSelfList() {
            var args = {
                list_id: this.list_id,
                callback: function callback(res) {
                    this.$router.push({
                        name: 'task_lists',
                        params: {
                            project_id: this.project_id
                        }
                    });
                }
            };

            this.deleteList(args);
        }
    },

    components: {
        'single-list-tasks': __WEBPACK_IMPORTED_MODULE_0__single_list_tasks_vue__["a" /* default */],
        'list-comments': __WEBPACK_IMPORTED_MODULE_1__list_comments_vue__["a" /* default */],
        'new-task-list-form': __WEBPACK_IMPORTED_MODULE_2__new_task_list_form_vue__["default"],
        'new-task-button': __WEBPACK_IMPORTED_MODULE_3__new_task_btn_vue__["a" /* default */],
        'pm-header': __WEBPACK_IMPORTED_MODULE_4__common_header_vue__["default"]
    }
});

/***/ }),
/* 160 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
    mounted: function mounted() {
        pm.NProgress.done();
    }
});

/***/ }),
/* 161 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//


/* harmony default export */ __webpack_exports__["a"] = ({
	created: function created() {
		if ('/' === this.$route.path) {
			this.$router.push({
				name: 'projects'
			});
		}
	},


	watch: {
		'$route': function $route() {
			if ('/' === this.$route.path) {
				this.$router.push({
					name: 'projects'
				});
			}
		}
	}
});

/***/ }),
/* 162 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
    data: function data() {
        return {
            from_email: this.getSettings('from_email', PM_Vars.current_user.data.user_email),
            link_to_backend: this.getSettings('link_to_backend', false),
            email_type: this.getSettings('email_type', 'text/html'),
            enable_bcc: this.getSettings('enable_bcc', false),
            show_spinner: false,
            save_change: __('Save Changes', 'pm')
        };
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
    mounted: function mounted() {
        pm.NProgress.done();
    },
    methods: {
        saveEmailSettings: function saveEmailSettings() {
            this.show_spinner = true;
            self = this;
            var data = {
                from_email: this.from_email,
                link_to_backend: this.link_to_backend,
                email_type: this.email_type,
                enable_bcc: this.enable_bcc
            };

            this.saveSettings(data, '', function (res) {
                self.show_spinner = false;
            });
        }
    }
});

/***/ }),
/* 163 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__mixin__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["a"] = ({
    data: function data() {
        return {
            upload_limit: this.getSettings('upload_limit', 2),
            project_per_page: this.getSettings('project_per_page', 10),
            list_per_page: this.getSettings('list_per_page', 10),
            incomplete_tasks_per_page: this.getSettings('incomplete_tasks_per_page', 10),
            complete_tasks_per_page: this.getSettings('complete_tasks_per_page', 10),
            roles: PM_Vars.roles,
            managing_capability: this.getSettings('managing_capability', []),
            project_create_capability: this.getSettings('project_create_capability', []),
            show_spinner: false,
            save_changes: __('Save Changes', 'pm')
        };
    },

    mixins: [__WEBPACK_IMPORTED_MODULE_0__mixin___default.a],
    mounted: function mounted() {
        pm.NProgress.done();
    },
    methods: {
        saveSelfSettings: function saveSelfSettings() {

            this.show_spinner = true;
            self = this;
            var data = {
                upload_limit: this.upload_limit,
                project_per_page: this.project_per_page,
                list_per_page: this.list_per_page,
                incomplete_tasks_per_page: this.incomplete_tasks_per_page,

                complete_tasks_per_page: this.complete_tasks_per_page,
                managing_capability: this.managing_capability,
                project_create_capability: this.project_create_capability
            };
            data = pm_apply_filters('setting_data', data);

            this.saveSettings(data, false, function (res) {
                res.forEach(function (item) {
                    PM_Vars.settings[item.key] = item.value;
                });
                self.show_spinner = false;
            });
        }
    }
});

/***/ }),
/* 164 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
    beforeRouteEnter: function beforeRouteEnter(to, from, next) {
        next(pmHasManageCapability());
    },
    data: function data() {
        return {};
    }
});

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    methods: {
        getActivities: function getActivities(condition, callback) {
            var self = this,
                condition = self.generateActivityCondition(condition) || '';

            var request = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/activities?' + condition,
                success: function success(res) {
                    if (typeof callback !== 'undefined') {
                        callback(res);
                    }
                    pm.NProgress.done();
                }
            };

            self.httpRequest(request);
        },
        setCurrentPageNumber: function setCurrentPageNumber(self) {
            var current_page_number = self.$route.params.current_page_number ? self.$route.params.current_page_number : 1;
            self.current_page_number = current_page_number;
            return current_page_number;
        },
        generateActivityCondition: function generateActivityCondition(conditions) {
            var query = '';

            jQuery.each(conditions, function (condition, key) {
                query = query + condition + '=' + key + '&';
            });

            return query.slice(0, -1);
        }
    }
};

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    methods: {
        getFiles: function getFiles() {
            var self = this;
            var request = {
                url: self.base_url + '/pm/v2/projects/' + self.project_id + '/files',
                success: function success(res) {
                    self.$store.commit('projectFiles/setFiles', res.data);
                    pm.NProgress.done();
                    self.loading = false;
                }
            };
            self.httpRequest(request);
        }
    }
};

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    methods: {}
};

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(49);
var $export = __webpack_require__(13);
var redefine = __webpack_require__(229);
var hide = __webpack_require__(15);
var Iterators = __webpack_require__(48);
var $iterCreate = __webpack_require__(221);
var setToStringTag = __webpack_require__(169);
var getPrototypeOf = __webpack_require__(227);
var ITERATOR = __webpack_require__(24)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(17).f;
var has = __webpack_require__(14);
var TAG = __webpack_require__(24)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 170 */,
/* 171 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_new_discuss_form_vue__ = __webpack_require__(122);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_759f4007_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_new_discuss_form_vue__ = __webpack_require__(356);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_new_discuss_form_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_759f4007_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_new_discuss_form_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-discussions/new-discuss-form.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-759f4007", Component.options)
  } else {
    hotAPI.reload("data-v-759f4007", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 172 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_create_form_vue__ = __webpack_require__(129);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_96a13b1c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_create_form_vue__ = __webpack_require__(363);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_create_form_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_96a13b1c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_create_form_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/project-create-form.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-96a13b1c", Component.options)
  } else {
    hotAPI.reload("data-v-96a13b1c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 173 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_completed_tasks_vue__ = __webpack_require__(146);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2d43aa2f_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_completed_tasks_vue__ = __webpack_require__(328);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_completed_tasks_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2d43aa2f_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_completed_tasks_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/completed-tasks.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2d43aa2f", Component.options)
  } else {
    hotAPI.reload("data-v-2d43aa2f", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 174 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_incompleted_tasks_vue__ = __webpack_require__(149);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4beba22a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_incompleted_tasks_vue__ = __webpack_require__(339);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_incompleted_tasks_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4beba22a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_incompleted_tasks_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/incompleted-tasks.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4beba22a", Component.options)
  } else {
    hotAPI.reload("data-v-4beba22a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 175 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_new_task_btn_vue__ = __webpack_require__(154);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_cf0884e4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_new_task_btn_vue__ = __webpack_require__(370);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(398)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_new_task_btn_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_cf0884e4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_new_task_btn_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/new-task-btn.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-cf0884e4", Component.options)
  } else {
    hotAPI.reload("data-v-cf0884e4", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 176 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_new_task_list_btn_vue__ = __webpack_require__(156);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8553a32a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_new_task_list_btn_vue__ = __webpack_require__(361);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_new_task_list_btn_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8553a32a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_new_task_list_btn_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/new-task-list-btn.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-8553a32a", Component.options)
  } else {
    hotAPI.reload("data-v-8553a32a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 177 */,
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _router = __webpack_require__(211);

var _router2 = _interopRequireDefault(_router);

var _store = __webpack_require__(213);

var _store2 = _interopRequireDefault(_store);

__webpack_require__(205);

var _mixin = __webpack_require__(27);

var _mixin2 = _interopRequireDefault(_mixin);

var _moduleMixin = __webpack_require__(210);

var _moduleMixin2 = _interopRequireDefault(_moduleMixin);

var _App = __webpack_require__(266);

var _App2 = _interopRequireDefault(_App);

__webpack_require__(207);

var _menuFix = __webpack_require__(209);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

window.pmBus = new pm.Vue();

//promiseReturn.then(function(result) {
/**
 * Project template render
 */
var PM_Vue = {
	el: '#wedevs-pm',
	store: _store2.default,
	router: _router2.default,
	render: function render(t) {
		return t(_App2.default);
	},
	moduleMixins: _moduleMixin2.default
};

pm.Vue.mixin(_mixin2.default);

new pm.Vue(PM_Vue);

// fix the admin menu for the slug "vue-app"
(0, _menuFix.PMmenuFix)('pm_projects');
//});

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _addOns = __webpack_require__(267);

var _addOns2 = _interopRequireDefault(_addOns);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPMRegisterChildrenRoute('project_root', [{
    path: '/add-ons',
    component: _addOns2.default,
    name: 'add-ons'
}]); // const AddOns = resolve => {
//     require.ensure(['./add-ons.vue'], () => {
//         resolve(require('./add-ons.vue'));
//     });
// }

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _calendar = __webpack_require__(268);

var _calendar2 = _interopRequireDefault(_calendar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPMRegisterChildrenRoute('project_root', [{
    path: '/calendar',
    component: _calendar2.default,
    name: 'calendar'
}]); // const Calendar = resolve => {
//     require.ensure(['./calendar.vue'], () => {
//         resolve(require('./calendar.vue'));
//     });
// }

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _categories = __webpack_require__(269);

var _categories2 = _interopRequireDefault(_categories);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPmRegisterModule('projectCategories', 'categories');

// const categories = resolve => {
//     require.ensure(['./categories.vue'], () => {
//         resolve(require('./categories.vue'));
//     });
// }

weDevsPMRegisterChildrenRoute('project_root', [{
    path: '/categories',
    component: _categories2.default,
    name: 'categories',
    meta: {
        permission: function permission(project) {
            return pmHasManageCapability();
        },
        label: 'Categories',
        order: 2
    }
}]);

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

/**
 * Make sure to call pm.Vue.use(Vuex) first if using a vuex module system
 */
exports.default = {

    state: {},
    mutations: {}
};

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _myTasks = __webpack_require__(275);

var _myTasks2 = _interopRequireDefault(_myTasks);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPMRegisterChildrenRoute('project_root', [{
    path: '/my-tasks',
    component: _myTasks2.default,
    name: 'my-tasks'
}]); // const MyTasks = resolve => {
//     require.ensure(['./my-tasks.vue'], () => {
//         resolve(require('./my-tasks.vue'));
//     });
// }

exports.default = _myTasks2.default;

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _progress = __webpack_require__(276);

var _progress2 = _interopRequireDefault(_progress);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPMRegisterChildrenRoute('project_root', [{
    path: '/progress',
    component: _progress2.default,
    name: 'progress'
}]); // const Progress = resolve => {
//     require.ensure(['./progress.vue'], () => {
//         resolve(require('./progress.vue'));
//     });
// }

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _activities = __webpack_require__(277);

var _activities2 = _interopRequireDefault(_activities);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPmRegisterModule('projectActivities', 'project-activities');

// const activities_route = resolve => {
//     require.ensure(['./activities.vue'], () => {
//         resolve(require('./activities.vue'));
//     });
// }

weDevsPMRegisterChildrenRoute('projects', [{
  path: ':project_id/activities/',
  component: _activities2.default,
  name: 'activities',
  children: [{
    path: 'pages/:current_page_number',
    component: _activities2.default,
    name: 'activities_pagination'
  }]
}]);

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

/**
 * Make sure to call pm.Vue.use(Vuex) first if using a vuex module system
 */
exports.default = {

    state: {
        activities: [],
        isActivityFetched: false,
        getIndex: function getIndex(itemList, id, slug) {
            var index = false;

            itemList.forEach(function (item, key) {
                if (item[slug] == id) {
                    index = key;
                }
            });

            return index;
        }
    },

    mutations: {
        setActivities: function setActivities(state, activities) {
            var index = state.getIndex(state.activities, activities.project_id, 'project_id');

            if (index === false) {
                var activity = {
                    activities: activities.data,
                    project_id: activities.project_id,
                    page: 1
                };

                state.activities.push(activity);
            } else {
                var prevData = state.activities[index];
                var page = prevData.page;

                if (activities.loadStatus) {
                    state.activities[index].activities = state.activities[index].activities.concat(activities.data);
                    state.activities[index].page = parseInt(state.activities[index].page) + 1;
                } else {
                    var activity = {
                        activities: activities.data,
                        project_id: activities.project_id,
                        page: 1
                    };
                    state.activities.splice(index, 1, activity);
                }
            }

            state.isActivityFetched = true;
        }
    }
};

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _discussions = __webpack_require__(279);

var _discussions2 = _interopRequireDefault(_discussions);

var _individualDiscussions = __webpack_require__(280);

var _individualDiscussions2 = _interopRequireDefault(_individualDiscussions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPmRegisterModule('projectDiscussions', 'project-discussions');

// const discussions_route = resolve => {
//     require.ensure(['./discussions.vue'], () => {
//         resolve(require('./discussions.vue'));
//     });
// }

// const individual_discussion = resolve => {
//     require.ensure(['./individual-discussions.vue'], () => {
//         resolve(require('./individual-discussions.vue'));
//     });
// }

weDevsPMRegisterChildrenRoute('projects', [{
    path: ':project_id/discussions/',
    component: _discussions2.default,
    name: 'discussions',

    children: [{
        path: 'pages/:current_page_number',
        component: _discussions2.default,
        name: 'discussion_pagination'
    }]
}]);

weDevsPMRegisterChildrenRoute('projects', [{
    path: ':project_id/discussions/:discussion_id',
    component: _individualDiscussions2.default,
    name: 'individual_discussions'
}]);

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

/**
 * Make sure to call pm.Vue.use(Vuex) first if using a vuex module system
 */
exports.default = {

    state: {
        isFetchDiscussion: false,
        is_discuss_form_active: false,
        blank_template: false,
        discuss_template: false,
        discussion: [],
        discuss: {},
        meta: {},
        getIndex: function getIndex(itemList, id, slug) {
            var index = false;

            itemList.forEach(function (item, key) {
                if (item[slug] == id) {
                    index = key;
                }
            });

            return index;
        }
    },

    mutations: {
        showHideDiscussForm: function showHideDiscussForm(state, status) {
            if (status === 'toggle') {
                state.is_discuss_form_active = state.is_discuss_form_active ? false : true;
            } else {
                state.is_discuss_form_active = status;
            }
        },
        setMilestones: function setMilestones(state, milestones) {
            state.milestones = milestones;
        },
        setDiscussion: function setDiscussion(state, discussion) {
            state.discussion = discussion;
            state.isFetchDiscussion = true;
        },
        setDiscuss: function setDiscuss(state, discuss) {
            state.discussion = [];
            state.discussion.push(discuss);
        },
        afterDeleteDiscuss: function afterDeleteDiscuss(state, discuss_id) {
            var discuss_index = state.getIndex(state.discussion, discuss_id, 'id');
            state.discussion.splice(discuss_index, 1);
        },
        setDiscussionMeta: function setDiscussionMeta(state, meta) {
            state.meta = meta;
        },
        afterDeleteComment: function afterDeleteComment(state, data) {
            var comment_index = state.getIndex(state.discussion[0].comments.data, data.comment_id, 'id');
            state.discussion[0].comments.data.splice(comment_index, 1);
        },
        updateDiscuss: function updateDiscuss(state, data) {
            var discuss_index = state.getIndex(state.discussion, data.id, 'id');
            jQuery.extend(true, state.discussion[discuss_index], data);
            //state.discussion.splice(discuss_index, 1, data);
        },
        newDiscuss: function newDiscuss(state, discuss) {
            var per_page = state.meta.pagination.per_page,
                length = state.discussion.length;

            if (per_page <= length) {
                state.discussion.splice(0, 0, discuss);
                state.discussion.pop();
            } else {
                state.discussion.splice(0, 0, discuss);
            }
        },
        balankTemplateStatus: function balankTemplateStatus(state, status) {
            state.blank_template = status;
        },
        discussTemplateStatus: function discussTemplateStatus(state, status) {
            state.discuss_template = status;
        },
        updateMetaAfterNewDiscussion: function updateMetaAfterNewDiscussion(state) {
            state.meta.pagination.total = state.meta.pagination.total + 1;
            state.meta.pagination.total_pages = Math.ceil(state.meta.pagination.total / state.meta.pagination.per_page);
        },
        afterNewComment: function afterNewComment(state, data) {
            var index = state.getIndex(state.discussion, data.commentable_id, 'id');

            state.discussion[index].comments.data.push(data.comment);
        },
        afterUpdateComment: function afterUpdateComment(state, data) {
            var index = state.getIndex(state.discussion, data.commentable_id, 'id'),
                comment_index = state.getIndex(state.discussion[index].comments.data, data.comment_id, 'id');

            state.discussion[index].comments.data.splice(comment_index, 1, data.comment);
        },
        updatePrivacy: function updatePrivacy(state, data) {
            var index = state.getIndex(state.discussion, data.discuss_id, 'id');
            state.discussion[index].meta.privacy = data.privacy;
        }
    }
};

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _files = __webpack_require__(281);

var _files2 = _interopRequireDefault(_files);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// const files = resolve => {
//     require.ensure(['./files.vue'], () => {
//         resolve(require('./files.vue'));
//     });
// }

weDevsPmRegisterModule('projectFiles', 'project-files');

weDevsPMRegisterChildrenRoute('projects', [{
    path: ':project_id/files',
    component: _files2.default,
    name: 'pm_files',
    children: wedevsPMGetRegisterChildrenRoute('pm_files')
}]);

// export default { 
//     path: ':project_id/files', 
//     component: index,
//     name: 'pm_files',
//     children: wedevsPMGetRegisterChildrenRoute('pm_files')
// }
//

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    state: {
        files: []
    },
    mutations: {
        setFiles: function setFiles(state, files) {
            state.files = files;
        }
    }
};

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Project = {
    coWorkerSearch: function coWorkerSearch(el, binding, vnode) {

        var $ = jQuery;
        var pm_abort;
        var context = vnode.context;

        $(".pm-project-coworker").autocomplete({
            minLength: 3,

            source: function source(request, response) {
                var args = {
                    conditions: {
                        query: request.term
                    },
                    callback: function callback(res) {
                        if (res.data.length) {
                            response(res.data);
                        } else {
                            response({
                                value: '0'
                            });
                        }
                    }
                };

                if (pm_abort) {
                    pm_abort.abort();
                }
                pm_abort = context.get_search_user(args);
            },

            search: function search() {
                $(this).addClass('pm-spinner');
            },

            open: function open() {
                var self = $(this);
                self.autocomplete('widget').css('z-index', 999999);
                self.removeClass('pm-spinner');
                return false;
            },

            select: function select(event, ui) {
                if (ui.item.value === '0') {
                    $("form.pm-user-create-form").find('input[type=text]').val('');
                    $("#pm-create-user-wrap").dialog("open");
                } else {

                    var has_user = context.selectedUsers.find(function (user) {
                        return ui.item.id === user.id ? true : false;
                    });

                    if (!has_user) {
                        context.addUserMeta(ui.item);
                        // context.$root.$store.commit(
                        //     'setNewUser',
                        //     {
                        //         project_id: context.project_id,
                        //         user: ui.item
                        //     }
                        // );
                        context.$root.$store.commit('updateSeletedUser', ui.item);
                    }

                    $('.pm-project-role>table').append(ui.item._user_meta);
                    $("input.pm-project-coworker").val('');
                }
                return false;
            }

        }).data("ui-autocomplete")._renderItem = function (ul, item) {
            var no_user = context.__('No users found.', 'pm'),
                create_new_user = context.__('Create a new user', 'pm');
            if (item.email) {
                return $("<li>").append('<a>' + item.display_name + '</a>').appendTo(ul);
            } else {
                return $("<li>").append('<a><div class="no-user-wrap"><p>' + no_user + '</p> <span class="button-primary">' + create_new_user + '</span></div></a>').appendTo(ul);
            }
        };
    }

    // Register a global custom directive called v-pm-popup-box
};pm.Vue.directive('pm-users', {
    inserted: function inserted(el, binding, vnode) {
        Project.coWorkerSearch(el, binding, vnode);
    }
});
var dilogbox = false;
// Register a global custom directive called v-pm-popup-box
pm.Vue.directive('pm-popup-box', {
    inserted: function inserted(el, buinding, vnode) {

        if (dilogbox !== false && typeof dilogbox.dialog("instance") != 'undefined') {
            dilogbox.dialog("destroy");
        }
        dilogbox = jQuery(el).dialog({
            autoOpen: false,
            modal: true,
            dialogClass: 'pm-ui-dialog',
            width: 485,
            height: 'auto',
            position: ['middle', 100]
        });
    }
});

// Register a global custom directive called v-pm-popup-box
pm.Vue.directive('pm-user-create-popup-box', {

    inserted: function inserted(el) {
        jQuery(function ($) {
            $(el).dialog({
                autoOpen: false,
                modal: true,
                dialogClass: 'pm-ui-dialog pm-user-ui-dialog',
                width: 400,
                height: 'auto',
                position: ['middle', 100]
            });
        });
    }
});

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _router = __webpack_require__(197);

var _router2 = _interopRequireDefault(_router);

var _router3 = __webpack_require__(185);

var _router4 = _interopRequireDefault(_router3);

var _router5 = __webpack_require__(189);

var _router6 = _interopRequireDefault(_router5);

var _router7 = __webpack_require__(200);

var _router8 = __webpack_require__(187);

var _router9 = __webpack_require__(194);

var _empty = __webpack_require__(285);

var _empty2 = _interopRequireDefault(_empty);

var _activeProjects = __webpack_require__(282);

var _activeProjects2 = _interopRequireDefault(_activeProjects);

var _allProjects = __webpack_require__(283);

var _allProjects2 = _interopRequireDefault(_allProjects);

var _completedProjects = __webpack_require__(284);

var _completedProjects2 = _interopRequireDefault(_completedProjects);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPmRegisterModule('projectLists', 'project-lists');

// const empty = resolve => {
//     require.ensure(['./empty.vue'], () => {
//         resolve(require('./empty.vue'));
//     });
// }

// const project_lists = resolve => {
//     require.ensure(['./active-projects.vue'], () => {
//         resolve(require('./active-projects.vue'));
//     });
// }

// const all_projects = resolve => {
//     require.ensure(['./all-projects.vue'], () => {
//         resolve(require('./all-projects.vue'));
//     });
// }

// const completed_projects = resolve => {
//     require.ensure(['./completed-projects.vue'], () => {
//         resolve(require('./completed-projects.vue'));
//     });
// }

weDevsPMRegisterChildrenRoute('projects', [{
    path: 'active',
    component: _activeProjects2.default,
    name: 'project_lists',
    meta: {
        label: 'Projects',
        order: 1
    },
    children: [{
        path: 'pages/:current_page_number',
        component: _activeProjects2.default,
        name: 'project_pagination'
    }]
}, {
    path: 'all',
    component: _allProjects2.default,
    name: 'all_projects',

    children: [{
        path: 'pages/:current_page_number',
        component: _allProjects2.default,
        name: 'all_project_pagination'
    }]
}, {
    path: 'completed',
    component: _completedProjects2.default,
    name: 'completed_projects',

    children: [{
        path: 'pages/:current_page_number',
        component: _completedProjects2.default,
        name: 'completed_project_pagination'
    }]
}]);

weDevsPMRegisterChildrenRoute('project_root', [{
    path: 'projects',
    component: _empty2.default,
    name: 'projects',
    children: wedevsPMGetRegisterChildrenRoute('projects')

    // children: 
    // [
    //     {
    //         path: '', 
    //         component: project_lists,
    //         name: 'project_lists',
    //         children: [
    //             {
    //                 path: 'pages/:current_page_number', 
    //                 component: project_lists,
    //                 name: 'project_pagination',
    //             },
    //         ]
    //     },

    //     {
    //         path: 'all', 
    //         component: all_projects,
    //         name: 'all_projects',

    //         children: [
    //             {
    //                 path: 'pages/:current_page_number', 
    //                 component: all_projects,
    //                 name: 'all_project_pagination',
    //             },
    //         ]
    //     },

    //     {
    //         path: 'completed', 
    //         component: completed_projects,
    //         name: 'completed_projects',

    //         children: [
    //             {
    //                 path: 'pages/:current_page_number', 
    //                 component: completed_projects,
    //                 name: 'completed_project_pagination',
    //             },
    //         ]
    //     },

    // ]
}]);

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

/**
 * Make sure to call pm.Vue.use(Vuex) first if using a vuex module system
 */
var Store = {
    state: {

        projects: [],
        project: {},
        project_users: [],
        categories: [],
        roles: [],
        milestones: [],
        milestones_load: false,
        is_project_form_active: false,
        projects_meta: {},
        pagination: {
            total_pages: 0
        },
        assignees: [],
        isFetchProjects: false,

        projects_view: 'grid_view',
        getIndex: function getIndex(itemList, id, slug) {
            var index = false;

            itemList.forEach(function (item, key) {
                if (item[slug] == id) {
                    index = key;
                }
            });

            return index;
        }
    },

    mutations: {
        setProjects: function setProjects(state, projects) {
            state.projects = projects.projects;
        },
        setProject: function setProject(state, project) {
            state.projects.push(project);
        },
        setProjectUsers: function setProjectUsers(state, users) {
            state.project_users = users;
        },
        setCategories: function setCategories(state, categories) {
            state.categories = categories;
        },
        setRoles: function setRoles(state, roles) {
            state.roles = roles;
        },
        newProject: function newProject(state, projects) {
            var per_page = state.pagination.per_page,
                length = state.projects.length;

            if (per_page <= length) {
                state.projects.splice(0, 0, projects);
                state.projects.pop();
            } else {
                state.projects.splice(0, 0, projects);
            }

            //update pagination
            state.pagination.total = state.pagination.total + 1;
            state.projects_meta.total_incomplete = state.projects_meta.total_incomplete + 1;
            state.pagination.total_pages = Math.ceil(state.pagination.total / state.pagination.per_page);
        },
        showHideProjectForm: function showHideProjectForm(state, status) {
            if (status === 'toggle') {
                state.is_project_form_active = state.is_project_form_active ? false : true;
            } else {
                state.is_project_form_active = status;
            }
        },
        setProjectsMeta: function setProjectsMeta(state, data) {
            state.projects_meta = data;
            state.pagination = data.pagination;
        },
        afterDeleteProject: function afterDeleteProject(state, project_id) {
            var project_index = state.getIndex(state.projects, project_id, 'id');
            state.projects.splice(project_index, 1);
        },
        updateProject: function updateProject(state, project) {
            var index = state.getIndex(state.projects, project.id, 'id');
            jQuery.extend(true, state.projects[index], project);
        },
        showHideProjectDropDownAction: function showHideProjectDropDownAction(state, data) {
            var index = state.getIndex(state.projects, data.project_id, 'id');

            if (data.status === 'toggle') {
                state.projects[index].settings_hide = state.projects[index].settings_hide ? false : true;
            } else {
                state.projects[index].settings_hide = data.status;
            }
        },
        afterDeleteUserFromProject: function afterDeleteUserFromProject(state, data) {
            var index = state.getIndex(state.projects, data.project_id, 'id');
            var users = state.projects[index].assignees.data;
            var user_index = state.getIndex(users, data.user_id, 'id');

            state.projects[index].assignees.data.splice(user_index, 1);
        },
        updateSeletedUser: function updateSeletedUser(state, assignees) {
            state.assignees.push(assignees);
        },
        setSeletedUser: function setSeletedUser(state, assignees) {
            state.assignees = assignees;
        },
        resetSelectedUsers: function resetSelectedUsers(state) {
            state.assignees = [];
        },
        setMilestones: function setMilestones(state, milestones) {
            state.milestones = milestones;
            state.milestones_load = true;
        },
        setProjectsView: function setProjectsView(state, value) {
            state.projects_view = value;
        },
        projectFetchComplete: function projectFetchComplete(state, status) {
            state.isFetchProjects = status;
        },
        clearProjectForm: function clearProjectForm(state) {
            state.project = {};
        }
    }
};

exports.default = Store; //new pm.Vuex.Store(Store);

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _milestones = __webpack_require__(296);

var _milestones2 = _interopRequireDefault(_milestones);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPmRegisterModule('projectMilestones', 'project-milestones');

// const milestones_route = resolve => {
//     require.ensure(['./milestones.vue'], () => {
//         resolve(require('./milestones.vue'));
//     });
// }

weDevsPMRegisterChildrenRoute('projects', [{
    path: ':project_id/milestones/',
    component: _milestones2.default,
    name: 'milestones',

    children: [{
        path: 'pages/:current_page_number',
        component: _milestones2.default,
        name: 'milestone_pagination'
    }]
}]);

// var milestones = {
//     path: '/:project_id/milestones/', 
//     components: { 
//         'milestones': milestones_route 
//     }, 
//     name: 'milestones',

//     children: [
//         {
//             path: 'pages/:current_page_number', 
//             components: { 
//                 'milestones': milestones_route
//             }, 
//             name: 'milestone_pagination',
//         },
//     ]
// }

// export { milestones };

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

/**
 * Make sure to call  first if using a vuex module system
 */
exports.default = {

    state: {
        isFetchMilestone: false,
        is_milestone_form_active: false,
        milestones: [],
        milestone: {},
        blank_template: false,
        milestone_template: false,
        milestone_meta: {},
        getIndex: function getIndex(itemList, id, slug) {
            var index = false;

            itemList.forEach(function (item, key) {
                if (item[slug] == id) {
                    index = key;
                }
            });

            return index;
        }
    },

    mutations: {
        showHideMilestoneForm: function showHideMilestoneForm(state, status) {
            if (status === 'toggle') {
                state.is_milestone_form_active = state.is_milestone_form_active ? false : true;
            } else {
                state.is_milestone_form_active = status;
            }
        },
        setMilestones: function setMilestones(state, milestones) {
            state.milestones = milestones;
            state.isFetchMilestone = true;
            state.blank_template = false;
        },
        setMilestonesMeta: function setMilestonesMeta(state, data) {
            state.milestone_meta = data;
        },
        setMilestone: function setMilestone(state, milestone) {
            state.milestones = [];
            state.milestones.push(milestone);
        },
        afterDeleteMilestone: function afterDeleteMilestone(state, milestone_id) {
            var milestone_index = state.getIndex(state.milestones, milestone_id, 'id');
            state.milestones.splice(milestone_index, 1);
            state.milestone_meta.total = state.milestone_meta.total - 1;
        },
        updateMilestone: function updateMilestone(state, data) {
            var milestone_index = state.getIndex(state.milestones, data.id, 'id');
            jQuery.extend(true, state.milestones[milestone_index], data);
            //state.milestones.splice(milestone_index, 1,);
        },
        newMilestone: function newMilestone(state, milestone) {
            var per_page = state.milestone_meta.per_page,
                length = state.milestones.length;

            if (typeof milestone.discussion_boards === 'undefined') {
                milestone.discussion_boards = { data: [] };
            }

            if (typeof milestone.task_lists === 'undefined') {
                milestone.task_lists = { data: [] };
            }

            if (per_page <= length) {
                state.milestones.splice(0, 0, milestone);
                state.milestones.pop();
            } else {
                state.milestones.splice(0, 0, milestone);
            }
        },
        afterNewMilestoneUpdateMeta: function afterNewMilestoneUpdateMeta(state) {
            state.milestone_meta.total = state.milestone_meta.total + 1;
            state.milestone_meta.total_pages = Math.ceil(state.milestone_meta.total / state.milestone_meta.per_page);
        },
        balankTemplateStatus: function balankTemplateStatus(state, status) {
            state.blank_template = status;
        },
        milestoneTemplateStatus: function milestoneTemplateStatus(state, status) {
            state.milestone_template = status;
        },
        updateMetaAfterNewDiscussion: function updateMetaAfterNewDiscussion(state) {
            state.meta.total = state.meta.total + 1;
            state.meta.total_pages = Math.ceil(state.meta.total / state.meta.per_page);
        },
        updateMilestonePrivacy: function updateMilestonePrivacy(state, data) {
            var index = state.getIndex(state.milestones, data.milestone_id, 'id');
            state.milestones[index].meta.privacy = data.privacy;
        },
        fetchMilestoneStatus: function fetchMilestoneStatus(state, status) {
            state.isFetchMilestone = status;
        }
    }
};

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Required jQuery methods 
 * 
 * @type Object
 */
var PM_Overview = {
    chart: function chart(el, binding, vnode) {
        var activity = vnode.context.__('Activity', 'pm'),
            Task = vnode.context.__('Task', 'pm');
        var data = {
            labels: PM_Overview.getLabels(vnode.context), //["Oct 05", "Oct 09", "Oct 15"],
            datasets: [{
                label: activity,
                fillColor: "rgba(120,200, 223, 0.4)",
                strokeColor: "#79C7DF",
                pointColor: "#79C7DF",
                pointStrokeColor: "#79C7DF",
                pointHighlightFill: "#79C7DF",
                pointHighlightStroke: "#79C7DF",
                data: PM_Overview.getActivities(vnode.context),
                backgroundColor: "rgba(120,200, 223, 0.4)"
            }, {
                label: Task,
                fillColor: "rgba(185, 114, 182,0.5)",
                strokeColor: "#B972B6",
                pointColor: "#B972B6",
                pointStrokeColor: "#B972B6",
                pointHighlightFill: "#B972B6",
                pointHighlightStroke: "rgba(151,187,205,1)",
                data: PM_Overview.getTasks(vnode.context),
                backgroundColor: "rgba(185, 114, 182,0.5)"
            }]
        };

        Chart.defaults.global.responsive = true;
        var ctx = el.getContext("2d");
        // This will get the first returned node in the jQuery collection.
        var pmChart = new pm.Chart(ctx, {
            type: 'line',
            data: data,
            pointDotRadius: 8,
            animationSteps: 60,
            tooltipTemplate: "<%= labels + sss %>%",
            animationEasing: "easeOutQuart"
        });
    },

    getLabels: function getLabels(self) {
        var labels = [],
            graph_data = self.graph;

        graph_data.map(function (graph) {
            var date = PM_Overview.labelDateFormat(graph.date_time.date);
            labels.push(date);
        });

        return labels;
    },

    labelDateFormat: function labelDateFormat(date) {
        date = new Date(date);
        return pm.Moment(date).format('MMM DD');
    },

    getActivities: function getActivities(self) {
        var activities = self.graph;
        var set_activities = [];

        activities.map(function (activity) {
            set_activities.push(activity.activities);
        });

        return set_activities;
    },

    getTasks: function getTasks(self) {
        var tasks = self.graph;
        var set_tasks = [];

        tasks.map(function (task) {
            set_tasks.push(task.tasks);
        });

        return set_tasks;
    }

    // Register a global custom directive called v-pm-sortable
};pm.Vue.directive('pm-overview-chart', {
    inserted: function inserted(el, binding, vnode) {
        PM_Overview.chart(el, binding, vnode);
    }
});

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _overview = __webpack_require__(298);

var _overview2 = _interopRequireDefault(_overview);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPmRegisterModule('projectOverview', 'project-overview');
// const overview = resolve => {
//     require.ensure(['./overview.vue'], () => {
//         resolve(require('./overview.vue'));
//     });
// }

weDevsPMRegisterChildrenRoute('projects', [{
    path: ':project_id/overview',
    component: _overview2.default,
    name: 'pm_overview'
}]);

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

/**
 * Make sure to call pm.Vue.use(Vuex) first if using a vuex module system
 */
exports.default = {

    state: {
        meta: {},
        assignees: [],
        graph: [],
        fetchOverview: false,
        getIndex: function getIndex(itemList, id, slug) {
            var index = false;

            itemList.forEach(function (item, key) {
                if (item[slug] == id) {
                    index = key;
                }
            });

            return index;
        }
    },

    mutations: {
        setOverViews: function setOverViews(state, over_views) {
            state.meta = over_views.meta.data;
            state.assignees = over_views.assignees.data;
            state.graph = over_views.overview_graph.data;
            state.fetchOverview = true;
        }
    }
};

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Required jQuery methods 
 * 
 * @type Object
 */
var PM_Task = {
    init: function init() {
        this.datepicker();
        this.sortable();
    },

    sortable: function sortable(el, binding, vnode) {
        var $ = jQuery;
        var component = vnode.context;

        $(el).sortable({
            cancel: '.nonsortable,form',
            placeholder: "ui-state-highlight",
            update: function update(event, ui) {
                var newOrder = {},
                    orders = [],
                    ids = [],
                    send_data = [];

                // finding new order sequence and old orders
                $(this).find('li.pm-todo').each(function (e) {
                    var order = $(this).data('order'),
                        task_id = $(this).data('id');

                    orders.push(order);
                    ids.push(task_id);

                    var task_index = component.getIndex(component.list.incomplete_tasks.data, task_id, 'id');

                    if (task_index !== false && typeof component.list.incomplete_tasks !== 'undefined') {
                        component.list.incomplete_tasks.data[task_index].order = order;
                    }

                    if (task_index === false) {
                        var task_index = component.getIndex(component.list.complete_tasks.data, task_id, 'id');

                        if (task_index !== false && typeof component.list.complete_tasks !== 'undefined') {
                            component.list.complete_tasks.data[task_index].order = order;
                        }
                    }
                });

                var after_revers_order = orders.sort(),
                    after_revers_order = after_revers_order.reverse();

                after_revers_order.forEach(function (order, key) {
                    send_data.push({
                        id: ids[key],
                        order: order
                    });
                });

                var data = {
                    task_orders: send_data,
                    board_id: component.list.id,
                    board_type: 'task_list'
                };
                component.taskOrder(data);
            }
        });
    },

    datepicker: function datepicker(el, binding, vnode) {
        var $ = jQuery;
        $('.pm-date-field').datepicker({
            dateFormat: 'yy-mm-dd',
            changeMonth: true,
            changeYear: true,
            yearRange: '-50:+5',
            onSelect: function onSelect(dateText) {
                vnode.context.$root.$emit('pm_date_picker', { field: 'datepicker', date: dateText });
            }
        });

        $(".pm-date-picker-from").datepicker({
            dateFormat: 'yy-mm-dd',
            changeYear: true,
            changeMonth: true,
            numberOfMonths: 1,
            onClose: function onClose(selectedDate) {
                $(".pm-date-picker-to").datepicker("option", "minDate", selectedDate);
            },
            onSelect: function onSelect(dateText) {
                vnode.context.$root.$emit('pm_date_picker', { field: 'datepicker_from', date: dateText, self: this });
            }
        });

        $(".pm-date-picker-to").datepicker({
            dateFormat: 'yy-mm-dd',
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            onClose: function onClose(selectedDate) {
                $(".pm-date-picker-from").datepicker("option", "maxDate", selectedDate);
            },
            onSelect: function onSelect(dateText) {
                vnode.context.$root.$emit('pm_date_picker', { field: 'datepicker_to', date: dateText });
            }
        });

        $(".pm-date-time-picker-from").datepicker({
            dateFormat: 'yy-mm-dd',
            changeYear: true,
            changeMonth: true,
            numberOfMonths: 1,
            onClose: function onClose(selectedDate) {
                $(".pm-date-time-picker-to").datepicker("option", "minDate", selectedDate);
            },
            onSelect: function onSelect(dateText) {}
        });

        $(".pm-date-time-picker-to").datepicker({
            dateFormat: 'yy-mm-dd',
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            onClose: function onClose(selectedDate) {
                $(".pm-date-time-picker-from").datepicker("option", "maxDate", selectedDate);
            },
            onSelect: function onSelect(dateText) {}
        });
    },

    disableLineBreak: function disableLineBreak(element) {
        jQuery(element).on('keypress', function (e) {
            if (e.keyCode == 13 && !e.shiftKey) {
                e.preventDefault();
            }
        });
    }

    //Register a global custom directive called v-pm-datepicker
};pm.Vue.directive('pm-datepicker', {
    inserted: function inserted(el, binding, vnode) {
        PM_Task.datepicker(el, binding, vnode);
    }
});

// Register a global custom directive called v-pm-sortable
pm.Vue.directive('pm-sortable', {
    inserted: function inserted(el, binding, vnode) {
        PM_Task.sortable(el, binding, vnode);
    }
});

// Register a global custom directive called v-pm-sortable
pm.Vue.directive('pm-tiptip', {

    update: function update() {
        jQuery('.pm-tiptip').tipTip();
    }
});

// Register a global custom directive called v-pm-sortable
pm.Vue.directive('prevent-line-break', {

    inserted: function inserted(element) {
        PM_Task.disableLineBreak(element);
    }
});

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _directive = __webpack_require__(199);

var _directive2 = _interopRequireDefault(_directive);

var _lists = __webpack_require__(304);

var _lists2 = _interopRequireDefault(_lists);

var _singleList = __webpack_require__(306);

var _singleList2 = _interopRequireDefault(_singleList);

var _singleTask = __webpack_require__(55);

var _singleTask2 = _interopRequireDefault(_singleTask);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPmRegisterModule('projectTaskLists', 'project-task-lists');

// const task_lists_route = resolve => {
//     require.ensure(['./lists.vue'], () => {
//         resolve(require('./lists.vue'));
//     });
// }

// const single_list_route = resolve => {
//     require.ensure(['./single-list.vue'], () => {
//         resolve(require('./single-list.vue'));
//     });
// }

// const single_task_route = resolve => {
//     require.ensure(['./single-task.vue'], () => {
//         resolve(require('./single-task.vue'));
//     });
// }

weDevsPMRegisterChildrenRoute('projects', [{
    path: ':project_id/task-lists/',
    component: _lists2.default,
    name: 'task_lists',

    children: [{
        path: 'tasks/:task_id',
        components: {
            'single-task': _singleTask2.default
        },
        name: 'lists_single_task'
    }, {
        path: 'pages/:current_page_number',
        component: _lists2.default,
        name: 'list_pagination'
    }]
}]);

weDevsPMRegisterChildrenRoute('projects', [{
    path: ':project_id/task-lists/:list_id',
    component: _singleList2.default,
    name: 'single_list',

    children: [{
        path: 'tasks/:task_id',
        components: {
            'single-task': _singleTask2.default
        },
        name: 'single_task'
    }]
}]);

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

/**
 * Make sure to call pm.Vue.use(Vuex) first if using a vuex module system
 */
exports.default = {
    /**
     * Assign global property
     * 
     * @type Object
     */
    state: {
        isListFetch: false,
        lists: [],
        list: {},
        list_comments: [],
        lists_meta: {},
        init: {},
        balankTemplateStatus: false,
        listTemplateStatus: false,
        is_single_list: true,
        project_users: [],
        loading: true,
        is_active_list_form: false,
        project_id: false,
        permissions: {
            create_todolist: true
        },
        task: {},
        is_single_task: false,
        add_filter: {},
        todo_list_per_page: 5,
        get_current_user_id: 1,
        active_mode: 'list',
        inline_task_users: [],
        inline_task_start_date: '',
        inline_task_end_date: '',
        inline_task_description: '',
        inline_todo_list_id: 0,
        inline_display: {
            users: false,
            start: false,
            end: false,
            lists: false,
            description: false
        },
        total_list_page: 0,
        getIndex: function getIndex(itemList, id, slug) {
            var index = false;

            itemList.forEach(function (item, key) {
                if (item[slug] == id) {
                    index = key;
                }
            });

            return index;
        }
    },

    /**
     * Change any global property from here
     */
    mutations: {

        /**
         * Store todo lists page initial property
         * 
         * @param object state     
         * @param object task_init 
         *
         * @return void
         */
        setTaskInitData: function setTaskInitData(state, task_init) {
            state.lists = [];
            state.list_total = 0;
            state.milestones = [];
            state.init = {};
            state.project_users = [];
            state.permissions = {};

            state.loading = true;
            state.is_single_list = false, pm.Vue.nextTick(function () {
                state.lists = task_init.data.lists;
                state.milestones = task_init.data.milestones;
                state.init = task_init.data;
                state.project_users = task_init.data.project_users;
                state.permissions = task_init.data.permissions;
                // state.list_total    = task_init.data.list_total;
                // state.todo_list_per_page = task_init.data.todo_list_per_page;
                //state.active_mode = task_init.data.active_mode;
                state.loading = false;
                state.is_single_list = false;
            });
        },

        loadingEffect: function loadingEffect(state, loading_status) {
            state.loading = loading_status;
        },

        /**
         * New todo list form showing or hiding
         * 
         * @param  object state 
         * 
         * @return void       
         */
        newTodoListForm: function newTodoListForm(state) {
            state.show_list_form = state.show_list_form ? false : true;;
        },

        /**
         * Update todo list form showing or hiding
         * 
         * @param  object state 
         * @param  object list  
         * 
         * @return void       
         */
        showHideUpdatelistForm: function showHideUpdatelistForm(state, list) {
            state.lists[list.list_index].edit_mode = state.lists[list.list_index].edit_mode ? false : true;
        },

        /**
         * Showing and hiding task insert and edit form
         * 
         * @param  object state 
         * @param  int index 
         * 
         * @return void       
         */
        showHideTaskForm: function showHideTaskForm(state, index) {

            if (typeof index.task_index == 'undefined' || index.task_index === false) {
                state.lists[index.list_index].show_task_form = state.lists[index.list_index].show_task_form ? false : true;
            } else {
                state.lists[index.list_index].tasks[index.task_index].edit_mode = state.lists[index.list_index].tasks[index.task_index].edit_mode ? false : true;
            }
        },

        /**
         * Update state lists property after insert new todo list or update todo list
         * 
         * @param  object state 
         * @param  object res   
         * 
         * @return void       
         */
        update_todo_list: function update_todo_list(state, res) {

            if (res.is_update) {
                state.lists.splice(res.index, 1);
                state.lists.splice(res.index, 0, res.res_list);
            } else {
                state.lists.splice(0, 0, res.res_list);
            }
        },

        /**
         * Insert new task to state lists.tasks property. 
         *  
         * @param  object state 
         * @param  object data  
         * 
         * @return void
         */
        afterUpdateTask: function afterUpdateTask(state, data) {

            var list_index = state.getIndex(state.lists, data.list_id, 'id');

            if (list_index === false) {
                return;
            }

            if (data.task.status === 'incomplete' || data.task.status === false) {
                var task_index = state.getIndex(state.lists[list_index].incomplete_tasks.data, data.task.id, 'id');

                state.lists[list_index].incomplete_tasks.data.splice(task_index, 1, data.task);
            }

            if (data.task.status === 'complete' || data.task.status === true) {
                var task_index = state.getIndex(state.lists[list_index].complete_tasks.data, data.task.id, 'id');

                state.lists[list_index].complete_tasks.data.splice(task_index, 1, data.task);
            }
        },

        afterNewTask: function afterNewTask(state, data) {
            var list_index = state.getIndex(state.lists, data.list_id, 'id');

            if (list_index === false) {
                return false;
            }

            if (data.task.status === 'incomplete' || data.task.status === false) {

                if (typeof state.lists[list_index].incomplete_tasks !== 'undefined') {

                    if (typeof data.task.task_list === 'undefined') {
                        data.task.task_list = {
                            data: data.list
                        };
                    }
                    state.lists[list_index].incomplete_tasks.data.splice(0, 0, data.task);
                } else {
                    state.lists[list_index].incomplete_tasks = { data: data.task };
                }
            }

            state.lists[list_index].meta.total_incomplete_tasks = state.lists[list_index].meta.total_incomplete_tasks + 1;
        },


        /**
         * When goto single todo list page. Empty the state lists array and insert single todo list. 
         * 
         * @param  object state 
         * @param  object data  
         * 
         * @return void       
         */
        update_todo_list_single: function update_todo_list_single(state, data) {

            state.lists = [];
            state.milestones = [];
            state.project_users = [];

            pm.Vue.nextTick(function () {
                state.lists.push(data.list);
                state.milestones = data.milestones;
                state.project_users = data.project_users;
                state.permissions = data.permissions;
                state.is_single_list = true;
            });
        },

        /**
         * Make single task complete and incomplete
         * 
         * @param  object state 
         * @param  object data  
         * 
         * @return void        
         */
        afterTaskDoneUndone: function afterTaskDoneUndone(state, data) {
            var list_index = state.getIndex(state.lists, data.list_id, 'id');

            if (data.status === 1) {
                if (typeof state.lists[list_index].incomplete_tasks == 'undefined') {
                    return;
                }
                var task_index = state.getIndex(state.lists[list_index].incomplete_tasks.data, data.task_id, 'id');
                if (task_index === false) {
                    return false;
                }
                var task = state.lists[list_index].incomplete_tasks.data[task_index];
                task.status = true;

                if (typeof state.lists[list_index].complete_tasks !== 'undefined') {
                    state.lists[list_index].complete_tasks.data.splice(0, 0, task);
                } else {
                    state.lists[list_index].complete_tasks = { data: [task] };
                }

                state.lists[list_index].incomplete_tasks.data.splice(task_index, 1);
                state.lists[list_index].meta.total_complete_tasks = state.lists[list_index].meta.total_complete_tasks + 1;
                state.lists[list_index].meta.total_incomplete_tasks = state.lists[list_index].meta.total_incomplete_tasks - 1;
            }

            if (data.status === 0) {
                if (typeof state.lists[list_index].complete_tasks == 'undefined') {
                    return;
                }
                var task_index = state.getIndex(state.lists[list_index].complete_tasks.data, data.task_id, 'id');

                var task = state.lists[list_index].complete_tasks.data[task_index];
                task.status = false;

                if (typeof state.lists[list_index].incomplete_tasks !== 'undefined') {
                    state.lists[list_index].incomplete_tasks.data.splice(0, 0, task);
                } else {
                    state.lists[list_index].incomplete_tasks = { data: [task] };
                }

                state.lists[list_index].complete_tasks.data.splice(task_index, 1);
                state.lists[list_index].meta.total_complete_tasks = state.lists[list_index].meta.total_complete_tasks - 1;
                state.lists[list_index].meta.total_incomplete_tasks = state.lists[list_index].meta.total_incomplete_tasks + 1;
            }
        },

        /**
         * After update list-comment store it in state lists
         * 
         * @param  object state 
         * @param  object data  
         * 
         * @return void        
         */
        listNewComment: function listNewComment(state, data) {
            var list_index = state.getIndex(state.lists, data.list_id, 'id');

            state.lists[list_index].comments.data.push(data.comment);
        },

        /**
         * After update list-comment store it in state lists
         * 
         * @param  object state 
         * @param  object data  
         * 
         * @return void        
         */
        listUpdateComment: function listUpdateComment(state, data) {
            var list_index = state.getIndex(state.lists, data.list_id, 'id'),
                comment_index = state.getIndex(state.lists[list_index].comments.data, data.comment_id, 'id');

            state.lists[list_index].comments.data.splice(comment_index, 1, data.comment);
        },

        /**
         * Remove comment from list
         * 
         * @param  object state 
         * @param  object data  
         * 
         * @return void       
         */
        after_delete_comment: function after_delete_comment(state, data) {
            state.lists[data.list_index].comments.splice(data.comment_index, 1);
        },

        /**
         * Remove comment from task
         * 
         * @param  object state 
         * @param  object data  
         * 
         * @return void       
         */
        after_delete_task_comment: function after_delete_task_comment(state, data) {
            state.lists[data.list_index].tasks[data.task_index].comments.splice(data.comment_index, 1);
        },

        /**
         * Showing todo-list comment edit form
         * 
         * @param  object state 
         * @param  object data  
         * 
         * @return void
         */
        showHideListCommentEditForm: function showHideListCommentEditForm(state, data) {

            if (data.comment_index !== false) {
                state.lists[data.list_index].comments[data.comment_index].edit_mode = state.lists[data.list_index].comments[data.comment_index].edit_mode ? false : true;
            }
        },

        /**
         * Showing task comment edit form
         * 
         * @param  object state 
         * @param  object data  
         * 
         * @return void
         */
        showHideTaskCommentEditForm: function showHideTaskCommentEditForm(state, data) {
            if (data.comment_index !== false) {
                state.lists[data.list_index].tasks[data.task_index].comments[data.comment_index].edit_mode = state.lists[data.list_index].tasks[data.task_index].comments[data.comment_index].edit_mode ? false : true;
            }
        },

        /**
         * Set single task popup data to vuex store
         * 
         * @param  object state 
         * @param  object task  
         * 
         * @return void       
         */
        single_task_popup: function single_task_popup(state) {
            state.task = task.task;
        },

        /**
         * Make empty store task and make false is_single_task
         * 
         * @param  object state 
         * 
         * @return void       
         */
        updateSingleTaskActiveMode: function updateSingleTaskActiveMode(state, status) {
            state.is_single_task = status;
            //state.task = {};
        },

        update_task_comment: function update_task_comment(state, comment) {
            state.lists[comment.list_index].tasks[comment.task_index].comments.push(comment.comment);
        },

        /**
         * Remove todo list 
         * 
         * @param  object state 
         * @param  object list  
         * 
         * @return return
         */
        after_delete_todo_list: function after_delete_todo_list(state, list) {
            state.lists.splice(list.list_index, 1);
        },

        /**
         * After delete task
         * 
         * @param  object state 
         * @param  object task  
         * 
         * @return void       
         */
        afterDeleteTask: function afterDeleteTask(state, data) {
            var list_index = state.getIndex(state.lists, data.list.id, 'id');

            if (data.task.status === false || data.task.status === 'incomplete') {
                var task_index = state.getIndex(state.lists[list_index].incomplete_tasks.data, data.task.id, 'id');
                state.lists[list_index].incomplete_tasks.data.splice(task_index, 1);
                state.lists[list_index].meta.total_incomplete_tasks = state.lists[list_index].meta.total_incomplete_tasks - 1;
            } else {
                var task_index = state.getIndex(state.lists[list_index].complete_tasks.data, data.task.id, 'id');
                state.lists[list_index].complete_tasks.data.splice(task_index, 1);
                state.lists[list_index].meta.total_incomplete_tasks = state.lists[list_index].meta.total_complete_tasks - 1;
            }
        },

        /**
         * After get tasks from list id
         * 
         * @param  object state 
         * @param  object task  
         * 
         * @return void       
         */
        insert_tasks: function insert_tasks(state, task) {

            task.tasks.tasks.forEach(function (task_obj) {
                state.lists[task.list_index].tasks.push(task_obj);
            });
            //state.lists[task.list_index].tasks = task.tasks.tasks;
        },

        emptyTodoLists: function emptyTodoLists(state) {
            state.lists = [];
        },

        /**
         * Chanage view active mode
         *
         * @param  object state 
         * @param  object mode 
         * 
         * @return void
         */
        change_active_mode: function change_active_mode(state, mode) {
            state.active_mode = mode.mode;
        },

        add_inline_task_users: function add_inline_task_users(state, users) {
            state.inline_task_users = users.users;
        },

        add_inline_task_start_date: function add_inline_task_start_date(state, date) {
            state.inline_task_start_date = date.date;
        },

        add_inline_task_end_date: function add_inline_task_end_date(state, date) {
            state.inline_task_end_date = date.date;
        },

        add_inline_task_description: function add_inline_task_description(state, description) {
            state.inline_task_description = description.description;
        },

        add_inline_todo_list_id: function add_inline_todo_list_id(state, list) {
            state.inline_todo_list_id = list.list_id;
        },

        inline_display: function inline_display(state, _inline_display) {
            state.inline_display = _inline_display;
        },

        loading_effect: function loading_effect(state, effect) {
            state.loading = effect.mode;
        },

        afterUpdateTaskElement: function afterUpdateTaskElement(state, task) {
            jQuery.extend(true, state.lists[task.list_index].tasks[task.task_index], task.task);
            state.lists[task.list_index].tasks[task.task_index].assigned_to = task.task.assigned_to;
        },

        setLists: function setLists(state, lists) {
            state.lists = lists;
            state.isListFetch = true;
        },
        setList: function setList(state, list) {
            state.lists = [list];
        },
        afterNewList: function afterNewList(state, list) {
            var per_page = state.lists_meta.per_page,
                length = state.lists.length;

            if (per_page <= length) {
                state.lists.splice(0, 0, list);
                state.lists.pop();
            } else {
                state.lists.splice(0, 0, list);
            }
        },
        afterUpdateList: function afterUpdateList(state, list) {
            var list_index = state.getIndex(state.lists, list.id, 'id');
            var merge_list = jQuery.extend(true, state.lists[list_index], list);
            state.lists.splice(list_index, 1, merge_list);
        },
        afterNewListupdateListsMeta: function afterNewListupdateListsMeta(state) {
            state.lists_meta.total = state.lists_meta.total + 1;
            state.lists_meta.total_pages = Math.ceil(state.lists_meta.total / state.lists_meta.per_page);
        },
        afterDeleteList: function afterDeleteList(state, list_id) {
            var list_index = state.getIndex(state.lists, list_id, 'id');
            state.lists.splice(list_index, 1);
            state.lists_meta.total = state.lists_meta.total - 1;
        },
        setListComments: function setListComments(state, comments) {
            state.list_comments = comments;
        },
        setListForSingleListPage: function setListForSingleListPage(state, list) {
            state.list = list;
        },
        setMilestones: function setMilestones(state, milestones) {
            state.milestones = milestones;
        },
        showHideListFormStatus: function showHideListFormStatus(state, status) {
            if (status === 'toggle') {
                state.is_active_list_form = state.is_active_list_form ? false : true;
            } else {
                state.is_active_list_form = status;
            }
        },
        setTotalListPage: function setTotalListPage(state, total) {
            state.total_list_page = total;
        },
        setListsMeta: function setListsMeta(state, meta) {
            state.lists_meta = meta;
        },
        setSingleTask: function setSingleTask(state, data) {
            state.task = data;
        },
        setTasks: function setTasks(state, data) {
            var list_index = state.getIndex(state.lists, data.id, 'id');

            if (typeof data.incomplete_tasks !== 'undefined') {
                data.incomplete_tasks.data.forEach(function (task) {
                    state.lists[list_index].incomplete_tasks.data.push(task);
                });
                state.lists[list_index].incomplete_tasks.meta = data.incomplete_tasks.meta;
            } else {
                data.complete_tasks.data.forEach(function (task) {
                    state.lists[list_index].complete_tasks.data.push(task);
                });
                state.lists[list_index].complete_tasks.meta = data.complete_tasks.meta;
            }
        },
        updateTaskEditMode: function updateTaskEditMode(state, data) {
            var list_index = state.getIndex(state.lists, data.list_id, 'id');

            if (typeof state.lists[list_index].incomplete_tasks !== 'undefined') {
                var task_index = state.getIndex(state.lists[list_index].incomplete_tasks.data, data.task.id, 'id');
                state.lists[list_index].incomplete_tasks.data[task_index].edit_mode = true;

                //state.lists[list_index].incomplete_tasks.data.splice(task_index, 1); 

                //state.lists[list_index].incomplete_tasks.data.splice(task_index, 1, data.task);

                //jQuery.extend(true, data.task, state.lists[list_index].incomplete_tasks.data[task_index] );
            }

            if (typeof state.lists[list_index].complete_tasks !== 'undefined') {
                var task_index = state.getIndex(state.lists[list_index].complete_tasks.data, data.task.id, 'id');
                state.lists[list_index].incomplete_tasks.data[task_index].edit_mode = data.edit_mode;
            }
        },
        balankTemplateStatus: function balankTemplateStatus(state, status) {
            state.balankTemplateStatus = status;
        },
        listTemplateStatus: function listTemplateStatus(state, status) {
            state.listTemplateStatus = status;
        },
        updateLists: function updateLists(state, lists) {
            state.lists = lists;
        },
        updateTask: function updateTask(state, task) {
            state.task = task;
        },
        updateListPrivacy: function updateListPrivacy(state, data) {
            var index = state.getIndex(state.lists, data.list_id, 'id');
            state.lists[index].meta.privacy = data.privacy;
        },
        updateTaskPrivacy: function updateTaskPrivacy(state, data) {
            var list_index = state.getIndex(state.lists, data.list_id, 'id');

            if (typeof state.lists[list_index].incomplete_tasks !== 'undefined') {
                var task_index = state.getIndex(state.lists[list_index].incomplete_tasks.data, data.task_id, 'id');
                state.lists[list_index].incomplete_tasks.data[task_index].meta.privacy = data.privacy;
            }

            if (typeof state.task.meta != 'undefined') {
                state.task.meta.privacy = data.privacy;
            }
        },
        fetchListStatus: function fetchListStatus(state, status) {
            state.isListFetch = status;
        }
    }
};

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _reports = __webpack_require__(307);

var _reports2 = _interopRequireDefault(_reports);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPMRegisterChildrenRoute('project_root', [{
    path: '/reports',
    component: _reports2.default,
    name: 'reports'
}]); // const Reports = resolve => {
//     require.ensure(['./reports.vue'], () => {
//         resolve(require('./reports.vue'));
//     });
// }

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _header = __webpack_require__(311);

var _header2 = _interopRequireDefault(_header);

var _general = __webpack_require__(310);

var _general2 = _interopRequireDefault(_general);

var _email = __webpack_require__(309);

var _email2 = _interopRequireDefault(_email);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

weDevsPmRegisterModule('settings', 'settings');

// const settingsHeader = resolve => {
//     require.ensure(['./header.vue'], () => {
//         resolve(require('./header.vue'));
//     });
// }

// const settingsGeneral = resolve => {
//     require.ensure(['./general.vue'], () => {
//         resolve(require('./general.vue'));
//     });
// }

// const settingsEmail = resolve => {
//     require.ensure(['./email.vue'], () => {
//         resolve(require('./email.vue'));
//     });
// }

weDevsPMRegisterChildrenRoute('settings_root', [{
    path: '',
    component: _general2.default,
    name: 'general',
    meta: {
        permission: function permission(project) {
            return pmHasManageCapability();
        }
    }
}, {
    path: 'email',
    component: _email2.default,
    name: 'email',
    meta: {
        permission: function permission(project) {
            return pmHasManageCapability();
        }
    }
}]);

weDevsPMRegisterChildrenRoute('project_root', [{
    path: 'settings',
    component: _header2.default,
    meta: {
        permission: function permission(project) {
            return pmHasManageCapability();
        },
        lebel: 'Settings',
        order: 7
    },
    children: wedevsPMGetRegisterChildrenRoute('settings_root')
}]);

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _clickOutside = __webpack_require__(206);

var _clickOutside2 = _interopRequireDefault(_clickOutside);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

pm.Vue.directive('pm-slide-up-down', {
	inserted: function inserted(el) {
		var node = jQuery(el);

		if (node.is(':visible')) {
			node.slideUp(400);
		} else {
			node.slideDown(400);
		}
	}
});

pm.Vue.directive('pm-pretty-photo', {
	inserted: function inserted(el) {
		var node = jQuery(el);

		node.prettyPhoto();
	}
});

pm.Vue.directive('pm-tooltip', {
	inserted: function inserted(el) {
		jQuery(el).tipTip();
	}
});

pm.Vue.directive('pm-click-outside', _clickOutside2.default);

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getIterator2 = __webpack_require__(214);

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function closeConditional() {
  return false;
}

function directive(e, el, binding) {
  // Args may not always be supplied
  binding.args = binding.args || {};

  // If no closeConditional was supplied assign a default
  var isActive = binding.args.closeConditional || closeConditional;
  // The include element callbacks below can be expensive
  // so we should avoid calling them when we're not active.
  // Explicitly check for false to allow fallback compatibility
  // with non-toggleable components
  // if (!e || isActive(e) === false) return

  // If click was triggered programmaticaly (domEl.click()) then
  // it shouldn't be treated as click-outside
  // Chrome/Firefox support isTrusted property
  // IE/Edge support pointerType property (empty if not triggered
  // by pointing device)
  if ('isTrusted' in e && !e.isTrusted || 'pointerType' in e && !e.pointerType) return;

  // Check if additional elements were passed to be included in check
  // (click must be outside all included elements, if any)
  var elements = (binding.args.include || function () {
    return [];
  })();
  // Add the root element for the component this directive was defined on
  elements.push(el);

  // Check if it's a click outside our elements, and then if our callback returns true.
  // Non-toggleable components should take action in their callback and return falsy.
  // Toggleable can return true if it wants to deactivate.
  // Note that, because we're in the capture phase, this callback will occure before
  // the bubbling click event on any outside elements.
  !clickedInEls(e, elements) && setTimeout(function () {
    // isActive(e) && 
    binding.value(e);
  }, 0);
}

function clickedInEls(e, elements) {
  // Get position of click
  var x = e.clientX,
      y = e.clientY;
  // Loop over all included elements to see if click was in any of them

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (0, _getIterator3.default)(elements), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var el = _step.value;

      if (clickedInEl(el, x, y)) return true;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return false;
}

function clickedInEl(el, x, y) {
  // Get bounding rect for element
  // (we're in capturing event and we want to check for multiple elements,
  //  so can't use target.)
  var b = el.getBoundingClientRect();
  // Check if the click was in the element's bounding rect

  return x >= b.left && x <= b.right && y >= b.top && y <= b.bottom;
}

exports.default = {
  name: 'click-outside',

  // [data-app] may not be found
  // if using bind, inserted makes
  // sure that the root element is
  // available, iOS does not support
  // clicks on body
  inserted: function inserted(el, binding) {
    var onClick = function onClick(e) {
      return directive(e, el, binding);
    };
    // iOS does not recognize click events on document
    // or body, this is the entire purpose of the v-app
    // component and [data-app], stop removing this
    var app = document.querySelector('[data-app]') || document.body; // This is only for unit tests
    app.addEventListener('click', onClick, true);
    el._clickOutside = onClick;
  },
  unbind: function unbind(el) {
    var app = document.querySelector('[data-app]') || document.body; // This is only for unit tests
    app && app.removeEventListener('click', el._clickOutside, true);
    delete el._clickOutside;
  }
};

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _pagination = __webpack_require__(10);

var _pagination2 = _interopRequireDefault(_pagination);

var _datePicker = __webpack_require__(78);

var _datePicker2 = _interopRequireDefault(_datePicker);

var _activityParser = __webpack_require__(272);

var _activityParser2 = _interopRequireDefault(_activityParser);

var _header = __webpack_require__(9);

var _header2 = _interopRequireDefault(_header);

var _notifyUser = __webpack_require__(18);

var _notifyUser2 = _interopRequireDefault(_notifyUser);

var _VueContentLoading = __webpack_require__(271);

var _VueContentLoading2 = _interopRequireDefault(_VueContentLoading);

var _timePicker = __webpack_require__(274);

var _timePicker2 = _interopRequireDefault(_timePicker);

var _colorPicker = __webpack_require__(273);

var _colorPicker2 = _interopRequireDefault(_colorPicker);

var _doAction = __webpack_require__(5);

var _doAction2 = _interopRequireDefault(_doAction);

var _newTaskListForm = __webpack_require__(54);

var _newTaskListForm2 = _interopRequireDefault(_newTaskListForm);

var _newTaskForm = __webpack_require__(41);

var _newTaskForm2 = _interopRequireDefault(_newTaskForm);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

pm.Vue.component('pm-pagination', _pagination2.default);
pm.Vue.component('pm-date-picker', _datePicker2.default);
pm.Vue.component('activityParser', _activityParser2.default);
pm.Vue.component('pm-header', _header2.default);
pm.Vue.component('pm-notify-user', _notifyUser2.default);
pm.Vue.component('VueContentLoading', _VueContentLoading2.default);
pm.Vue.component('pm-date-time-picker', _timePicker2.default);
pm.Vue.component('pm-color-picker', _colorPicker2.default);
pm.Vue.component('pm-do-action', _doAction2.default);
pm.Vue.component('pm-new-list-form', _newTaskListForm2.default);
pm.Vue.component('pm-new-task-form', _newTaskForm2.default);

/***/ }),
/* 208 */,
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * As we are using hash based navigation, hack fix
 * to highlight the current selected menu
 *
 * Requires jQuery
 */
var PMmenuFix = exports.PMmenuFix = function PMmenuFix(slug) {
    var $ = jQuery;

    var menuRoot = $('#toplevel_page_' + slug);
    var currentUrl = window.location.href;
    var currentPath = currentUrl.substr(currentUrl.indexOf('admin.php'));

    menuRoot.on('click', 'a', function () {
        var self = $(this);

        $('ul.wp-submenu li', menuRoot).removeClass('current');

        if (self.hasClass('wp-has-submenu')) {
            $('li.wp-first-item', menuRoot).addClass('current');
        } else {
            self.parents('li').addClass('current');
        }
    });

    $('ul.wp-submenu a', menuRoot).each(function (index, el) {
        if ($(el).attr('href') === currentPath) {
            $(el).parent().addClass('current');
            return;
        }
    });
};

// export default menuFix;

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _mixin = __webpack_require__(3);

var _mixin2 = _interopRequireDefault(_mixin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	taskLists: _mixin2.default
};

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _router = __webpack_require__(192);

var _router2 = _interopRequireDefault(_router);

var _router3 = __webpack_require__(181);

var _router4 = _interopRequireDefault(_router3);

var _router5 = __webpack_require__(179);

var _router6 = _interopRequireDefault(_router5);

var _router7 = __webpack_require__(203);

var _init = __webpack_require__(308);

var _init2 = _interopRequireDefault(_init);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

if (!PM_Vars.is_pro) {
    __webpack_require__(183);
    __webpack_require__(180);
    __webpack_require__(202);
    __webpack_require__(184);
}

weDevs_PM_Routers.push({
    path: '/',
    component: _init2.default,
    name: 'project_root',

    children: wedevsPMGetRegisterChildrenRoute('project_root')
});

var router = new pm.VueRouter({
    routes: weDevs_PM_Routers
});

router.beforeEach(function (to, from, next) {
    pm.NProgress.start();
    next();
});

//Load all components mixin
weDevsPmModules.forEach(function (module) {
    var mixin = __webpack_require__(403)("./" + module.path + '/mixin.js');
    PmMixin[module.name] = mixin.default;
});

exports.default = router;

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__.p = PM_Vars.dir_url + 'views/assets/js/';

//pmPromise.then(function(result) {
__webpack_require__(178);
//});

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = new pm.Vuex.Store({
    state: {
        manageCapability: [],
        is_need_fetch_view_type: true,
        projectLoaded: false,
        projectOverviewLoaded: false,
        projectDiscussLoaded: false,
        projectTaskListLoaded: false,
        projectTaskLoaded: false,
        projectMilestoneLoaded: false,
        projectFileLoaded: false,
        projectActivityLoaded: false,
        isFetchCategories: false,
        projects: [],
        project: {},
        projectMeta: {},
        project_users: [],
        is_single_task: false,
        categories: [],
        roles: [],
        milestones: [],
        milestones_load: false,
        is_project_form_active: false,
        projects_meta: {},
        pagination: {},
        listView: 'list',
        getIndex: function getIndex(itemList, id, slug) {
            var index = false;

            itemList.forEach(function (item, key) {
                if (item[slug] == id) {
                    index = key;
                }
            });

            return index;
        },
        assignees: [],
        history: {
            to: {},
            from: {}
        }
    },

    mutations: {
        afterDeleteProjectCount: function afterDeleteProjectCount(state, project) {
            if (typeof project.project === 'undefined') {
                return;
            }
            if (project.project.status == 'incomplete') {
                state.projects_meta.total_incomplete = parseInt(state.projects_meta.total_incomplete) - 1;
            } else {
                state.projects_meta.total_complete = parseInt(state.projects_meta.total_complete) - 1;
            }
        },
        updateListViewType: function updateListViewType(state, view) {
            if (state.projectMeta.hasOwnProperty('list_view_type') && state.projectMeta.list_view_type) {
                state.projectMeta.list_view_type.meta_value = view;
            } else {
                state.projectMeta['list_view_type'] = {
                    meta_value: view
                };
            }
        },

        // listViewType (state, view_type) {
        //     state.listView = view_type;
        // },
        isSigleTask: function isSigleTask(state, status) {
            state.is_single_task = status;
        },
        setProjects: function setProjects(state, projects) {
            state.projects = projects.projects;
        },
        setProject: function setProject(state, project) {
            state.projects.push(project);
            state.project = project;
        },
        setProjectMeta: function setProjectMeta(state, projectMeta) {
            state.projectMeta = projectMeta;
        },
        updateProjectMeta: function updateProjectMeta(state, type) {
            if (typeof state.project.meta === 'undefined') {
                return;
            }

            if (state.project.meta.data.hasOwnProperty(type)) {
                state.project.meta.data[type]++;
            }
        },
        decrementProjectMeta: function decrementProjectMeta(state, type) {
            if (typeof state.project.meta === 'undefined') {
                return;
            }

            if (state.project.meta.data.hasOwnProperty(type)) {
                state.project.meta.data[type]--;
            }
        },
        setProjectUsers: function setProjectUsers(state, users) {
            state.project_users = users;
        },
        afterNewCategories: function afterNewCategories(state, categories) {
            state.categories.push(categories);
        },
        setCategories: function setCategories(state, categories) {
            state.categories = categories;
            state.isFetchCategories = true;
        },
        afterUpdateCategories: function afterUpdateCategories(state, category) {
            var category_index = state.getIndex(state.categories, category.id, 'id');
            state.categories.splice(category_index, 1, category);
        },
        afterDeleteCategory: function afterDeleteCategory(state, id) {
            var category_index = state.getIndex(state.categories, id, 'id');
            state.categories.splice(category_index, 1);
        },
        setRoles: function setRoles(state, roles) {
            state.roles = roles;
        },
        newProject: function newProject(state, projects) {
            var per_page = state.pagination.per_page,
                length = state.projects.length;

            if (per_page <= length) {
                state.projects.splice(0, 0, projects);
                state.projects.pop();
            } else {
                state.projects.splice(0, 0, projects);
            }

            //update pagination
            state.pagination.total = state.pagination.total + 1;
            state.projects_meta.total_incomplete = state.projects_meta.total_incomplete + 1;
            state.pagination.total_pages = Math.ceil(state.pagination.total / state.pagination.per_page);
        },
        showHideProjectForm: function showHideProjectForm(state, status) {
            if (status === 'toggle') {
                state.is_project_form_active = state.is_project_form_active ? false : true;
            } else {
                state.is_project_form_active = status;
            }
        },
        setProjectsMeta: function setProjectsMeta(state, data) {
            if (typeof data !== 'undefined') {
                state.projects_meta = data;
                state.pagination = data.pagination;
            }
        },
        afterDeleteProject: function afterDeleteProject(state, project_id) {
            var project_index = state.getIndex(state.projects, project_id, 'id');
            state.projects.splice(project_index, 1);
        },
        updateProject: function updateProject(state, project) {
            var index = state.getIndex(state.projects, project.id, 'id');
            //console.log(state.projects[index]);
            // console.log(state.projects[index], project);

            //state.projects[index] = project;
            jQuery.extend(true, state.projects[index], project);
            jQuery.extend(true, state.project, project);
            //console.log(state.projects[index], project);
            // jQuery.each(state.projects[index], function(key, value) {
            //  //console.log(state.projects[index][key], project[key]);
            //  jQuery.extend(true, state.projects[index][key], project[key]);
            // });

            // //console.log(state.projects[index]);
        },
        showHideProjectDropDownAction: function showHideProjectDropDownAction(state, data) {
            var index = state.getIndex(state.projects, data.project_id, 'id');

            if (data.status === 'toggle') {
                state.projects[index].settings_hide = state.projects[index].settings_hide ? false : true;
            } else {
                state.projects[index].settings_hide = data.status;
            }
        },
        afterDeleteUserFromProject: function afterDeleteUserFromProject(state, data) {
            if (data.project_id) {
                var index = state.getIndex(state.projects, data.project_id, 'id');
                var users = state.projects[index].assignees.data;
                var user_index = state.getIndex(users, data.user_id, 'id');

                state.projects[index].assignees.data.splice(user_index, 1);
            } else {
                var _index = state.getIndex(state.assignees, data.user_id, 'id');
                state.assignees.splice(_index, 1);
            }
        },
        updateSeletedUser: function updateSeletedUser(state, assignees) {
            state.assignees.push(assignees);
        },
        setSeletedUser: function setSeletedUser(state, assignees) {
            state.assignees = assignees;
        },
        resetSelectedUsers: function resetSelectedUsers(state) {
            state.assignees = [];
        },
        setMilestones: function setMilestones(state, milestones) {
            state.milestones = milestones;
            state.milestones_load = true;
        },
        is_need_fetch_view_type: function is_need_fetch_view_type(state, status) {
            state.is_need_fetch_view_type = status;
        },
        setManageCapability: function setManageCapability(state, capability) {
            state.manageCapability = capability;
        },
        setDefaultLoaded: function setDefaultLoaded(state) {
            state.projectLoaded = false;
            state.projectOverviewLoaded = false;
            state.projectDiscussLoaded = false;
            state.projectTaskListLoaded = false;
            state.projectTaskLoaded = false;
            state.projectMilesotneLoaded = false;
            state.projectFileLoaded = false;
            state.projectActivityLoaded = false;
        },
        recordHistory: function recordHistory(state, history) {
            var to = jQuery.extend(true, {}, history.to);
            var from = jQuery.extend(true, {}, history.from);

            state.history = {
                to: to, from: from
            };
        }
    }

});

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(216), __esModule: true };

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(217), __esModule: true };

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(236);
__webpack_require__(235);
module.exports = __webpack_require__(232);


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(234);
module.exports = __webpack_require__(4).Object.assign;


/***/ }),
/* 218 */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(44);
var TAG = __webpack_require__(24)('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(7).document;
module.exports = document && document.documentElement;


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(224);
var descriptor = __webpack_require__(50);
var setToStringTag = __webpack_require__(169);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(15)(IteratorPrototype, __webpack_require__(24)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 222 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__(38);
var gOPS = __webpack_require__(226);
var pIE = __webpack_require__(228);
var toObject = __webpack_require__(40);
var IObject = __webpack_require__(47);
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(11)(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(20);
var dPs = __webpack_require__(225);
var enumBugKeys = __webpack_require__(46);
var IE_PROTO = __webpack_require__(39)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(45)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(220).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(17);
var anObject = __webpack_require__(20);
var getKeys = __webpack_require__(38);

module.exports = __webpack_require__(6) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 226 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(14);
var toObject = __webpack_require__(40);
var IE_PROTO = __webpack_require__(39)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 228 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(15);


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(22);
var defined = __webpack_require__(21);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(219);
var ITERATOR = __webpack_require__(24)('iterator');
var Iterators = __webpack_require__(48);
module.exports = __webpack_require__(4).getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(20);
var get = __webpack_require__(231);
module.exports = __webpack_require__(4).getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(218);
var step = __webpack_require__(222);
var Iterators = __webpack_require__(48);
var toIObject = __webpack_require__(23);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(168)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(13);

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(223) });


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(230)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(168)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(233);
var global = __webpack_require__(7);
var hide = __webpack_require__(15);
var Iterators = __webpack_require__(48);
var TO_STRING_TAG = __webpack_require__(24)('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.hrm-h1 {\n    margin: 0 !important;\n    padding: 0 !important;\n}\n", ""]);

// exports


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n#nprogress .bar {\n    z-index: 99999;\n}\n\n", ""]);

// exports


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.color-picker-container .color-picker-button[data-v-2ade92fb] {\n    height: 24px;\n    padding: 0 0 0 30px;\n    margin: 0 0 6px;\n    font-size: 11px;\n}\n.color-picker-container .color-picker-button span[data-v-2ade92fb] {\n    display: block;\n    padding: 0 6px;\n    line-height: 22px;\n    color: #555;\n    text-align: center;\n    background: #f7f7f7;\n    border-left: 1px solid #ccc;\n    border-radius: 0 2px 2px 0;\n}\n.color-picker-container .hex-input[data-v-2ade92fb] {\n    height: 24px;\n    width: 65px;\n    padding: 3px 5px 4px;\n    margin: 0 3 0 0;\n    font-family: monospace;\n    font-size: 12px;\n    line-height: 1.4;\n    vertical-align: top;\n    box-shadow: 0 1px 0 #ccc;\n}\n    \n", ""]);

// exports


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-milestone-form .detail {\n    border: none !important;\n    padding: 0 !important;\n}\n", ""]);

// exports


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-content-img-size {\n  height: 80px;\n  width: 80px;\n}\n", ""]);

// exports


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-project-meta .message .fa-circle {\n    color: #4975a8;\n}\n.pm-project-meta .todo .fa-circle {\n    color: #68af94;\n}\n.pm-project-meta .files .fa-circle {\n    color: #71c8cb;\n}\n.pm-project-meta .milestone .fa-circle {\n    color: #4975a8;\n}   \n\n", ""]);

// exports


/***/ }),
/* 243 */,
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.mr-5{\n    margin-right: 5px;\n}\n", ""]);

// exports


/***/ }),
/* 245 */,
/* 246 */,
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.check-column {\n    width: 40px;\n}\n.pm #tag-name {\n    height: 28px;\n}\n.pm #tag-description {\n    min-height: 84px;\n}\n.pm #bulk-action-selector-top,\n.pm #bulk-action-selector-bottom {\n    height: 30px;\n    width: 124px;\n}\n.pm .check-column input {\n    margin: 0 0 0 8px;\n}\n", ""]);

// exports


/***/ }),
/* 248 */,
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-project-meta .message .fa-circle {\n    color: #4975a8;\n}\n.pm-project-meta .todo .fa-circle {\n    color: #68af94;\n}\n.pm-project-meta .files .fa-circle {\n    color: #71c8cb;\n}\n.pm-project-meta .milestone .fa-circle {\n    color: #4975a8;\n}   \n\n", ""]);

// exports


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-list-footer .pm-new-task-button-icon {\n    margin-top: 5px;\n}\n", ""]);

// exports


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.wpuf-addon {\n    width: 220px;\n    display: inline-block;\n    margin: 10px;\n    border: 1px solid #E6E6E6;\n}\n.wpuf-addon-thumb img {\n    max-width: 220px;\n    max-height: 140px;\n}\n.wpuf-detail {\n    padding: 6px 10px 10px;\n    min-height: 110px;\n    background: #f9f9f9;\n}\n.wpuf-detail h3.title {\n    margin: 5px 0 10px;\n    padding: 0;\n}\n.wpuf-detail h3.title a {\n    text-decoration: none;\n    color: #111;\n}\n.wpuf-links {\n    padding: 10px;\n    background: #F5F5F5;\n    border-top: 1px solid #E6E6E6;\n}\na.button.disabled {\n    background: #eee;\n}\n", ""]);

// exports


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.fa-circle {\n    margin-right: 6%;\n}\n", ""]);

// exports


/***/ }),
/* 254 */,
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-new-task-button-icon {\n    display: inline-block;\n    padding-left: 28px;\n    background-size: 20px;\n    background-repeat: no-repeat;\n}\n", ""]);

// exports


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-project-meta .message .fa-circle {\n    color: #4975a8;\n}\n.pm-project-meta .todo .fa-circle {\n    color: #68af94;\n}\n.pm-project-meta .files .fa-circle {\n    color: #71c8cb;\n}\n.pm-project-meta .milestone .fa-circle {\n    color: #4975a8;\n}   \n\n", ""]);

// exports


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-entry-detail {\n    font-family: Helvetica, Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n.pm-inline-list-wrap .pm-right-inline-list-element {\n    float: right;\n}\n.pm-inline-list-wrap {\n    width: 100%;\n}\n.pm-inline-list-element {\n    float: left;\n}\n.pm-list-footer .pm-new-task-btn-li {\n    padding-left: 0 !important;\n}\n.pm-list-footer .pm-footer-left-ul li {\n    display: inline-block;\n    padding-left: 28px;\n    background-size: 20px;\n    background-repeat: no-repeat;\n    margin: 5px 0;\n    padding-bottom: 5px;\n    margin-right: 2%;\n}\n.pm-list-footer .pm-footer-left-ul li a {\n    line-height: 150%;\n    font-size: 12px;\n}\n.pm-list-footer .pm-footer-left {\n    width: 66%;\n}\n.pm-list-footer .pm-footer-right {\n    width: 30%;\n}\n.pm-list-footer .pm-footer-left, .pm-list-footer .pm-footer-right {\n    float: left;\n}\n.pm-list-footer .pm-todo-progress-bar, .pm-list-footer .pm-progress-percent {\n    display: inline-block;\n}\n.pm-list-footer .pm-todo-progress-bar {\n    width: 70%;\n}\n.pm-list-footer .pm-progress-percent {\n    margin-left: 6px;\n}\n\n", ""]);

// exports


/***/ }),
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__ = __webpack_require__(106);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_24fef4ce_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__ = __webpack_require__(323);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(380)
  __webpack_require__(381)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_24fef4ce_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/App.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-24fef4ce", Component.options)
  } else {
    hotAPI.reload("data-v-24fef4ce", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 267 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_add_ons_vue__ = __webpack_require__(107);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_984958c0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_add_ons_vue__ = __webpack_require__(365);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(395)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_add_ons_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_984958c0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_add_ons_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/add-ons/add-ons.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-984958c0", Component.options)
  } else {
    hotAPI.reload("data-v-984958c0", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 268 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_calendar_vue__ = __webpack_require__(108);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4c7f1b64_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_calendar_vue__ = __webpack_require__(340);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_calendar_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4c7f1b64_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_calendar_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/calendar/calendar.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4c7f1b64", Component.options)
  } else {
    hotAPI.reload("data-v-4c7f1b64", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 269 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_categories_vue__ = __webpack_require__(109);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_63eb77ce_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_categories_vue__ = __webpack_require__(351);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(390)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_categories_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_63eb77ce_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_categories_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/categories/categories.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-63eb77ce", Component.options)
  } else {
    hotAPI.reload("data-v-63eb77ce", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 270 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_edit_category_form_vue__ = __webpack_require__(110);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_34e9f362_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_edit_category_form_vue__ = __webpack_require__(331);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_edit_category_form_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_34e9f362_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_edit_category_form_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/categories/edit-category-form.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-34e9f362", Component.options)
  } else {
    hotAPI.reload("data-v-34e9f362", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 271 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueContentLoading_vue__ = __webpack_require__(111);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_48d89856_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueContentLoading_vue__ = __webpack_require__(336);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueContentLoading_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_48d89856_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueContentLoading_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/common/VueContentLoading.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-48d89856", Component.options)
  } else {
    hotAPI.reload("data-v-48d89856", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 272 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_activity_parser_vue__ = __webpack_require__(112);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2b3842ac_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_activity_parser_vue__ = __webpack_require__(326);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_activity_parser_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2b3842ac_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_activity_parser_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/common/activity-parser.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2b3842ac", Component.options)
  } else {
    hotAPI.reload("data-v-2b3842ac", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 273 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_color_picker_vue__ = __webpack_require__(113);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2ade92fb_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_color_picker_vue__ = __webpack_require__(325);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(382)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-2ade92fb"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_color_picker_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2ade92fb_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_color_picker_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/common/color-picker.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2ade92fb", Component.options)
  } else {
    hotAPI.reload("data-v-2ade92fb", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 274 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_time_picker_vue__ = __webpack_require__(115);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1c481b9b_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_time_picker_vue__ = __webpack_require__(321);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_time_picker_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1c481b9b_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_time_picker_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/common/time-picker.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1c481b9b", Component.options)
  } else {
    hotAPI.reload("data-v-1c481b9b", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 275 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_my_tasks_vue__ = __webpack_require__(116);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_325d9f2e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_my_tasks_vue__ = __webpack_require__(330);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_my_tasks_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_325d9f2e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_my_tasks_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/my-tasks/my-tasks.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-325d9f2e", Component.options)
  } else {
    hotAPI.reload("data-v-325d9f2e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 276 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_progress_vue__ = __webpack_require__(117);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_68b65f2e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_progress_vue__ = __webpack_require__(353);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_progress_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_68b65f2e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_progress_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/progress/progress.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-68b65f2e", Component.options)
  } else {
    hotAPI.reload("data-v-68b65f2e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 277 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_activities_vue__ = __webpack_require__(118);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1054be7a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_activities_vue__ = __webpack_require__(315);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_activities_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1054be7a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_activities_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-activities/activities.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1054be7a", Component.options)
  } else {
    hotAPI.reload("data-v-1054be7a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 278 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_comment_form_vue__ = __webpack_require__(119);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5e64445b_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_comment_form_vue__ = __webpack_require__(347);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_comment_form_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5e64445b_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_comment_form_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-discussions/comment-form.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5e64445b", Component.options)
  } else {
    hotAPI.reload("data-v-5e64445b", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 279 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_discussions_vue__ = __webpack_require__(120);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_fbf6061c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_discussions_vue__ = __webpack_require__(378);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_discussions_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_fbf6061c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_discussions_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-discussions/discussions.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-fbf6061c", Component.options)
  } else {
    hotAPI.reload("data-v-fbf6061c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 280 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_individual_discussions_vue__ = __webpack_require__(121);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_49018d80_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_individual_discussions_vue__ = __webpack_require__(337);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(384)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_individual_discussions_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_49018d80_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_individual_discussions_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-discussions/individual-discussions.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-49018d80", Component.options)
  } else {
    hotAPI.reload("data-v-49018d80", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 281 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_files_vue__ = __webpack_require__(123);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2ccb1bca_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_files_vue__ = __webpack_require__(327);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_files_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2ccb1bca_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_files_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-files/files.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2ccb1bca", Component.options)
  } else {
    hotAPI.reload("data-v-2ccb1bca", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 282 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_active_projects_vue__ = __webpack_require__(124);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7bf02012_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_active_projects_vue__ = __webpack_require__(357);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(392)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_active_projects_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7bf02012_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_active_projects_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/active-projects.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7bf02012", Component.options)
  } else {
    hotAPI.reload("data-v-7bf02012", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 283 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_all_projects_vue__ = __webpack_require__(125);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4cf662c5_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_all_projects_vue__ = __webpack_require__(341);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(385)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_all_projects_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4cf662c5_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_all_projects_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/all-projects.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4cf662c5", Component.options)
  } else {
    hotAPI.reload("data-v-4cf662c5", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 284 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_completed_projects_vue__ = __webpack_require__(126);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_de6a2dca_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_completed_projects_vue__ = __webpack_require__(373);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(399)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_completed_projects_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_de6a2dca_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_completed_projects_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/completed-projects.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-de6a2dca", Component.options)
  } else {
    hotAPI.reload("data-v-de6a2dca", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 285 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_empty_vue__ = __webpack_require__(127);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_39b3e73e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_empty_vue__ = __webpack_require__(333);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_empty_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_39b3e73e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_empty_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/empty.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-39b3e73e", Component.options)
  } else {
    hotAPI.reload("data-v-39b3e73e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 286 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_filter_by_category_vue__ = __webpack_require__(130);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_17ca26f2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_filter_by_category_vue__ = __webpack_require__(318);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_filter_by_category_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_17ca26f2_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_filter_by_category_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/project-filter-by-category.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-17ca26f2", Component.options)
  } else {
    hotAPI.reload("data-v-17ca26f2", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 287 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_header_menu_vue__ = __webpack_require__(131);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6e4cd1c8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_header_menu_vue__ = __webpack_require__(355);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_header_menu_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6e4cd1c8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_header_menu_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/project-header-menu.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6e4cd1c8", Component.options)
  } else {
    hotAPI.reload("data-v-6e4cd1c8", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 288 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_new_project_btn_vue__ = __webpack_require__(132);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_168f8210_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_new_project_btn_vue__ = __webpack_require__(317);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_new_project_btn_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_168f8210_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_new_project_btn_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/project-new-project-btn.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-168f8210", Component.options)
  } else {
    hotAPI.reload("data-v-168f8210", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 289 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_new_user_form_vue__ = __webpack_require__(133);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_43476454_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_new_user_form_vue__ = __webpack_require__(334);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_new_user_form_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_43476454_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_new_user_form_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/project-new-user-form.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-43476454", Component.options)
  } else {
    hotAPI.reload("data-v-43476454", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 290 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_template_compiler_index_id_data_v_07832c8f_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_search_all_vue__ = __webpack_require__(313);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */
var __vue_script__ = null
/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_template_compiler_index_id_data_v_07832c8f_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_search_all_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/project-search-all.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-07832c8f", Component.options)
  } else {
    hotAPI.reload("data-v-07832c8f", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 291 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_template_compiler_index_id_data_v_db13c722_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_search_by_client_vue__ = __webpack_require__(372);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */
var __vue_script__ = null
/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_template_compiler_index_id_data_v_db13c722_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_search_by_client_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/project-search-by-client.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-db13c722", Component.options)
  } else {
    hotAPI.reload("data-v-db13c722", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 292 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_view_vue__ = __webpack_require__(135);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f0ebfa10_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_view_vue__ = __webpack_require__(376);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_project_view_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f0ebfa10_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_project_view_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-lists/project-view.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-f0ebfa10", Component.options)
  } else {
    hotAPI.reload("data-v-f0ebfa10", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 293 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_completed_milestones_vue__ = __webpack_require__(137);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0447b1bc_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_completed_milestones_vue__ = __webpack_require__(312);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_completed_milestones_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0447b1bc_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_completed_milestones_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-milestones/completed-milestones.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0447b1bc", Component.options)
  } else {
    hotAPI.reload("data-v-0447b1bc", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 294 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_date_picker_vue__ = __webpack_require__(138);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_54b074e6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_date_picker_vue__ = __webpack_require__(345);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_date_picker_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_54b074e6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_date_picker_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-milestones/date-picker.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-54b074e6", Component.options)
  } else {
    hotAPI.reload("data-v-54b074e6", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 295 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_late_milestones_vue__ = __webpack_require__(139);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c29c263a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_late_milestones_vue__ = __webpack_require__(368);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_late_milestones_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c29c263a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_late_milestones_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-milestones/late-milestones.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-c29c263a", Component.options)
  } else {
    hotAPI.reload("data-v-c29c263a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 296 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_milestones_vue__ = __webpack_require__(142);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7f3234ba_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_milestones_vue__ = __webpack_require__(359);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(394)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_milestones_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7f3234ba_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_milestones_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-milestones/milestones.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7f3234ba", Component.options)
  } else {
    hotAPI.reload("data-v-7f3234ba", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 297 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_upcoming_milestones_vue__ = __webpack_require__(144);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_28c1332d_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_upcoming_milestones_vue__ = __webpack_require__(324);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_upcoming_milestones_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_28c1332d_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_upcoming_milestones_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-milestones/upcoming-milestones.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-28c1332d", Component.options)
  } else {
    hotAPI.reload("data-v-28c1332d", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 298 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_overview_vue__ = __webpack_require__(145);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1bb02dfa_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_overview_vue__ = __webpack_require__(320);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_overview_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1bb02dfa_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_overview_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-overview/overview.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1bb02dfa", Component.options)
  } else {
    hotAPI.reload("data-v-1bb02dfa", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 299 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_date_picker_vue__ = __webpack_require__(147);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_61df7da0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_date_picker_vue__ = __webpack_require__(350);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_date_picker_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_61df7da0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_date_picker_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/date-picker.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-61df7da0", Component.options)
  } else {
    hotAPI.reload("data-v-61df7da0", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 300 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_default_list_page_vue__ = __webpack_require__(148);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_528300b5_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_default_list_page_vue__ = __webpack_require__(343);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_default_list_page_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_528300b5_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_default_list_page_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/default-list-page.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-528300b5", Component.options)
  } else {
    hotAPI.reload("data-v-528300b5", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 301 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_list_comment_form_vue__ = __webpack_require__(150);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_46d557a4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_list_comment_form_vue__ = __webpack_require__(335);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_list_comment_form_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_46d557a4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_list_comment_form_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/list-comment-form.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-46d557a4", Component.options)
  } else {
    hotAPI.reload("data-v-46d557a4", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 302 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_list_comments_vue__ = __webpack_require__(151);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_30541e26_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_list_comments_vue__ = __webpack_require__(329);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_list_comments_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_30541e26_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_list_comments_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/list-comments.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-30541e26", Component.options)
  } else {
    hotAPI.reload("data-v-30541e26", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 303 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_list_tasks_vue__ = __webpack_require__(152);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_209dc5cc_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_list_tasks_vue__ = __webpack_require__(322);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_list_tasks_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_209dc5cc_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_list_tasks_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/list-tasks.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-209dc5cc", Component.options)
  } else {
    hotAPI.reload("data-v-209dc5cc", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 304 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_lists_vue__ = __webpack_require__(153);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_dfb5fd10_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_lists_vue__ = __webpack_require__(374);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(400)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_lists_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_dfb5fd10_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_lists_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/lists.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-dfb5fd10", Component.options)
  } else {
    hotAPI.reload("data-v-dfb5fd10", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 305 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_list_tasks_vue__ = __webpack_require__(158);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7e031227_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_list_tasks_vue__ = __webpack_require__(358);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(393)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_list_tasks_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7e031227_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_list_tasks_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/single-list-tasks.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7e031227", Component.options)
  } else {
    hotAPI.reload("data-v-7e031227", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 306 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_list_vue__ = __webpack_require__(159);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_545f2da6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_list_vue__ = __webpack_require__(344);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(387)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_single_list_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_545f2da6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_single_list_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/project-task-lists/single-list.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-545f2da6", Component.options)
  } else {
    hotAPI.reload("data-v-545f2da6", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 307 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_reports_vue__ = __webpack_require__(160);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b67fbae4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_reports_vue__ = __webpack_require__(366);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_reports_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b67fbae4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_reports_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/reports/reports.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b67fbae4", Component.options)
  } else {
    hotAPI.reload("data-v-b67fbae4", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 308 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_init_vue__ = __webpack_require__(161);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_92b6a508_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_init_vue__ = __webpack_require__(362);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_init_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_92b6a508_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_init_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/root/init.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-92b6a508", Component.options)
  } else {
    hotAPI.reload("data-v-92b6a508", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 309 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_email_vue__ = __webpack_require__(162);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d33f533e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_email_vue__ = __webpack_require__(371);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_email_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d33f533e_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_email_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/settings/email.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-d33f533e", Component.options)
  } else {
    hotAPI.reload("data-v-d33f533e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 310 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_general_vue__ = __webpack_require__(163);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_fa529326_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_general_vue__ = __webpack_require__(377);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_general_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_fa529326_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_general_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/settings/general.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-fa529326", Component.options)
  } else {
    hotAPI.reload("data-v-fa529326", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 311 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_header_vue__ = __webpack_require__(164);
/* empty harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5f8fc618_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_header_vue__ = __webpack_require__(348);
var disposed = false
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_header_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5f8fc618_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_header_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "views/assets/src/components/settings/header.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5f8fc618", Component.options)
  } else {
    hotAPI.reload("data-v-5f8fc618", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 312 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.completedMilestones.length
    ? _c(
        "div",
        { staticClass: "pm-complete-milestone pm-milestone-data" },
        [
          _c("h2", { staticClass: "group-title" }, [
            _vm._v(_vm._s(_vm.__("Completed Milestones", "pm")))
          ]),
          _vm._v(" "),
          _vm._l(_vm.completedMilestones, function(milestone) {
            return _c("div", { staticClass: "pm-milestone complete" }, [
              _c("div", { staticClass: "milestone-detail " }, [
                _c(
                  "h3",
                  { staticClass: "milestone-head" },
                  [
                    _vm._v(
                      "\n                " + _vm._s(milestone.title) + " "
                    ),
                    _c("br"),
                    _vm._v(" "),
                    _c("action", { attrs: { milestone: milestone } })
                  ],
                  1
                ),
                _vm._v(" "),
                _c("div", { staticClass: "detail" }, [
                  _c("div", {
                    domProps: { innerHTML: _vm._s(milestone.description) }
                  })
                ])
              ]),
              _vm._v(" "),
              _vm.can_edit_milestone(milestone)
                ? _c(
                    "div",
                    { staticClass: "pm-milestone-edit-form" },
                    [
                      _c(
                        "transition",
                        { attrs: { name: "slide" } },
                        [
                          milestone.edit_mode
                            ? _c("new-milestone-form", {
                                attrs: {
                                  section: "milestones",
                                  milestone: milestone
                                }
                              })
                            : _vm._e()
                        ],
                        1
                      )
                    ],
                    1
                  )
                : _vm._e(),
              _vm._v(" "),
              _c("div", { staticClass: "pm-milestone-items-details" }, [
                milestone.task_lists.data.length
                  ? _c(
                      "div",
                      {
                        staticClass: "pm-col-6 pm-milestone-todo pm-sm-col-12"
                      },
                      [
                        _c("h3", [_vm._v(_vm._s(_vm.__("Task Lists", "pm")))]),
                        _vm._v(" "),
                        _c(
                          "ul",
                          _vm._l(milestone.task_lists.data, function(list) {
                            return _c(
                              "li",
                              [_c("list", { attrs: { list: list } })],
                              1
                            )
                          })
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                milestone.discussion_boards.data.length
                  ? _c(
                      "div",
                      {
                        staticClass:
                          "pm-col-6 pm-milestone-discussion pm-last-col pm-sm-col-12"
                      },
                      [
                        _c("h3", [_vm._v(_vm._s(_vm.__("Discussions", "pm")))]),
                        _vm._v(" "),
                        _c(
                          "ul",
                          _vm._l(milestone.discussion_boards.data, function(
                            discuss
                          ) {
                            return _c(
                              "li",
                              [_c("discuss", { attrs: { discuss: discuss } })],
                              1
                            )
                          })
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _c("div", { staticClass: "clearfix" })
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "pm-milestone-completed" }, [
                _vm._v(
                  "\n            " +
                    _vm._s(_vm.__("Completed on:", "pm")) +
                    "\n            "
                ),
                _c(
                  "time",
                  {
                    attrs: {
                      datetime:
                        milestone.achieved_at.date +
                        " " +
                        milestone.achieved_at.time,
                      title:
                        milestone.achieved_at.date +
                        " " +
                        milestone.achieved_at.time
                    }
                  },
                  [
                    _vm._v(
                      _vm._s(milestone.achieved_at.date) +
                        " " +
                        _vm._s(milestone.achieved_at.time)
                    )
                  ]
                )
              ])
            ])
          })
        ],
        2
      )
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0447b1bc", esExports)
  }
}

/***/ }),
/* 313 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("input", {
    staticClass: "ui-autocomplete-input",
    attrs: {
      type: "text",
      id: "pm-all-search",
      name: "searchitem",
      placeholder: _vm.__("Search All...", "pm"),
      value: "",
      autocomplete: "off"
    }
  })
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-07832c8f", esExports)
  }
}

/***/ }),
/* 314 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.can_edit_milestone(_vm.milestone)
    ? _c("ul", { staticClass: "pm-links pm-right" }, [
        _c("li", [
          _c("a", {
            staticClass: "pm-icon-edit dashicons dashicons-edit ",
            attrs: { title: _vm.edit_milestone },
            on: {
              click: function($event) {
                $event.preventDefault()
                _vm.showHideMilestoneForm("toggle", _vm.milestone)
              }
            }
          })
        ]),
        _vm._v(" "),
        _c("li", [
          _c("a", {
            staticClass: "pm-milestone-delete dashicons dashicons-trash",
            attrs: { title: _vm.delete_milestone, href: "#" },
            on: {
              click: function($event) {
                $event.preventDefault()
                _vm.deleteSelfMilestone()
              }
            }
          })
        ]),
        _vm._v(" "),
        _c("li", [
          _vm.is_complete
            ? _c("a", {
                staticClass: "pm-milestone-open dashicons dashicons-update",
                attrs: { title: _vm.mark_as_incomplete, href: "#" },
                on: {
                  click: function($event) {
                    $event.preventDefault()
                    _vm.milestoneMarkUndone(_vm.milestone)
                  }
                }
              })
            : _vm._e()
        ]),
        _vm._v(" "),
        _c("li", [
          !_vm.is_complete
            ? _c("a", {
                staticClass: "pm-milestone-complete dashicons dashicons-yes",
                attrs: { title: _vm.mark_as_complete, href: "#" },
                on: {
                  click: function($event) {
                    $event.preventDefault()
                    _vm.milestoneMarkDone(_vm.milestone)
                  }
                }
              })
            : _vm._e()
        ]),
        _vm._v(" "),
        _c("li", [
          _vm.PM_Vars.is_pro && _vm.user_can("view_private_milestone")
            ? _c(
                "a",
                {
                  attrs: { href: "#" },
                  on: {
                    click: function($event) {
                      $event.preventDefault()
                      _vm.milestoneLockUnlock(_vm.milestone)
                    }
                  }
                },
                [
                  _c("span", {
                    class: _vm.privateClass(_vm.milestone.meta.privacy)
                  })
                ]
              )
            : _vm._e()
        ])
      ])
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0a184313", esExports)
  }
}

/***/ }),
/* 315 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "pm-wrap pm-front-end" },
    [
      _c("pm-header"),
      _vm._v(" "),
      !_vm.isActivityFetched
        ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(0)])
        : _vm._e(),
      _vm._v(" "),
      _vm.isActivityFetched
        ? _c("div", [
            _vm.activities.length
              ? _c(
                  "ul",
                  { staticClass: "pm-activity-list" },
                  _vm._l(_vm.activities, function(group) {
                    return _c("li", { key: group.id, staticClass: "pm-row" }, [
                      _c(
                        "div",
                        {
                          staticClass: "pm-activity-date pm-col-1 pm-sm-col-12"
                        },
                        [
                          _c("span", [
                            _vm._v(
                              _vm._s(_vm.actiivtyGroupDate(group.date, "DD"))
                            )
                          ]),
                          _vm._v(" "),
                          _c("br"),
                          _vm._v(
                            "\n                    " +
                              _vm._s(
                                _vm.actiivtyGroupDate(group.date, "MMMM")
                              ) +
                              "\n                     \n                "
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        {
                          staticClass:
                            "pm-activity-body pm-col-11 pm-sm-col-12 pm-right pm-last-col"
                        },
                        [
                          _c(
                            "ul",
                            _vm._l(group.activities, function(activity) {
                              return _c("li", [
                                _c(
                                  "div",
                                  { staticClass: "pm-col-8 pm-sm-col-12" },
                                  [
                                    _c("activity-parser", {
                                      attrs: { activity: activity }
                                    })
                                  ],
                                  1
                                ),
                                _vm._v(" "),
                                _c(
                                  "div",
                                  { staticClass: "date pm-col-4 pm-sm-col-12" },
                                  [
                                    _c(
                                      "time",
                                      {
                                        attrs: {
                                          datetime: _vm.pmDateISO8601Format(
                                            activity.committed_at.date,
                                            activity.committed_at.time
                                          ),
                                          title: _vm.pmDateISO8601Format(
                                            activity.committed_at.date,
                                            activity.committed_at.time
                                          )
                                        }
                                      },
                                      [
                                        _vm._v(
                                          "\n                                    " +
                                            _vm._s(activity.committed_at.date) +
                                            " " +
                                            _vm._s(activity.committed_at.time) +
                                            "\n                                "
                                        )
                                      ]
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c("div", { staticClass: "clear" })
                              ])
                            })
                          )
                        ]
                      )
                    ])
                  })
                )
              : _vm._e(),
            _vm._v(" "),
            _vm.total_activity > _vm.loaded_activities
              ? _c(
                  "a",
                  {
                    staticClass: "button pm-load-more",
                    attrs: { href: "#" },
                    on: {
                      click: function($event) {
                        $event.preventDefault()
                        _vm.loadMore()
                      }
                    }
                  },
                  [_vm._v(_vm._s(_vm.__("Load More ...", "pm")))]
                )
              : _vm._e(),
            _vm._v(" "),
            _c("span", {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.show_spinner,
                  expression: "show_spinner"
                }
              ],
              staticClass: "pm-spinner"
            }),
            _vm._v(" "),
            !_vm.activities.length
              ? _c("div", { staticClass: "no-activity" }, [
                  _vm._v(" " + _vm._s(_vm.__("No activity fount", "pm")) + " ")
                ])
              : _vm._e()
          ])
        : _vm._e()
    ],
    1
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "loadmoreanimation" }, [
      _c("div", { staticClass: "load-spinner" }, [
        _c("div", { staticClass: "rect1" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect2" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect3" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect4" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect5" })
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-1054be7a", esExports)
  }
}

/***/ }),
/* 316 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "pm-top-bar pm-no-padding pm-project-header pm-project-head"
    },
    [
      _c(
        "div",
        { staticClass: "pm-row pm-no-padding pm-border-bottom" },
        [
          _c("div", { staticClass: "pm-col-6 pm-project-detail" }, [
            _c("h3", [
              _c("span", { staticClass: "pm-project-title" }, [
                _vm._v(_vm._s(_vm.project.title))
              ]),
              _vm._v(" "),
              _vm.is_manager()
                ? _c(
                    "a",
                    {
                      staticClass:
                        "pm-icon-edit pm-project-edit-link small-text",
                      attrs: { href: "#" },
                      on: {
                        click: function($event) {
                          $event.preventDefault()
                          _vm.showHideProjectForm("toggle")
                        }
                      }
                    },
                    [
                      _c("span", { staticClass: "dashicons dashicons-edit" }),
                      _vm._v(" "),
                      _c("span", { staticClass: "text" }, [
                        _vm._v(_vm._s(_vm.__("Edit", "pm")))
                      ])
                    ]
                  )
                : _vm._e()
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "detail" }, [
              _vm._v(_vm._s(_vm.project.description))
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "pm-completed-wrap" }, [
            _vm.project.status === "complete"
              ? _c("div", { staticClass: "ribbon-green" }, [
                  _vm._v(_vm._s(_vm.__("Completed", "pm")))
                ])
              : _vm._e(),
            _vm._v(" "),
            _vm.project.status === "incomplete"
              ? _c("div", { staticClass: "ribbon-green incomplete" }, [
                  _vm._v(_vm._s(_vm.__("Incomplete", "pm")))
                ])
              : _vm._e()
          ]),
          _vm._v(" "),
          _vm.is_manager()
            ? _c(
                "div",
                {
                  staticClass:
                    "pm-col-6 pm-last-col pm-top-right-btn pm-text-right show_desktop_only"
                },
                [
                  _c("div", { staticClass: "pm-project-action" }, [
                    _c("span", {
                      staticClass:
                        "dashicons dashicons-admin-generic pm-settings-bind",
                      attrs: { title: _vm.project_action },
                      on: {
                        click: function($event) {
                          $event.preventDefault()
                          _vm.showProjectAction()
                        }
                      }
                    }),
                    _vm._v(" "),
                    _vm.settings_hide
                      ? _c("ul", { staticClass: "pm-settings" }, [
                          _c("li", [
                            _c("span", { staticClass: "pm-spinner" }),
                            _vm._v(" "),
                            _c(
                              "a",
                              {
                                attrs: {
                                  href: "#",
                                  title: _vm.__("Delete project", "pm")
                                },
                                on: {
                                  click: function($event) {
                                    $event.preventDefault()
                                    _vm.deleteProject(_vm.project.id)
                                  }
                                }
                              },
                              [
                                _c("span", {
                                  staticClass: "dashicons dashicons-trash"
                                }),
                                _vm._v(" "),
                                _c("span", [
                                  _vm._v(_vm._s(_vm.__("Delete", "pm")))
                                ])
                              ]
                            )
                          ]),
                          _vm._v(" "),
                          _c("li", [
                            _c("span", { staticClass: "pm-spinner" }),
                            _vm._v(" "),
                            _c(
                              "a",
                              {
                                attrs: { href: "#" },
                                on: {
                                  click: function($event) {
                                    $event.preventDefault()
                                    _vm.selfProjectMarkDone(_vm.project)
                                  }
                                }
                              },
                              [
                                _vm.project.status === "incomplete"
                                  ? _c("span", {
                                      staticClass: "dashicons dashicons-yes"
                                    })
                                  : _vm._e(),
                                _vm._v(" "),
                                _vm.project.status === "incomplete"
                                  ? _c("span", [
                                      _vm._v(_vm._s(_vm.__("Complete", "pm")))
                                    ])
                                  : _vm._e(),
                                _vm._v(" "),
                                _vm.project.status === "complete"
                                  ? _c("span", {
                                      staticClass: "dashicons dashicons-undo"
                                    })
                                  : _vm._e(),
                                _vm._v(" "),
                                _vm.project.status === "complete"
                                  ? _c("span", [
                                      _vm._v(_vm._s(_vm.__("Restore", "pm")))
                                    ])
                                  : _vm._e()
                              ]
                            )
                          ])
                        ])
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c("pm-do-action", { attrs: { hook: "pm_project_header" } })
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          _c("div", { staticClass: "clearfix" }),
          _vm._v(" "),
          _vm.is_manager()
            ? _c("transition", { attrs: { name: "slide" } }, [
                _vm.is_project_edit_mode
                  ? _c(
                      "div",
                      { staticClass: "pm-edit-project" },
                      [_c("edit-project", { attrs: { is_update: true } })],
                      1
                    )
                  : _vm._e()
              ])
            : _vm._e()
        ],
        1
      ),
      _vm._v(" "),
      _c("div", { staticClass: "pm-row pm-project-group" }, [
        _vm.menu.length
          ? _c(
              "ul",
              [
                _vm._l(_vm.menu, function(item) {
                  return _c(
                    "li",
                    [
                      _c(
                        "router-link",
                        { class: item.class, attrs: { to: item.route } },
                        [
                          _c("span", [_vm._v(_vm._s(item.name))]),
                          _vm._v(" "),
                          _c("div", [_vm._v(_vm._s(item.count))])
                        ]
                      )
                    ],
                    1
                  )
                }),
                _vm._v(" "),
                _c("do-action", {
                  attrs: { hook: "pm-header-menu", actionData: _vm.menu }
                })
              ],
              2
            )
          : _vm._e()
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "clearfix" })
    ]
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-14704110", esExports)
  }
}

/***/ }),
/* 317 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "a",
    {
      staticClass: "pm-btn pm-plus-white pm-btn-uppercase",
      attrs: { href: "#", id: "pm-create-project" },
      on: {
        click: function($event) {
          $event.preventDefault()
          _vm.is_popup_active()
        }
      }
    },
    [
      _c("i", {
        staticClass: "fa fa-plus-circle",
        attrs: { "aria-hidden": "true" }
      }),
      _vm._v(" " + _vm._s(_vm.__("New Project", "pm")) + "\n")
    ]
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-168f8210", esExports)
  }
}

/***/ }),
/* 318 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c(
      "form",
      {
        staticClass: "pm-project-filters",
        attrs: { action: "", method: "get", id: "pm-project-filters" }
      },
      [
        _c(
          "select",
          {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.categorie_id,
                expression: "categorie_id"
              }
            ],
            on: {
              change: [
                function($event) {
                  var $$selectedVal = Array.prototype.filter
                    .call($event.target.options, function(o) {
                      return o.selected
                    })
                    .map(function(o) {
                      var val = "_value" in o ? o._value : o.value
                      return val
                    })
                  _vm.categorie_id = $event.target.multiple
                    ? $$selectedVal
                    : $$selectedVal[0]
                },
                function($event) {
                  _vm.categoryFilter()
                }
              ]
            }
          },
          [
            _c("option", { attrs: { value: "-1" } }, [
              _vm._v(
                "\n               " +
                  _vm._s(_vm.__("- Project Category -", "pm")) +
                  "\n            "
              )
            ]),
            _vm._v(" "),
            _vm._l(_vm.categories, function(categorie) {
              return _c("option", { domProps: { value: categorie.id } }, [
                _vm._v(
                  "\n                " +
                    _vm._s(categorie.title) +
                    "\n            "
                )
              ])
            })
          ],
          2
        )
      ]
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-17ca26f2", esExports)
  }
}

/***/ }),
/* 319 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { class: "pm-task-form pm-slide-" + _vm.task.id }, [
    _c(
      "form",
      {
        staticClass: "pm-form",
        attrs: { action: "", method: "post" },
        on: {
          submit: function($event) {
            $event.preventDefault()
            _vm.taskFormAction()
          }
        }
      },
      [
        _c("div", { staticClass: "item task-title" }, [
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.task.title,
                expression: "task.title"
              }
            ],
            staticClass: "task_title",
            attrs: {
              type: "text",
              name: "task_title",
              placeholder: _vm.add_new_task,
              value: "",
              required: "required"
            },
            domProps: { value: _vm.task.title },
            on: {
              input: function($event) {
                if ($event.target.composing) {
                  return
                }
                _vm.$set(_vm.task, "title", $event.target.value)
              }
            }
          })
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "item content" }, [
          _c("textarea", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.task_description,
                expression: "task_description"
              }
            ],
            staticClass: "todo_content",
            attrs: {
              name: "task_text",
              cols: "40",
              placeholder: _vm.task_description_placeholder,
              rows: "2"
            },
            domProps: { value: _vm.task_description },
            on: {
              input: function($event) {
                if ($event.target.composing) {
                  return
                }
                _vm.task_description = $event.target.value
              }
            }
          })
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "item date" }, [
          _vm.task_start_field
            ? _c(
                "div",
                { staticClass: "pm-task-start-field" },
                [
                  _c("pm-datepickter", {
                    staticClass: "pm-datepickter-from",
                    attrs: {
                      dependency: "pm-datepickter-to",
                      placeholder: _vm.task_start_date
                    },
                    model: {
                      value: _vm.task.start_at.date,
                      callback: function($$v) {
                        _vm.$set(_vm.task.start_at, "date", $$v)
                      },
                      expression: "task.start_at.date"
                    }
                  })
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "pm-task-due-field" },
            [
              _c("pm-datepickter", {
                staticClass: "pm-datepickter-to",
                attrs: {
                  dependency: "pm-datepickter-from",
                  placeholder: _vm.task_due_date
                },
                model: {
                  value: _vm.task.due_date.date,
                  callback: function($$v) {
                    _vm.$set(_vm.task.due_date, "date", $$v)
                  },
                  expression: "task.due_date.date"
                }
              })
            ],
            1
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "item user" }, [
          _c(
            "div",
            [
              _c("multiselect", {
                attrs: {
                  options: _vm.project_users,
                  multiple: true,
                  "close-on-select": false,
                  "clear-on-select": false,
                  "hide-selected": true,
                  "show-labels": false,
                  placeholder: _vm.select_user_text,
                  label: "display_name",
                  "track-by": "id"
                },
                model: {
                  value: _vm.task.assignees.data,
                  callback: function($$v) {
                    _vm.$set(_vm.task.assignees, "data", $$v)
                  },
                  expression: "task.assignees.data"
                }
              })
            ],
            1
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "item task-title" }, [
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.task.estimation,
                expression: "task.estimation"
              }
            ],
            staticClass: "pm-task-estimation",
            attrs: {
              type: "number",
              min: "1",
              placeholder: _vm.__("Estimated hour to complete the task", "pm"),
              value: "",
              required: "required"
            },
            domProps: { value: _vm.task.estimation },
            on: {
              input: function($event) {
                if ($event.target.composing) {
                  return
                }
                _vm.$set(_vm.task, "estimation", $event.target.value)
              }
            }
          })
        ]),
        _vm._v(" "),
        _c("pm-do-action", {
          attrs: { hook: "pm_task_form", actionData: _vm.task }
        }),
        _vm._v(" "),
        _c("div", { staticClass: "item submit" }, [
          _c("span", { staticClass: "pm-new-task-spinner" }),
          _vm._v(" "),
          _vm.task.id
            ? _c("span", [
                _c("input", {
                  staticClass: "button-primary",
                  attrs: {
                    disabled: _vm.submit_disabled,
                    type: "submit",
                    name: "submit_todo"
                  },
                  domProps: { value: _vm.update_task }
                })
              ])
            : _vm._e(),
          _vm._v(" "),
          !_vm.task.id
            ? _c("span", [
                _c("input", {
                  staticClass: "button-primary",
                  attrs: {
                    disabled: _vm.submit_disabled,
                    type: "submit",
                    name: "submit_todo"
                  },
                  domProps: { value: _vm.add_task }
                })
              ])
            : _vm._e(),
          _vm._v(" "),
          _c(
            "a",
            {
              staticClass: "button todo-cancel",
              attrs: { href: "#" },
              on: {
                click: function($event) {
                  $event.preventDefault()
                  _vm.showHideTaskFrom(false, _vm.list, _vm.task)
                }
              }
            },
            [_vm._v(_vm._s(_vm.__("Cancel", "pm")))]
          ),
          _vm._v(" "),
          _c("span", {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.show_spinner,
                expression: "show_spinner"
              }
            ],
            staticClass: "pm-spinner"
          })
        ])
      ],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-182bf602", esExports)
  }
}

/***/ }),
/* 320 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "pm-wrap pm-front-end" },
    [
      _c("pm-header"),
      _vm._v(" "),
      !_vm.fetchOverview
        ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(0)])
        : _vm._e(),
      _vm._v(" "),
      _vm.fetchOverview
        ? _c("div", { staticClass: "project-overview" }, [
            _c("div", { staticClass: "pm-col-10 pm-sm-col-12" }, [
              _c("div", { staticClass: "overview-menu" }, [
                _c("ul", [
                  _c(
                    "li",
                    { staticClass: "message" },
                    [
                      _c(
                        "router-link",
                        {
                          attrs: {
                            to: {
                              name: "discussions",
                              params: {
                                project_id: _vm.project_id
                              }
                            }
                          }
                        },
                        [
                          _c("div", { staticClass: "icon" }),
                          _vm._v(" "),
                          _c("div", { staticClass: "count" }, [
                            _c("span", [
                              _vm._v(_vm._s(_vm.meta.total_discussion_boards))
                            ]),
                            _vm._v(
                              " \n                                " +
                                _vm._s(_vm.__("Discussions", "pm")) +
                                "\n                            "
                            )
                          ])
                        ]
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "li",
                    { staticClass: "todo" },
                    [
                      _c(
                        "router-link",
                        {
                          attrs: {
                            to: {
                              name: "task_lists",
                              params: {
                                project_id: _vm.project_id
                              }
                            }
                          }
                        },
                        [
                          _c("div", { staticClass: "icon" }),
                          _vm._v(" "),
                          _c("div", { staticClass: "count" }, [
                            _c("span", [
                              _vm._v(_vm._s(_vm.meta.total_task_lists))
                            ]),
                            _vm._v(
                              " \n                                " +
                                _vm._s(_vm.__("Task Lists", "pm")) +
                                "\n                            "
                            )
                          ])
                        ]
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("li", { staticClass: "todos" }, [
                    _c("a", [
                      _c("div", { staticClass: "icon" }),
                      _vm._v(" "),
                      _c("div", { staticClass: "count" }, [
                        _c("span", [_vm._v(_vm._s(_vm.meta.total_tasks))]),
                        _vm._v(
                          " \n                                " +
                            _vm._s(_vm.__("Tasks", "pm")) +
                            "\n                            "
                        )
                      ])
                    ])
                  ]),
                  _vm._v(" "),
                  _c("li", { staticClass: "comments" }, [
                    _c("a", [
                      _c("div", { staticClass: "icon" }),
                      _vm._v(" "),
                      _c("div", { staticClass: "count" }, [
                        _c("span", [_vm._v(_vm._s(_vm.meta.total_comments))]),
                        _vm._v(
                          "  \n                                " +
                            _vm._s(_vm.__("Comments", "pm")) +
                            "\n                            "
                        )
                      ])
                    ])
                  ]),
                  _vm._v(" "),
                  _c(
                    "li",
                    { staticClass: "files" },
                    [
                      _c(
                        "router-link",
                        {
                          attrs: {
                            to: {
                              name: "pm_files",
                              params: {
                                project_id: _vm.project_id
                              }
                            }
                          }
                        },
                        [
                          _c("div", { staticClass: "icon" }),
                          _vm._v(" "),
                          _c("div", { staticClass: "count" }, [
                            _c("span", [_vm._v(_vm._s(_vm.meta.total_files))]),
                            _vm._v(
                              "  \n                                    " +
                                _vm._s(_vm.__("Files", "pm")) +
                                "\n                            "
                            )
                          ])
                        ]
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "li",
                    { staticClass: "milestone" },
                    [
                      _c(
                        "router-link",
                        {
                          attrs: {
                            to: {
                              name: "milestones",
                              params: {
                                project_id: _vm.project_id
                              }
                            }
                          }
                        },
                        [
                          _c("div", { staticClass: "icon" }),
                          _vm._v(" "),
                          _c("div", { staticClass: "count" }, [
                            _c("span", [
                              _vm._v(_vm._s(_vm.meta.total_milestones))
                            ]),
                            _vm._v(
                              " \n                                    " +
                                _vm._s(_vm.__("Milestones", "pm")) +
                                "\n                            "
                            )
                          ])
                        ]
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "clearfix" })
                ])
              ]),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-chart", attrs: { id: "pm-chart" } },
                [
                  _c("h3", [_vm._v(_vm._s(_vm.__("Last 30 days", "pm")))]),
                  _vm._v(" "),
                  _c("canvas", {
                    directives: [
                      {
                        name: "pm-overview-chart",
                        rawName: "v-pm-overview-chart"
                      }
                    ],
                    staticStyle: { width: "819px", height: "328px" },
                    attrs: { width: "1638", height: "656" }
                  })
                ]
              )
            ]),
            _vm._v(" "),
            _c(
              "div",
              {
                staticClass: "pm-col-2 pm-sm-col-12 pm-right-part pm-last-col"
              },
              [
                _c("h3", { staticClass: "pm-border-bottom" }, [
                  _vm._v(" " + _vm._s(_vm.__("Users", "pm")) + " ")
                ]),
                _vm._v(" "),
                _c(
                  "ul",
                  { staticClass: "user_list" },
                  _vm._l(_vm.users, function(user) {
                    return _c(
                      "li",
                      [
                        _c("img", {
                          staticClass: "avatar avatar-34 photo",
                          attrs: {
                            alt: "admin",
                            src: user.avatar_url,
                            height: "34",
                            width: "34"
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "a",
                          { attrs: { href: _vm.myTaskRedirect(user.id) } },
                          [
                            _vm._v(
                              "\n                        " +
                                _vm._s(user.display_name) +
                                "\n                    "
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _vm._l(user.roles.data, function(role) {
                          return _c("span", [_vm._v(_vm._s(role.title))])
                        })
                      ],
                      2
                    )
                  })
                )
              ]
            ),
            _vm._v(" "),
            _c("div", { staticClass: "clearfix" })
          ])
        : _vm._e()
    ],
    1
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "loadmoreanimation" }, [
      _c("div", { staticClass: "load-spinner" }, [
        _c("div", { staticClass: "rect1" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect2" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect3" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect4" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect5" })
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-1bb02dfa", esExports)
  }
}

/***/ }),
/* 321 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("input", {
    attrs: { type: "text" },
    domProps: { value: _vm.value }
  })
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-1c481b9b", esExports)
  }
}

/***/ }),
/* 322 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "pm-incomplete-tasks" }, [
    _c(
      "ul",
      {
        directives: [{ name: "pm-sortable", rawName: "v-pm-sortable" }],
        staticClass: "pm-todos pm-todolist-content pm-incomplete-task"
      },
      [
        _vm._l(_vm.getIncompleteTasks, function(task, task_index) {
          return _c(
            "li",
            {
              key: task.id,
              staticClass: "pm-todo",
              class: "pm-fade-out-" + task.id,
              attrs: { "data-id": task.id, "data-order": task.order }
            },
            [
              _c("incompleted-tasks", { attrs: { task: task, list: _vm.list } })
            ],
            1
          )
        }),
        _vm._v(" "),
        !_vm.getIncompleteTasks.length
          ? _c("li", { staticClass: "nonsortable" }, [
              _vm._v(_vm._s(_vm.__("No tasks found.", "pm")))
            ])
          : _vm._e(),
        _vm._v(" "),
        _vm.can_create_task
          ? _c("transition", { attrs: { name: "slide" } }, [
              _vm.list.show_task_form
                ? _c(
                    "li",
                    { staticClass: "pm-todo-form nonsortable" },
                    [_c("new-task-form", { attrs: { list: _vm.list } })],
                    1
                  )
                : _vm._e()
            ])
          : _vm._e()
      ],
      2
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-209dc5cc", esExports)
  }
}

/***/ }),
/* 323 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "wedevs-pm-wrap wrap pm",
      attrs: { id: "wedevs-project-manager" }
    },
    [
      _c("h1", { staticClass: "hrm-h1" }),
      _vm._v(" "),
      _c("do-action", { attrs: { hook: "pm-before-router-view" } }),
      _vm._v(" "),
      _c("router-view"),
      _vm._v(" "),
      _c("do-action", { attrs: { hook: "addons-component" } })
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-24fef4ce", esExports)
  }
}

/***/ }),
/* 324 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.upComingMileStones.length
    ? _c(
        "div",
        { staticClass: "pm-upcomming-milestone pm-milestone-data" },
        [
          _c("h2", { staticClass: "group-title" }, [
            _vm._v(_vm._s(_vm.__("Upcoming Milestones", "pm")))
          ]),
          _vm._v(" "),
          _vm._l(_vm.upComingMileStones, function(milestone) {
            return _c(
              "div",
              { staticClass: "pm-milestone late" },
              [
                _c("div", { staticClass: "milestone-detail " }, [
                  _c(
                    "h3",
                    { staticClass: "milestone-head" },
                    [
                      _vm._v(
                        "\n                " + _vm._s(milestone.title) + " "
                      ),
                      _c("br"),
                      _vm._v(" "),
                      _c("span", { staticClass: "time-left" }, [
                        _vm._v(
                          "\n                    (" +
                            _vm._s(_vm.humanDate(milestone)) +
                            " " +
                            _vm._s(_vm.__("left -", "pm")) +
                            " \n                    "
                        ),
                        _c(
                          "time",
                          {
                            attrs: {
                              datetime: _vm.momentFormat(milestone),
                              title: _vm.momentFormat(milestone)
                            }
                          },
                          [
                            _vm._v(
                              "\n                        " +
                                _vm._s(_vm.getDueDate(milestone)) +
                                "\n                    "
                            )
                          ]
                        ),
                        _vm._v("\n                    )\n                ")
                      ]),
                      _vm._v(" "),
                      _c("action", { attrs: { milestone: milestone } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "detail" }, [
                    _c("div", {
                      domProps: { innerHTML: _vm._s(milestone.content) }
                    })
                  ])
                ]),
                _vm._v(" "),
                _vm.can_edit_milestone(milestone)
                  ? _c("transition", { attrs: { name: "slide" } }, [
                      milestone.edit_mode
                        ? _c(
                            "div",
                            {
                              staticClass:
                                "pm-milestone-edit-form pm-col-6 pm-sm-col-12",
                              staticStyle: {
                                float: "none",
                                "margin-left": "20px"
                              }
                            },
                            [
                              _c("new-milestone-form", {
                                attrs: {
                                  section: "milestones",
                                  milestone: milestone
                                }
                              })
                            ],
                            1
                          )
                        : _vm._e()
                    ])
                  : _vm._e(),
                _vm._v(" "),
                _c("div", { staticClass: "pm-milestone-items-details" }, [
                  milestone.task_lists.data.length
                    ? _c(
                        "div",
                        {
                          staticClass: "pm-col-6 pm-milestone-todo pm-sm-col-12"
                        },
                        [
                          _c("h3", [
                            _vm._v(_vm._s(_vm.__("Task Lists", "pm")))
                          ]),
                          _vm._v(" "),
                          _c(
                            "ul",
                            _vm._l(milestone.task_lists.data, function(list) {
                              return _c(
                                "li",
                                [_c("list", { attrs: { list: list } })],
                                1
                              )
                            })
                          )
                        ]
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  milestone.discussion_boards.data.length
                    ? _c(
                        "div",
                        {
                          staticClass:
                            "pm-col-6 pm-milestone-discussion pm-last-col pm-sm-col-12"
                        },
                        [
                          _c("h3", [
                            _vm._v(_vm._s(_vm.__("Discussions", "pm")))
                          ]),
                          _vm._v(" "),
                          _c(
                            "ul",
                            _vm._l(milestone.discussion_boards.data, function(
                              discuss
                            ) {
                              return _c(
                                "li",
                                [
                                  _c("discuss", { attrs: { discuss: discuss } })
                                ],
                                1
                              )
                            })
                          )
                        ]
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  _c("div", { staticClass: "clearfix" })
                ])
              ],
              1
            )
          })
        ],
        2
      )
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-28c1332d", esExports)
  }
}

/***/ }),
/* 325 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "color-picker-container" },
    [
      _c(
        "button",
        {
          staticClass: "button color-picker-button",
          style: { backgroundColor: _vm.value },
          attrs: { type: "button" },
          on: { click: _vm.toggleColorPicker }
        },
        [_c("span", [_vm._v(_vm._s(_vm.__("Select Color", "pm")))])]
      ),
      _vm._v(" "),
      _vm.showColorPicker && _vm.format === "hex"
        ? _c("input", {
            staticClass: "hex-input",
            attrs: { type: "text" },
            domProps: { value: _vm.value },
            on: {
              input: function($event) {
                _vm.setHexColor($event.target.value)
              }
            }
          })
        : _vm._e(),
      _vm._v(" "),
      _vm.showColorPicker
        ? _c("div", { staticClass: "button-group" }, [
            _c(
              "button",
              {
                staticClass: "button button-small",
                attrs: { type: "button" },
                on: {
                  click: function($event) {
                    _vm.updateColor({})
                  }
                }
              },
              [_vm._v(_vm._s(_vm.__("Clear", "pm")))]
            ),
            _vm._v(" "),
            _c(
              "button",
              {
                staticClass: "button button-small",
                attrs: { type: "button" },
                on: { click: _vm.toggleColorPicker }
              },
              [_vm._v(_vm._s(_vm.__("Close", "pm")))]
            )
          ])
        : _vm._e(),
      _vm._v(" "),
      _vm.showColorPicker
        ? _c("sketch", {
            attrs: {
              value: _vm.value,
              "preset-colors": _vm.presetColors,
              "disable-alpha": _vm.disableAlpha,
              "disable-fields": _vm.disableFields
            },
            on: { input: _vm.updateColor }
          })
        : _vm._e()
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-2ade92fb", esExports)
  }
}

/***/ }),
/* 326 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("span", { domProps: { innerHTML: _vm._s(_vm.parseMessage) } })
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-2b3842ac", esExports)
  }
}

/***/ }),
/* 327 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "pm-wrap pm-front-end" },
    [
      _c("pm-header"),
      _vm._v(" "),
      !_vm.is_pro
        ? _c("div", [
            _vm.loading
              ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(0)])
              : _vm._e(),
            _vm._v(" "),
            !_vm.loading
              ? _c("div", [
                  _vm.files.length
                    ? _c(
                        "ul",
                        { staticClass: "pm-folders-list" },
                        [
                          _vm._l(_vm.files, function(file) {
                            return _c("li", { staticClass: "file" }, [
                              _c("div", { staticClass: "ff-content" }, [
                                _c("div", [
                                  _c("div", { staticClass: "image-content" }, [
                                    file.type == "image"
                                      ? _c(
                                          "a",
                                          {
                                            directives: [
                                              {
                                                name: "pm-pretty-photo",
                                                rawName: "v-pm-pretty-photo"
                                              }
                                            ],
                                            staticClass: "pm-colorbox-img",
                                            attrs: {
                                              href: _vm.getDownloadUrl(
                                                file.attachment_id
                                              ),
                                              title: file.name,
                                              target: "_blank"
                                            }
                                          },
                                          [
                                            _c("img", {
                                              attrs: {
                                                src: file.thumb,
                                                alt: file.name
                                              }
                                            })
                                          ]
                                        )
                                      : _c(
                                          "a",
                                          {
                                            staticClass: "pm-colorbox-img",
                                            attrs: {
                                              href: _vm.getDownloadUrl(
                                                file.attachment_id
                                              ),
                                              title: file.name,
                                              target: "_blank"
                                            }
                                          },
                                          [
                                            _c("img", {
                                              attrs: {
                                                src: file.thumb,
                                                alt: file.name
                                              }
                                            })
                                          ]
                                        ),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "item-title" }, [
                                      _vm._v(_vm._s(file.name.slice(0, 20)))
                                    ]),
                                    _vm._v(" "),
                                    _c("span", { staticClass: "text" }, [
                                      _vm._v(
                                        "\n                                    " +
                                          _vm._s(_vm.__("Attached to", "pm")) +
                                          " \n                                    "
                                      ),
                                      _c(
                                        "a",
                                        {
                                          attrs: { href: _vm.contentURL(file) }
                                        },
                                        [_vm._v(_vm._s(_vm.attachTo(file)))]
                                      ),
                                      _vm._v(
                                        "  \n                                    " +
                                          _vm._s(_vm.__("by", "pm")) +
                                          " \n                                    "
                                      ),
                                      _c(
                                        "a",
                                        {
                                          attrs: {
                                            href: "#/my-tasks",
                                            title: "admin"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "\n                                        " +
                                              _vm._s(_vm.__("admin", "pm")) +
                                              "\n                                    "
                                          )
                                        ]
                                      )
                                    ])
                                  ]),
                                  _vm._v(" "),
                                  _c("div", { staticClass: "footer-section" }, [
                                    _c(
                                      "a",
                                      {
                                        attrs: {
                                          href: _vm.getDownloadUrl(
                                            file.attachment_id
                                          )
                                        }
                                      },
                                      [
                                        _c("span", {
                                          staticClass:
                                            "dashicons dashicons-download"
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "a",
                                      { attrs: { href: _vm.contentURL(file) } },
                                      [
                                        _c("span", {
                                          staticClass:
                                            "dashicons dashicons-admin-links"
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "a",
                                      {
                                        staticClass: "pm-comments-count",
                                        attrs: { href: _vm.contentURL(file) }
                                      },
                                      [
                                        _c("span", {
                                          staticClass:
                                            "pm-btn pm-btn-blue pm-comment-count"
                                        })
                                      ]
                                    )
                                  ])
                                ])
                              ])
                            ])
                          }),
                          _vm._v(" "),
                          _c("div", { staticClass: "clearfix" })
                        ],
                        2
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  !_vm.files.length
                    ? _c("ul", [
                        _c("li", [
                          _vm._v(_vm._s(_vm.__("No result found!", "pm")))
                        ])
                      ])
                    : _vm._e()
                ])
              : _vm._e()
          ])
        : _c("div", [_c("do-action", { attrs: { hook: "pm_file_footer" } })], 1)
    ],
    1
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "loadmoreanimation" }, [
      _c("div", { staticClass: "load-spinner" }, [
        _c("div", { staticClass: "rect1" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect2" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect3" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect4" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect5" })
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-2ccb1bca", esExports)
  }
}

/***/ }),
/* 328 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "pm-todo-wrap clearfix" },
    [
      _c("div", { staticClass: "pm-todo-content" }, [
        _c("div", [
          _c(
            "div",
            { staticClass: "pm-col-6" },
            [
              _c("input", {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.task.status,
                    expression: "task.status"
                  }
                ],
                attrs: {
                  disabled: _vm.can_complete_task(_vm.task),
                  type: "checkbox",
                  value: "",
                  name: ""
                },
                domProps: {
                  checked: Array.isArray(_vm.task.status)
                    ? _vm._i(_vm.task.status, "") > -1
                    : _vm.task.status
                },
                on: {
                  click: function($event) {
                    _vm.doneUndone()
                  },
                  change: function($event) {
                    var $$a = _vm.task.status,
                      $$el = $event.target,
                      $$c = $$el.checked ? true : false
                    if (Array.isArray($$a)) {
                      var $$v = "",
                        $$i = _vm._i($$a, $$v)
                      if ($$el.checked) {
                        $$i < 0 &&
                          _vm.$set(_vm.task, "status", $$a.concat([$$v]))
                      } else {
                        $$i > -1 &&
                          _vm.$set(
                            _vm.task,
                            "status",
                            $$a.slice(0, $$i).concat($$a.slice($$i + 1))
                          )
                      }
                    } else {
                      _vm.$set(_vm.task, "status", $$c)
                    }
                  }
                }
              }),
              _vm._v(" "),
              _c("span", { staticClass: "task-title" }, [
                _c(
                  "a",
                  {
                    attrs: { href: "#" },
                    on: {
                      click: function($event) {
                        $event.preventDefault()
                        _vm.getSingleTask(_vm.task)
                      }
                    }
                  },
                  [
                    _c("span", { staticClass: "pm-todo-text" }, [
                      _vm._v(_vm._s(_vm.task.title))
                    ])
                  ]
                )
              ]),
              _vm._v(" "),
              _vm._l(_vm.task.assignees.data, function(user) {
                return _c(
                  "span",
                  { key: user.id, staticClass: "pm-assigned-user" },
                  [
                    _c(
                      "a",
                      {
                        attrs: {
                          href: _vm.myTaskRedirect(user.id),
                          title: user.display_name
                        }
                      },
                      [
                        _c("img", {
                          attrs: {
                            src: user.avatar_url,
                            alt: user.display_name,
                            height: "48",
                            width: "48"
                          }
                        })
                      ]
                    )
                  ]
                )
              }),
              _vm._v(" "),
              _vm.taskTimeWrap(_vm.task)
                ? _c(
                    "span",
                    { class: _vm.completedTaskWrap(_vm.task.due_date.date) },
                    [
                      _vm.task_start_field
                        ? _c("span", [
                            _vm._v(
                              _vm._s(_vm.dateFormat(_vm.task.start_at.date))
                            )
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _vm.isBetweenDate(
                        _vm.task_start_field,
                        _vm.task.start_at.date,
                        _vm.task.due_date.date
                      )
                        ? _c("span", [_vm._v("–")])
                        : _vm._e(),
                      _vm._v(" "),
                      _c("span", [
                        _vm._v(_vm._s(_vm.dateFormat(_vm.task.due_date.date)))
                      ])
                    ]
                  )
                : _vm._e()
            ],
            2
          ),
          _vm._v(" "),
          _c("div", { staticClass: "pm-col-5" }, [
            _c("span", { staticClass: "pm-comment-count" }, [
              _c("a", { attrs: { href: "#" } }, [
                _vm._v(
                  "\n                        " +
                    _vm._s(_vm.task.comment_count) +
                    "\n                    "
                )
              ])
            ])
          ]),
          _vm._v(" "),
          _vm.can_edit_task(_vm.task)
            ? _c(
                "div",
                { staticClass: "pm-col-1 pm-todo-action-right pm-last-col" },
                [
                  _c(
                    "a",
                    {
                      staticClass: "pm-todo-delete",
                      attrs: { href: "#" },
                      on: {
                        click: function($event) {
                          $event.preventDefault()
                          _vm.deleteTask({ task: _vm.task, list: _vm.list })
                        }
                      }
                    },
                    [_c("span", { staticClass: "dashicons dashicons-trash" })]
                  )
                ]
              )
            : _vm._e(),
          _vm._v(" "),
          _c("div", { staticClass: "clearfix" })
        ])
      ]),
      _vm._v(" "),
      _vm.can_edit_task(_vm.task)
        ? _c("transition", { attrs: { name: "slide" } }, [
            _vm.task.edit_mode
              ? _c(
                  "div",
                  { staticClass: "pm-todo-form" },
                  [
                    _c("new-task-form", {
                      attrs: { task: _vm.task, list: _vm.list }
                    })
                  ],
                  1
                )
              : _vm._e()
          ])
        : _vm._e(),
      _vm._v(" "),
      parseInt(_vm.taskId) && parseInt(_vm.projectId)
        ? _c(
            "div",
            [
              _c("single-task", {
                attrs: { taskId: _vm.taskId, projectId: _vm.projectId }
              })
            ],
            1
          )
        : _vm._e()
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-2d43aa2f", esExports)
  }
}

/***/ }),
/* 329 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "pm-list-comment-wrap" }, [
    _c("h3", { staticClass: "pm-comment-title" }, [
      _vm._v(_vm._s(_vm.__("Discuss this task list", "pm")))
    ]),
    _vm._v(" "),
    _vm.comments.length
      ? _c(
          "ul",
          { staticClass: "pm-comment-wrap" },
          _vm._l(_vm.comments, function(comment) {
            return _c(
              "li",
              {
                key: comment.id,
                class: "pm-comment clearfix even pm-fade-out-" + comment.id
              },
              [
                _c("div", { staticClass: "pm-avatar" }, [
                  _c(
                    "a",
                    {
                      attrs: {
                        href: _vm.myTaskRedirect(comment.creator.data.id),
                        title: comment.creator.data.display_name
                      }
                    },
                    [
                      _c("img", {
                        staticClass: "avatar avatar-96 photo",
                        attrs: {
                          alt: comment.creator.data.display_name,
                          src: comment.creator.data.avatar_url,
                          height: "96",
                          width: "96"
                        }
                      })
                    ]
                  )
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "pm-comment-container" },
                  [
                    _c("div", { staticClass: "pm-comment-meta" }, [
                      _vm._v(
                        "\n                    " +
                          _vm._s(_vm.__("By", "pm")) +
                          "\n                    "
                      ),
                      _c("span", { staticClass: "pm-author" }, [
                        _c(
                          "a",
                          {
                            attrs: {
                              href: _vm.myTaskRedirect(comment.creator.data.id),
                              title: comment.creator.data.display_name
                            }
                          },
                          [
                            _vm._v(
                              "\n                            " +
                                _vm._s(comment.creator.data.display_name) +
                                "\n                        "
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("span", [_vm._v(_vm._s(_vm.__("on", "pm")))]),
                      _vm._v(" "),
                      _c("span", { staticClass: "pm-date" }, [
                        _c(
                          "time",
                          {
                            attrs: {
                              datetime: _vm.dateISO8601Format(
                                comment.comment_date
                              ),
                              title: _vm.dateISO8601Format(comment.comment_date)
                            }
                          },
                          [
                            _vm._v(
                              _vm._s(_vm.dateTimeFormat(comment.comment_date))
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _vm.can_edit_comment(comment)
                        ? _c("div", { staticClass: "pm-comment-action" }, [
                            _c("span", { staticClass: "pm-edit-link" }, [
                              _c("a", {
                                staticClass: "dashicons dashicons-edit",
                                attrs: { href: "#" },
                                on: {
                                  click: function($event) {
                                    $event.preventDefault()
                                    _vm.showHideListCommentEditForm(comment)
                                  }
                                }
                              })
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "pm-delete-link" }, [
                              _c("a", {
                                staticClass: "dashicons dashicons-trash",
                                attrs: { href: "#" },
                                on: {
                                  click: function($event) {
                                    $event.preventDefault()
                                    _vm.deleteListComment(comment.id)
                                  }
                                }
                              })
                            ])
                          ])
                        : _vm._e()
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "pm-comment-content" }, [
                      _c("div", {
                        domProps: { innerHTML: _vm._s(comment.content) }
                      }),
                      _vm._v(" "),
                      comment.files.data.length
                        ? _c(
                            "ul",
                            { staticClass: "pm-attachments" },
                            _vm._l(comment.files.data, function(file) {
                              return _c("li", [
                                file.type == "image"
                                  ? _c(
                                      "a",
                                      {
                                        directives: [
                                          {
                                            name: "pm-pretty-photo",
                                            rawName: "v-pm-pretty-photo"
                                          }
                                        ],
                                        staticClass: "pm-colorbox-img",
                                        attrs: {
                                          href: _vm.getDownloadUrl(
                                            file.attachment_id
                                          ),
                                          title: file.name,
                                          target: "_blank"
                                        }
                                      },
                                      [
                                        _c("img", {
                                          staticClass: "pm-content-img-size",
                                          attrs: {
                                            src: file.thumb,
                                            alt: file.name
                                          }
                                        })
                                      ]
                                    )
                                  : _c(
                                      "a",
                                      {
                                        staticClass: "pm-colorbox-img",
                                        attrs: {
                                          href: _vm.getDownloadUrl(
                                            file.attachment_id
                                          ),
                                          title: file.name,
                                          target: "_blank"
                                        }
                                      },
                                      [
                                        _c("img", {
                                          staticClass: "pm-content-img-size",
                                          attrs: {
                                            src: file.thumb,
                                            alt: file.name
                                          }
                                        })
                                      ]
                                    )
                              ])
                            })
                          )
                        : _vm._e()
                    ]),
                    _vm._v(" "),
                    _vm.can_edit_comment(comment)
                      ? _c("transition", { attrs: { name: "slide" } }, [
                          comment.edit_mode
                            ? _c(
                                "div",
                                { staticClass: "pm-comment-edit-form" },
                                [
                                  _c(
                                    "div",
                                    { class: "pm-slide-" + comment.id },
                                    [
                                      _c("list-comment-form", {
                                        attrs: {
                                          comment: comment,
                                          list: _vm.list
                                        }
                                      })
                                    ],
                                    1
                                  )
                                ]
                              )
                            : _vm._e()
                        ])
                      : _vm._e()
                  ],
                  1
                )
              ]
            )
          })
        )
      : _vm._e(),
    _vm._v(" "),
    _c("div", { staticClass: "single-todo-comments" }, [
      _c(
        "div",
        { staticClass: "pm-comment-form-wrap" },
        [
          _c("div", { staticClass: "pm-avatar" }, [
            _c(
              "a",
              {
                attrs: { href: _vm.myTaskRedirect(_vm.PM_Vars.current_user.ID) }
              },
              [
                _c("img", {
                  attrs: {
                    src: _vm.getCurrentUserAvatar,
                    height: "48",
                    width: "48"
                  }
                })
              ]
            )
          ]),
          _vm._v(" "),
          _c("list-comment-form", { attrs: { comment: {}, list: _vm.list } })
        ],
        1
      )
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-30541e26", esExports)
  }
}

/***/ }),
/* 330 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm._m(0)
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", [
      _c("div", { staticClass: "postbox pm-pro-notice" }, [
        _c("div", { staticClass: "pm-text" }, [
          _vm._v(
            "\n            This feature is only available in the Pro Version.                "
          )
        ]),
        _vm._v(" "),
        _c(
          "a",
          {
            staticClass: "button button-primary",
            attrs: {
              target: "_blank",
              href:
                "https://wedevs.com/wp-project-manager-pro/pricing/?utm_source=freeplugin&utm_medium=pm-action-link&utm_campaign=pm-pro-prompt"
            }
          },
          [_vm._v("Upgrade to Pro Version")]
        )
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-325d9f2e", esExports)
  }
}

/***/ }),
/* 331 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "form-wrap" }, [
    _c(
      "form",
      {
        attrs: { action: "" },
        on: {
          submit: function($event) {
            $event.preventDefault()
            _vm.updateSelfCategory()
          }
        }
      },
      [
        _c("fieldset", [
          _c("legend", { staticClass: "inline-edit-legend" }, [
            _vm._v(_vm._s(_vm.__("Quick Edit", "pm")))
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "inline-edit-col" }, [
            _c("label", [
              _c("span", { staticClass: "title" }, [
                _vm._v(_vm._s(_vm.__("Name", "pm")))
              ]),
              _vm._v(" "),
              _c("span", { staticClass: "input-text-wrap" }, [
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.category.title,
                      expression: "category.title"
                    }
                  ],
                  staticClass: "ptitle",
                  attrs: { type: "text", name: "name", value: "" },
                  domProps: { value: _vm.category.title },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.$set(_vm.category, "title", $event.target.value)
                    }
                  }
                })
              ])
            ]),
            _vm._v(" "),
            _c("label", [
              _c("span", { staticClass: "title" }, [
                _vm._v(_vm._s(_vm.__("Description", "pm")))
              ]),
              _vm._v(" "),
              _c("span", { staticClass: "input-text-wrap" }, [
                _c("textarea", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.category.description,
                      expression: "category.description"
                    }
                  ],
                  domProps: { value: _vm.category.description },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.$set(_vm.category, "description", $event.target.value)
                    }
                  }
                })
              ])
            ])
          ])
        ]),
        _vm._v(" "),
        _c("p", { staticClass: "inline-edit-save submit" }, [
          _c(
            "button",
            {
              staticClass: "cancel button alignleft",
              attrs: { type: "button" },
              on: {
                click: function($event) {
                  $event.preventDefault()
                  _vm.showHideCategoryEditForm(_vm.category)
                }
              }
            },
            [_vm._v(_vm._s(_vm.__("Cancel", "pm")))]
          ),
          _vm._v(" "),
          _c("input", {
            staticClass: "save button button-primary alignright",
            attrs: { type: "submit" },
            domProps: { value: _vm.update_category }
          }),
          _vm._v(" "),
          _c("span", {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.show_spinner,
                expression: "show_spinner"
              }
            ],
            staticClass: "pm-spinner"
          }),
          _vm._v(" "),
          _c("br", { staticClass: "clear" })
        ])
      ]
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-34e9f362", esExports)
  }
}

/***/ }),
/* 332 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "form",
    {
      staticClass: "pm-milestone-form",
      on: {
        submit: function($event) {
          $event.preventDefault()
          _vm.milestoneFormAction()
        }
      }
    },
    [
      _c("div", { staticClass: "item milestone-title" }, [
        _c("input", {
          directives: [
            {
              name: "model",
              rawName: "v-model",
              value: _vm.milestone.title,
              expression: "milestone.title"
            }
          ],
          staticClass: "required",
          attrs: {
            name: "milestone_name",
            type: "text",
            id: "milestone_name",
            value: "",
            placeholder: _vm.milestone_name
          },
          domProps: { value: _vm.milestone.title },
          on: {
            input: function($event) {
              if ($event.target.composing) {
                return
              }
              _vm.$set(_vm.milestone, "title", $event.target.value)
            }
          }
        })
      ]),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "item due" },
        [
          _c("pm-datepickter", {
            staticClass: "pm-datepickter-to",
            attrs: {
              dependency: "pm-datepickter-from",
              placeholder: _vm.due_date_text
            },
            model: {
              value: _vm.due_date,
              callback: function($$v) {
                _vm.due_date = $$v
              },
              expression: "due_date"
            }
          })
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "item detail" },
        [
          _c("text-editor", {
            attrs: { editor_id: _vm.editor_id, content: _vm.content }
          })
        ],
        1
      ),
      _vm._v(" "),
      _c("pm-do-action", {
        attrs: { hook: "pm_milestone_form", actionData: _vm.milestone }
      }),
      _vm._v(" "),
      _c("div", { staticClass: "submit" }, [
        !_vm.milestone.id
          ? _c("input", {
              staticClass: "button-primary",
              attrs: {
                type: "submit",
                name: "create_milestone",
                id: "create_milestone"
              },
              domProps: { value: _vm.add_milestone }
            })
          : _vm._e(),
        _vm._v(" "),
        _vm.milestone.id
          ? _c("input", {
              staticClass: "button-primary",
              attrs: {
                type: "submit",
                name: "update_milestone",
                id: "update_milestone"
              },
              domProps: { value: _vm.update_milestone }
            })
          : _vm._e(),
        _vm._v(" "),
        _c(
          "a",
          {
            staticClass: "button milestone-cancel",
            on: {
              click: function($event) {
                $event.preventDefault()
                _vm.showHideMilestoneForm(false, _vm.milestone)
              }
            }
          },
          [_vm._v(_vm._s(_vm.__("Cancel", "pm")))]
        ),
        _vm._v(" "),
        _c("span", {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.show_spinner,
              expression: "show_spinner"
            }
          ],
          staticClass: "pm-spinner"
        })
      ])
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-36583e05", esExports)
  }
}

/***/ }),
/* 333 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("router-view")
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-39b3e73e", esExports)
  }
}

/***/ }),
/* 334 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "pm-create-user-form-wrap" }, [
    _c("div", { staticClass: "pm-error" }),
    _vm._v(" "),
    _c(
      "form",
      {
        staticClass: "pm-user-create-form",
        attrs: { action: "" },
        on: {
          submit: function($event) {
            $event.preventDefault()
            _vm.createUser()
          }
        }
      },
      [
        _c("div", { staticClass: "pm-field-wrap" }, [
          _c("label", [_vm._v(_vm._s(_vm.__("Username", "pm")))]),
          _vm._v(" "),
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.username,
                expression: "username"
              }
            ],
            attrs: { type: "text", required: "", name: "user_name" },
            domProps: { value: _vm.username },
            on: {
              input: function($event) {
                if ($event.target.composing) {
                  return
                }
                _vm.username = $event.target.value
              }
            }
          })
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "pm-field-wrap" }, [
          _c("label", [_vm._v(_vm._s(_vm.__("First Name", "pm")))]),
          _vm._v(" "),
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.first_name,
                expression: "first_name"
              }
            ],
            attrs: { type: "text", name: "first_name" },
            domProps: { value: _vm.first_name },
            on: {
              input: function($event) {
                if ($event.target.composing) {
                  return
                }
                _vm.first_name = $event.target.value
              }
            }
          })
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "pm-field-wrap" }, [
          _c("label", [_vm._v(_vm._s(_vm.__("Last Name", "pm")))]),
          _vm._v(" "),
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.last_name,
                expression: "last_name"
              }
            ],
            attrs: { type: "text", name: "last_name" },
            domProps: { value: _vm.last_name },
            on: {
              input: function($event) {
                if ($event.target.composing) {
                  return
                }
                _vm.last_name = $event.target.value
              }
            }
          })
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "pm-field-wrap" }, [
          _c("label", [_vm._v(_vm._s(_vm.__("Email", "pm")))]),
          _vm._v(" "),
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.email,
                expression: "email"
              }
            ],
            attrs: { type: "email", required: "", name: "email" },
            domProps: { value: _vm.email },
            on: {
              input: function($event) {
                if ($event.target.composing) {
                  return
                }
                _vm.email = $event.target.value
              }
            }
          })
        ]),
        _vm._v(" "),
        _c("div", [
          _c("input", {
            staticClass: "button-primary",
            attrs: { type: "submit", name: "create_user" },
            domProps: { value: _vm.create_user }
          }),
          _vm._v(" "),
          _c("span", {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.show_spinner,
                expression: "show_spinner"
              }
            ],
            staticClass: "pm-spinner"
          })
        ])
      ]
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-43476454", esExports)
  }
}

/***/ }),
/* 335 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "pm-comment-form" }, [
    _c(
      "form",
      {
        staticClass: "pm-comment-form-vue",
        on: {
          submit: function($event) {
            $event.preventDefault()
            _vm.listCommentAction()
          }
        }
      },
      [
        _c(
          "div",
          { staticClass: "item message pm-sm-col-1" },
          [
            _c("text-editor", {
              attrs: { editor_id: _vm.editor_id, content: _vm.content }
            })
          ],
          1
        ),
        _vm._v(" "),
        _c("file-uploader", {
          attrs: { files: _vm.files, delete: _vm.deleted_files }
        }),
        _vm._v(" "),
        _c("notify-user", {
          model: {
            value: _vm.notify_users,
            callback: function($$v) {
              _vm.notify_users = $$v
            },
            expression: "notify_users"
          }
        }),
        _vm._v(" "),
        _c("div", { staticClass: "submit" }, [
          !_vm.comment.edit_mode
            ? _c("input", {
                staticClass: "button-primary",
                attrs: {
                  disabled: _vm.submit_disabled,
                  type: "submit",
                  id: ""
                },
                domProps: { value: _vm.add_new_comment }
              })
            : _vm._e(),
          _vm._v(" "),
          _vm.comment.edit_mode
            ? _c("input", {
                staticClass: "button-primary",
                attrs: {
                  disabled: _vm.submit_disabled,
                  type: "submit",
                  id: ""
                },
                domProps: { value: _vm.update_comment }
              })
            : _vm._e(),
          _vm._v(" "),
          _c("span", {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.show_spinner,
                expression: "show_spinner"
              }
            ],
            staticClass: "pm-spinner"
          })
        ])
      ],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-46d557a4", esExports)
  }
}

/***/ }),
/* 336 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "svg",
    { attrs: { viewBox: _vm.viewbox, preserveAspectRatio: "xMidYMid meet" } },
    [
      _c("rect", {
        style: { fill: "url(#" + _vm.gradientId + ")" },
        attrs: {
          "clip-path": "url(#" + _vm.clipPathId + ")",
          x: "0",
          y: "0",
          width: _vm.width,
          height: _vm.height
        }
      }),
      _vm._v(" "),
      _c(
        "defs",
        [
          _c(
            "clipPath",
            { attrs: { id: _vm.clipPathId } },
            [
              _vm._t("default", [
                _c("rect", {
                  attrs: {
                    x: "0",
                    y: "0",
                    rx: "5",
                    ry: "5",
                    width: "70",
                    height: "70"
                  }
                }),
                _vm._v(" "),
                _c("rect", {
                  attrs: {
                    x: "80",
                    y: "17",
                    rx: "4",
                    ry: "4",
                    width: "300",
                    height: "13"
                  }
                }),
                _vm._v(" "),
                _c("rect", {
                  attrs: {
                    x: "80",
                    y: "40",
                    rx: "3",
                    ry: "3",
                    width: "250",
                    height: "10"
                  }
                }),
                _vm._v(" "),
                _c("rect", {
                  attrs: {
                    x: "0",
                    y: "80",
                    rx: "3",
                    ry: "3",
                    width: "350",
                    height: "10"
                  }
                }),
                _vm._v(" "),
                _c("rect", {
                  attrs: {
                    x: "0",
                    y: "100",
                    rx: "3",
                    ry: "3",
                    width: "400",
                    height: "10"
                  }
                }),
                _vm._v(" "),
                _c("rect", {
                  attrs: {
                    x: "0",
                    y: "120",
                    rx: "3",
                    ry: "3",
                    width: "360",
                    height: "10"
                  }
                })
              ])
            ],
            2
          ),
          _vm._v(" "),
          _c(
            "linearGradient",
            { attrs: { id: _vm.gradientId } },
            [
              _c(
                "stop",
                { attrs: { offset: "0%", "stop-color": _vm.primary } },
                [
                  _c("animate", {
                    attrs: {
                      attributeName: "offset",
                      values: "-2; 1",
                      dur: _vm.formatedSpeed,
                      repeatCount: "indefinite"
                    }
                  })
                ]
              ),
              _vm._v(" "),
              _c(
                "stop",
                { attrs: { offset: "50%", "stop-color": _vm.secondary } },
                [
                  _c("animate", {
                    attrs: {
                      attributeName: "offset",
                      values: "-1.5; 1.5",
                      dur: _vm.formatedSpeed,
                      repeatCount: "indefinite"
                    }
                  })
                ]
              ),
              _vm._v(" "),
              _c(
                "stop",
                { attrs: { offset: "100%", "stop-color": _vm.primary } },
                [
                  _c("animate", {
                    attrs: {
                      attributeName: "offset",
                      values: "-1; 2",
                      dur: _vm.formatedSpeed,
                      repeatCount: "indefinite"
                    }
                  })
                ]
              )
            ],
            1
          )
        ],
        1
      )
    ]
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-48d89856", esExports)
  }
}

/***/ }),
/* 337 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "pm-wrap pm-front-end" },
    [
      _c("pm-header"),
      _vm._v(" "),
      _vm.loading
        ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(0)])
        : _c("div", [
            _vm.discuss
              ? _c("div", { attrs: { id: "pm-signle-message" } }, [
                  _c(
                    "div",
                    { staticClass: "pm-single" },
                    [
                      _c("h3", { staticClass: "pm-box-title" }, [
                        _vm._v(
                          "\n                    " +
                            _vm._s(_vm.discuss.title) +
                            "          \n                    "
                        ),
                        _c("span", { staticClass: "pm-right pm-edit-link" }, [
                          _vm.can_edit_message(_vm.discuss)
                            ? _c("span", [
                                _c("a", {
                                  staticClass:
                                    "pm-msg-edit dashicons dashicons-edit",
                                  attrs: { href: "#" },
                                  on: {
                                    click: function($event) {
                                      $event.preventDefault()
                                      _vm.showHideDiscussForm(
                                        "toggle",
                                        _vm.discuss
                                      )
                                    }
                                  }
                                })
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.PM_Vars.is_pro &&
                          _vm.user_can("view_private_message")
                            ? _c("span", {
                                class: _vm.privateClass(_vm.discuss),
                                on: {
                                  click: function($event) {
                                    $event.preventDefault()
                                    _vm.lockUnlock(_vm.discuss)
                                  }
                                }
                              })
                            : _vm._e()
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-small-title" }, [
                          _vm._v(
                            "\n                        " +
                              _vm._s(_vm.__("By", "pm")) +
                              "\n                        "
                          ),
                          _c(
                            "a",
                            {
                              attrs: {
                                href: _vm.myTaskRedirect(
                                  _vm.discuss.creator.data.id
                                ),
                                title: _vm.discuss.creator.data.display_name
                              }
                            },
                            [
                              _vm._v(
                                "\n                            " +
                                  _vm._s(
                                    _vm.discuss.creator.data.display_name
                                  ) +
                                  "\n                        "
                              )
                            ]
                          ),
                          _vm._v(
                            " " +
                              _vm._s(_vm.__("on", "pm")) +
                              " " +
                              _vm._s(_vm.discuss.created_at.date) +
                              " " +
                              _vm._s(_vm.discuss.created_at.time) +
                              "             \n                    "
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "pm-entry-detail" }, [
                        _c("div", {
                          domProps: {
                            innerHTML: _vm._s(_vm.discuss.description)
                          }
                        }),
                        _vm._v(" "),
                        _vm.discuss.files.data.length
                          ? _c(
                              "ul",
                              { staticClass: "pm-attachments" },
                              _vm._l(_vm.discuss.files.data, function(file) {
                                return _c("li", [
                                  file.type == "image"
                                    ? _c(
                                        "a",
                                        {
                                          directives: [
                                            {
                                              name: "pm-pretty-photo",
                                              rawName: "v-pm-pretty-photo"
                                            }
                                          ],
                                          staticClass: "pm-colorbox-img",
                                          attrs: {
                                            href: _vm.getDownloadUrl(
                                              file.attachment_id
                                            ),
                                            title: file.name,
                                            target: "_blank"
                                          }
                                        },
                                        [
                                          _c("img", {
                                            staticClass: "pm-content-img-size",
                                            attrs: {
                                              src: file.thumb,
                                              alt: file.name
                                            }
                                          })
                                        ]
                                      )
                                    : _c(
                                        "a",
                                        {
                                          staticClass: "pm-colorbox-img",
                                          attrs: {
                                            href: _vm.getDownloadUrl(
                                              file.attachment_id
                                            ),
                                            title: file.name,
                                            target: "_blank"
                                          }
                                        },
                                        [
                                          _c("img", {
                                            staticClass: "pm-content-img-size",
                                            attrs: {
                                              src: file.thumb,
                                              alt: file.name
                                            }
                                          })
                                        ]
                                      )
                                ])
                              })
                            )
                          : _vm._e()
                      ]),
                      _vm._v(" "),
                      _vm.can_edit_message(_vm.discuss)
                        ? _c(
                            "transition",
                            { attrs: { name: "slide" } },
                            [
                              _vm.discuss.edit_mode
                                ? _c("new-discuss-form", {
                                    attrs: { discuss: _vm.discuss }
                                  })
                                : _vm._e()
                            ],
                            1
                          )
                        : _vm._e()
                    ],
                    1
                  )
                ])
              : _vm._e(),
            _vm._v(" "),
            _vm.discuss
              ? _c("div", { staticClass: "pm-comment-area pm-box-shadow" }, [
                  _c("h3", [
                    _vm._v(
                      " " +
                        _vm._s(_vm.discuss.meta.total_comments) +
                        " " +
                        _vm._s(_vm.__("Comments", "pm"))
                    )
                  ]),
                  _vm._v(" "),
                  _vm.comments.length
                    ? _c(
                        "ul",
                        { staticClass: "pm-comment-wrap" },
                        _vm._l(_vm.comments, function(comment) {
                          return _c(
                            "li",
                            {
                              key: comment.id,
                              staticClass: "pm-comment clearfix even",
                              attrs: { id: "pm-comment-" + comment.id }
                            },
                            [
                              _c("div", { staticClass: "pm-avatar " }, [
                                _c(
                                  "a",
                                  {
                                    attrs: {
                                      href: _vm.myTaskRedirect(
                                        comment.creator.data.id
                                      ),
                                      title: comment.creator.data.display_name
                                    }
                                  },
                                  [
                                    _c("img", {
                                      staticClass: "avatar avatar-48 photo",
                                      attrs: {
                                        alt: comment.creator.data.display_name,
                                        src: comment.creator.data.avatar_url,
                                        height: "48",
                                        width: "48"
                                      }
                                    })
                                  ]
                                )
                              ]),
                              _vm._v(" "),
                              _c(
                                "div",
                                { staticClass: "pm-comment-container" },
                                [
                                  _c(
                                    "div",
                                    { staticClass: "pm-comment-meta" },
                                    [
                                      _c("span", { staticClass: "pm-author" }, [
                                        _c(
                                          "a",
                                          {
                                            attrs: {
                                              href: _vm.myTaskRedirect(
                                                comment.creator.data.id
                                              ),
                                              title:
                                                comment.creator.data
                                                  .display_name
                                            }
                                          },
                                          [
                                            _vm._v(
                                              "\n                                    " +
                                                _vm._s(
                                                  comment.creator.data
                                                    .display_name
                                                ) +
                                                "\n                                "
                                            )
                                          ]
                                        )
                                      ]),
                                      _vm._v(
                                        "\n                            " +
                                          _vm._s(_vm.__("on", "pm")) +
                                          "           \n                            "
                                      ),
                                      _c("span", { staticClass: "pm-date" }, [
                                        _c(
                                          "time",
                                          {
                                            attrs: {
                                              datetime:
                                                comment.created_at.date +
                                                " " +
                                                comment.created_at.time,
                                              title:
                                                comment.created_at.date +
                                                " " +
                                                comment.created_at.time
                                            }
                                          },
                                          [
                                            _vm._v(
                                              _vm._s(
                                                comment.created_at.date +
                                                  " " +
                                                  comment.created_at.time
                                              )
                                            )
                                          ]
                                        )
                                      ]),
                                      _vm._v(" "),
                                      _vm.can_edit_comment(comment)
                                        ? _c(
                                            "div",
                                            {
                                              staticClass: "pm-comment-action"
                                            },
                                            [
                                              _c(
                                                "span",
                                                { staticClass: "pm-edit-link" },
                                                [
                                                  _c("a", {
                                                    staticClass:
                                                      "pm-edit-comment-link dashicons dashicons-edit ",
                                                    attrs: { href: "#" },
                                                    on: {
                                                      click: function($event) {
                                                        $event.preventDefault()
                                                        _vm.showHideDiscussCommentForm(
                                                          "toggle",
                                                          comment
                                                        )
                                                      }
                                                    }
                                                  })
                                                ]
                                              ),
                                              _vm._v(" "),
                                              _c(
                                                "span",
                                                {
                                                  staticClass: "pm-delete-link"
                                                },
                                                [
                                                  _c("a", {
                                                    staticClass:
                                                      "pm-delete-comment-link dashicons dashicons-trash",
                                                    attrs: { href: "#" },
                                                    on: {
                                                      click: function($event) {
                                                        $event.preventDefault()
                                                        _vm.deleteSelfComment(
                                                          comment.id,
                                                          _vm.discuss.id
                                                        )
                                                      }
                                                    }
                                                  })
                                                ]
                                              )
                                            ]
                                          )
                                        : _vm._e()
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "div",
                                    { staticClass: "pm-comment-content" },
                                    [
                                      _c("div", {
                                        domProps: {
                                          innerHTML: _vm._s(comment.content)
                                        }
                                      }),
                                      _vm._v(" "),
                                      comment.files.data.length
                                        ? _c(
                                            "ul",
                                            { staticClass: "pm-attachments" },
                                            _vm._l(comment.files.data, function(
                                              file
                                            ) {
                                              return _c("li", [
                                                file.type == "image"
                                                  ? _c(
                                                      "a",
                                                      {
                                                        directives: [
                                                          {
                                                            name:
                                                              "pm-pretty-photo",
                                                            rawName:
                                                              "v-pm-pretty-photo"
                                                          }
                                                        ],
                                                        staticClass:
                                                          "pm-colorbox-img",
                                                        attrs: {
                                                          href: _vm.getDownloadUrl(
                                                            file.attachment_id
                                                          ),
                                                          title: file.name,
                                                          target: "_blank"
                                                        }
                                                      },
                                                      [
                                                        _c("img", {
                                                          staticClass:
                                                            "pm-content-img-size",
                                                          attrs: {
                                                            src: file.thumb,
                                                            alt: file.name
                                                          }
                                                        })
                                                      ]
                                                    )
                                                  : _c(
                                                      "a",
                                                      {
                                                        staticClass:
                                                          "pm-colorbox-img",
                                                        attrs: {
                                                          href: _vm.getDownloadUrl(
                                                            file.attachment_id
                                                          ),
                                                          title: file.name,
                                                          target: "_blank"
                                                        }
                                                      },
                                                      [
                                                        _c("img", {
                                                          staticClass:
                                                            "pm-content-img-size",
                                                          attrs: {
                                                            src: file.thumb,
                                                            alt: file.name
                                                          }
                                                        })
                                                      ]
                                                    )
                                              ])
                                            })
                                          )
                                        : _vm._e()
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _vm.can_edit_comment(comment)
                                    ? _c(
                                        "transition",
                                        { attrs: { name: "slide" } },
                                        [
                                          comment.edit_mode
                                            ? _c("comment-form", {
                                                attrs: {
                                                  comment: comment,
                                                  discuss: _vm.discuss
                                                }
                                              })
                                            : _vm._e()
                                        ],
                                        1
                                      )
                                    : _vm._e()
                                ],
                                1
                              )
                            ]
                          )
                        })
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "pm-comment-form-wrap" },
                    [
                      _c("div", { staticClass: "pm-avatar" }, [
                        _c(
                          "a",
                          {
                            attrs: {
                              href: _vm.myTaskRedirect(_vm.current_user.ID),
                              title: _vm.current_user.data.display_name
                            }
                          },
                          [
                            _c("img", {
                              staticClass: "avatar avatar-48 photo",
                              attrs: {
                                alt: _vm.current_user.data.display_name,
                                src: _vm.avatar_url,
                                srcset: _vm.avatar_url,
                                height: "48",
                                width: "48"
                              }
                            })
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c(
                        "transition",
                        { attrs: { name: "slide" } },
                        [
                          _c("comment-form", {
                            attrs: { comment: {}, discuss: _vm.discuss }
                          })
                        ],
                        1
                      )
                    ],
                    1
                  )
                ])
              : _vm._e()
          ])
    ],
    1
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "loadmoreanimation" }, [
      _c("div", { staticClass: "load-spinner" }, [
        _c("div", { staticClass: "rect1" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect2" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect3" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect4" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect5" })
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-49018d80", esExports)
  }
}

/***/ }),
/* 338 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "vue-content-loading",
    _vm._b(
      { attrs: { width: 100, height: 70 } },
      "vue-content-loading",
      _vm.$attrs,
      false
    ),
    [
      _c("rect", {
        attrs: { x: "0", y: "0", rx: "0", ry: "0", width: "90", height: "10" }
      }),
      _vm._v(" "),
      _c("circle", { attrs: { cx: "8", cy: "15", r: "1" } }),
      _vm._v(" "),
      _c("rect", {
        attrs: { x: "10", y: "14", rx: "0", ry: "0", width: "20", height: "2" }
      }),
      _vm._v(" "),
      _c("circle", { attrs: { cx: "53", cy: "15", r: "1" } }),
      _vm._v(" "),
      _c("rect", {
        attrs: { x: "55", y: "14", rx: "0", ry: "0", width: "20", height: "2" }
      }),
      _vm._v(" "),
      _c("circle", { attrs: { cx: "8", cy: "21", r: "1" } }),
      _vm._v(" "),
      _c("rect", {
        attrs: { x: "10", y: "20", rx: "0", ry: "0", width: "20", height: "2" }
      }),
      _vm._v(" "),
      _c("circle", { attrs: { cx: "53", cy: "21", r: "1" } }),
      _vm._v(" "),
      _c("rect", {
        attrs: { x: "55", y: "20", rx: "0", ry: "0", width: "20", height: "2" }
      }),
      _vm._v(" "),
      _c("circle", { attrs: { cx: "8", cy: "27", r: "1" } }),
      _vm._v(" "),
      _c("rect", {
        attrs: { x: "10", y: "26", rx: "0", ry: "0", width: "20", height: "2" }
      }),
      _vm._v(" "),
      _c("circle", { attrs: { cx: "53", cy: "27", r: "1" } }),
      _vm._v(" "),
      _c("rect", {
        attrs: { x: "55", y: "26", rx: "0", ry: "0", width: "20", height: "2" }
      }),
      _vm._v(" "),
      _c("rect", {
        attrs: { x: "0", y: "32", rx: "0", ry: "0", width: "90", height: "1" }
      }),
      _vm._v(" "),
      _c("circle", { attrs: { cx: "30", cy: "39", r: "5" } }),
      _vm._v(" "),
      _c("circle", { attrs: { cx: "45", cy: "39", r: "5" } }),
      _vm._v(" "),
      _c("circle", { attrs: { cx: "60", cy: "39", r: "5" } }),
      _vm._v(" "),
      _c("rect", {
        attrs: { x: "0", y: "45", rx: "0", ry: "0", width: "90", height: "1" }
      })
    ]
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-4bc5108e", esExports)
  }
}

/***/ }),
/* 339 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "pm-todo-wrap clearfix" },
    [
      !_vm.task.edit_mode
        ? _c(
            "div",
            { staticClass: "pm-todo-content" },
            [
              _c("div", { staticClass: "pm-todo-inside" }, [
                _c(
                  "div",
                  { staticClass: "pm-col-7" },
                  [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.task.status,
                          expression: "task.status"
                        }
                      ],
                      attrs: {
                        disabled: _vm.can_complete_task(_vm.task),
                        type: "checkbox",
                        value: "",
                        name: ""
                      },
                      domProps: {
                        checked: Array.isArray(_vm.task.status)
                          ? _vm._i(_vm.task.status, "") > -1
                          : _vm.task.status
                      },
                      on: {
                        click: function($event) {
                          _vm.doneUndone()
                        },
                        change: function($event) {
                          var $$a = _vm.task.status,
                            $$el = $event.target,
                            $$c = $$el.checked ? true : false
                          if (Array.isArray($$a)) {
                            var $$v = "",
                              $$i = _vm._i($$a, $$v)
                            if ($$el.checked) {
                              $$i < 0 &&
                                _vm.$set(_vm.task, "status", $$a.concat([$$v]))
                            } else {
                              $$i > -1 &&
                                _vm.$set(
                                  _vm.task,
                                  "status",
                                  $$a.slice(0, $$i).concat($$a.slice($$i + 1))
                                )
                            }
                          } else {
                            _vm.$set(_vm.task, "status", $$c)
                          }
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c("span", { staticClass: "task-title" }, [
                      _c(
                        "a",
                        {
                          attrs: { href: "#" },
                          on: {
                            click: function($event) {
                              $event.preventDefault()
                              _vm.getSingleTask(_vm.task)
                            }
                          }
                        },
                        [_vm._v(_vm._s(_vm.task.title))]
                      )
                    ]),
                    _vm._v(" "),
                    _vm._l(_vm.task.assignees.data, function(user) {
                      return _c(
                        "span",
                        { key: user.id, staticClass: "pm-assigned-user" },
                        [
                          _c(
                            "a",
                            {
                              attrs: {
                                href: _vm.myTaskRedirect(user.id),
                                title: user.display_name
                              }
                            },
                            [
                              _c("img", {
                                attrs: {
                                  src: user.avatar_url,
                                  alt: user.display_name,
                                  height: "48",
                                  width: "48"
                                }
                              })
                            ]
                          )
                        ]
                      )
                    }),
                    _vm._v(" "),
                    _vm.taskTimeWrap(_vm.task)
                      ? _c(
                          "span",
                          { class: _vm.taskDateWrap(_vm.task.due_date.date) },
                          [
                            _vm.task_start_field
                              ? _c("span", [
                                  _vm._v(
                                    _vm._s(
                                      _vm.taskDateFormat(_vm.task.start_at.date)
                                    )
                                  )
                                ])
                              : _vm._e(),
                            _vm._v(" "),
                            _vm.isBetweenDate(
                              _vm.task_start_field,
                              _vm.task.start_at.date,
                              _vm.task.due_date.date
                            )
                              ? _c("span", [_vm._v("–")])
                              : _vm._e(),
                            _vm._v(" "),
                            _c("span", [
                              _vm._v(
                                _vm._s(
                                  _vm.taskDateFormat(_vm.task.due_date.date)
                                )
                              )
                            ])
                          ]
                        )
                      : _vm._e()
                  ],
                  2
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "pm-col-4 pm-todo-action-center" },
                  [
                    _c(
                      "span",
                      { staticClass: "pm-task-comment pm-todo-action-child" },
                      [
                        _c(
                          "router-link",
                          {
                            attrs: {
                              to: {
                                name: _vm.route_name,
                                params: {
                                  list_id: _vm.list.id,
                                  task_id: _vm.task.id,
                                  project_id: _vm.project_id
                                }
                              }
                            }
                          },
                          [
                            _c("span", { staticClass: "pm-comment-count" }, [
                              _vm._v(
                                "\n                                " +
                                  _vm._s(_vm.task.meta.total_comment) +
                                  "\n                            "
                              )
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("span", [
                      _vm.PM_Vars.is_pro &&
                      _vm.can_edit_task(_vm.task) &&
                      _vm.user_can("view_private_task")
                        ? _c(
                            "a",
                            {
                              attrs: { href: "#" },
                              on: {
                                click: function($event) {
                                  $event.preventDefault()
                                  _vm.TaskLockUnlock(_vm.task)
                                }
                              }
                            },
                            [
                              _c("span", {
                                class: _vm.privateClass(_vm.task.meta.privacy)
                              })
                            ]
                          )
                        : _vm._e()
                    ]),
                    _vm._v(" "),
                    _c("do-action", {
                      attrs: {
                        hook: "task_inline",
                        actionData: _vm.doActionData
                      }
                    }),
                    _vm._v(" "),
                    _c("div", { staticClass: "pm-clearfix" })
                  ],
                  1
                ),
                _vm._v(" "),
                _c("div", { staticClass: "clearfix" }),
                _vm._v(" "),
                _c("div", { staticClass: "pm-list-action-wrap" }, [
                  _vm.can_edit_task(_vm.task)
                    ? _c("div", { staticClass: "pm-list-action" }, [
                        _c(
                          "a",
                          {
                            staticClass: "pm-todo-edit",
                            attrs: { href: "#" },
                            on: {
                              click: function($event) {
                                $event.preventDefault()
                                _vm.showHideTaskFrom("toggle", false, _vm.task)
                              }
                            }
                          },
                          [
                            _c("span", {}, [
                              _vm._v(_vm._s(_vm.__("Edit", "pm")) + " |")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "a",
                          {
                            staticClass: "pm-todo-delete",
                            attrs: { href: "#" },
                            on: {
                              click: function($event) {
                                $event.preventDefault()
                                _vm.deleteTask({
                                  task: _vm.task,
                                  list: _vm.list
                                })
                              }
                            }
                          },
                          [
                            _c("span", {}, [
                              _vm._v(_vm._s(_vm.__("Delete", "pm")))
                            ])
                          ]
                        )
                      ])
                    : _vm._e()
                ])
              ]),
              _vm._v(" "),
              !_vm.isSingleTask
                ? _c("do-action", {
                    attrs: {
                      hook: "after_task_content",
                      actionData: _vm.doActionData
                    }
                  })
                : _vm._e()
            ],
            1
          )
        : _vm._e(),
      _vm._v(" "),
      _vm.can_edit_task(_vm.task)
        ? _c("transition", { attrs: { name: "slide" } }, [
            _vm.task.edit_mode
              ? _c(
                  "div",
                  { staticClass: "pm-todo-form" },
                  [
                    _c("new-task-form", {
                      attrs: { task: _vm.task, list: _vm.list }
                    })
                  ],
                  1
                )
              : _vm._e()
          ])
        : _vm._e(),
      _vm._v(" "),
      parseInt(_vm.taskId) && parseInt(_vm.projectId)
        ? _c(
            "div",
            [
              _c("single-task", {
                attrs: { taskId: _vm.taskId, projectId: _vm.projectId }
              })
            ],
            1
          )
        : _vm._e()
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-4beba22a", esExports)
  }
}

/***/ }),
/* 340 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm._m(0)
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", [
      _c("div", { staticClass: "postbox pm-pro-notice" }, [
        _c("div", { staticClass: "pm-text" }, [
          _vm._v(
            "\n            This feature is only available in the Pro Version.                "
          )
        ]),
        _vm._v(" "),
        _c(
          "a",
          {
            staticClass: "button button-primary",
            attrs: {
              target: "_blank",
              href:
                "https://wedevs.com/wp-project-manager-pro/pricing/?utm_source=freeplugin&utm_medium=pm-action-link&utm_campaign=pm-pro-prompt"
            }
          },
          [_vm._v("Upgrade to Pro Version")]
        )
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-4c7f1b64", esExports)
  }
}

/***/ }),
/* 341 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _c("project-list-header"),
      _vm._v(" "),
      _c("div", { staticClass: "all-projects" }, [
        _vm.loading
          ? _c("div", { staticClass: "pm-row pm-data-load-before" }, [
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c("div", { staticClass: "pm-col-4" }, [_c("project-loading")], 1)
            ])
          : _c("div", [
              _c(
                "div",
                {
                  staticClass: "pm-projects pm-row pm-no-padding pm-no-margin",
                  class: [_vm.projects_view_class()]
                },
                [
                  _c("project-summary"),
                  _vm._v(" "),
                  _c("pm-pagination", {
                    attrs: {
                      total_pages: _vm.total_pages,
                      current_page_number: _vm.current_page_number,
                      component_name: "all_project_pagination"
                    }
                  })
                ],
                1
              )
            ])
      ])
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-4cf662c5", esExports)
  }
}

/***/ }),
/* 342 */,
/* 343 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "pm-blank-template todolist" }, [
    _c(
      "div",
      { staticClass: "pm-content" },
      [
        _c("h3", { staticClass: "pm-page-title" }, [
          _vm._v(_vm._s(_vm.__("Task Lists", "pm")))
        ]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "\n            " +
              _vm._s(
                _vm.__(
                  "You can list all your Tasks in a single discussion using a Task list. Use these lists to divide a project into several sectors, assign co-workers and check progress.",
                  "pm"
                )
              ) +
              "\n        "
          )
        ]),
        _vm._v(" "),
        _vm.can_create_list ? _c("new-task-list-btn") : _vm._e(),
        _vm._v(" "),
        _vm.can_create_list
          ? _c(
              "transition",
              { attrs: { name: "slide" } },
              [
                _vm.is_active_list_form
                  ? _c("new-task-list-form", {
                      attrs: { section: "lists", list: {} }
                    })
                  : _vm._e()
              ],
              1
            )
          : _vm._e(),
        _vm._v(" "),
        _c("div", { staticClass: "pm-list-content" }, [
          _c("h3", { staticClass: "pm-why-for pm-page-title" }, [
            _vm._v(_vm._s(_vm.__("When to use Task Lists?", "pm")))
          ]),
          _vm._v(" "),
          _c("ul", { staticClass: "pm-list" }, [
            _c("li", [
              _vm._v(_vm._s(_vm.__("To partition a project internals.", "pm")))
            ]),
            _vm._v(" "),
            _c("li", [
              _vm._v(_vm._s(_vm.__("To mark milestone points.", "pm")))
            ]),
            _vm._v(" "),
            _c("li", [
              _vm._v(_vm._s(_vm.__("To assign people to tasks.", "pm")))
            ])
          ])
        ])
      ],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-528300b5", esExports)
  }
}

/***/ }),
/* 344 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "pm-wrap pm pm-front-end" },
    [
      _c("pm-header"),
      _vm._v(" "),
      _vm.loading
        ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(0)])
        : _c(
            "div",
            [
              _c(
                "router-link",
                {
                  staticClass:
                    "pm-btn pm-btn-blue pm-margin-bottom add-tasklist",
                  attrs: {
                    to: {
                      name: "task_lists",
                      params: {
                        project_id: _vm.project_id
                      }
                    }
                  }
                },
                [
                  _c("i", { staticClass: "fa fa-arrow-circle-o-left mr-5" }),
                  _vm._v(
                    _vm._s(_vm.__("Back to Task Lists", "pm")) + "\n        "
                  )
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                [
                  _c("ul", { staticClass: "pm-todolists" }, [
                    _c("li", { class: "pm-fade-out-" + _vm.list_id }, [
                      _c(
                        "article",
                        { staticClass: "pm-todolist" },
                        [
                          _c(
                            "header",
                            { staticClass: "pm-list-header" },
                            [
                              _c("h3", [
                                _vm._v(
                                  "\n                                " +
                                    _vm._s(_vm.list.title) +
                                    "\n                               \n                                "
                                ),
                                _vm.can_edit_task_list(_vm.list)
                                  ? _c("div", { staticClass: "pm-right" }, [
                                      _c(
                                        "a",
                                        {
                                          staticClass: "pm-icon-edit",
                                          attrs: { href: "#" },
                                          on: {
                                            click: function($event) {
                                              $event.preventDefault()
                                              _vm.showHideListForm(
                                                "toggle",
                                                _vm.list
                                              )
                                            }
                                          }
                                        },
                                        [
                                          _c("span", {
                                            staticClass:
                                              "dashicons dashicons-edit"
                                          })
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "a",
                                        {
                                          staticClass: "pm-btn pm-btn-xs",
                                          attrs: {
                                            href: "#",
                                            title: _vm.delete_task_list
                                          },
                                          on: {
                                            click: function($event) {
                                              $event.preventDefault()
                                              _vm.deleteSelfList()
                                            }
                                          }
                                        },
                                        [
                                          _c("span", {
                                            staticClass:
                                              "dashicons dashicons-trash"
                                          })
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _vm.PM_Vars.is_pro &&
                                      _vm.user_can("view_private_list")
                                        ? _c(
                                            "a",
                                            {
                                              attrs: { href: "#" },
                                              on: {
                                                click: function($event) {
                                                  $event.preventDefault()
                                                  _vm.listLockUnlock(_vm.list)
                                                }
                                              }
                                            },
                                            [
                                              _c("span", {
                                                class: _vm.privateClass(
                                                  _vm.list.meta.privacy
                                                )
                                              })
                                            ]
                                          )
                                        : _vm._e()
                                    ])
                                  : _vm._e()
                              ]),
                              _vm._v(" "),
                              _c("div", { staticClass: "pm-entry-detail" }, [
                                _vm._v(
                                  "\n                                " +
                                    _vm._s(_vm.list.description) +
                                    "\n                            "
                                )
                              ]),
                              _vm._v(" "),
                              _vm.can_create_list
                                ? _c(
                                    "transition",
                                    { attrs: { name: "slide" } },
                                    [
                                      _vm.list.edit_mode
                                        ? _c(
                                            "div",
                                            {
                                              staticClass:
                                                "pm-update-todolist-form"
                                            },
                                            [
                                              _c("new-task-list-form", {
                                                attrs: {
                                                  list: _vm.list,
                                                  section: "single"
                                                }
                                              })
                                            ],
                                            1
                                          )
                                        : _vm._e()
                                    ]
                                  )
                                : _vm._e()
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c("single-list-tasks", {
                            attrs: { list: _vm.list, index: "0" }
                          }),
                          _vm._v(" "),
                          _c(
                            "footer",
                            { staticClass: "pm-row pm-list-footer" },
                            [
                              _c("div", { staticClass: "pm-col-6" }, [
                                _vm.can_create_task
                                  ? _c(
                                      "div",
                                      [
                                        _c("new-task-button", {
                                          attrs: {
                                            task: {},
                                            list: _vm.list,
                                            list_index: "0"
                                          }
                                        })
                                      ],
                                      1
                                    )
                                  : _vm._e()
                              ]),
                              _vm._v(" "),
                              _c("div", { staticClass: "pm-col-4" }, [
                                _c(
                                  "div",
                                  { staticClass: "pm-todo-progress-bar" },
                                  [
                                    _c("div", {
                                      staticClass: "bar completed",
                                      style: _vm.getProgressStyle(_vm.list)
                                    })
                                  ]
                                )
                              ]),
                              _vm._v(" "),
                              _c(
                                "div",
                                { staticClass: " pm-col-1 no-percent" },
                                [
                                  _vm._v(
                                    _vm._s(_vm.getProgressPercent(_vm.list)) +
                                      "%"
                                  )
                                ]
                              ),
                              _vm._v(" "),
                              _c("div", { staticClass: "clearfix" })
                            ]
                          )
                        ],
                        1
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("list-comments", {
                    attrs: { comments: _vm.comments, list: _vm.list }
                  }),
                  _vm._v(" "),
                  _c("router-view", { attrs: { name: "single-task" } })
                ],
                1
              )
            ],
            1
          )
    ],
    1
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "loadmoreanimation" }, [
      _c("div", { staticClass: "load-spinner" }, [
        _c("div", { staticClass: "rect1" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect2" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect3" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect4" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect5" })
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-545f2da6", esExports)
  }
}

/***/ }),
/* 345 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("input", {
    attrs: { type: "text" },
    domProps: { value: _vm.value }
  })
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-54b074e6", esExports)
  }
}

/***/ }),
/* 346 */,
/* 347 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "pm-comment-form" }, [
    _c(
      "form",
      {
        on: {
          submit: function($event) {
            $event.preventDefault()
            _vm.newSelfComment()
          }
        }
      },
      [
        _c(
          "div",
          { staticClass: "item message pm-sm-col-12" },
          [
            _c("text-editor", {
              attrs: { editor_id: _vm.editor_id, content: _vm.content }
            })
          ],
          1
        ),
        _vm._v(" "),
        _c("file-uploader", {
          attrs: { files: _vm.files, delete: _vm.deleted_files }
        }),
        _vm._v(" "),
        _c("notify-user", {
          model: {
            value: _vm.notify_users,
            callback: function($$v) {
              _vm.notify_users = $$v
            },
            expression: "notify_users"
          }
        }),
        _vm._v(" "),
        _c("div", { staticClass: "submit" }, [
          !_vm.comment.edit_mode
            ? _c("input", {
                staticClass: "button-primary",
                attrs: { type: "submit", name: "pm_new_comment", id: "" },
                domProps: { value: _vm.add_new_comment }
              })
            : _vm._e(),
          _vm._v(" "),
          _vm.comment.edit_mode
            ? _c("input", {
                staticClass: "button-primary",
                attrs: { type: "submit", name: "pm_new_comment", id: "" },
                domProps: { value: _vm.Update_Comment }
              })
            : _vm._e(),
          _vm._v(" "),
          _c("span", {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.show_spinner,
                expression: "show_spinner"
              }
            ],
            staticClass: "pm-spinner"
          })
        ])
      ],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-5e64445b", esExports)
  }
}

/***/ }),
/* 348 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "Settings-page-wrapper" }, [
    _c(
      "h2",
      { staticClass: "pm-settings-nav-menu-wrap nav-tab-wrapper" },
      [
        _c(
          "router-link",
          { staticClass: "nav-tab", attrs: { to: { name: "general" } } },
          [
            _vm._v(
              "\n            " +
                _vm._s(_vm.__("General Settings", "pm")) +
                "\n        "
            )
          ]
        ),
        _vm._v(" "),
        _c(
          "router-link",
          { staticClass: "nav-tab", attrs: { to: { name: "email" } } },
          [
            _vm._v(
              "\n            " +
                _vm._s(_vm.__("E-Mail Settings", "pm")) +
                "\n        "
            )
          ]
        ),
        _vm._v(" "),
        _c("pm-do-action", { attrs: { hook: "pm-settings-tab" } })
      ],
      1
    ),
    _vm._v(" "),
    _c("div", { staticClass: "settingswrapper" }, [_c("router-view")], 1)
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-5f8fc618", esExports)
  }
}

/***/ }),
/* 349 */,
/* 350 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("input", {
    staticClass: "pm-datepickter",
    attrs: { type: "text" },
    domProps: { value: _vm.dateValue }
  })
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-61df7da0", esExports)
  }
}

/***/ }),
/* 351 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "wrap nosubsub" }, [
    _c("h1", { staticClass: "wp-heading-inline" }, [
      _vm._v(_vm._s(_vm.__("Categories", "pm")))
    ]),
    _vm._v(" "),
    _c("hr", { staticClass: "wp-header-end" }),
    _vm._v(" "),
    !_vm.isFetchCategories
      ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(0)])
      : _vm._e(),
    _vm._v(" "),
    _vm.isFetchCategories
      ? _c(
          "div",
          { staticClass: "wp-clearfix", attrs: { id: "col-container" } },
          [
            _c("div", { attrs: { id: "col-left" } }, [
              _c("div", { staticClass: "col-wrap" }, [
                _c("div", { staticClass: "form-wrap" }, [
                  _c("h2", [_vm._v(_vm._s(_vm.__("Add New Category", "pm")))]),
                  _vm._v(" "),
                  _c(
                    "form",
                    {
                      staticClass: "validate",
                      attrs: {
                        id: "addtag",
                        method: "post",
                        action: "edit-tags.php"
                      },
                      on: {
                        submit: function($event) {
                          $event.preventDefault()
                          _vm.categoryFormAction()
                        }
                      }
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "form-field form-required term-name-wrap"
                        },
                        [
                          _c("label", { attrs: { for: "tag-name" } }, [
                            _vm._v(_vm._s(_vm.__("Name", "pm")))
                          ]),
                          _vm._v(" "),
                          _c("input", {
                            directives: [
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.title,
                                expression: "title"
                              }
                            ],
                            attrs: {
                              required: "required",
                              name: "tag-name",
                              id: "tag-name",
                              type: "text",
                              value: "",
                              size: "40",
                              "aria-required": "true"
                            },
                            domProps: { value: _vm.title },
                            on: {
                              input: function($event) {
                                if ($event.target.composing) {
                                  return
                                }
                                _vm.title = $event.target.value
                              }
                            }
                          }),
                          _vm._v(" "),
                          _c("p")
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "form-field term-description-wrap" },
                        [
                          _c("label", { attrs: { for: "tag-description" } }, [
                            _vm._v(_vm._s(_vm.__("Description", "pm")))
                          ]),
                          _vm._v(" "),
                          _c("textarea", {
                            directives: [
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.description,
                                expression: "description"
                              }
                            ],
                            attrs: {
                              name: "description",
                              id: "tag-description",
                              rows: "5",
                              cols: "40"
                            },
                            domProps: { value: _vm.description },
                            on: {
                              input: function($event) {
                                if ($event.target.composing) {
                                  return
                                }
                                _vm.description = $event.target.value
                              }
                            }
                          }),
                          _vm._v(" "),
                          _c("p")
                        ]
                      ),
                      _vm._v(" "),
                      _c("p", { staticClass: "submit" }, [
                        _c("input", {
                          staticClass: "button button-primary",
                          attrs: {
                            type: "submit",
                            name: "submit",
                            id: "submit"
                          },
                          domProps: { value: _vm.add_new_category }
                        }),
                        _vm._v(" "),
                        _c("span", {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.show_spinner,
                              expression: "show_spinner"
                            }
                          ],
                          staticClass: "pm-spinner"
                        })
                      ])
                    ]
                  )
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { attrs: { id: "col-right" } }, [
              _c("div", { staticClass: "col-wrap" }, [
                _c(
                  "form",
                  {
                    attrs: { id: "posts-filter", method: "post" },
                    on: {
                      submit: function($event) {
                        $event.preventDefault()
                        _vm.selfDeleted()
                      }
                    }
                  },
                  [
                    _c("div", { staticClass: "tablenav top" }, [
                      _c(
                        "div",
                        { staticClass: "alignleft actions bulkactions" },
                        [
                          _c(
                            "label",
                            {
                              staticClass: "screen-reader-text",
                              attrs: { for: "bulk-action-selector-top" }
                            },
                            [_vm._v(_vm._s(_vm.__("Select bulk action", "pm")))]
                          ),
                          _vm._v(" "),
                          _c(
                            "select",
                            {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: _vm.bulk_action,
                                  expression: "bulk_action"
                                }
                              ],
                              attrs: {
                                id: "bulk-action-selector-top",
                                name: "action"
                              },
                              on: {
                                change: function($event) {
                                  var $$selectedVal = Array.prototype.filter
                                    .call($event.target.options, function(o) {
                                      return o.selected
                                    })
                                    .map(function(o) {
                                      var val =
                                        "_value" in o ? o._value : o.value
                                      return val
                                    })
                                  _vm.bulk_action = $event.target.multiple
                                    ? $$selectedVal
                                    : $$selectedVal[0]
                                }
                              }
                            },
                            [
                              _c("option", { attrs: { value: "-1" } }, [
                                _vm._v(_vm._s(_vm.__("Bulk Actions", "pm")))
                              ]),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "delete" } }, [
                                _vm._v(_vm._s(_vm.__("Delete", "pm")))
                              ])
                            ]
                          ),
                          _vm._v(" "),
                          _c("input", {
                            staticClass: "button action",
                            attrs: { type: "submit", id: "doaction" },
                            domProps: { value: _vm.__("Apply", "pm") }
                          })
                        ]
                      ),
                      _vm._v(" "),
                      _c("br", { staticClass: "clear" })
                    ]),
                    _vm._v(" "),
                    _c(
                      "table",
                      {
                        staticClass: "wp-list-table widefat fixed striped tags"
                      },
                      [
                        _c("thead", [
                          _c("tr", [
                            _c(
                              "td",
                              {
                                staticClass:
                                  "manage-column column-cb check-column",
                                attrs: { id: "cb" }
                              },
                              [
                                _c(
                                  "label",
                                  {
                                    staticClass: "screen-reader-text",
                                    attrs: { for: "cb-select-all-1" }
                                  },
                                  [_vm._v(_vm._s(_vm.__("Select all", "pm")))]
                                ),
                                _vm._v(" "),
                                _c("input", {
                                  directives: [
                                    {
                                      name: "model",
                                      rawName: "v-model",
                                      value: _vm.select_all,
                                      expression: "select_all"
                                    }
                                  ],
                                  attrs: {
                                    id: "cb-select-all-1",
                                    type: "checkbox"
                                  },
                                  domProps: {
                                    checked: Array.isArray(_vm.select_all)
                                      ? _vm._i(_vm.select_all, null) > -1
                                      : _vm.select_all
                                  },
                                  on: {
                                    change: [
                                      function($event) {
                                        var $$a = _vm.select_all,
                                          $$el = $event.target,
                                          $$c = $$el.checked ? true : false
                                        if (Array.isArray($$a)) {
                                          var $$v = null,
                                            $$i = _vm._i($$a, $$v)
                                          if ($$el.checked) {
                                            $$i < 0 &&
                                              (_vm.select_all = $$a.concat([
                                                $$v
                                              ]))
                                          } else {
                                            $$i > -1 &&
                                              (_vm.select_all = $$a
                                                .slice(0, $$i)
                                                .concat($$a.slice($$i + 1)))
                                          }
                                        } else {
                                          _vm.select_all = $$c
                                        }
                                      },
                                      function($event) {
                                        _vm.selectAll()
                                      }
                                    ]
                                  }
                                })
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "th",
                              {
                                staticClass:
                                  "manage-column column-name column-primary sortable desc",
                                attrs: { scope: "col", id: "name" }
                              },
                              [
                                _c("a", { attrs: { href: "#" } }, [
                                  _c("span", [
                                    _vm._v(_vm._s(_vm.__("Name", "pm")))
                                  ])
                                ])
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "th",
                              {
                                staticClass:
                                  "manage-column column-description sortable desc",
                                attrs: { scope: "col", id: "description" }
                              },
                              [
                                _c("a", { attrs: { href: "" } }, [
                                  _c("span", [
                                    _vm._v(_vm._s(_vm.__("Description", "pm")))
                                  ])
                                ])
                              ]
                            )
                          ])
                        ]),
                        _vm._v(" "),
                        _c(
                          "tbody",
                          {
                            attrs: {
                              id: "the-list",
                              "data-wp-lists": "list:tag"
                            }
                          },
                          [
                            _vm._l(_vm.categories, function(category) {
                              return _c(
                                "tr",
                                {
                                  key: category.id,
                                  class: _vm.catTrClass(category),
                                  attrs: { id: "tag-1", key: "category.id" }
                                },
                                [
                                  !category.edit_mode
                                    ? _c(
                                        "th",
                                        {
                                          staticClass: "check-column",
                                          attrs: { scope: "row" }
                                        },
                                        [
                                          _c("input", {
                                            directives: [
                                              {
                                                name: "model",
                                                rawName: "v-model",
                                                value: _vm.delete_items,
                                                expression: "delete_items"
                                              }
                                            ],
                                            attrs: {
                                              type: "checkbox",
                                              id: "cb-select-48"
                                            },
                                            domProps: {
                                              value: category.id,
                                              checked: Array.isArray(
                                                _vm.delete_items
                                              )
                                                ? _vm._i(
                                                    _vm.delete_items,
                                                    category.id
                                                  ) > -1
                                                : _vm.delete_items
                                            },
                                            on: {
                                              change: function($event) {
                                                var $$a = _vm.delete_items,
                                                  $$el = $event.target,
                                                  $$c = $$el.checked
                                                    ? true
                                                    : false
                                                if (Array.isArray($$a)) {
                                                  var $$v = category.id,
                                                    $$i = _vm._i($$a, $$v)
                                                  if ($$el.checked) {
                                                    $$i < 0 &&
                                                      (_vm.delete_items = $$a.concat(
                                                        [$$v]
                                                      ))
                                                  } else {
                                                    $$i > -1 &&
                                                      (_vm.delete_items = $$a
                                                        .slice(0, $$i)
                                                        .concat(
                                                          $$a.slice($$i + 1)
                                                        ))
                                                  }
                                                } else {
                                                  _vm.delete_items = $$c
                                                }
                                              }
                                            }
                                          })
                                        ]
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  !category.edit_mode
                                    ? _c(
                                        "td",
                                        {
                                          staticClass:
                                            "name column-name has-row-actions column-primary",
                                          attrs: { "data-colname": "Name" }
                                        },
                                        [
                                          _c("strong", [
                                            _c(
                                              "a",
                                              {
                                                staticClass: "row-title",
                                                attrs: {
                                                  href:
                                                    "#/projects/active?category=" +
                                                    category.id
                                                }
                                              },
                                              [_vm._v(_vm._s(category.title))]
                                            )
                                          ]),
                                          _vm._v(" "),
                                          _c(
                                            "div",
                                            { staticClass: "row-actions" },
                                            [
                                              _c(
                                                "span",
                                                { staticClass: "edit" },
                                                [
                                                  _c(
                                                    "a",
                                                    {
                                                      attrs: { href: "#" },
                                                      on: {
                                                        click: function(
                                                          $event
                                                        ) {
                                                          $event.preventDefault()
                                                          _vm.showHideCategoryEditForm(
                                                            category
                                                          )
                                                        }
                                                      }
                                                    },
                                                    [
                                                      _vm._v(
                                                        _vm._s(
                                                          _vm.__("Edit", "pm")
                                                        )
                                                      )
                                                    ]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  !category.edit_mode
                                    ? _c(
                                        "td",
                                        {
                                          staticClass:
                                            "description column-description",
                                          attrs: {
                                            "data-colname": "Description"
                                          }
                                        },
                                        [_vm._v(_vm._s(category.description))]
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  category.edit_mode
                                    ? _c(
                                        "td",
                                        { attrs: { colspan: "3" } },
                                        [
                                          _c("edit-category-form", {
                                            attrs: { category: category }
                                          })
                                        ],
                                        1
                                      )
                                    : _vm._e()
                                ]
                              )
                            }),
                            _vm._v(" "),
                            !_vm.categories.length
                              ? _c("tr", { staticClass: "no-items" }, [
                                  _c(
                                    "td",
                                    {
                                      staticClass: "colspanchange",
                                      attrs: { colspan: "3" }
                                    },
                                    [_vm._v("No categories found.")]
                                  )
                                ])
                              : _vm._e()
                          ],
                          2
                        ),
                        _vm._v(" "),
                        _c("tfoot", [
                          _c("tr", [
                            _c(
                              "td",
                              {
                                staticClass:
                                  "manage-column column-cb check-column"
                              },
                              [
                                _c("input", {
                                  directives: [
                                    {
                                      name: "model",
                                      rawName: "v-model",
                                      value: _vm.select_all,
                                      expression: "select_all"
                                    }
                                  ],
                                  attrs: {
                                    id: "cb-select-all-2",
                                    type: "checkbox"
                                  },
                                  domProps: {
                                    checked: Array.isArray(_vm.select_all)
                                      ? _vm._i(_vm.select_all, null) > -1
                                      : _vm.select_all
                                  },
                                  on: {
                                    change: [
                                      function($event) {
                                        var $$a = _vm.select_all,
                                          $$el = $event.target,
                                          $$c = $$el.checked ? true : false
                                        if (Array.isArray($$a)) {
                                          var $$v = null,
                                            $$i = _vm._i($$a, $$v)
                                          if ($$el.checked) {
                                            $$i < 0 &&
                                              (_vm.select_all = $$a.concat([
                                                $$v
                                              ]))
                                          } else {
                                            $$i > -1 &&
                                              (_vm.select_all = $$a
                                                .slice(0, $$i)
                                                .concat($$a.slice($$i + 1)))
                                          }
                                        } else {
                                          _vm.select_all = $$c
                                        }
                                      },
                                      function($event) {
                                        _vm.selectAll()
                                      }
                                    ]
                                  }
                                })
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "th",
                              {
                                staticClass:
                                  "manage-column column-name column-primary sortable desc",
                                attrs: { scope: "col" }
                              },
                              [
                                _c("a", { attrs: { href: "#" } }, [
                                  _c("span", [
                                    _vm._v(_vm._s(_vm.__("Name", "pm")))
                                  ])
                                ])
                              ]
                            ),
                            _vm._v(" "),
                            _c(
                              "th",
                              {
                                staticClass:
                                  "manage-column column-description sortable desc",
                                attrs: { scope: "col" }
                              },
                              [
                                _c("a", { attrs: { href: "#" } }, [
                                  _c("span", [
                                    _vm._v(_vm._s(_vm.__("Description", "pm")))
                                  ])
                                ])
                              ]
                            )
                          ])
                        ])
                      ]
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "tablenav bottom" }, [
                      _c(
                        "div",
                        { staticClass: "alignleft actions bulkactions" },
                        [
                          _c(
                            "select",
                            {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: _vm.bulk_action,
                                  expression: "bulk_action"
                                }
                              ],
                              attrs: {
                                name: "action",
                                id: "bulk-action-selector-bottom"
                              },
                              on: {
                                change: function($event) {
                                  var $$selectedVal = Array.prototype.filter
                                    .call($event.target.options, function(o) {
                                      return o.selected
                                    })
                                    .map(function(o) {
                                      var val =
                                        "_value" in o ? o._value : o.value
                                      return val
                                    })
                                  _vm.bulk_action = $event.target.multiple
                                    ? $$selectedVal
                                    : $$selectedVal[0]
                                }
                              }
                            },
                            [
                              _c("option", { attrs: { value: "-1" } }, [
                                _vm._v(_vm._s(_vm.__("Bulk Actions", "pm")))
                              ]),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "delete" } }, [
                                _vm._v(_vm._s(_vm.__("Delete", "pm")))
                              ])
                            ]
                          ),
                          _vm._v(" "),
                          _c("input", {
                            staticClass: "button action",
                            attrs: { type: "submit", id: "doaction2" },
                            domProps: { value: _vm.__("Apply", "pm") }
                          })
                        ]
                      ),
                      _vm._v(" "),
                      _c("br", { staticClass: "clear" })
                    ])
                  ]
                )
              ])
            ])
          ]
        )
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "loadmoreanimation" }, [
      _c("div", { staticClass: "load-spinner" }, [
        _c("div", { staticClass: "rect1" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect2" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect3" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect4" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect5" })
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-63eb77ce", esExports)
  }
}

/***/ }),
/* 352 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c(
      "div",
      { staticClass: "pm-col-5" },
      [
        _c(
          "router-link",
          {
            attrs: {
              to: {
                name: "individual_discussions",
                params: {
                  project_id: _vm.project_id,
                  discussion_id: _vm.discuss.id
                }
              }
            }
          },
          [_vm._v("\n            " + _vm._s(_vm.discuss.title) + "\n        ")]
        )
      ],
      1
    ),
    _vm._v(" "),
    _c("div", { staticClass: "pm-col-4 " }, [
      _c("span", { staticClass: "time" }, [
        _c(
          "time",
          {
            attrs: {
              datetime:
                _vm.discuss.created_at.date + " " + _vm.discuss.created_at.time,
              title:
                _vm.discuss.created_at.date + " " + _vm.discuss.created_at.time
            }
          },
          [
            _vm._v(
              "\n                " +
                _vm._s(_vm.discuss.created_at.date) +
                " " +
                _vm._s(_vm.discuss.created_at.time) +
                "\n            "
            )
          ]
        )
      ])
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "pm-col-2" }, [
      _c("a", { attrs: { href: "#" } }, [
        _c("img", {
          staticClass: "avatar avatar-28 photo",
          attrs: {
            alt: _vm.discuss.creator.data.display_name,
            src: _vm.discuss.creator.data.avatar_url,
            height: "28",
            width: "28"
          }
        })
      ]),
      _vm._v(
        "\n        " +
          _vm._s(_vm.discuss.creator.data.display_name) +
          "                                \n    "
      )
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "clearfix" })
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-6893489c", esExports)
  }
}

/***/ }),
/* 353 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm._m(0)
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", [
      _c("div", { staticClass: "postbox pm-pro-notice" }, [
        _c("div", { staticClass: "pm-text" }, [
          _vm._v(
            "\n            This feature is only available in the Pro Version.                "
          )
        ]),
        _vm._v(" "),
        _c(
          "a",
          {
            staticClass: "button button-primary",
            attrs: {
              target: "_blank",
              href:
                "https://wedevs.com/wp-project-manager-pro/pricing/?utm_source=freeplugin&utm_medium=pm-action-link&utm_campaign=pm-pro-prompt"
            }
          },
          [_vm._v("Upgrade to Pro Version")]
        )
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-68b65f2e", esExports)
  }
}

/***/ }),
/* 354 */,
/* 355 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.isFetchProjects
    ? _c("ul", { staticClass: "list-inline  pm-col-8 pm-project-group-ul" }, [
        _c(
          "li",
          { staticClass: "pm-sm-col-4" },
          [
            _c(
              "router-link",
              {
                staticClass: "pm-active-project",
                attrs: { to: { name: "project_lists" } }
              },
              [
                _vm._v(
                  "\n            " +
                    _vm._s(_vm.__("Active", "pm")) +
                    "\n            "
                ),
                _c("span", { staticClass: "count" }, [
                  _vm._v(_vm._s(_vm.activated))
                ])
              ]
            )
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "li",
          { staticClass: "pm-sm-col-4" },
          [
            _c(
              "router-link",
              {
                staticClass: "pm-archive-project",
                attrs: { to: { name: "completed_projects" } }
              },
              [
                _vm._v(
                  "\n            " +
                    _vm._s(_vm.__("Completed", "pm")) +
                    " \n            "
                ),
                _c("span", { staticClass: "count" }, [
                  _vm._v(_vm._s(_vm.completed))
                ])
              ]
            )
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "li",
          { staticClass: " pm-sm-col-4" },
          [
            _c(
              "router-link",
              {
                staticClass: "pm-all-project",
                attrs: { to: { name: "all_projects" } }
              },
              [
                _vm._v(
                  "\n            " +
                    _vm._s(_vm.__("All", "pm")) +
                    "\n            "
                ),
                _c("span", { staticClass: "count" }, [
                  _vm._v(_vm._s(_vm.allof))
                ])
              ]
            )
          ],
          1
        ),
        _vm._v(" "),
        _c("div", { staticClass: "clearfix" })
      ])
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-6e4cd1c8", esExports)
  }
}

/***/ }),
/* 356 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "pm-msg-edit-form" }, [
    _c("div", { staticClass: "pm-message-form-wrap" }, [
      _c(
        "form",
        {
          staticClass: "pm-form pm-message-form",
          attrs: { enctype: "multipart/form-data" },
          on: {
            submit: function($event) {
              $event.preventDefault()
              _vm.formAction()
            }
          }
        },
        [
          _c("div", { staticClass: "item title" }, [
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.discuss.title,
                  expression: "discuss.title"
                }
              ],
              attrs: {
                name: "title",
                required: "required",
                type: "text",
                id: "message_title",
                value: "",
                placeholder: _vm.Enter_Message_Title
              },
              domProps: { value: _vm.discuss.title },
              on: {
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.$set(_vm.discuss, "title", $event.target.value)
                }
              }
            })
          ]),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "item detail" },
            [
              _c("text-editor", {
                attrs: { editor_id: _vm.editor_id, content: _vm.content }
              })
            ],
            1
          ),
          _vm._v(" "),
          _c("div", { staticClass: "item milestone" }, [
            _c(
              "select",
              {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.milestone_id,
                    expression: "milestone_id"
                  }
                ],
                on: {
                  change: function($event) {
                    var $$selectedVal = Array.prototype.filter
                      .call($event.target.options, function(o) {
                        return o.selected
                      })
                      .map(function(o) {
                        var val = "_value" in o ? o._value : o.value
                        return val
                      })
                    _vm.milestone_id = $event.target.multiple
                      ? $$selectedVal
                      : $$selectedVal[0]
                  }
                }
              },
              [
                _c("option", { attrs: { value: "-1" } }, [
                  _vm._v(
                    "\n                 " +
                      _vm._s(_vm.__("- Milestone -", "pm")) +
                      "\n                "
                  )
                ]),
                _vm._v(" "),
                _vm._l(_vm.milestones, function(milestone) {
                  return _c(
                    "option",
                    { key: milestone.id, domProps: { value: milestone.id } },
                    [
                      _vm._v(
                        "\n                  " +
                          _vm._s(milestone.title) +
                          "\n                "
                      )
                    ]
                  )
                })
              ],
              2
            )
          ]),
          _vm._v(" "),
          _c("pm-do-action", {
            attrs: { hook: "pm_discuss_form", actionData: _vm.discuss }
          }),
          _vm._v(" "),
          _c("file-uploader", {
            attrs: { files: _vm.files, delete: _vm.deleted_files }
          }),
          _vm._v(" "),
          _c("notify-user", {
            model: {
              value: _vm.notify_users,
              callback: function($$v) {
                _vm.notify_users = $$v
              },
              expression: "notify_users"
            }
          }),
          _vm._v(" "),
          _c("div", { staticClass: "submit" }, [
            !_vm.discuss.id
              ? _c("input", {
                  staticClass: "button-primary",
                  attrs: {
                    type: "submit",
                    name: "create_message",
                    id: "create_message"
                  },
                  domProps: { value: _vm.Add_message }
                })
              : _vm._e(),
            _vm._v(" "),
            _vm.discuss.id
              ? _c("input", {
                  staticClass: "button-primary",
                  attrs: {
                    type: "submit",
                    name: "update_message",
                    id: "update_message"
                  },
                  domProps: { value: _vm.update_message }
                })
              : _vm._e(),
            _vm._v(" "),
            _c(
              "a",
              {
                staticClass: "message-cancel button-secondary",
                attrs: { href: "" },
                on: {
                  click: function($event) {
                    $event.preventDefault()
                    _vm.showHideDiscussForm(false, _vm.discuss)
                  }
                }
              },
              [_vm._v(_vm._s(_vm.__("Cancel", "pm")))]
            ),
            _vm._v(" "),
            _c("span", {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.show_spinner,
                  expression: "show_spinner"
                }
              ],
              staticClass: "pm-spinner"
            })
          ])
        ],
        1
      )
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-759f4007", esExports)
  }
}

/***/ }),
/* 357 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _c("project-list-header"),
      _vm._v(" "),
      _c("div", { staticClass: "active-projects" }, [
        _vm.loading
          ? _c("div", { staticClass: "pm-row pm-data-load-before" }, [
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c("div", { staticClass: "pm-col-4" }, [_c("project-loading")], 1)
            ])
          : _c("div", [
              _c(
                "div",
                {
                  staticClass: "pm-projects pm-row pm-no-padding pm-no-margin",
                  class: [_vm.projects_view_class()]
                },
                [
                  _c("project-summary"),
                  _vm._v(" "),
                  _c("pm-pagination", {
                    attrs: {
                      total_pages: _vm.total_pages,
                      current_page_number: _vm.current_page_number,
                      component_name: "project_pagination"
                    }
                  })
                ],
                1
              )
            ])
      ])
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-7bf02012", esExports)
  }
}

/***/ }),
/* 358 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { attrs: { id: "pm-single-todo-list-view" } },
    [
      _c("div", { staticClass: "pm-incomplete-tasks" }, [
        _c(
          "h3",
          {
            staticClass: "pm-task-list-title pm-tag-gray",
            staticStyle: { "margin-top": "10px" }
          },
          [_c("a", [_vm._v(_vm._s(_vm.__("Incomplete Tasks", "pm")))])]
        ),
        _vm._v(" "),
        _c(
          "ul",
          {
            directives: [{ name: "pm-sortable", rawName: "v-pm-sortable" }],
            staticClass:
              "pm-incomplete-task-list pm-todos pm-todolist-content pm-incomplete-task"
          },
          [
            _vm._l(_vm.getIncompleteTasks, function(task, task_index) {
              return _c(
                "li",
                {
                  key: task.id,
                  staticClass: "pm-todo",
                  class: "pm-fade-out-" + task.ID,
                  attrs: { "data-id": task.id, "data-order": task.order }
                },
                [
                  _c("incompleted-tasks", {
                    attrs: { task: task, list: _vm.list }
                  })
                ],
                1
              )
            }),
            _vm._v(" "),
            !_vm.getIncompleteTasks.length
              ? _c("li", { staticClass: "nonsortable" }, [
                  _vm._v(_vm._s(_vm.__("No tasks found.", "pm")))
                ])
              : _vm._e(),
            _vm._v(" "),
            _vm.isIncompleteLoadMoreActive(_vm.list)
              ? _c("li", { staticClass: "nonsortable" }, [
                  _c(
                    "a",
                    {
                      attrs: { href: "#" },
                      on: {
                        click: function($event) {
                          $event.preventDefault()
                          _vm.loadMoreIncompleteTasks(_vm.list)
                        }
                      }
                    },
                    [_vm._v(_vm._s(_vm.__("More Tasks", "pm")))]
                  ),
                  _vm._v(" "),
                  _c("span", {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.more_incomplete_task_spinner,
                        expression: "more_incomplete_task_spinner"
                      }
                    ],
                    staticClass: "pm-incomplete-task-spinner pm-spinner"
                  })
                ])
              : _vm._e()
          ],
          2
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "pm-completed-tasks" }, [
        _c("h3", { staticClass: "pm-task-list-title pm-tag-gray" }, [
          _c("a", [_vm._v(_vm._s(_vm.__("Completed Tasks", "pm")))])
        ]),
        _vm._v(" "),
        _c(
          "ul",
          {
            directives: [{ name: "pm-sortable", rawName: "v-pm-sortable" }],
            staticClass:
              "pm-completed-task-list pm-todos pm-todolist-content pm-todo-completed"
          },
          [
            _vm._l(_vm.getCompletedTask, function(task, task_index) {
              return _c(
                "li",
                {
                  key: task.id,
                  staticClass: "pm-todo",
                  class: "pm-todo pm-fade-out-" + task.id,
                  attrs: { "data-id": task.id, "data-order": task.order }
                },
                [
                  _c("completed-tasks", {
                    attrs: { task: task, list: _vm.list }
                  })
                ],
                1
              )
            }),
            _vm._v(" "),
            !_vm.getCompletedTask.length
              ? _c("li", { staticClass: "nonsortable" }, [
                  _vm._v(_vm._s(_vm.__("No tasks found.", "pm")))
                ])
              : _vm._e(),
            _vm._v(" "),
            _vm.isCompleteLoadMoreActive(_vm.list)
              ? _c("li", { staticClass: "nonsortable" }, [
                  _c(
                    "a",
                    {
                      attrs: { href: "#" },
                      on: {
                        click: function($event) {
                          $event.preventDefault()
                          _vm.loadMoreCompleteTasks(_vm.list)
                        }
                      }
                    },
                    [_vm._v(_vm._s(_vm.__("More Tasks", "pm")))]
                  ),
                  _vm._v(" "),
                  _c("span", {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.more_completed_task_spinner,
                        expression: "more_completed_task_spinner"
                      }
                    ],
                    staticClass: "pm-completed-task-spinner pm-spinner"
                  })
                ])
              : _vm._e()
          ],
          2
        )
      ]),
      _vm._v(" "),
      _vm.can_create_list
        ? _c("transition", { attrs: { name: "slide" } }, [
            _vm.list.show_task_form
              ? _c(
                  "div",
                  { staticClass: "pm-todo-form" },
                  [_c("new-task-form", { attrs: { list: _vm.list } })],
                  1
                )
              : _vm._e()
          ])
        : _vm._e()
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-7e031227", esExports)
  }
}

/***/ }),
/* 359 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "pm-wrap pm-front-end", attrs: { id: "pm-milestone-page" } },
    [
      _c("pm-header"),
      _vm._v(" "),
      !_vm.isFetchMilestone
        ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(0)])
        : _vm._e(),
      _vm._v(" "),
      _vm.isFetchMilestone
        ? _c("div", [
            _vm.blankTemplate
              ? _c("div", { staticClass: "pm-blank-template milestone" }, [
                  _c(
                    "div",
                    { staticClass: "pm-content" },
                    [
                      _c("h3", { staticClass: "pm-page-title" }, [
                        _vm._v("  " + _vm._s(_vm.__("Milestones", "pm")))
                      ]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v(
                          "\n                    " +
                            _vm._s(
                              _vm.__(
                                "Create a lifecycle of your projects using milestones. Time mark the different stages of your project with multiple milestones and also it will help the assigned people to aim for a date to complete the project according to those steps.",
                                "pm"
                              )
                            ) +
                            "\n                "
                        )
                      ]),
                      _vm._v(" "),
                      _vm.user_can("create_milestone")
                        ? _c(
                            "div",
                            { staticClass: "pm-milestone-link clearfix" },
                            [
                              _c(
                                "a",
                                {
                                  staticClass:
                                    "pm-btn pm-btn-blue pm-plus-white pm-margin-bottom add-milestone pm-btn-uppercase",
                                  attrs: { id: "pm-add-milestone", href: "#" },
                                  on: {
                                    click: function($event) {
                                      $event.preventDefault()
                                      _vm.showHideMilestoneForm("toggle")
                                    }
                                  }
                                },
                                [_vm._v(_vm._s(_vm.__("Add Milestone", "pm")))]
                              )
                            ]
                          )
                        : _vm._e(),
                      _vm._v(" "),
                      _vm.can_create_milestone
                        ? _c("transition", { attrs: { name: "slide" } }, [
                            _vm.is_milestone_form_active
                              ? _c(
                                  "div",
                                  { staticClass: "pm-new-milestone-form" },
                                  [
                                    _c(
                                      "div",
                                      { staticClass: "pm-milestone-form-wrap" },
                                      [
                                        _c("new-milestone-form", {
                                          attrs: {
                                            section: "milestones",
                                            milestone: {}
                                          }
                                        })
                                      ],
                                      1
                                    )
                                  ]
                                )
                              : _vm._e()
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _c("div", { staticClass: "pm-list-content" }, [
                        _c("h3", { staticClass: "pm-page-title pm-why-for" }, [
                          _vm._v(
                            " " +
                              _vm._s(_vm.__("When to use Milestones?", "pm"))
                          )
                        ]),
                        _vm._v(" "),
                        _c("ul", { staticClass: "pm-list" }, [
                          _c("li", [
                            _vm._v(
                              _vm._s(
                                _vm.__(
                                  "To set a target date for the project overall.",
                                  "pm"
                                )
                              ) + " "
                            )
                          ]),
                          _vm._v(" "),
                          _c("li", [
                            _vm._v(
                              _vm._s(
                                _vm.__(
                                  "To divide a project into several development-time phases.",
                                  "pm"
                                )
                              ) + " "
                            )
                          ]),
                          _vm._v(" "),
                          _c("li", [
                            _vm._v(
                              _vm._s(
                                _vm.__(
                                  "To coordinate projects and assigned persons timely.",
                                  "pm"
                                )
                              ) + " "
                            )
                          ])
                        ])
                      ])
                    ],
                    1
                  )
                ])
              : _vm._e(),
            _vm._v(" "),
            !_vm.blankTemplate
              ? _c(
                  "div",
                  [
                    _c(
                      "div",
                      { staticClass: "pm-row pm-milestone-details" },
                      [
                        _vm.can_create_milestone
                          ? _c(
                              "div",
                              { staticClass: "pm-milestone-link clearfix" },
                              [
                                _c(
                                  "a",
                                  {
                                    staticClass:
                                      "pm-btn pm-btn-blue pm-plus-white pm-margin-bottom add-milestone pm-btn-uppercase",
                                    attrs: {
                                      id: "pm-add-milestone",
                                      href: "#"
                                    },
                                    on: {
                                      click: function($event) {
                                        $event.preventDefault()
                                        _vm.showHideMilestoneForm("toggle")
                                      }
                                    }
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(_vm.__("Add Milestone", "pm"))
                                    )
                                  ]
                                )
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.can_create_milestone
                          ? _c("transition", { attrs: { name: "slide" } }, [
                              _vm.is_milestone_form_active
                                ? _c(
                                    "div",
                                    {
                                      staticClass:
                                        "pm-new-milestone-form pm-col-6 pm-sm-col-12",
                                      staticStyle: { float: "none" }
                                    },
                                    [
                                      _c(
                                        "div",
                                        {
                                          staticClass: "pm-milestone-form-wrap"
                                        },
                                        [
                                          _c("new-milestone-form", {
                                            attrs: {
                                              section: "milestones",
                                              milestone: {}
                                            }
                                          })
                                        ],
                                        1
                                      )
                                    ]
                                  )
                                : _vm._e()
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _c("late-milestones"),
                        _vm._v(" "),
                        _c("upcomming-milestone"),
                        _vm._v(" "),
                        _c("completed-milestones")
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("pm-pagination", {
                      attrs: {
                        total_pages: _vm.total_milestone_page,
                        current_page_number: _vm.current_page_number,
                        component_name: "milestone_pagination"
                      }
                    })
                  ],
                  1
                )
              : _vm._e()
          ])
        : _vm._e()
    ],
    1
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "loadmoreanimation" }, [
      _c("div", { staticClass: "load-spinner" }, [
        _c("div", { staticClass: "rect1" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect2" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect3" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect4" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect5" })
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-7f3234ba", esExports)
  }
}

/***/ }),
/* 360 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c(
      "div",
      { staticClass: "pm-col-7" },
      [
        _c(
          "router-link",
          {
            attrs: {
              to: {
                name: "single_list",
                params: {
                  project_id: _vm.project_id,
                  list_id: _vm.list.id
                }
              }
            }
          },
          [_vm._v("\n\n            " + _vm._s(_vm.list.title) + "\n\n        ")]
        )
      ],
      1
    ),
    _vm._v(" "),
    _c("div", { staticClass: " pm-col-3" }, [
      _c("div", { staticClass: "pm-progress pm-progress-info" }, [
        _c("div", {
          staticClass: "bar completed",
          style: _vm.getProgressStyle(_vm.list)
        })
      ])
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "pm-col-1 pm-right pm-last-col" }, [
      _vm._v(
        "\n        " +
          _vm._s(_vm.getProgressPercent(_vm.list)) +
          "%                                \n    "
      )
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "clearfix" })
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-8354a3d6", esExports)
  }
}

/***/ }),
/* 361 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c(
      "a",
      {
        staticClass:
          "pm-btn pm-btn-blue pm-margin-bottom add-tasklist pm-btn-uppercase",
        attrs: { href: "#" },
        on: {
          click: function($event) {
            $event.preventDefault()
            _vm.showHideListForm("toggle")
          }
        }
      },
      [
        !_vm.show_list_form
          ? _c("i", {
              staticClass: "fa fa-plus-circle",
              attrs: { "aria-hidden": "true" }
            })
          : _vm._e(),
        _vm._v(" "),
        _vm.show_list_form
          ? _c("i", {
              staticClass: "fa fa-minus-circle",
              attrs: { "aria-hidden": "true" }
            })
          : _vm._e(),
        _vm._v("\n        " + _vm._s(_vm.__("New Task List", "pm")) + "\n    ")
      ]
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-8553a32a", esExports)
  }
}

/***/ }),
/* 362 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("router-view")
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-92b6a508", esExports)
  }
}

/***/ }),
/* 363 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c(
      "form",
      {
        staticClass: "pm-form pm-project-form",
        attrs: { action: "", method: "post" },
        on: {
          submit: function($event) {
            $event.preventDefault()
            _vm.projectFormAction()
          }
        }
      },
      [
        _c("div", { staticClass: "item project-name" }, [
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.project.title,
                expression: "project.title"
              }
            ],
            attrs: {
              type: "text",
              id: "project_name",
              placeholder: _vm.name_of_the_project,
              size: "45"
            },
            domProps: { value: _vm.project.title },
            on: {
              input: function($event) {
                if ($event.target.composing) {
                  return
                }
                _vm.$set(_vm.project, "title", $event.target.value)
              }
            }
          })
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "pm-form-item item project-category" }, [
          _c(
            "select",
            {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.project_category,
                  expression: "project_category"
                }
              ],
              staticClass: "chosen-select",
              attrs: { id: "project_cat" },
              on: {
                change: function($event) {
                  var $$selectedVal = Array.prototype.filter
                    .call($event.target.options, function(o) {
                      return o.selected
                    })
                    .map(function(o) {
                      var val = "_value" in o ? o._value : o.value
                      return val
                    })
                  _vm.project_category = $event.target.multiple
                    ? $$selectedVal
                    : $$selectedVal[0]
                }
              }
            },
            [
              _c("option", { attrs: { value: "0" } }, [
                _vm._v(_vm._s(_vm.__("- Project Category -", "pm")))
              ]),
              _vm._v(" "),
              _vm._l(_vm.categories, function(category) {
                return _c("option", { domProps: { value: category.id } }, [
                  _vm._v(_vm._s(category.title))
                ])
              })
            ],
            2
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "pm-form-item item project-detail" }, [
          _c("textarea", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.project.description,
                expression: "project.description"
              }
            ],
            staticClass: "pm-project-description",
            attrs: { id: "", rows: "5", placeholder: _vm.details_of_project },
            domProps: { value: _vm.project.description },
            on: {
              input: function($event) {
                if ($event.target.composing) {
                  return
                }
                _vm.$set(_vm.project, "description", $event.target.value)
              }
            }
          })
        ]),
        _vm._v(" "),
        _vm.show_role_field
          ? _c("div", { staticClass: "pm-form-item pm-project-role" }, [
              _c(
                "table",
                _vm._l(_vm.selectedUsers, function(projectUser) {
                  return _vm.current_user.data.ID != projectUser.id
                    ? _c("tr", { key: projectUser.id }, [
                        _c("td", [_vm._v(_vm._s(projectUser.display_name))]),
                        _vm._v(" "),
                        _c("td", [
                          _c(
                            "select",
                            {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: projectUser.roles.data[0].id,
                                  expression: "projectUser.roles.data[0].id"
                                }
                              ],
                              attrs: {
                                disabled: _vm.is_project_creator(projectUser.id)
                              },
                              on: {
                                change: function($event) {
                                  var $$selectedVal = Array.prototype.filter
                                    .call($event.target.options, function(o) {
                                      return o.selected
                                    })
                                    .map(function(o) {
                                      var val =
                                        "_value" in o ? o._value : o.value
                                      return val
                                    })
                                  _vm.$set(
                                    projectUser.roles.data[0],
                                    "id",
                                    $event.target.multiple
                                      ? $$selectedVal
                                      : $$selectedVal[0]
                                  )
                                }
                              }
                            },
                            _vm._l(_vm.roles, function(role) {
                              return _c(
                                "option",
                                { domProps: { value: role.id } },
                                [_vm._v(_vm._s(role.title))]
                              )
                            })
                          )
                        ]),
                        _vm._v(" "),
                        _c("td", [
                          !_vm.is_project_creator(projectUser.id)
                            ? _c(
                                "a",
                                {
                                  staticClass:
                                    "pm-del-proj-role pm-assign-del-user",
                                  attrs: { hraf: "#" },
                                  on: {
                                    click: function($event) {
                                      $event.preventDefault()
                                      _vm.deleteUser(projectUser)
                                    }
                                  }
                                },
                                [
                                  _c("span", {
                                    staticClass: "dashicons dashicons-trash"
                                  }),
                                  _vm._v(" "),
                                  _c("span", { staticClass: "title" }, [
                                    _vm._v(_vm._s(_vm.__("Delete", "pm")))
                                  ])
                                ]
                              )
                            : _vm._e()
                        ])
                      ])
                    : _vm._e()
                })
              )
            ])
          : _vm._e(),
        _vm._v(" "),
        _vm.show_role_field
          ? _c("div", { staticClass: "pm-form-item item project-users" }, [
              _c("input", {
                directives: [{ name: "pm-users", rawName: "v-pm-users" }],
                staticClass: "pm-project-coworker",
                attrs: {
                  type: "text",
                  name: "user",
                  placeholder: _vm.search_user,
                  size: "45"
                }
              })
            ])
          : _vm._e(),
        _vm._v(" "),
        _c("div", { staticClass: "pm-form-item item project-notify" }, [
          _c("label", [
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.project_notify,
                  expression: "project_notify"
                }
              ],
              attrs: {
                type: "checkbox",
                name: "project_notify",
                id: "project-notify",
                value: "yes"
              },
              domProps: {
                checked: Array.isArray(_vm.project_notify)
                  ? _vm._i(_vm.project_notify, "yes") > -1
                  : _vm.project_notify
              },
              on: {
                change: function($event) {
                  var $$a = _vm.project_notify,
                    $$el = $event.target,
                    $$c = $$el.checked ? true : false
                  if (Array.isArray($$a)) {
                    var $$v = "yes",
                      $$i = _vm._i($$a, $$v)
                    if ($$el.checked) {
                      $$i < 0 && (_vm.project_notify = $$a.concat([$$v]))
                    } else {
                      $$i > -1 &&
                        (_vm.project_notify = $$a
                          .slice(0, $$i)
                          .concat($$a.slice($$i + 1)))
                    }
                  } else {
                    _vm.project_notify = $$c
                  }
                }
              }
            }),
            _vm._v(
              "\n                " +
                _vm._s(_vm.__("Notify Co-Workers", "pm")) +
                "            \n            "
            )
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "submit" }, [
          _vm.is_update
            ? _c("input", {
                staticClass: "button-primary",
                attrs: {
                  type: "submit",
                  name: "update_project",
                  id: "update_project"
                },
                domProps: { value: _vm.update_project }
              })
            : _vm._e(),
          _vm._v(" "),
          !_vm.is_update
            ? _c("input", {
                staticClass: "button-primary",
                attrs: {
                  type: "submit",
                  name: "add_project",
                  id: "add_project"
                },
                domProps: { value: _vm.add_new_project }
              })
            : _vm._e(),
          _vm._v(" "),
          _c(
            "a",
            {
              staticClass: "button project-cancel",
              attrs: { href: "#" },
              on: {
                click: function($event) {
                  $event.preventDefault()
                  _vm.closeForm()
                }
              }
            },
            [_vm._v(_vm._s(_vm.__("Cancel", "pm")))]
          ),
          _vm._v(" "),
          _c("span", {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.show_spinner,
                expression: "show_spinner"
              }
            ],
            staticClass: "pm-loading"
          })
        ])
      ]
    ),
    _vm._v(" "),
    _c(
      "div",
      {
        directives: [
          {
            name: "pm-user-create-popup-box",
            rawName: "v-pm-user-create-popup-box"
          }
        ],
        attrs: { id: "pm-create-user-wrap", title: _vm.create_new_user }
      },
      [_c("project-new-user-form")],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-96a13b1c", esExports)
  }
}

/***/ }),
/* 364 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "pm-wrap pm-front-end" }, [
    _c("div", { staticClass: "pm-top-bar pm-no-padding" }, [
      _c("div", { staticClass: "pm-row pm-no-padding" }, [
        _c("div", { staticClass: "pm-col-6" }, [
          _c("h3", [_vm._v(_vm._s(_vm.__("Project Manager", "pm")))])
        ]),
        _vm._v(" "),
        _c("div", {
          staticClass:
            "pm-col-6 pm-top-right-btn pm-text-right pm-last-col show_desktop_only"
        }),
        _vm._v(" "),
        _c("div", { staticClass: "clearfix" })
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "pm-row pm-no-padding pm-priject-search-bar" }, [
        _c(
          "div",
          { staticClass: "pm-new-project-btn pm-col-2 pm-sm-col-12  " },
          [
            _vm.has_create_capability()
              ? _c("project-new-project-btn")
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "pm-col-9 pm-no-padding pm-no-margin pm-sm-col-12  " },
          [
            _c(
              "div",
              { staticClass: "pm-col-5 pm-sm-col-12" },
              [_c("project-filter-by-category")],
              1
            ),
            _vm._v(" "),
            _c("pm-do-action", { attrs: { hook: "pm_projects_header" } })
          ],
          1
        ),
        _vm._v(" "),
        _c("div", { staticClass: "clearfix" })
      ]),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "pm-row pm-project-group" },
        [
          _c("project-header-menu"),
          _vm._v(" "),
          _c(
            "div",
            {
              staticClass:
                "pm-col-4 pm-last-col pm-text-right show_desktop_only"
            },
            [_c("project-view")],
            1
          )
        ],
        1
      ),
      _vm._v(" "),
      _c("div", { staticClass: "clearfix" })
    ]),
    _vm._v(" "),
    _vm.has_create_capability()
      ? _c(
          "div",
          {
            directives: [{ name: "pm-popup-box", rawName: "v-pm-popup-box" }],
            staticStyle: { "z-index": "999" },
            attrs: { id: "pm-project-dialog", title: _vm.start_new_project }
          },
          [_c("project-create-form", { attrs: { project: {} } })],
          1
        )
      : _vm._e()
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-972db828", esExports)
  }
}

/***/ }),
/* 365 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm._m(0)
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "wrap" }, [
      _c("h2", [_vm._v("WP Project Manager Pro - add-ons")]),
      _vm._v(" "),
      _c("div", { staticClass: "wpuf-addon" }, [
        _c("div", { staticClass: "wpuf-addon-thumb" }, [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://wedevs.com/products/plugins/wp-project-manager-pro/invoice-stripe-gateway/",
                target: "_blank"
              }
            },
            [
              _c("img", {
                attrs: {
                  src:
                    "http://wedevs.com/wp-content/uploads/2014/03/invoice-addon.png",
                  alt: "Invoice"
                }
              })
            ]
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-detail" }, [
          _c("h3", { staticClass: "title" }, [
            _c(
              "a",
              {
                attrs: {
                  href:
                    "https://wedevs.com/products/plugins/wp-project-manager-pro/invoice-stripe-gateway/",
                  target: "_blank"
                }
              },
              [_vm._v("Invoice")]
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "text" }, [
            _vm._v("Create invoice and collect payments.")
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-links" }, [
          _c(
            "a",
            {
              staticClass: "button button-disabled",
              attrs: {
                href:
                  "https://wedevs.com/products/plugins/wp-project-manager-pro/invoice-stripe-gateway/",
                target: "_blank"
              }
            },
            [_vm._v("Installed")]
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "wpuf-addon" }, [
        _c("div", { staticClass: "wpuf-addon-thumb" }, [
          _c(
            "a",
            {
              attrs: {
                href:
                  "http://wedevs.com/plugin/wp-project-manager/invoice-stripe-gateway/",
                target: "_blank"
              }
            },
            [
              _c("img", {
                attrs: {
                  src:
                    "http://wedevs.com/wp-content/uploads/2014/03/invoice-stripe-addon.png",
                  alt: "Invoice - Stripe Gateway"
                }
              })
            ]
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-detail" }, [
          _c("h3", { staticClass: "title" }, [
            _c(
              "a",
              {
                attrs: {
                  href:
                    "http://wedevs.com/plugin/wp-project-manager/invoice-stripe-gateway/",
                  target: "_blank"
                }
              },
              [_vm._v("Invoice - Stripe Gateway")]
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "text" }, [
            _vm._v("Stripe gateway for WP Project Manager Invoice add-on.")
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-links" }, [
          _c(
            "a",
            {
              staticClass: "button",
              attrs: {
                href:
                  "http://wedevs.com/plugin/wp-project-manager/invoice-stripe-gateway/",
                target: "_blank"
              }
            },
            [_vm._v("View Details")]
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "wpuf-addon" }, [
        _c("div", { staticClass: "wpuf-addon-thumb" }, [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://wedevs.com/products/plugins/wp-project-manager-pro/sub-task/",
                target: "_blank"
              }
            },
            [
              _c("img", {
                attrs: {
                  src:
                    "http://wedevs.com/wp-content/uploads/2014/03/sub-task.png",
                  alt: "Sub Task"
                }
              })
            ]
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-detail" }, [
          _c("h3", { staticClass: "title" }, [
            _c(
              "a",
              {
                attrs: {
                  href:
                    "https://wedevs.com/products/plugins/wp-project-manager-pro/sub-task/",
                  target: "_blank"
                }
              },
              [_vm._v("Sub Task")]
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "text" }, [
            _vm._v("Create to-do within to-do.")
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-links" }, [
          _c(
            "a",
            {
              staticClass: "button button-disabled",
              attrs: {
                href:
                  "https://wedevs.com/products/plugins/wp-project-manager-pro/sub-task/",
                target: "_blank"
              }
            },
            [_vm._v("Installed")]
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "wpuf-addon" }, [
        _c("div", { staticClass: "wpuf-addon-thumb" }, [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://wedevs.com/products/plugins/wp-project-manager-pro/time-tracker/",
                target: "_blank"
              }
            },
            [
              _c("img", {
                attrs: {
                  src:
                    "http://wedevs.com/wp-content/uploads/2014/03/time-tracker.png",
                  alt: "Time Tracker"
                }
              })
            ]
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-detail" }, [
          _c("h3", { staticClass: "title" }, [
            _c(
              "a",
              {
                attrs: {
                  href:
                    "https://wedevs.com/products/plugins/wp-project-manager-pro/time-tracker/",
                  target: "_blank"
                }
              },
              [_vm._v("Time Tracker")]
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "text" }, [
            _vm._v("Track time for each to-do.")
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-links" }, [
          _c(
            "a",
            {
              staticClass: "button button-disabled",
              attrs: {
                href:
                  "https://wedevs.com/products/plugins/wp-project-manager-pro/time-tracker/",
                target: "_blank"
              }
            },
            [_vm._v("Installed")]
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "wpuf-addon" }, [
        _c("div", { staticClass: "wpuf-addon-thumb" }, [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://wedevs.com/products/plugins/wp-project-manager-pro/woocommerce-order/",
                target: "_blank"
              }
            },
            [
              _c("img", {
                attrs: {
                  src:
                    "http://wedevs.com/wp-content/uploads/2014/03/cpm-woo.jpg",
                  alt: "WooCommerce Order"
                }
              })
            ]
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-detail" }, [
          _c("h3", { staticClass: "title" }, [
            _c(
              "a",
              {
                attrs: {
                  href:
                    "https://wedevs.com/products/plugins/wp-project-manager-pro/woocommerce-order/",
                  target: "_blank"
                }
              },
              [_vm._v("WooCommerce Order")]
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "text" }, [
            _vm._v(
              "Create a pre-defined project when a new order is placed in WooCommerce"
            )
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-links" }, [
          _c(
            "a",
            {
              staticClass: "button",
              attrs: {
                href:
                  "https://wedevs.com/products/plugins/wp-project-manager-pro/woocommerce-order/",
                target: "_blank"
              }
            },
            [_vm._v("View Details")]
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "wpuf-addon" }, [
        _c("div", { staticClass: "wpuf-addon-thumb" }, [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://wedevs.com/products/plugins/wp-project-manager-pro/kanban-board/",
                target: "_blank"
              }
            },
            [
              _c("img", {
                attrs: {
                  src:
                    "http://wedevs.com/wp-content/uploads/2014/08/kanboard.png",
                  alt: "Kanban Board"
                }
              })
            ]
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-detail" }, [
          _c("h3", { staticClass: "title" }, [
            _c(
              "a",
              {
                attrs: {
                  href:
                    "https://wedevs.com/products/plugins/wp-project-manager-pro/kanban-board/",
                  target: "_blank"
                }
              },
              [_vm._v("Kanban Board")]
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "text" }, [
            _vm._v("Implement kanban in your projects")
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-links" }, [
          _c(
            "a",
            {
              staticClass: "button button-disabled",
              attrs: {
                href:
                  "https://wedevs.com/products/plugins/wp-project-manager-pro/kanban-board/",
                target: "_blank"
              }
            },
            [_vm._v("Installed")]
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "wpuf-addon" }, [
        _c("div", { staticClass: "wpuf-addon-thumb" }, [
          _c(
            "a",
            {
              attrs: {
                href:
                  "https://wedevs.com/products/plugins/wp-project-manager-pro/gantt-chart/",
                target: "_blank"
              }
            },
            [
              _c("img", {
                attrs: {
                  src:
                    "http://wedevs.com/wp-content/uploads/2014/08/project-manger-gantt-chart-2.png",
                  alt: "Gantt Chart"
                }
              })
            ]
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-detail" }, [
          _c("h3", { staticClass: "title" }, [
            _c(
              "a",
              {
                attrs: {
                  href:
                    "https://wedevs.com/products/plugins/wp-project-manager-pro/gantt-chart/",
                  target: "_blank"
                }
              },
              [_vm._v("Gantt Chart")]
            )
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "text" }, [
            _vm._v("Get your overall project estimation via Gantt")
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "wpuf-links" }, [
          _c(
            "a",
            {
              staticClass: "button button-disabled",
              attrs: {
                href:
                  "https://wedevs.com/products/plugins/wp-project-manager-pro/gantt-chart/",
                target: "_blank"
              }
            },
            [_vm._v("Installed")]
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "clear" })
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-984958c0", esExports)
  }
}

/***/ }),
/* 366 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm._m(0)
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", [
      _c("div", { staticClass: "postbox pm-pro-notice" }, [
        _c("div", { staticClass: "pm-text" }, [
          _vm._v(
            "\n            This feature is only available in the Pro Version.                "
          )
        ]),
        _vm._v(" "),
        _c(
          "a",
          {
            staticClass: "button button-primary",
            attrs: {
              target: "_blank",
              href:
                "https://wedevs.com/wp-project-manager-pro/pricing/?utm_source=freeplugin&utm_medium=pm-action-link&utm_campaign=pm-pro-prompt"
            }
          },
          [_vm._v("Upgrade to Pro Version")]
        )
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-b67fbae4", esExports)
  }
}

/***/ }),
/* 367 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "pm-clearfix" },
    [
      !_vm.projects.length
        ? _c("h3", [_vm._v(_vm._s(_vm.__("No projects found.", "pm")))])
        : _vm._e(),
      _vm._v(" "),
      _vm._l(_vm.projects, function(project) {
        return _c(
          "article",
          { staticClass: "pm-project pm-column-gap-left pm-sm-col-12" },
          [
            _c(
              "router-link",
              {
                attrs: {
                  title: project.title,
                  to: {
                    name: "pm_overview",
                    params: { project_id: project.id }
                  }
                }
              },
              [
                _c("div", { staticClass: "project_head" }, [
                  _c("h5", [_vm._v(_vm._s(project.title))]),
                  _vm._v(" "),
                  _c("div", { staticClass: "pm-project-detail" })
                ])
              ]
            ),
            _vm._v(" "),
            _c("div", { staticClass: "pm-project-meta" }, [
              _c("ul", [
                _c(
                  "li",
                  { staticClass: "message" },
                  [
                    _c(
                      "router-link",
                      {
                        attrs: {
                          to: {
                            name: "discussions",
                            params: {
                              project_id: project.id
                            }
                          }
                        }
                      },
                      [
                        _c("strong", [
                          _c("i", {
                            staticClass: "fa fa-circle",
                            attrs: { "aria-hidden": "true" }
                          }),
                          _vm._v(
                            "\n                            " +
                              _vm._s(
                                parseInt(
                                  project.meta.data.total_discussion_boards
                                )
                              ) +
                              "\n                        "
                          )
                        ]),
                        _vm._v(
                          " \n                            " +
                            _vm._s(_vm.__("Discussions", "pm")) +
                            "\n\n                    "
                        )
                      ]
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "li",
                  { staticClass: "todo" },
                  [
                    _c(
                      "router-link",
                      {
                        attrs: {
                          to: {
                            name: "task_lists",
                            params: {
                              project_id: project.id
                            }
                          }
                        }
                      },
                      [
                        _c("strong", [
                          _c("i", {
                            staticClass: "fa fa-circle",
                            attrs: { "aria-hidden": "true" }
                          }),
                          _vm._v(
                            "\n                            " +
                              _vm._s(
                                parseInt(project.meta.data.total_task_lists)
                              ) +
                              "\n                        "
                          )
                        ]),
                        _vm._v(
                          " \n                            " +
                            _vm._s(_vm.__("Task Lists", "pm")) +
                            "\n                    "
                        )
                      ]
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "li",
                  { staticClass: "files" },
                  [
                    _c(
                      "router-link",
                      {
                        attrs: {
                          to: {
                            name: "task_lists",
                            params: {
                              project_id: project.id
                            }
                          }
                        }
                      },
                      [
                        _c("strong", [
                          _c("i", {
                            staticClass: "fa fa-circle",
                            attrs: { "aria-hidden": "true" }
                          }),
                          _vm._v(
                            "\n                            " +
                              _vm._s(parseInt(project.meta.data.total_tasks)) +
                              "\n                        "
                          )
                        ]),
                        _vm._v(
                          " \n                            " +
                            _vm._s(_vm.__("Tasks", "pm")) +
                            "\n                    "
                        )
                      ]
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "li",
                  { staticClass: "milestone" },
                  [
                    _c(
                      "router-link",
                      {
                        attrs: {
                          to: {
                            name: "milestones",
                            params: {
                              project_id: project.id
                            }
                          }
                        }
                      },
                      [
                        _c("strong", [
                          _c("i", {
                            staticClass: "fa fa-circle",
                            attrs: { "aria-hidden": "true" }
                          }),
                          _vm._v(
                            "\n                            " +
                              _vm._s(
                                parseInt(project.meta.data.total_milestones)
                              ) +
                              "\n                        "
                          )
                        ]),
                        _vm._v(
                          " \n                            " +
                            _vm._s(_vm.__("Milestones", "pm")) +
                            "\n                    "
                        )
                      ]
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "li",
                  { staticClass: "files" },
                  [
                    _c(
                      "router-link",
                      {
                        attrs: {
                          to: {
                            name: "task_lists",
                            params: {
                              project_id: project.id
                            }
                          }
                        }
                      },
                      [
                        _c("strong", [
                          _c("i", {
                            staticClass: "fa fa-circle",
                            attrs: { "aria-hidden": "true" }
                          }),
                          _vm._v(
                            "\n                            " +
                              _vm._s(parseInt(project.meta.data.total_files)) +
                              "\n                        "
                          )
                        ]),
                        _vm._v(
                          " \n                            " +
                            _vm._s(_vm.__("Files", "pm")) +
                            "\n                    "
                        )
                      ]
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c("li", { staticClass: "milestone" }, [
                  _c("a", { attrs: { href: "#" } }, [
                    _c("strong", [
                      _c("i", {
                        staticClass: "fa fa-circle",
                        attrs: { "aria-hidden": "true" }
                      }),
                      _vm._v(
                        "\n                            " +
                          _vm._s(parseInt(project.meta.data.total_comments)) +
                          "\n                        "
                      )
                    ]),
                    _vm._v(
                      " \n                            " +
                        _vm._s(_vm.__("Comments", "pm")) +
                        "\n                    "
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "clearfix" })
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "pm-progress pm-progress-info" }, [
              _c("div", {
                staticClass: "bar completed",
                style: _vm.projectCompleteStatus(project)
              })
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "pm-progress-percentage" }),
            _vm._v(" "),
            _c("footer", { staticClass: "pm-project-people" }, [
              _c(
                "div",
                { staticClass: "pm-scroll" },
                _vm._l(project.assignees.data, function(user) {
                  return _c("img", {
                    staticClass: "avatar avatar-48 photo",
                    attrs: {
                      alt: user.display_name,
                      src: user.avatar_url,
                      height: "48",
                      width: "48"
                    }
                  })
                })
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "pm-project-action-icon" }, [
              _vm.is_manager(project)
                ? _c("div", { staticClass: "pm-project-action" }, [
                    _c("span", {
                      staticClass:
                        "dashicons dashicons-admin-generic pm-settings-bind",
                      attrs: { title: _vm.project_action },
                      on: {
                        click: function($event) {
                          $event.preventDefault()
                          _vm.settingsShowHide(project)
                        }
                      }
                    }),
                    _vm._v(" "),
                    project.settings_hide
                      ? _c(
                          "ul",
                          { staticClass: "pm-settings" },
                          [
                            _c("li", [
                              _c("span", { staticClass: "pm-spinner" }),
                              _vm._v(" "),
                              _c(
                                "a",
                                {
                                  staticClass: "pm-project-delete-link",
                                  attrs: {
                                    title: _vm.__("Delete project", "pm")
                                  },
                                  on: {
                                    click: function($event) {
                                      $event.preventDefault()
                                      _vm.deleteProject(project.id, project)
                                    }
                                  }
                                },
                                [
                                  _c("span", {
                                    staticClass: "dashicons dashicons-trash"
                                  }),
                                  _vm._v(" "),
                                  _c("span", [
                                    _vm._v(_vm._s(_vm.__("Delete", "pm")))
                                  ])
                                ]
                              )
                            ]),
                            _vm._v(" "),
                            _c("li", [
                              _c("span", { staticClass: "pm-spinner" }),
                              _vm._v(" "),
                              _c(
                                "a",
                                {
                                  staticClass: "pm-archive",
                                  on: {
                                    click: function($event) {
                                      $event.preventDefault()
                                      _vm.projectMarkAsDoneUndone(project)
                                    }
                                  }
                                },
                                [
                                  project.status == "incomplete"
                                    ? _c("span", {
                                        staticClass: "dashicons dashicons-yes"
                                      })
                                    : _vm._e(),
                                  _vm._v(" "),
                                  project.status == "incomplete"
                                    ? _c("span", [
                                        _vm._v(_vm._s(_vm.__("Complete", "pm")))
                                      ])
                                    : _vm._e(),
                                  _vm._v(" "),
                                  project.status == "complete"
                                    ? _c("span", {
                                        staticClass: "dashicons dashicons-undo"
                                      })
                                    : _vm._e(),
                                  _vm._v(" "),
                                  project.status == "complete"
                                    ? _c("span", [
                                        _vm._v(_vm._s(_vm.__("Restore", "pm")))
                                      ])
                                    : _vm._e()
                                ]
                              )
                            ]),
                            _vm._v(" "),
                            _c("pm-do-action", {
                              attrs: {
                                hook: "project_action_menu",
                                actionData: project
                              }
                            })
                          ],
                          1
                        )
                      : _vm._e()
                  ])
                : _vm._e()
            ])
          ],
          1
        )
      })
    ],
    2
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-be540dba", esExports)
  }
}

/***/ }),
/* 368 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.lateMileStones.length
    ? _c(
        "div",
        { staticClass: "pm-late-milestone pm-milestone-data" },
        [
          _c("h2", { staticClass: "group-title" }, [
            _vm._v(_vm._s(_vm.__("Late Milestones", "pm")))
          ]),
          _vm._v(" "),
          _vm._l(_vm.lateMileStones, function(milestone) {
            return _c("div", { staticClass: "pm-milestone late" }, [
              _c("div", { staticClass: "milestone-detail " }, [
                _c(
                  "h3",
                  { staticClass: "milestone-head" },
                  [
                    _vm._v(
                      "\n                " + _vm._s(milestone.title) + " "
                    ),
                    _c("br"),
                    _vm._v(" "),
                    _c("span", { staticClass: "time-left" }, [
                      _vm._v(
                        "\n                    (" +
                          _vm._s(_vm.humanDate(milestone)) +
                          " - \n                    "
                      ),
                      _c(
                        "time",
                        {
                          attrs: {
                            datetime: _vm.momentFormat(milestone),
                            title: _vm.momentFormat(milestone)
                          }
                        },
                        [
                          _vm._v(
                            "\n                        " +
                              _vm._s(_vm.getDueDate(milestone)) +
                              "\n                    "
                          )
                        ]
                      ),
                      _vm._v(")\n                ")
                    ]),
                    _vm._v(" "),
                    _c("action", { attrs: { milestone: milestone } })
                  ],
                  1
                ),
                _vm._v(" "),
                _c("div", { staticClass: "detail" }, [
                  _c("div", {
                    domProps: { innerHTML: _vm._s(milestone.content) }
                  })
                ])
              ]),
              _vm._v(" "),
              _vm.can_edit_milestone(milestone)
                ? _c(
                    "div",
                    { staticClass: "pm-milestone-edit-form" },
                    [
                      _c(
                        "transition",
                        { attrs: { name: "slide" } },
                        [
                          milestone.edit_mode
                            ? _c("new-milestone-form", {
                                attrs: {
                                  section: "milestones",
                                  milestone: milestone
                                }
                              })
                            : _vm._e()
                        ],
                        1
                      )
                    ],
                    1
                  )
                : _vm._e(),
              _vm._v(" "),
              _c("div", { staticClass: "pm-milestone-items-details" }, [
                milestone.task_lists.data.length
                  ? _c(
                      "div",
                      {
                        staticClass: "pm-col-6 pm-milestone-todo pm-sm-col-12"
                      },
                      [
                        _c("h3", [_vm._v(_vm._s(_vm.__("Task Lists", "pm")))]),
                        _vm._v(" "),
                        _c(
                          "ul",
                          _vm._l(milestone.task_lists.data, function(list) {
                            return _c(
                              "li",
                              [_c("list", { attrs: { list: list } })],
                              1
                            )
                          })
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                milestone.discussion_boards.data.length
                  ? _c(
                      "div",
                      {
                        staticClass:
                          "pm-col-6 pm-milestone-discussion pm-last-col pm-sm-col-12"
                      },
                      [
                        _c("h3", [_vm._v(_vm._s(_vm.__("Discussions", "pm")))]),
                        _vm._v(" "),
                        _c(
                          "ul",
                          _vm._l(milestone.discussion_boards.data, function(
                            discuss
                          ) {
                            return _c(
                              "li",
                              [_c("discuss", { attrs: { discuss: discuss } })],
                              1
                            )
                          })
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _c("div", { staticClass: "clearfix" })
              ])
            ])
          })
        ],
        2
      )
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-c29c263a", esExports)
  }
}

/***/ }),
/* 369 */,
/* 370 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { class: _vm.newTaskBtnClass() + " pm-new-task-button-icon" },
    [
      _c(
        "a",
        {
          attrs: { href: "#" },
          on: {
            click: function($event) {
              $event.preventDefault()
              _vm.showHideTaskFrom("toggle", _vm.list, false)
            }
          }
        },
        [_vm._v(_vm._s(_vm.__("Add Task", "pm")))]
      )
    ]
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-cf0884e4", esExports)
  }
}

/***/ }),
/* 371 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "metabox-holder" }, [
      _c("div", { staticClass: "group", attrs: { id: "pm_mails" } }, [
        _c(
          "form",
          {
            attrs: { method: "post", action: "options.php" },
            on: {
              submit: function($event) {
                $event.preventDefault()
                _vm.saveEmailSettings()
              }
            }
          },
          [
            _c("h2", [_vm._v(_vm._s(_vm.__("E-Mail Settings", "pm")))]),
            _vm._v(" "),
            _c("table", { staticClass: "form-table" }, [
              _c("tbody", [
                _c("tr", [
                  _c("th", { attrs: { scope: "row" } }, [
                    _c("label", { attrs: { for: "pm_mails[email_from]" } }, [
                      _vm._v(_vm._s(_vm.__("From Email", "pm")))
                    ])
                  ]),
                  _vm._v(" "),
                  _c("td", [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.from_email,
                          expression: "from_email"
                        }
                      ],
                      staticClass: "regular-text",
                      attrs: {
                        type: "text",
                        id: "pm_mails[email_from]",
                        name: "pm_mails[email_from]",
                        value: ""
                      },
                      domProps: { value: _vm.from_email },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.from_email = $event.target.value
                        }
                      }
                    })
                  ])
                ]),
                _vm._v(" "),
                _c("tr", [
                  _c("th", { attrs: { scope: "row" } }, [
                    _c(
                      "label",
                      { attrs: { for: "pm_mails[email_url_link]" } },
                      [_vm._v(_vm._s(_vm.__("Links in the Email", "pm")))]
                    )
                  ]),
                  _vm._v(" "),
                  _c("td", [
                    _c("fieldset", [
                      _c(
                        "label",
                        {
                          attrs: {
                            for: "wpuf-pm_mails[email_url_link][backend]"
                          }
                        },
                        [
                          _c("input", {
                            directives: [
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.link_to_backend,
                                expression: "link_to_backend"
                              }
                            ],
                            staticClass: "radio",
                            attrs: { type: "checkbox" },
                            domProps: {
                              checked: Array.isArray(_vm.link_to_backend)
                                ? _vm._i(_vm.link_to_backend, null) > -1
                                : _vm.link_to_backend
                            },
                            on: {
                              change: function($event) {
                                var $$a = _vm.link_to_backend,
                                  $$el = $event.target,
                                  $$c = $$el.checked ? true : false
                                if (Array.isArray($$a)) {
                                  var $$v = null,
                                    $$i = _vm._i($$a, $$v)
                                  if ($$el.checked) {
                                    $$i < 0 &&
                                      (_vm.link_to_backend = $$a.concat([$$v]))
                                  } else {
                                    $$i > -1 &&
                                      (_vm.link_to_backend = $$a
                                        .slice(0, $$i)
                                        .concat($$a.slice($$i + 1)))
                                  }
                                } else {
                                  _vm.link_to_backend = $$c
                                }
                              }
                            }
                          }),
                          _vm._v(
                            _vm._s(_vm.__("Link to Backend", "pm")) +
                              "\n                                    "
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c("br"),
                      _vm._v(" "),
                      _c("p", { staticClass: "description" }, [
                        _vm._v(
                          _vm._s(
                            _vm.__(
                              "Select where do you want to take the user. Notification emails contain links.",
                              "pm"
                            )
                          ) + "\n                                    "
                        )
                      ])
                    ])
                  ])
                ]),
                _vm._v(" "),
                _c("tr", [
                  _c("th", { attrs: { scope: "row" } }, [
                    _c("label", { attrs: { for: "pm_mails[email_type]" } }, [
                      _vm._v(_vm._s(_vm.__("E-Mail Type", "pm")))
                    ])
                  ]),
                  _vm._v(" "),
                  _c("td", [
                    _c(
                      "select",
                      {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.email_type,
                            expression: "email_type"
                          }
                        ],
                        staticClass: "regular",
                        attrs: {
                          name: "pm_mails[email_type]",
                          id: "pm_mails[email_type]"
                        },
                        on: {
                          change: function($event) {
                            var $$selectedVal = Array.prototype.filter
                              .call($event.target.options, function(o) {
                                return o.selected
                              })
                              .map(function(o) {
                                var val = "_value" in o ? o._value : o.value
                                return val
                              })
                            _vm.email_type = $event.target.multiple
                              ? $$selectedVal
                              : $$selectedVal[0]
                          }
                        }
                      },
                      [
                        _c("option", { attrs: { value: "text/html" } }, [
                          _vm._v(_vm._s(_vm.__("HTML Mail", "pm")))
                        ]),
                        _vm._v(" "),
                        _c(
                          "option",
                          {
                            attrs: { value: "text/plain", selected: "selected" }
                          },
                          [_vm._v(_vm._s(_vm.__("Plain Text", "pm")))]
                        )
                      ]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("tr", [
                  _c("th", { attrs: { scope: "row" } }, [
                    _c(
                      "label",
                      { attrs: { for: "pm_mails[email_bcc_enable]" } },
                      [_vm._v(_vm._s(_vm.__("Send email via Bcc", "pm")))]
                    )
                  ]),
                  _vm._v(" "),
                  _c("td", [
                    _c("fieldset", [
                      _c(
                        "label",
                        { attrs: { for: "wpuf-pm_mails[email_bcc_enable]" } },
                        [
                          _c("input", {
                            directives: [
                              {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.enable_bcc,
                                expression: "enable_bcc"
                              }
                            ],
                            staticClass: "checkbox",
                            attrs: { type: "checkbox" },
                            domProps: {
                              checked: Array.isArray(_vm.enable_bcc)
                                ? _vm._i(_vm.enable_bcc, null) > -1
                                : _vm.enable_bcc
                            },
                            on: {
                              change: function($event) {
                                var $$a = _vm.enable_bcc,
                                  $$el = $event.target,
                                  $$c = $$el.checked ? true : false
                                if (Array.isArray($$a)) {
                                  var $$v = null,
                                    $$i = _vm._i($$a, $$v)
                                  if ($$el.checked) {
                                    $$i < 0 &&
                                      (_vm.enable_bcc = $$a.concat([$$v]))
                                  } else {
                                    $$i > -1 &&
                                      (_vm.enable_bcc = $$a
                                        .slice(0, $$i)
                                        .concat($$a.slice($$i + 1)))
                                  }
                                } else {
                                  _vm.enable_bcc = $$c
                                }
                              }
                            }
                          }),
                          _vm._v(
                            "\n                                        " +
                              _vm._s(_vm.__("Enable Bcc", "pm")) +
                              "\n                                    "
                          )
                        ]
                      )
                    ])
                  ])
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", [
              _c("p", { staticClass: "submit" }, [
                _c("input", {
                  staticClass: "button button-primary",
                  attrs: { type: "submit", name: "submit", id: "submit" },
                  domProps: { value: _vm.save_change }
                }),
                _vm._v(" "),
                _c("span", {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.show_spinner,
                      expression: "show_spinner"
                    }
                  ],
                  staticClass: "pm-spinner"
                })
              ])
            ])
          ]
        )
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-d33f533e", esExports)
  }
}

/***/ }),
/* 372 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("input", {
    staticClass: "ui-autocomplete-input",
    attrs: {
      type: "text",
      id: "pm-search-client",
      name: "searchitem",
      placeholder: _vm.__("Search By Client...", "pm"),
      value: "",
      autocomplete: "off"
    }
  })
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-db13c722", esExports)
  }
}

/***/ }),
/* 373 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _c("project-list-header"),
      _vm._v(" "),
      _c("div", { staticClass: "completed-projects" }, [
        _vm.loading
          ? _c("div", { staticClass: "pm-row pm-data-load-before" }, [
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "pm-col-4" },
                [_c("project-loading")],
                1
              ),
              _vm._v(" "),
              _c("div", { staticClass: "pm-col-4" }, [_c("project-loading")], 1)
            ])
          : _c("div", [
              _c(
                "div",
                {
                  staticClass: "pm-projects pm-row pm-no-padding pm-no-margin",
                  class: [_vm.projects_view_class()]
                },
                [
                  _c("project-summary"),
                  _vm._v(" "),
                  _c("pm-pagination", {
                    attrs: {
                      total_pages: _vm.total_pages,
                      current_page_number: _vm.current_page_number,
                      component_name: "completed_project_pagination"
                    }
                  })
                ],
                1
              )
            ])
      ])
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-de6a2dca", esExports)
  }
}

/***/ }),
/* 374 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "pm-wrap pm pm-front-end" },
    [
      _c("pm-header"),
      _vm._v(" "),
      !_vm.isListFetch
        ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(0)])
        : _vm._e(),
      _vm._v(" "),
      _vm.listViewType && _vm.isListFetch
        ? _c(
            "div",
            [
              _vm.is_blank_Template ? _c("default-list-page") : _vm._e(),
              _vm._v(" "),
              _vm.is_list_Template
                ? _c(
                    "div",
                    {
                      staticClass: "pm-task-container",
                      attrs: { id: "pm-task-el" }
                    },
                    [
                      _c("div", { staticClass: "pm-inline-list-wrap" }, [
                        _vm.can_create_list
                          ? _c(
                              "div",
                              { staticClass: "pm-inline-list-element" },
                              [_c("new-task-list-btn")],
                              1
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _c(
                          "div",
                          { staticClass: "pm-right-inline-list-element" },
                          [
                            _c("pm-do-action", {
                              attrs: { hook: "pm-inline-list-button" }
                            })
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "pm-clearfix" })
                      ]),
                      _vm._v(" "),
                      _vm.can_create_list
                        ? _c(
                            "transition",
                            { attrs: { name: "slide" } },
                            [
                              _vm.is_active_list_form
                                ? _c("new-task-list-form", {
                                    attrs: { section: "lists", list: {} }
                                  })
                                : _vm._e()
                            ],
                            1
                          )
                        : _vm._e(),
                      _vm._v(" "),
                      _c(
                        "ul",
                        { staticClass: "pm-todolists" },
                        _vm._l(_vm.lists, function(list, index) {
                          return _c(
                            "li",
                            { key: list.id, class: "pm-fade-out-" + list.id },
                            [
                              _c(
                                "article",
                                { staticClass: "pm-todolist" },
                                [
                                  _c(
                                    "header",
                                    { staticClass: "pm-list-header" },
                                    [
                                      _c(
                                        "h3",
                                        [
                                          _c(
                                            "router-link",
                                            {
                                              attrs: {
                                                to: {
                                                  name: "single_list",
                                                  params: {
                                                    list_id: list.id
                                                  }
                                                }
                                              }
                                            },
                                            [
                                              _vm._v(
                                                "\n                                " +
                                                  _vm._s(list.title) +
                                                  "\n                                \n                                "
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _vm.can_edit_task_list(list)
                                            ? _c(
                                                "div",
                                                { staticClass: "pm-right" },
                                                [
                                                  _c(
                                                    "a",
                                                    {
                                                      attrs: {
                                                        href: "#",
                                                        title: "Edit this List"
                                                      },
                                                      on: {
                                                        click: function(
                                                          $event
                                                        ) {
                                                          $event.preventDefault()
                                                          _vm.showEditForm(list)
                                                        }
                                                      }
                                                    },
                                                    [
                                                      _c("span", {
                                                        staticClass:
                                                          "dashicons dashicons-edit"
                                                      })
                                                    ]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "a",
                                                    {
                                                      staticClass:
                                                        "pm-btn pm-btn-xs",
                                                      attrs: { href: "#" },
                                                      on: {
                                                        click: function(
                                                          $event
                                                        ) {
                                                          $event.preventDefault()
                                                          _vm.deleteSelfList(
                                                            list
                                                          )
                                                        }
                                                      }
                                                    },
                                                    [
                                                      _c("span", {
                                                        staticClass:
                                                          "dashicons dashicons-trash"
                                                      })
                                                    ]
                                                  ),
                                                  _vm._v(" "),
                                                  _vm.PM_Vars.is_pro &&
                                                  _vm.user_can(
                                                    "view_private_list"
                                                  )
                                                    ? _c(
                                                        "a",
                                                        {
                                                          attrs: { href: "#" },
                                                          on: {
                                                            click: function(
                                                              $event
                                                            ) {
                                                              $event.preventDefault()
                                                              _vm.listLockUnlock(
                                                                list
                                                              )
                                                            }
                                                          }
                                                        },
                                                        [
                                                          _c("span", {
                                                            class: _vm.privateClass(
                                                              list.meta.privacy
                                                            )
                                                          })
                                                        ]
                                                      )
                                                    : _vm._e()
                                                ]
                                              )
                                            : _vm._e()
                                        ],
                                        1
                                      ),
                                      _vm._v(" "),
                                      _c("pre", {
                                        staticClass: "pm-entry-detail",
                                        domProps: {
                                          innerHTML: _vm._s(list.description)
                                        }
                                      }),
                                      _vm._v(" "),
                                      _vm.can_edit_task_list(list)
                                        ? _c(
                                            "transition",
                                            { attrs: { name: "slide" } },
                                            [
                                              list.edit_mode
                                                ? _c(
                                                    "div",
                                                    {
                                                      staticClass:
                                                        "pm-update-todolist-form"
                                                    },
                                                    [
                                                      _c("new-task-list-form", {
                                                        attrs: {
                                                          section: "lists",
                                                          list: list
                                                        }
                                                      })
                                                    ],
                                                    1
                                                  )
                                                : _vm._e()
                                            ]
                                          )
                                        : _vm._e()
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c("list-tasks", { attrs: { list: list } }),
                                  _vm._v(" "),
                                  _c(
                                    "footer",
                                    { staticClass: "pm-row pm-list-footer" },
                                    [
                                      _c(
                                        "div",
                                        {
                                          staticClass: "pm-col-8 pm-sm-col-12"
                                        },
                                        [
                                          _c(
                                            "ul",
                                            {
                                              staticClass: "pm-footer-left-ul"
                                            },
                                            [
                                              _vm.isIncompleteLoadMoreActive(
                                                list
                                              )
                                                ? _c(
                                                    "li",
                                                    {
                                                      staticClass:
                                                        "pm-todo-refresh"
                                                    },
                                                    [
                                                      _c(
                                                        "a",
                                                        {
                                                          attrs: { href: "#" },
                                                          on: {
                                                            click: function(
                                                              $event
                                                            ) {
                                                              $event.preventDefault()
                                                              _vm.loadMoreIncompleteTasks(
                                                                list
                                                              )
                                                            }
                                                          }
                                                        },
                                                        [
                                                          _vm._v(
                                                            _vm._s(
                                                              _vm.__(
                                                                "More Tasks",
                                                                "pm"
                                                              )
                                                            )
                                                          )
                                                        ]
                                                      )
                                                    ]
                                                  )
                                                : _vm._e(),
                                              _vm._v(" "),
                                              _vm.can_create_task
                                                ? _c(
                                                    "transition",
                                                    {
                                                      attrs: { name: "slide" }
                                                    },
                                                    [
                                                      _c(
                                                        "li",
                                                        {
                                                          staticClass:
                                                            "pm-new-task-btn-li"
                                                        },
                                                        [
                                                          _c(
                                                            "new-task-button",
                                                            {
                                                              attrs: {
                                                                task: {},
                                                                list: list
                                                              }
                                                            }
                                                          )
                                                        ],
                                                        1
                                                      )
                                                    ]
                                                  )
                                                : _vm._e(),
                                              _vm._v(" "),
                                              _c(
                                                "li",
                                                {
                                                  staticClass:
                                                    "pm-todo-complete"
                                                },
                                                [
                                                  _c(
                                                    "router-link",
                                                    {
                                                      attrs: {
                                                        to: {
                                                          name: "single_list",
                                                          params: {
                                                            list_id: list.id
                                                          }
                                                        }
                                                      }
                                                    },
                                                    [
                                                      _c("span", [
                                                        _vm._v(
                                                          _vm._s(
                                                            list.meta
                                                              .total_complete_tasks
                                                          )
                                                        )
                                                      ]),
                                                      _vm._v(
                                                        "  \n                                            " +
                                                          _vm._s(
                                                            _vm.__(
                                                              "Completed",
                                                              "pm"
                                                            )
                                                          ) +
                                                          "\n                                        "
                                                      )
                                                    ]
                                                  )
                                                ],
                                                1
                                              ),
                                              _vm._v(" "),
                                              _c(
                                                "li",
                                                {
                                                  staticClass:
                                                    "pm-todo-incomplete"
                                                },
                                                [
                                                  _c(
                                                    "router-link",
                                                    {
                                                      attrs: {
                                                        to: {
                                                          name: "single_list",
                                                          params: {
                                                            list_id: list.id
                                                          }
                                                        }
                                                      }
                                                    },
                                                    [
                                                      _c("span", [
                                                        _vm._v(
                                                          _vm._s(
                                                            list.meta
                                                              .total_incomplete_tasks
                                                          )
                                                        )
                                                      ]),
                                                      _vm._v(
                                                        " \n                                            " +
                                                          _vm._s(
                                                            _vm.__(
                                                              "Incomplete",
                                                              "pm"
                                                            )
                                                          ) +
                                                          "\n                                        "
                                                      )
                                                    ]
                                                  )
                                                ],
                                                1
                                              ),
                                              _vm._v(" "),
                                              _c(
                                                "li",
                                                {
                                                  staticClass: "pm-todo-comment"
                                                },
                                                [
                                                  _c(
                                                    "router-link",
                                                    {
                                                      attrs: {
                                                        to: {
                                                          name: "single_list",
                                                          params: {
                                                            list_id: list.id
                                                          }
                                                        }
                                                      }
                                                    },
                                                    [
                                                      _c("span", [
                                                        _vm._v(
                                                          _vm._s(
                                                            list.meta
                                                              .total_comments
                                                          ) +
                                                            " " +
                                                            _vm._s(
                                                              _vm.__(
                                                                "Comments",
                                                                "pm"
                                                              )
                                                            )
                                                        )
                                                      ])
                                                    ]
                                                  )
                                                ],
                                                1
                                              )
                                            ],
                                            1
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c("div", { staticClass: "pm-col-4" }, [
                                        _c(
                                          "div",
                                          {
                                            staticClass: "pm-todo-progress-bar"
                                          },
                                          [
                                            _c("div", {
                                              staticClass: "bar completed",
                                              style: _vm.getProgressStyle(list)
                                            })
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "div",
                                          {
                                            staticClass: "pm-progress-percent"
                                          },
                                          [
                                            _vm._v(
                                              _vm._s(
                                                _vm.getProgressPercent(list)
                                              ) + "%"
                                            )
                                          ]
                                        )
                                      ]),
                                      _vm._v(" "),
                                      _c("div", { staticClass: "pm-clearfix" })
                                    ]
                                  )
                                ],
                                1
                              )
                            ]
                          )
                        })
                      ),
                      _vm._v(" "),
                      _c("pm-pagination", {
                        attrs: {
                          total_pages: _vm.total_list_page,
                          current_page_number: _vm.current_page_number,
                          component_name: "list_pagination"
                        }
                      })
                    ],
                    1
                  )
                : _vm._e(),
              _vm._v(" "),
              _c("router-view", { attrs: { name: "single-task" } })
            ],
            1
          )
        : _vm._e()
    ],
    1
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "loadmoreanimation" }, [
      _c("div", { staticClass: "load-spinner" }, [
        _c("div", { staticClass: "rect1" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect2" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect3" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect4" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect5" })
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-dfb5fd10", esExports)
  }
}

/***/ }),
/* 375 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { class: _vm.todolistFormClass(_vm.list) + " pm-new-todolist-form" },
    [
      _c(
        "form",
        {
          attrs: { action: "", method: "post" },
          on: {
            submit: function($event) {
              $event.preventDefault()
              _vm.listFormAction()
            }
          }
        },
        [
          _c("div", { staticClass: "item title" }, [
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.list.title,
                  expression: "list.title"
                }
              ],
              attrs: {
                type: "text",
                required: "required",
                name: "tasklist_name",
                placeholder: _vm.task_list_name
              },
              domProps: { value: _vm.list.title },
              on: {
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.$set(_vm.list, "title", $event.target.value)
                }
              }
            })
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "item content" }, [
            _c("textarea", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.list.description,
                  expression: "list.description"
                }
              ],
              attrs: {
                name: "tasklist_detail",
                id: "",
                cols: "40",
                rows: "2",
                placeholder: _vm.task_list_details
              },
              domProps: { value: _vm.list.description },
              on: {
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.$set(_vm.list, "description", $event.target.value)
                }
              }
            })
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "item milestone" }, [
            _c(
              "select",
              {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.milestone_id,
                    expression: "milestone_id"
                  }
                ],
                on: {
                  change: function($event) {
                    var $$selectedVal = Array.prototype.filter
                      .call($event.target.options, function(o) {
                        return o.selected
                      })
                      .map(function(o) {
                        var val = "_value" in o ? o._value : o.value
                        return val
                      })
                    _vm.milestone_id = $event.target.multiple
                      ? $$selectedVal
                      : $$selectedVal[0]
                  }
                }
              },
              [
                _c("option", { attrs: { value: "-1" } }, [
                  _vm._v(
                    "\n                    " +
                      _vm._s(_vm.__("- Milestone -", "pm")) +
                      "\n                "
                  )
                ]),
                _vm._v(" "),
                _vm._l(_vm.milestones, function(milestone) {
                  return _c("option", { domProps: { value: milestone.id } }, [
                    _vm._v(
                      "\n                    " +
                        _vm._s(milestone.title) +
                        "\n                "
                    )
                  ])
                })
              ],
              2
            )
          ]),
          _vm._v(" "),
          _c("pm-do-action", {
            attrs: { hook: "pm_task_list_form", actionData: _vm.list }
          }),
          _vm._v(" "),
          _c("div", { staticClass: "item submit" }, [
            _vm.list.id
              ? _c("input", {
                  staticClass: "button-primary",
                  attrs: {
                    type: "submit",
                    disabled: _vm.submit_disabled,
                    name: "submit_todo"
                  },
                  domProps: { value: _vm.task_list_update }
                })
              : _vm._e(),
            _vm._v(" "),
            !_vm.list.id
              ? _c("input", {
                  staticClass: "button-primary",
                  attrs: {
                    type: "submit",
                    disabled: _vm.submit_disabled,
                    name: "submit_todo"
                  },
                  domProps: { value: _vm.add_list }
                })
              : _vm._e(),
            _vm._v(" "),
            _c(
              "a",
              {
                staticClass: "button list-cancel",
                attrs: { href: "#" },
                on: {
                  click: function($event) {
                    $event.preventDefault()
                    _vm.showHideListForm(false, _vm.list)
                  }
                }
              },
              [_vm._v(_vm._s(_vm.__("Cancel", "pm")))]
            ),
            _vm._v(" "),
            _c("span", {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.show_spinner,
                  expression: "show_spinner"
                }
              ],
              staticClass: "pm-spinner"
            })
          ])
        ],
        1
      )
    ]
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-e2c0be76", esExports)
  }
}

/***/ }),
/* 376 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("ul", { staticClass: "pm-project-view " }, [
    _c("li", [
      _c(
        "a",
        {
          staticClass: "change-view",
          attrs: { href: "javascript:void(0)", title: _vm.list_view },
          on: {
            click: function($event) {
              $event.preventDefault()
              _vm.setcookie("list_view")
            }
          }
        },
        [
          _c("span", {
            staticClass: " dashicons dashicons-menu",
            class: { active: _vm.activeClass("list_view") }
          })
        ]
      )
    ]),
    _vm._v(" "),
    _c("li", [
      _c(
        "a",
        {
          staticClass: "change-view",
          attrs: { href: "javascript:void(0)", title: _vm.grid_view },
          on: {
            click: function($event) {
              $event.preventDefault()
              _vm.setcookie("grid_view")
            }
          }
        },
        [
          _c("span", {
            staticClass: " dashicons dashicons-screenoptions",
            class: { active: _vm.activeClass("grid_view") }
          })
        ]
      )
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "clearfix" })
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-f0ebfa10", esExports)
  }
}

/***/ }),
/* 377 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "metabox-holder" }, [
      _c("div", { staticClass: "group", attrs: { id: "pm_general" } }, [
        _c(
          "form",
          {
            attrs: { method: "post", action: "options.php" },
            on: {
              submit: function($event) {
                $event.preventDefault()
                _vm.saveSelfSettings()
              }
            }
          },
          [
            _c("h2", [_vm._v(_vm._s(_vm.__("General Settings", "pm")))]),
            _vm._v(" "),
            _c("table", { staticClass: "form-table" }, [
              _c("tbody", [
                _c("tr", [
                  _c("th", { attrs: { scope: "row" } }, [
                    _c(
                      "label",
                      { attrs: { for: "pm_general[upload_limit]" } },
                      [_vm._v(_vm._s(_vm.__("File Upload Limit", "pm")))]
                    )
                  ]),
                  _vm._v(" "),
                  _c("td", [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.upload_limit,
                          expression: "upload_limit"
                        }
                      ],
                      staticClass: "regular-text",
                      attrs: { type: "text" },
                      domProps: { value: _vm.upload_limit },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.upload_limit = $event.target.value
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c("p", { staticClass: "description" }, [
                      _vm._v(
                        _vm._s(_vm.__("File Size in Megabytes. e.g: 2", "pm"))
                      )
                    ])
                  ])
                ]),
                _vm._v(" "),
                _c("tr", [
                  _c("th", { attrs: { scope: "row" } }, [
                    _c("label", { attrs: { for: "pm_general[pagination]" } }, [
                      _vm._v(_vm._s(_vm.__("Projects Per Page", "pm")))
                    ])
                  ]),
                  _vm._v(" "),
                  _c("td", [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.project_per_page,
                          expression: "project_per_page"
                        }
                      ],
                      staticClass: "regular-text",
                      attrs: { type: "text" },
                      domProps: { value: _vm.project_per_page },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.project_per_page = $event.target.value
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c("p", { staticClass: "description" }, [
                      _vm._v(_vm._s(_vm.__("-1 for unlimited", "pm")))
                    ])
                  ])
                ]),
                _vm._v(" "),
                _c("tr", [
                  _c("th", { attrs: { scope: "row" } }, [
                    _c("label", { attrs: { for: "pm_general[show_todo]" } }, [
                      _vm._v(_vm._s(_vm.__("Task Lists Per Page", "pm")))
                    ])
                  ]),
                  _vm._v(" "),
                  _c("td", [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.list_per_page,
                          expression: "list_per_page"
                        }
                      ],
                      staticClass: "regular-text",
                      attrs: {
                        type: "text",
                        id: "pm_general[show_todo]",
                        name: "pm_general[show_todo]",
                        value: ""
                      },
                      domProps: { value: _vm.list_per_page },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.list_per_page = $event.target.value
                        }
                      }
                    })
                  ])
                ]),
                _vm._v(" "),
                _c("tr", [
                  _c("th", { attrs: { scope: "row" } }, [
                    _c(
                      "label",
                      { attrs: { for: "pm_general[show_incomplete_tasks]" } },
                      [
                        _vm._v(
                          _vm._s(_vm.__("Incomplete Tasks Per Page", "pm"))
                        )
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("td", [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.incomplete_tasks_per_page,
                          expression: "incomplete_tasks_per_page"
                        }
                      ],
                      staticClass: "regular-text",
                      attrs: {
                        type: "text",
                        id: "pm_general[show_incomplete_tasks]",
                        name: "pm_general[show_incomplete_tasks]",
                        value: "2"
                      },
                      domProps: { value: _vm.incomplete_tasks_per_page },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.incomplete_tasks_per_page = $event.target.value
                        }
                      }
                    })
                  ])
                ]),
                _vm._v(" "),
                _c("tr", [
                  _c("th", { attrs: { scope: "row" } }, [
                    _c(
                      "label",
                      { attrs: { for: "pm_general[show_completed_tasks]" } },
                      [_vm._v(_vm._s(_vm.__("Completed Tasks Per Page", "pm")))]
                    )
                  ]),
                  _vm._v(" "),
                  _c("td", [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.complete_tasks_per_page,
                          expression: "complete_tasks_per_page"
                        }
                      ],
                      staticClass: "regular-text",
                      attrs: {
                        type: "text",
                        id: "pm_general[show_completed_tasks]",
                        name: "pm_general[show_completed_tasks]",
                        value: "2"
                      },
                      domProps: { value: _vm.complete_tasks_per_page },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.complete_tasks_per_page = $event.target.value
                        }
                      }
                    })
                  ])
                ]),
                _vm._v(" "),
                _c("tr", [
                  _c("th", { attrs: { scope: "row" } }, [
                    _c(
                      "label",
                      { attrs: { for: "pm_general[project_manage_role]" } },
                      [
                        _vm._v(
                          _vm._s(_vm.__("Project Managing Capability", "pm"))
                        )
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("td", [
                    _c(
                      "fieldset",
                      [
                        _vm._l(_vm.roles, function(role_display_name, role) {
                          return _c("label", [
                            _c("input", {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: _vm.managing_capability,
                                  expression: "managing_capability"
                                }
                              ],
                              staticClass: "checkbox",
                              attrs: { type: "checkbox" },
                              domProps: {
                                value: role,
                                checked: Array.isArray(_vm.managing_capability)
                                  ? _vm._i(_vm.managing_capability, role) > -1
                                  : _vm.managing_capability
                              },
                              on: {
                                change: function($event) {
                                  var $$a = _vm.managing_capability,
                                    $$el = $event.target,
                                    $$c = $$el.checked ? true : false
                                  if (Array.isArray($$a)) {
                                    var $$v = role,
                                      $$i = _vm._i($$a, $$v)
                                    if ($$el.checked) {
                                      $$i < 0 &&
                                        (_vm.managing_capability = $$a.concat([
                                          $$v
                                        ]))
                                    } else {
                                      $$i > -1 &&
                                        (_vm.managing_capability = $$a
                                          .slice(0, $$i)
                                          .concat($$a.slice($$i + 1)))
                                    }
                                  } else {
                                    _vm.managing_capability = $$c
                                  }
                                }
                              }
                            }),
                            _vm._v(
                              "\n                                        " +
                                _vm._s(role_display_name) +
                                "\n                                    "
                            )
                          ])
                        }),
                        _vm._v(" "),
                        _c("p", { staticClass: "description" }, [
                          _vm._v(
                            _vm._s(
                              _vm.__(
                                "Select the user roles who can see and manage all projects.",
                                "pm"
                              )
                            )
                          )
                        ])
                      ],
                      2
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("tr", [
                  _c("th", { attrs: { scope: "row" } }, [
                    _c(
                      "label",
                      { attrs: { for: "pm_general[project_create_role]" } },
                      [
                        _vm._v(
                          _vm._s(_vm.__("Project Creation Capability", "pm"))
                        )
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("td", [
                    _c(
                      "fieldset",
                      [
                        _vm._l(_vm.roles, function(role_display_name, role) {
                          return _c("label", [
                            _c("input", {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: _vm.project_create_capability,
                                  expression: "project_create_capability"
                                }
                              ],
                              staticClass: "checkbox",
                              attrs: { type: "checkbox" },
                              domProps: {
                                value: role,
                                checked: Array.isArray(
                                  _vm.project_create_capability
                                )
                                  ? _vm._i(
                                      _vm.project_create_capability,
                                      role
                                    ) > -1
                                  : _vm.project_create_capability
                              },
                              on: {
                                change: function($event) {
                                  var $$a = _vm.project_create_capability,
                                    $$el = $event.target,
                                    $$c = $$el.checked ? true : false
                                  if (Array.isArray($$a)) {
                                    var $$v = role,
                                      $$i = _vm._i($$a, $$v)
                                    if ($$el.checked) {
                                      $$i < 0 &&
                                        (_vm.project_create_capability = $$a.concat(
                                          [$$v]
                                        ))
                                    } else {
                                      $$i > -1 &&
                                        (_vm.project_create_capability = $$a
                                          .slice(0, $$i)
                                          .concat($$a.slice($$i + 1)))
                                    }
                                  } else {
                                    _vm.project_create_capability = $$c
                                  }
                                }
                              }
                            }),
                            _vm._v(
                              "\n                                        " +
                                _vm._s(role_display_name) +
                                "\n                                    "
                            )
                          ])
                        }),
                        _vm._v(" "),
                        _c("p", { staticClass: "description" }, [
                          _vm._v(
                            _vm._s(
                              _vm.__(
                                "Select the user roles who can see and manage all projects.",
                                "pm"
                              )
                            )
                          )
                        ])
                      ],
                      2
                    )
                  ])
                ])
              ])
            ]),
            _vm._v(" "),
            _c("pm-do-action", { attrs: { hook: "pm_after_settings" } }),
            _vm._v(" "),
            _c("div", { staticStyle: { "padding-left": "10px" } }, [
              _c("p", { staticClass: "submit" }, [
                _c("input", {
                  staticClass: "button button-primary",
                  attrs: { type: "submit", name: "submit", id: "submit" },
                  domProps: { value: _vm.save_changes }
                }),
                _vm._v(" "),
                _c("span", {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.show_spinner,
                      expression: "show_spinner"
                    }
                  ],
                  staticClass: "pm-spinner"
                })
              ])
            ])
          ],
          1
        )
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-fa529326", esExports)
  }
}

/***/ }),
/* 378 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "pm-wrap pm-front-end" },
    [
      _c("pm-header"),
      _vm._v(" "),
      !_vm.isFetchDiscussion
        ? _c("div", { staticClass: "pm-data-load-before" }, [_vm._m(0)])
        : _vm._e(),
      _vm._v(" "),
      _vm.isFetchDiscussion
        ? _c("div", [
            _vm.blankTemplate
              ? _c("div", { staticClass: "pm-blank-template discussion" }, [
                  _c(
                    "div",
                    { staticClass: "pm-content" },
                    [
                      _c("h3", { staticClass: "pm-page-title" }, [
                        _vm._v(_vm._s(_vm.__("Discussions", "pm")))
                      ]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v(
                          "\n                    " +
                            _vm._s(
                              _vm.__(
                                "Use our built in discussion panel to create an open discussion, a group discussion or a private conversation. Note that the Admin can always moderate these discussions.",
                                "pm"
                              )
                            ) +
                            " \n                "
                        )
                      ]),
                      _vm._v(" "),
                      _vm.can_create_message()
                        ? _c("div", [
                            _c(
                              "a",
                              {
                                staticClass:
                                  "pm-btn pm-plus-white pm-new-message-btn pm-btn-uppercase",
                                attrs: { href: "", id: "pm-add-message" },
                                on: {
                                  click: function($event) {
                                    $event.preventDefault()
                                    _vm.showHideDiscussForm("toggle")
                                  }
                                }
                              },
                              [
                                _c("i", {
                                  staticClass: "fa fa-plus-circle",
                                  attrs: { "aria-hidden": "true" }
                                }),
                                _vm._v(
                                  "\n                            " +
                                    _vm._s(_vm.__("Add New Discussion", "pm")) +
                                    " \n                        "
                                )
                              ]
                            )
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _vm.can_create_message()
                        ? _c("transition", { attrs: { name: "slide" } }, [
                            _vm.is_discuss_form_active
                              ? _c(
                                  "div",
                                  { staticClass: "pm-new-message-form" },
                                  [
                                    _c("h3", [
                                      _vm._v(
                                        _vm._s(
                                          _vm.__("Create a new message", "pm")
                                        )
                                      )
                                    ]),
                                    _vm._v(" "),
                                    _c("new-discuss-form", {
                                      attrs: { discuss: {} }
                                    })
                                  ],
                                  1
                                )
                              : _vm._e()
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _c("div", { staticClass: "pm-list-content" }, [
                        _c("h3", { staticClass: "pm-why-for pm-page-title" }, [
                          _vm._v(
                            " " +
                              _vm._s(_vm.__("When to use Discussions?", "pm")) +
                              " "
                          )
                        ]),
                        _vm._v(" "),
                        _c("ul", { staticClass: "pm-list" }, [
                          _c("li", [
                            _vm._v(
                              " " +
                                _vm._s(
                                  _vm.__(
                                    "To discuss a work matter privately.",
                                    "pm"
                                  )
                                ) +
                                " "
                            )
                          ]),
                          _vm._v(" "),
                          _c("li", [
                            _vm._v(
                              " " +
                                _vm._s(
                                  _vm.__("To exchange files privately.", "pm")
                                )
                            )
                          ]),
                          _vm._v(" "),
                          _c("li", [
                            _vm._v(
                              " " +
                                _vm._s(_vm.__("To discuss in a group.", "pm"))
                            )
                          ]),
                          _vm._v(" "),
                          _c("li", [
                            _vm._v(
                              " " +
                                _vm._s(
                                  _vm.__(
                                    "To create an open discussion visible to all.",
                                    "pm"
                                  )
                                ) +
                                " "
                            )
                          ])
                        ])
                      ])
                    ],
                    1
                  )
                ])
              : _vm._e(),
            _vm._v(" "),
            _vm.discussTemplate
              ? _c(
                  "div",
                  [
                    _c(
                      "div",
                      { staticClass: "pm-row discussion" },
                      [
                        _vm.can_create_message()
                          ? _c("div", [
                              _c(
                                "a",
                                {
                                  staticClass:
                                    "pm-btn pm-plus-white pm-new-message-btn pm-btn-uppercase",
                                  attrs: { href: "", id: "pm-add-message" },
                                  on: {
                                    click: function($event) {
                                      $event.preventDefault()
                                      _vm.showHideDiscussForm("toggle")
                                    }
                                  }
                                },
                                [
                                  _c("i", {
                                    staticClass: "fa fa-plus-circle",
                                    attrs: { "aria-hidden": "true" }
                                  }),
                                  _vm._v(
                                    "\n                        " +
                                      _vm._s(
                                        _vm.__("Add New Discussion", "pm")
                                      ) +
                                      " \n                    "
                                  )
                                ]
                              )
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.can_create_message()
                          ? _c("transition", { attrs: { name: "slide" } }, [
                              _vm.is_discuss_form_active
                                ? _c(
                                    "div",
                                    {
                                      staticClass:
                                        "pm-form pm-new-message-form pm-col-6 pm-sm-col-12"
                                    },
                                    [
                                      _c("h3", [
                                        _vm._v(
                                          _vm._s(
                                            _vm.__("Create a new message", "pm")
                                          )
                                        )
                                      ]),
                                      _vm._v(" "),
                                      _c("new-discuss-form", {
                                        attrs: { discuss: {} }
                                      })
                                    ],
                                    1
                                  )
                                : _vm._e()
                            ])
                          : _vm._e()
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "pm-row pm-message-page" }, [
                      _c(
                        "div",
                        {
                          staticClass: "pm-message-list pm-col-12 pm-sm-col-12"
                        },
                        [
                          _c("div", { staticClass: "pm-box-title" }, [
                            _vm._v(_vm._s(_vm.__("Discussion List", "pm")))
                          ]),
                          _vm._v(" "),
                          _c(
                            "ul",
                            { staticClass: "dicussion-list" },
                            _vm._l(_vm.discussion, function(discuss) {
                              return _c(
                                "li",
                                { key: discuss.id, staticClass: "pm-col-12" },
                                [
                                  _c(
                                    "router-link",
                                    {
                                      staticClass: "pm-col-9 pm-messge-link",
                                      attrs: {
                                        to: {
                                          name: "individual_discussions",
                                          params: { discussion_id: discuss.id }
                                        }
                                      }
                                    },
                                    [
                                      _c(
                                        "div",
                                        { staticClass: "pm-message-inner" },
                                        [
                                          _c(
                                            "a",
                                            {
                                              attrs: {
                                                href: _vm.myTaskRedirect(
                                                  discuss.creator.data.id
                                                ),
                                                title:
                                                  discuss.creator.data
                                                    .display_name
                                              }
                                            },
                                            [
                                              _c("img", {
                                                staticClass:
                                                  "avatar avatar-48 photo",
                                                attrs: {
                                                  alt:
                                                    discuss.creator.data
                                                      .display_name,
                                                  src:
                                                    discuss.creator.data
                                                      .avatar_url,
                                                  height: "48",
                                                  width: "48"
                                                }
                                              })
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c("div", [
                                            _vm._v(
                                              "\n                                       " +
                                                _vm._s(discuss.title) +
                                                "                    \n                                    "
                                            )
                                          ]),
                                          _vm._v(" "),
                                          _c(
                                            "div",
                                            { staticClass: "dicussion-meta" },
                                            [
                                              _vm._v(
                                                "\n                                        " +
                                                  _vm._s(_vm.__("By", "pm")) +
                                                  "\n                                        "
                                              ),
                                              _c(
                                                "a",
                                                {
                                                  attrs: {
                                                    href: _vm.myTaskRedirect(
                                                      discuss.creator.data.id
                                                    ),
                                                    title:
                                                      discuss.creator.data
                                                        .display_name
                                                  }
                                                },
                                                [
                                                  _vm._v(
                                                    "\n                                            " +
                                                      _vm._s(
                                                        discuss.creator.data
                                                          .display_name
                                                      ) +
                                                      "\n                                        "
                                                  )
                                                ]
                                              ),
                                              _vm._v(
                                                " \n                                         " +
                                                  _vm._s(_vm.__("on", "pm")) +
                                                  "\n                                        " +
                                                  _vm._s(
                                                    discuss.created_at.date
                                                  ) +
                                                  "                  \n                                    "
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _vm.can_edit_message(discuss)
                                    ? _c("div", { staticClass: "pm-col-1" }, [
                                        _c(
                                          "span",
                                          {
                                            staticClass:
                                              "pm-message-action pm-right"
                                          },
                                          [
                                            _c("a", {
                                              staticClass:
                                                "pm-msg-edit dashicons dashicons-edit",
                                              attrs: { title: _vm.edit },
                                              on: {
                                                click: function($event) {
                                                  $event.preventDefault()
                                                  _vm.showHideDiscussForm(
                                                    "toggle",
                                                    discuss
                                                  )
                                                }
                                              }
                                            }),
                                            _vm._v(" "),
                                            _c(
                                              "a",
                                              {
                                                staticClass: "delete-message",
                                                attrs: {
                                                  href: "",
                                                  title: _vm.delete_this_message
                                                },
                                                on: {
                                                  click: function($event) {
                                                    $event.preventDefault()
                                                    _vm.deleteSelfDiscuss(
                                                      discuss.id
                                                    )
                                                  }
                                                }
                                              },
                                              [
                                                _c("span", {
                                                  staticClass:
                                                    "dashicons dashicons-trash"
                                                })
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _vm.PM_Vars.is_pro &&
                                            _vm.user_can("view_private_message")
                                              ? _c("span", {
                                                  class: _vm.privateClass(
                                                    discuss
                                                  ),
                                                  attrs: {
                                                    title: _vm.make_it_private
                                                  },
                                                  on: {
                                                    click: function($event) {
                                                      $event.preventDefault()
                                                      _vm.lockUnlock(discuss)
                                                    }
                                                  }
                                                })
                                              : _vm._e()
                                          ]
                                        )
                                      ])
                                    : _vm._e(),
                                  _vm._v(" "),
                                  _c(
                                    "div",
                                    {
                                      staticClass:
                                        "pm-col-2 pm-last-col pm-right comment-count"
                                    },
                                    [
                                      _c(
                                        "router-link",
                                        {
                                          staticClass: "pm-link",
                                          attrs: {
                                            to: {
                                              name: "individual_discussions",
                                              params: {
                                                discussion_id: discuss.id
                                              }
                                            }
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "\n                                    " +
                                              _vm._s(
                                                discuss.meta.total_comments
                                              ) +
                                              " " +
                                              _vm._s(_vm.__("Comments", "pm")) +
                                              " \n                                "
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c("div", { staticClass: "clear" }),
                                  _vm._v(" "),
                                  _vm.can_create_message()
                                    ? _c(
                                        "transition",
                                        { attrs: { name: "slide" } },
                                        [
                                          discuss.edit_mode
                                            ? _c("new-discuss-form", {
                                                attrs: { discuss: discuss }
                                              })
                                            : _vm._e()
                                        ],
                                        1
                                      )
                                    : _vm._e()
                                ],
                                1
                              )
                            })
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c("div", { staticClass: "clear" })
                    ]),
                    _vm._v(" "),
                    _c("pm-pagination", {
                      attrs: {
                        total_pages: _vm.total_discussion_page,
                        current_page_number: _vm.current_page_number,
                        component_name: "discussion_pagination"
                      }
                    })
                  ],
                  1
                )
              : _vm._e()
          ])
        : _vm._e()
    ],
    1
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "loadmoreanimation" }, [
      _c("div", { staticClass: "load-spinner" }, [
        _c("div", { staticClass: "rect1" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect2" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect3" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect4" }),
        _vm._v(" "),
        _c("div", { staticClass: "rect5" })
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-fbf6061c", esExports)
  }
}

/***/ }),
/* 379 */,
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(237);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("5874b51d", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-24fef4ce\",\"scoped\":false,\"hasInlineConfig\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./App.vue", function() {
     var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-24fef4ce\",\"scoped\":false,\"hasInlineConfig\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./App.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(238);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("5fd9ea3c", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-24fef4ce\",\"scoped\":false,\"hasInlineConfig\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=1!./App.vue", function() {
     var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-24fef4ce\",\"scoped\":false,\"hasInlineConfig\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=1!./App.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(239);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("52dcac79", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2ade92fb\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./color-picker.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2ade92fb\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./color-picker.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(240);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("176ae548", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-36583e05\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./new-milestone-form.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-36583e05\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./new-milestone-form.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(241);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("4c591ec4", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-49018d80\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./individual-discussions.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-49018d80\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./individual-discussions.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(242);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("2c31cc26", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-4cf662c5\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./all-projects.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-4cf662c5\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./all-projects.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 386 */,
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(244);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("43e5f56e", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-545f2da6\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-list.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-545f2da6\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-list.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 388 */,
/* 389 */,
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(247);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("776b4332", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-63eb77ce\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./categories.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-63eb77ce\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./categories.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 391 */,
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(249);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("04e9b66b", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7bf02012\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./active-projects.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7bf02012\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./active-projects.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(250);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("0fde8cee", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7e031227\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-list-tasks.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7e031227\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./single-list-tasks.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(251);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("327db337", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7f3234ba\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./milestones.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7f3234ba\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./milestones.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(252);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("5ed8efc0", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-984958c0\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./add-ons.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-984958c0\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./add-ons.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(253);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("08525f0c", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-be540dba\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./project-summary.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-be540dba\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./project-summary.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 397 */,
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(255);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("45b643f1", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-cf0884e4\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./new-task-btn.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-cf0884e4\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./new-task-btn.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(256);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("50d82677", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-de6a2dca\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./completed-projects.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-de6a2dca\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./completed-projects.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(257);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("f07fc2ee", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-dfb5fd10\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./lists.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-dfb5fd10\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./lists.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 401 */,
/* 402 */,
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./categories/mixin.js": 57,
	"./project-activities/mixin.js": 165,
	"./project-discussions/mixin.js": 37,
	"./project-files/mixin.js": 166,
	"./project-lists/mixin.js": 12,
	"./project-milestones/mixin.js": 8,
	"./project-overview/mixin.js": 167,
	"./project-task-lists/mixin.js": 3,
	"./settings/mixin.js": 26
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 403;

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./categories/store.js": 182,
	"./project-activities/store.js": 186,
	"./project-discussions/store.js": 188,
	"./project-files/store.js": 190,
	"./project-lists/store.js": 193,
	"./project-milestones/store.js": 195,
	"./project-overview/store.js": 198,
	"./project-task-lists/store.js": 201,
	"./settings/store.js": 204
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 404;

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(1)(false);
// imports


// module
exports.push([module.i, "\n.pm-task-estimation {\n    width: 100%;\n}\n", ""]);

// exports


/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(405);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("5fd168c0", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-182bf602\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./new-task-form.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-182bf602\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./new-task-form.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ })
/******/ ]);